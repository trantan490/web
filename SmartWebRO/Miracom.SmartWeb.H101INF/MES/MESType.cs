/*******************************************************************************
' MESType.cs
'
' Copyright (c) 2007 by Miracom,Inc.
' All rights reserved.
'
' Generated by DevTool XMLGen 1.0
'
' Created at 2008-05-28 11:16:38
'
' Author : Miracom. R&D.
' Description : DevTool Xml Generator Version 1.0
'******************************************************************************/

using System;
using com.miracom.transceiverx.message.former;

namespace Miracom.SmartWeb
{
    public class WIP_View_Factory_Cmf_Item_In_Tag
    {
        public string  h_passport;
        public char    h_language;
        public string  h_factory;
        public string  h_user_id;
        public string  h_password;
        public char    h_proc_step;
        public string  item_name;
    }

    public class WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl
    {
        public string  prompt;
        public char    format;
        public char    opt;
        public string  table_name;
    }

    public class WIP_View_Factory_Cmf_Item_Out_Tag
    {
        public char    h_status_value;
        public string  h_msg_code;
        public string  h_msg;
        public string  h_field_msg;
        public string  h_db_err_msg;
        public string  factory;
        public string  item_name;
        public int     count;
        public int     _size_data_tbl;
        public WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl[] data_tbl;
        public string  create_user_id;
        public string  create_time;
        public string  update_user_id;
        public string  update_time;
    }

    public class RAS_Resource_Event_In_Tag_lot_list
    {
        public string  lot_id;
        public string  crr_id;
        public string  oper;
        public double  qty_1;
        public double  qty_2;
        public int     hist_seq;
    }

    public class RAS_Resource_Event_In_Tag_char_list_value_list
    {
        public string  value;
    }

    public class RAS_Resource_Event_In_Tag_char_list
    {
        public int     char_seq_num;
        public string  char_id;
        public int     unit_seq_num;
        public string  unit_id;
        public int     value_seq_num;
        public char    value_type;
        public int     value_count;
        public int     _size_value_list;
        public RAS_Resource_Event_In_Tag_char_list_value_list[] value_list;
        public string  spec_out_mask;
        public int     spec_out_count;
        public char    rec_save_flag;
    }

    public class RAS_Resource_Event_In_Tag_chart_list_value_list
    {
        public string  value;
    }

    public class RAS_Resource_Event_In_Tag_chart_list
    {
        public string  chart_id;
        public int     unit_count;
        public int     sample_size;
        public string  graph_type;
        public char    unit_use_flag;
        public string  unit_id;
        public int     unit_seq;
        public int     value_seq;
        public int     value_count;
        public string  nominal;
        public string  process_sigma;
        public string  edc_comment;
        public int     _size_value_list;
        public RAS_Resource_Event_In_Tag_chart_list_value_list[] value_list;
    }

    public class RAS_Resource_Event_In_Tag_data_tbl
    {
        public int     data_seq;
        public string  data_code;
        public string  result_value;
        public string  sheet_comment;
    }

    public class RAS_Resource_Event_In_Tag
    {
        public string  h_passport;
        public char    h_language;
        public string  h_factory;
        public string  h_user_id;
        public string  h_password;
        public char    h_proc_step;
        public string  back_time;
        public char    back_time_flag;
        public char    chart_flag;
        public int     count;
        public string  res_id;
        public string  event_id;
        public char    lot_event_flag;
        public char    batch_flag;
        public string  chg_pri_sts;
        public string  chg_sts_1;
        public string  chg_sts_2;
        public string  chg_sts_3;
        public string  chg_sts_4;
        public string  chg_sts_5;
        public string  chg_sts_6;
        public string  chg_sts_7;
        public string  chg_sts_8;
        public string  chg_sts_9;
        public string  chg_sts_10;
        public string  tran_cmf_1;
        public string  tran_cmf_2;
        public string  tran_cmf_3;
        public string  tran_cmf_4;
        public string  tran_cmf_5;
        public string  tran_cmf_6;
        public string  tran_cmf_7;
        public string  tran_cmf_8;
        public string  tran_cmf_9;
        public string  tran_cmf_10;
        public string  tran_cmf_11;
        public string  tran_cmf_12;
        public string  tran_cmf_13;
        public string  tran_cmf_14;
        public string  tran_cmf_15;
        public string  tran_cmf_16;
        public string  tran_cmf_17;
        public string  tran_cmf_18;
        public string  tran_cmf_19;
        public string  tran_cmf_20;
        public string  tran_comment;
        public int     lot_count;
        public int     _size_lot_list;
        public RAS_Resource_Event_In_Tag_lot_list[] lot_list;
        public int     edc_hist_seq;
        public char    spec_out_flag;
        public int     confirm_char_seq;
        public int     confirm_unit_seq;
        public int     confirm_value_seq;
        public int     hist_seq;
        public string  tran_time;
        public string  recipe_id;
        public int     recipe_version;
        public string  col_set_id;
        public int     col_set_version;
        public int     char_count;
        public int     _size_char_list;
        public RAS_Resource_Event_In_Tag_char_list[] char_list;
        public char    h_sub_step;
        public char    lot_res_flag;
        public int     spc_count;
        public int     edc_char_seq;
        public char    edc_input_flag;
        public int     _size_chart_list;
        public RAS_Resource_Event_In_Tag_chart_list[] chart_list;
        public char    proc_alarm_flag;
        public string  sheet_name;
        public string  sheet_key_1;
        public string  sheet_key_2;
        public string  sheet_key_3;
        public string  sheet_key_4;
        public string  sheet_key_5;
        public string  sheet_key_6;
        public string  sheet_key_7;
        public string  sheet_key_8;
        public string  sheet_key_9;
        public string  sheet_key_10;
        public string  data_type;
        public int     data_count;
        public int     _size_data_tbl;
        public RAS_Resource_Event_In_Tag_data_tbl[] data_tbl;
    }

    public class RAS_Resource_Event_Out_Tag_char_list
    {
        public int     char_seq_num;
        public string  char_id;
        public int     unit_seq_num;
        public string  unit_id;
        public int     value_seq_num;
        public char    value_type;
        public string  spec_out_mask;
        public int     spec_out_count;
        public char    rec_save_flag;
        public char    spec_out_type;
        public int     unit_count;
    }

    public class RAS_Resource_Event_Out_Tag_oos_list
    {
        public string  oos_check_result;
    }

    public class RAS_Resource_Event_Out_Tag_chart_list
    {
        public string  chart_id;
        public int     hist_seq;
        public string  tran_time;
        public int     unit_seq;
        public string  weight_value;
        public string  average;
        public string  stddev;
        public string  range;
        public string  min_value;
        public string  max_value;
        public char    x_check_result;
        public char    r_check_result;
    }

    public class RAS_Resource_Event_Out_Tag
    {
        public char    h_status_value;
        public string  h_msg_code;
        public string  h_msg;
        public string  h_field_msg;
        public string  h_db_err_msg;
        public int     count;
        public int     res_hist_seq;
        public int     confirm_char_seq;
        public int     confirm_unit_seq;
        public int     confirm_value_seq;
        public int     _size_char_list;
        public RAS_Resource_Event_Out_Tag_char_list[] char_list;
        public int     spc_count;
        public int     _size_oos_list;
        public RAS_Resource_Event_Out_Tag_oos_list[] oos_list;
        public int     _size_chart_list;
        public RAS_Resource_Event_Out_Tag_chart_list[] chart_list;
    }


    public class MESType: h101type
    {
        public MESType()
        {
        }

        public static void serialize_WIP_View_Factory_Cmf_Item_In_Tag(StreamTransformer former, WIP_View_Factory_Cmf_Item_In_Tag target)
        {
            former.writeMsgString(withoutSpace(target.h_passport));
            former.writeMsgChar(target.h_language);
            former.writeMsgString(withoutSpace(target.h_factory));
            former.writeMsgString(withoutSpace(target.h_user_id));
            former.writeMsgString(withoutSpace(target.h_password));
            former.writeMsgChar(target.h_proc_step);
            former.writeMsgString(withoutSpace(target.item_name));
        }

        public static void transform_WIP_View_Factory_Cmf_Item_In_Tag(StreamTransformer former, ref WIP_View_Factory_Cmf_Item_In_Tag source)
        {
            source.h_passport = deleteNull(former.readMsgString());
            source.h_language = former.readMsgChar();
            source.h_factory = deleteNull(former.readMsgString());
            source.h_user_id = deleteNull(former.readMsgString());
            source.h_password = deleteNull(former.readMsgString());
            source.h_proc_step = former.readMsgChar();
            source.item_name = deleteNull(former.readMsgString());
        }

        public static void serialize_WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl(StreamTransformer former, WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl target)
        {
            former.writeMsgString(withoutSpace(target.prompt));
            former.writeMsgChar(target.format);
            former.writeMsgChar(target.opt);
            former.writeMsgString(withoutSpace(target.table_name));
        }

        public static void serialize_WIP_View_Factory_Cmf_Item_Out_Tag(StreamTransformer former, WIP_View_Factory_Cmf_Item_Out_Tag target)
        {
            former.writeMsgChar(target.h_status_value);
            former.writeMsgString(withoutSpace(target.h_msg_code));
            former.writeMsgString(withoutSpace(target.h_msg));
            former.writeMsgString(withoutSpace(target.h_field_msg));
            former.writeMsgString(withoutSpace(target.h_db_err_msg));
            former.writeMsgString(withoutSpace(target.factory));
            former.writeMsgString(withoutSpace(target.item_name));
            former.writeMsgInt(target.count);
            target._size_data_tbl = (20 >= target._size_data_tbl ? target._size_data_tbl : 20);
            former.writeMsgInt(target._size_data_tbl);
            for(int i = 0; i < target._size_data_tbl; i++)
            {
                serialize_WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl(former, target.data_tbl[i]);
            }
            former.writeMsgString(withoutSpace(target.create_user_id));
            former.writeMsgString(withoutSpace(target.create_time));
            former.writeMsgString(withoutSpace(target.update_user_id));
            former.writeMsgString(withoutSpace(target.update_time));
        }

        public static void transform_WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl(StreamTransformer former, ref WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl source)
        {
            source.prompt = deleteNull(former.readMsgString());
            source.format = former.readMsgChar();
            source.opt = former.readMsgChar();
            source.table_name = deleteNull(former.readMsgString());
        }

        public static void transform_WIP_View_Factory_Cmf_Item_Out_Tag(StreamTransformer former, ref WIP_View_Factory_Cmf_Item_Out_Tag source)
        {
            source.h_status_value = former.readMsgChar();
            source.h_msg_code = deleteNull(former.readMsgString());
            source.h_msg = deleteNull(former.readMsgString());
            source.h_field_msg = deleteNull(former.readMsgString());
            source.h_db_err_msg = deleteNull(former.readMsgString());
            source.factory = deleteNull(former.readMsgString());
            source.item_name = deleteNull(former.readMsgString());
            source.count = former.readMsgInt();
            source._size_data_tbl = former.readMsgInt();
            source.data_tbl = new WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl[source._size_data_tbl];
            for(int i = 0; i < source._size_data_tbl; i++)
            {
                source.data_tbl[i] = new WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl();
                transform_WIP_View_Factory_Cmf_Item_Out_Tag_data_tbl(former, ref source.data_tbl[i]);
            }
            source.create_user_id = deleteNull(former.readMsgString());
            source.create_time = deleteNull(former.readMsgString());
            source.update_user_id = deleteNull(former.readMsgString());
            source.update_time = deleteNull(former.readMsgString());
        }

        public static void serialize_RAS_Resource_Event_In_Tag_lot_list(StreamTransformer former, RAS_Resource_Event_In_Tag_lot_list target)
        {
            former.writeMsgString(withoutSpace(target.lot_id));
            former.writeMsgString(withoutSpace(target.crr_id));
            former.writeMsgString(withoutSpace(target.oper));
            former.writeMsgDouble(target.qty_1);
            former.writeMsgDouble(target.qty_2);
            former.writeMsgInt(target.hist_seq);
        }

        public static void serialize_RAS_Resource_Event_In_Tag_char_list_value_list(StreamTransformer former, RAS_Resource_Event_In_Tag_char_list_value_list target)
        {
            former.writeMsgString(withoutSpace(target.value));
        }

        public static void serialize_RAS_Resource_Event_In_Tag_char_list(StreamTransformer former, RAS_Resource_Event_In_Tag_char_list target)
        {
            former.writeMsgInt(target.char_seq_num);
            former.writeMsgString(withoutSpace(target.char_id));
            former.writeMsgInt(target.unit_seq_num);
            former.writeMsgString(withoutSpace(target.unit_id));
            former.writeMsgInt(target.value_seq_num);
            former.writeMsgChar(target.value_type);
            former.writeMsgInt(target.value_count);
            target._size_value_list = (25 >= target._size_value_list ? target._size_value_list : 25);
            former.writeMsgInt(target._size_value_list);
            for(int i = 0; i < target._size_value_list; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_char_list_value_list(former, target.value_list[i]);
            }
            former.writeMsgString(withoutSpace(target.spec_out_mask));
            former.writeMsgInt(target.spec_out_count);
            former.writeMsgChar(target.rec_save_flag);
        }

        public static void serialize_RAS_Resource_Event_In_Tag_chart_list_value_list(StreamTransformer former, RAS_Resource_Event_In_Tag_chart_list_value_list target)
        {
            former.writeMsgString(withoutSpace(target.value));
        }

        public static void serialize_RAS_Resource_Event_In_Tag_chart_list(StreamTransformer former, RAS_Resource_Event_In_Tag_chart_list target)
        {
            former.writeMsgString(withoutSpace(target.chart_id));
            former.writeMsgInt(target.unit_count);
            former.writeMsgInt(target.sample_size);
            former.writeMsgString(withoutSpace(target.graph_type));
            former.writeMsgChar(target.unit_use_flag);
            former.writeMsgString(withoutSpace(target.unit_id));
            former.writeMsgInt(target.unit_seq);
            former.writeMsgInt(target.value_seq);
            former.writeMsgInt(target.value_count);
            former.writeMsgString(withoutSpace(target.nominal));
            former.writeMsgString(withoutSpace(target.process_sigma));
            former.writeMsgString(withoutSpace(target.edc_comment));
            target._size_value_list = (100 >= target._size_value_list ? target._size_value_list : 100);
            former.writeMsgInt(target._size_value_list);
            for(int i = 0; i < target._size_value_list; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_chart_list_value_list(former, target.value_list[i]);
            }
        }

        public static void serialize_RAS_Resource_Event_In_Tag_data_tbl(StreamTransformer former, RAS_Resource_Event_In_Tag_data_tbl target)
        {
            former.writeMsgInt(target.data_seq);
            former.writeMsgString(withoutSpace(target.data_code));
            former.writeMsgString(withoutSpace(target.result_value));
            former.writeMsgString(withoutSpace(target.sheet_comment));
        }

        public static void serialize_RAS_Resource_Event_In_Tag(StreamTransformer former, RAS_Resource_Event_In_Tag target)
        {
            former.writeMsgString(withoutSpace(target.h_passport));
            former.writeMsgChar(target.h_language);
            former.writeMsgString(withoutSpace(target.h_factory));
            former.writeMsgString(withoutSpace(target.h_user_id));
            former.writeMsgString(withoutSpace(target.h_password));
            former.writeMsgChar(target.h_proc_step);
            former.writeMsgString(withoutSpace(target.back_time));
            former.writeMsgChar(target.back_time_flag);
            former.writeMsgChar(target.chart_flag);
            former.writeMsgInt(target.count);
            former.writeMsgString(withoutSpace(target.res_id));
            former.writeMsgString(withoutSpace(target.event_id));
            former.writeMsgChar(target.lot_event_flag);
            former.writeMsgChar(target.batch_flag);
            former.writeMsgString(withoutSpace(target.chg_pri_sts));
            former.writeMsgString(withoutSpace(target.chg_sts_1));
            former.writeMsgString(withoutSpace(target.chg_sts_2));
            former.writeMsgString(withoutSpace(target.chg_sts_3));
            former.writeMsgString(withoutSpace(target.chg_sts_4));
            former.writeMsgString(withoutSpace(target.chg_sts_5));
            former.writeMsgString(withoutSpace(target.chg_sts_6));
            former.writeMsgString(withoutSpace(target.chg_sts_7));
            former.writeMsgString(withoutSpace(target.chg_sts_8));
            former.writeMsgString(withoutSpace(target.chg_sts_9));
            former.writeMsgString(withoutSpace(target.chg_sts_10));
            former.writeMsgString(withoutSpace(target.tran_cmf_1));
            former.writeMsgString(withoutSpace(target.tran_cmf_2));
            former.writeMsgString(withoutSpace(target.tran_cmf_3));
            former.writeMsgString(withoutSpace(target.tran_cmf_4));
            former.writeMsgString(withoutSpace(target.tran_cmf_5));
            former.writeMsgString(withoutSpace(target.tran_cmf_6));
            former.writeMsgString(withoutSpace(target.tran_cmf_7));
            former.writeMsgString(withoutSpace(target.tran_cmf_8));
            former.writeMsgString(withoutSpace(target.tran_cmf_9));
            former.writeMsgString(withoutSpace(target.tran_cmf_10));
            former.writeMsgString(withoutSpace(target.tran_cmf_11));
            former.writeMsgString(withoutSpace(target.tran_cmf_12));
            former.writeMsgString(withoutSpace(target.tran_cmf_13));
            former.writeMsgString(withoutSpace(target.tran_cmf_14));
            former.writeMsgString(withoutSpace(target.tran_cmf_15));
            former.writeMsgString(withoutSpace(target.tran_cmf_16));
            former.writeMsgString(withoutSpace(target.tran_cmf_17));
            former.writeMsgString(withoutSpace(target.tran_cmf_18));
            former.writeMsgString(withoutSpace(target.tran_cmf_19));
            former.writeMsgString(withoutSpace(target.tran_cmf_20));
            former.writeMsgString(withoutSpace(target.tran_comment));
            former.writeMsgInt(target.lot_count);
            target._size_lot_list = (20 >= target._size_lot_list ? target._size_lot_list : 20);
            former.writeMsgInt(target._size_lot_list);
            for(int i = 0; i < target._size_lot_list; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_lot_list(former, target.lot_list[i]);
            }
            former.writeMsgInt(target.edc_hist_seq);
            former.writeMsgChar(target.spec_out_flag);
            former.writeMsgInt(target.confirm_char_seq);
            former.writeMsgInt(target.confirm_unit_seq);
            former.writeMsgInt(target.confirm_value_seq);
            former.writeMsgInt(target.hist_seq);
            former.writeMsgString(withoutSpace(target.tran_time));
            former.writeMsgString(withoutSpace(target.recipe_id));
            former.writeMsgInt(target.recipe_version);
            former.writeMsgString(withoutSpace(target.col_set_id));
            former.writeMsgInt(target.col_set_version);
            former.writeMsgInt(target.char_count);
            target._size_char_list = (5000 >= target._size_char_list ? target._size_char_list : 5000);
            former.writeMsgInt(target._size_char_list);
            for(int i = 0; i < target._size_char_list; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_char_list(former, target.char_list[i]);
            }
            former.writeMsgChar(target.h_sub_step);
            former.writeMsgChar(target.lot_res_flag);
            former.writeMsgInt(target.spc_count);
            former.writeMsgInt(target.edc_char_seq);
            former.writeMsgChar(target.edc_input_flag);
            target._size_chart_list = (100 >= target._size_chart_list ? target._size_chart_list : 100);
            former.writeMsgInt(target._size_chart_list);
            for(int i = 0; i < target._size_chart_list; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_chart_list(former, target.chart_list[i]);
            }
            former.writeMsgChar(target.proc_alarm_flag);
            former.writeMsgString(withoutSpace(target.sheet_name));
            former.writeMsgString(withoutSpace(target.sheet_key_1));
            former.writeMsgString(withoutSpace(target.sheet_key_2));
            former.writeMsgString(withoutSpace(target.sheet_key_3));
            former.writeMsgString(withoutSpace(target.sheet_key_4));
            former.writeMsgString(withoutSpace(target.sheet_key_5));
            former.writeMsgString(withoutSpace(target.sheet_key_6));
            former.writeMsgString(withoutSpace(target.sheet_key_7));
            former.writeMsgString(withoutSpace(target.sheet_key_8));
            former.writeMsgString(withoutSpace(target.sheet_key_9));
            former.writeMsgString(withoutSpace(target.sheet_key_10));
            former.writeMsgString(withoutSpace(target.data_type));
            former.writeMsgString(withoutSpace(target.tran_time));
            former.writeMsgInt(target.data_count);
            target._size_data_tbl = (100 >= target._size_data_tbl ? target._size_data_tbl : 100);
            former.writeMsgInt(target._size_data_tbl);
            for(int i = 0; i < target._size_data_tbl; i++)
            {
                serialize_RAS_Resource_Event_In_Tag_data_tbl(former, target.data_tbl[i]);
            }
        }

        public static void transform_RAS_Resource_Event_In_Tag_lot_list(StreamTransformer former, ref RAS_Resource_Event_In_Tag_lot_list source)
        {
            source.lot_id = deleteNull(former.readMsgString());
            source.crr_id = deleteNull(former.readMsgString());
            source.oper = deleteNull(former.readMsgString());
            source.qty_1 = former.readMsgDouble();
            source.qty_2 = former.readMsgDouble();
            source.hist_seq = former.readMsgInt();
        }

        public static void transform_RAS_Resource_Event_In_Tag_char_list_value_list(StreamTransformer former, ref RAS_Resource_Event_In_Tag_char_list_value_list source)
        {
            source.value = deleteNull(former.readMsgString());
        }

        public static void transform_RAS_Resource_Event_In_Tag_char_list(StreamTransformer former, ref RAS_Resource_Event_In_Tag_char_list source)
        {
            source.char_seq_num = former.readMsgInt();
            source.char_id = deleteNull(former.readMsgString());
            source.unit_seq_num = former.readMsgInt();
            source.unit_id = deleteNull(former.readMsgString());
            source.value_seq_num = former.readMsgInt();
            source.value_type = former.readMsgChar();
            source.value_count = former.readMsgInt();
            source._size_value_list = former.readMsgInt();
            source.value_list = new RAS_Resource_Event_In_Tag_char_list_value_list[source._size_value_list];
            for(int i = 0; i < source._size_value_list; i++)
            {
                source.value_list[i] = new RAS_Resource_Event_In_Tag_char_list_value_list();
                transform_RAS_Resource_Event_In_Tag_char_list_value_list(former, ref source.value_list[i]);
            }
            source.spec_out_mask = deleteNull(former.readMsgString());
            source.spec_out_count = former.readMsgInt();
            source.rec_save_flag = former.readMsgChar();
        }

        public static void transform_RAS_Resource_Event_In_Tag_chart_list_value_list(StreamTransformer former, ref RAS_Resource_Event_In_Tag_chart_list_value_list source)
        {
            source.value = deleteNull(former.readMsgString());
        }

        public static void transform_RAS_Resource_Event_In_Tag_chart_list(StreamTransformer former, ref RAS_Resource_Event_In_Tag_chart_list source)
        {
            source.chart_id = deleteNull(former.readMsgString());
            source.unit_count = former.readMsgInt();
            source.sample_size = former.readMsgInt();
            source.graph_type = deleteNull(former.readMsgString());
            source.unit_use_flag = former.readMsgChar();
            source.unit_id = deleteNull(former.readMsgString());
            source.unit_seq = former.readMsgInt();
            source.value_seq = former.readMsgInt();
            source.value_count = former.readMsgInt();
            source.nominal = deleteNull(former.readMsgString());
            source.process_sigma = deleteNull(former.readMsgString());
            source.edc_comment = deleteNull(former.readMsgString());
            source._size_value_list = former.readMsgInt();
            source.value_list = new RAS_Resource_Event_In_Tag_chart_list_value_list[source._size_value_list];
            for(int i = 0; i < source._size_value_list; i++)
            {
                source.value_list[i] = new RAS_Resource_Event_In_Tag_chart_list_value_list();
                transform_RAS_Resource_Event_In_Tag_chart_list_value_list(former, ref source.value_list[i]);
            }
        }

        public static void transform_RAS_Resource_Event_In_Tag_data_tbl(StreamTransformer former, ref RAS_Resource_Event_In_Tag_data_tbl source)
        {
            source.data_seq = former.readMsgInt();
            source.data_code = deleteNull(former.readMsgString());
            source.result_value = deleteNull(former.readMsgString());
            source.sheet_comment = deleteNull(former.readMsgString());
        }

        public static void transform_RAS_Resource_Event_In_Tag(StreamTransformer former, ref RAS_Resource_Event_In_Tag source)
        {
            source.h_passport = deleteNull(former.readMsgString());
            source.h_language = former.readMsgChar();
            source.h_factory = deleteNull(former.readMsgString());
            source.h_user_id = deleteNull(former.readMsgString());
            source.h_password = deleteNull(former.readMsgString());
            source.h_proc_step = former.readMsgChar();
            source.back_time = deleteNull(former.readMsgString());
            source.back_time_flag = former.readMsgChar();
            source.chart_flag = former.readMsgChar();
            source.count = former.readMsgInt();
            source.res_id = deleteNull(former.readMsgString());
            source.event_id = deleteNull(former.readMsgString());
            source.lot_event_flag = former.readMsgChar();
            source.batch_flag = former.readMsgChar();
            source.chg_pri_sts = deleteNull(former.readMsgString());
            source.chg_sts_1 = deleteNull(former.readMsgString());
            source.chg_sts_2 = deleteNull(former.readMsgString());
            source.chg_sts_3 = deleteNull(former.readMsgString());
            source.chg_sts_4 = deleteNull(former.readMsgString());
            source.chg_sts_5 = deleteNull(former.readMsgString());
            source.chg_sts_6 = deleteNull(former.readMsgString());
            source.chg_sts_7 = deleteNull(former.readMsgString());
            source.chg_sts_8 = deleteNull(former.readMsgString());
            source.chg_sts_9 = deleteNull(former.readMsgString());
            source.chg_sts_10 = deleteNull(former.readMsgString());
            source.tran_cmf_1 = deleteNull(former.readMsgString());
            source.tran_cmf_2 = deleteNull(former.readMsgString());
            source.tran_cmf_3 = deleteNull(former.readMsgString());
            source.tran_cmf_4 = deleteNull(former.readMsgString());
            source.tran_cmf_5 = deleteNull(former.readMsgString());
            source.tran_cmf_6 = deleteNull(former.readMsgString());
            source.tran_cmf_7 = deleteNull(former.readMsgString());
            source.tran_cmf_8 = deleteNull(former.readMsgString());
            source.tran_cmf_9 = deleteNull(former.readMsgString());
            source.tran_cmf_10 = deleteNull(former.readMsgString());
            source.tran_cmf_11 = deleteNull(former.readMsgString());
            source.tran_cmf_12 = deleteNull(former.readMsgString());
            source.tran_cmf_13 = deleteNull(former.readMsgString());
            source.tran_cmf_14 = deleteNull(former.readMsgString());
            source.tran_cmf_15 = deleteNull(former.readMsgString());
            source.tran_cmf_16 = deleteNull(former.readMsgString());
            source.tran_cmf_17 = deleteNull(former.readMsgString());
            source.tran_cmf_18 = deleteNull(former.readMsgString());
            source.tran_cmf_19 = deleteNull(former.readMsgString());
            source.tran_cmf_20 = deleteNull(former.readMsgString());
            source.tran_comment = deleteNull(former.readMsgString());
            source.lot_count = former.readMsgInt();
            source._size_lot_list = former.readMsgInt();
            source.lot_list = new RAS_Resource_Event_In_Tag_lot_list[source._size_lot_list];
            for(int i = 0; i < source._size_lot_list; i++)
            {
                source.lot_list[i] = new RAS_Resource_Event_In_Tag_lot_list();
                transform_RAS_Resource_Event_In_Tag_lot_list(former, ref source.lot_list[i]);
            }
            source.edc_hist_seq = former.readMsgInt();
            source.spec_out_flag = former.readMsgChar();
            source.confirm_char_seq = former.readMsgInt();
            source.confirm_unit_seq = former.readMsgInt();
            source.confirm_value_seq = former.readMsgInt();
            source.hist_seq = former.readMsgInt();
            source.tran_time = deleteNull(former.readMsgString());
            source.recipe_id = deleteNull(former.readMsgString());
            source.recipe_version = former.readMsgInt();
            source.col_set_id = deleteNull(former.readMsgString());
            source.col_set_version = former.readMsgInt();
            source.char_count = former.readMsgInt();
            source._size_char_list = former.readMsgInt();
            source.char_list = new RAS_Resource_Event_In_Tag_char_list[source._size_char_list];
            for(int i = 0; i < source._size_char_list; i++)
            {
                source.char_list[i] = new RAS_Resource_Event_In_Tag_char_list();
                transform_RAS_Resource_Event_In_Tag_char_list(former, ref source.char_list[i]);
            }
            source.h_sub_step = former.readMsgChar();
            source.lot_res_flag = former.readMsgChar();
            source.spc_count = former.readMsgInt();
            source.edc_char_seq = former.readMsgInt();
            source.edc_input_flag = former.readMsgChar();
            source._size_chart_list = former.readMsgInt();
            source.chart_list = new RAS_Resource_Event_In_Tag_chart_list[source._size_chart_list];
            for(int i = 0; i < source._size_chart_list; i++)
            {
                source.chart_list[i] = new RAS_Resource_Event_In_Tag_chart_list();
                transform_RAS_Resource_Event_In_Tag_chart_list(former, ref source.chart_list[i]);
            }
            source.proc_alarm_flag = former.readMsgChar();
            source.sheet_name = deleteNull(former.readMsgString());
            source.sheet_key_1 = deleteNull(former.readMsgString());
            source.sheet_key_2 = deleteNull(former.readMsgString());
            source.sheet_key_3 = deleteNull(former.readMsgString());
            source.sheet_key_4 = deleteNull(former.readMsgString());
            source.sheet_key_5 = deleteNull(former.readMsgString());
            source.sheet_key_6 = deleteNull(former.readMsgString());
            source.sheet_key_7 = deleteNull(former.readMsgString());
            source.sheet_key_8 = deleteNull(former.readMsgString());
            source.sheet_key_9 = deleteNull(former.readMsgString());
            source.sheet_key_10 = deleteNull(former.readMsgString());
            source.data_type = deleteNull(former.readMsgString());
            source.tran_time = deleteNull(former.readMsgString());
            source.data_count = former.readMsgInt();
            source._size_data_tbl = former.readMsgInt();
            source.data_tbl = new RAS_Resource_Event_In_Tag_data_tbl[source._size_data_tbl];
            for(int i = 0; i < source._size_data_tbl; i++)
            {
                source.data_tbl[i] = new RAS_Resource_Event_In_Tag_data_tbl();
                transform_RAS_Resource_Event_In_Tag_data_tbl(former, ref source.data_tbl[i]);
            }
        }

        public static void serialize_RAS_Resource_Event_Out_Tag_char_list(StreamTransformer former, RAS_Resource_Event_Out_Tag_char_list target)
        {
            former.writeMsgInt(target.char_seq_num);
            former.writeMsgString(withoutSpace(target.char_id));
            former.writeMsgInt(target.unit_seq_num);
            former.writeMsgString(withoutSpace(target.unit_id));
            former.writeMsgInt(target.value_seq_num);
            former.writeMsgChar(target.value_type);
            former.writeMsgString(withoutSpace(target.spec_out_mask));
            former.writeMsgInt(target.spec_out_count);
            former.writeMsgChar(target.rec_save_flag);
            former.writeMsgChar(target.spec_out_type);
            former.writeMsgInt(target.unit_count);
        }

        public static void serialize_RAS_Resource_Event_Out_Tag_oos_list(StreamTransformer former, RAS_Resource_Event_Out_Tag_oos_list target)
        {
            former.writeMsgString(withoutSpace(target.oos_check_result));
        }

        public static void serialize_RAS_Resource_Event_Out_Tag_chart_list(StreamTransformer former, RAS_Resource_Event_Out_Tag_chart_list target)
        {
            former.writeMsgString(withoutSpace(target.chart_id));
            former.writeMsgInt(target.hist_seq);
            former.writeMsgString(withoutSpace(target.tran_time));
            former.writeMsgInt(target.unit_seq);
            former.writeMsgString(withoutSpace(target.weight_value));
            former.writeMsgString(withoutSpace(target.average));
            former.writeMsgString(withoutSpace(target.stddev));
            former.writeMsgString(withoutSpace(target.range));
            former.writeMsgString(withoutSpace(target.min_value));
            former.writeMsgString(withoutSpace(target.max_value));
            former.writeMsgChar(target.x_check_result);
            former.writeMsgChar(target.r_check_result);
        }

        public static void serialize_RAS_Resource_Event_Out_Tag(StreamTransformer former, RAS_Resource_Event_Out_Tag target)
        {
            former.writeMsgChar(target.h_status_value);
            former.writeMsgString(withoutSpace(target.h_msg_code));
            former.writeMsgString(withoutSpace(target.h_msg));
            former.writeMsgString(withoutSpace(target.h_field_msg));
            former.writeMsgString(withoutSpace(target.h_db_err_msg));
            former.writeMsgInt(target.count);
            former.writeMsgInt(target.res_hist_seq);
            former.writeMsgInt(target.confirm_char_seq);
            former.writeMsgInt(target.confirm_unit_seq);
            former.writeMsgInt(target.confirm_value_seq);
            target._size_char_list = (5000 >= target._size_char_list ? target._size_char_list : 5000);
            former.writeMsgInt(target._size_char_list);
            for(int i = 0; i < target._size_char_list; i++)
            {
                serialize_RAS_Resource_Event_Out_Tag_char_list(former, target.char_list[i]);
            }
            former.writeMsgInt(target.spc_count);
            target._size_oos_list = (100 >= target._size_oos_list ? target._size_oos_list : 100);
            former.writeMsgInt(target._size_oos_list);
            for(int i = 0; i < target._size_oos_list; i++)
            {
                serialize_RAS_Resource_Event_Out_Tag_oos_list(former, target.oos_list[i]);
            }
            target._size_chart_list = (100 >= target._size_chart_list ? target._size_chart_list : 100);
            former.writeMsgInt(target._size_chart_list);
            for(int i = 0; i < target._size_chart_list; i++)
            {
                serialize_RAS_Resource_Event_Out_Tag_chart_list(former, target.chart_list[i]);
            }
        }

        public static void transform_RAS_Resource_Event_Out_Tag_char_list(StreamTransformer former, ref RAS_Resource_Event_Out_Tag_char_list source)
        {
            source.char_seq_num = former.readMsgInt();
            source.char_id = deleteNull(former.readMsgString());
            source.unit_seq_num = former.readMsgInt();
            source.unit_id = deleteNull(former.readMsgString());
            source.value_seq_num = former.readMsgInt();
            source.value_type = former.readMsgChar();
            source.spec_out_mask = deleteNull(former.readMsgString());
            source.spec_out_count = former.readMsgInt();
            source.rec_save_flag = former.readMsgChar();
            source.spec_out_type = former.readMsgChar();
            source.unit_count = former.readMsgInt();
        }

        public static void transform_RAS_Resource_Event_Out_Tag_oos_list(StreamTransformer former, ref RAS_Resource_Event_Out_Tag_oos_list source)
        {
            source.oos_check_result = deleteNull(former.readMsgString());
        }

        public static void transform_RAS_Resource_Event_Out_Tag_chart_list(StreamTransformer former, ref RAS_Resource_Event_Out_Tag_chart_list source)
        {
            source.chart_id = deleteNull(former.readMsgString());
            source.hist_seq = former.readMsgInt();
            source.tran_time = deleteNull(former.readMsgString());
            source.unit_seq = former.readMsgInt();
            source.weight_value = deleteNull(former.readMsgString());
            source.average = deleteNull(former.readMsgString());
            source.stddev = deleteNull(former.readMsgString());
            source.range = deleteNull(former.readMsgString());
            source.min_value = deleteNull(former.readMsgString());
            source.max_value = deleteNull(former.readMsgString());
            source.x_check_result = former.readMsgChar();
            source.r_check_result = former.readMsgChar();
        }

        public static void transform_RAS_Resource_Event_Out_Tag(StreamTransformer former, ref RAS_Resource_Event_Out_Tag source)
        {
            source.h_status_value = former.readMsgChar();
            source.h_msg_code = deleteNull(former.readMsgString());
            source.h_msg = deleteNull(former.readMsgString());
            source.h_field_msg = deleteNull(former.readMsgString());
            source.h_db_err_msg = deleteNull(former.readMsgString());
            source.count = former.readMsgInt();
            source.res_hist_seq = former.readMsgInt();
            source.confirm_char_seq = former.readMsgInt();
            source.confirm_unit_seq = former.readMsgInt();
            source.confirm_value_seq = former.readMsgInt();
            source._size_char_list = former.readMsgInt();
            source.char_list = new RAS_Resource_Event_Out_Tag_char_list[source._size_char_list];
            for(int i = 0; i < source._size_char_list; i++)
            {
                source.char_list[i] = new RAS_Resource_Event_Out_Tag_char_list();
                transform_RAS_Resource_Event_Out_Tag_char_list(former, ref source.char_list[i]);
            }
            source.spc_count = former.readMsgInt();
            source._size_oos_list = former.readMsgInt();
            source.oos_list = new RAS_Resource_Event_Out_Tag_oos_list[source._size_oos_list];
            for(int i = 0; i < source._size_oos_list; i++)
            {
                source.oos_list[i] = new RAS_Resource_Event_Out_Tag_oos_list();
                transform_RAS_Resource_Event_Out_Tag_oos_list(former, ref source.oos_list[i]);
            }
            source._size_chart_list = former.readMsgInt();
            source.chart_list = new RAS_Resource_Event_Out_Tag_chart_list[source._size_chart_list];
            for(int i = 0; i < source._size_chart_list; i++)
            {
                source.chart_list[i] = new RAS_Resource_Event_Out_Tag_chart_list();
                transform_RAS_Resource_Event_Out_Tag_chart_list(former, ref source.chart_list[i]);
            }
        }


    }
}

