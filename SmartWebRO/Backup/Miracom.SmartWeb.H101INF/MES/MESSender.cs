/*******************************************************************************
' MESSender.cs
'
' Copyright (c) 2007 by Miracom,Inc.
' All rights reserved.
'
' Generated by DevTool XMLGen 1.0
'
' Created at 2008-05-28 11:16:38
'
' Author : Miracom. R&D.
' Description : DevTool Xml Generator Version 1.0
*******************************************************************************/

using System;
using Miracom.SmartWeb.FWX;
using com.miracom.transceiverx;
using com.miracom.transceiverx.message.former;

namespace Miracom.SmartWeb
{
    public class MESSender
    {    
        private static string mMESUrl;
        private static int mMESTimeOut;

        public static string MESUrl
        {
            get
            {
                return mMESUrl;
            }
            set
            {
                mMESUrl = value;
            }
        }

        public static int MESTimeOut
        {
            get
            {
                return mMESTimeOut;
            }
            set
            {
                mMESTimeOut = value;
            }
        }
        public static bool WIP_View_Factory_Cmf_Item(WIP_View_Factory_Cmf_Item_In_Tag View_Factory_Cmf_Item_In, ref WIP_View_Factory_Cmf_Item_Out_Tag View_Factory_Cmf_Item_Out)
        {
            return WIP_View_Factory_Cmf_Item("WIP_View_Factory_Cmf_Item", View_Factory_Cmf_Item_In, ref View_Factory_Cmf_Item_Out);
        }
        public static bool WIP_View_Factory_Cmf_Item(string FunctionName, WIP_View_Factory_Cmf_Item_In_Tag View_Factory_Cmf_Item_In, ref WIP_View_Factory_Cmf_Item_Out_Tag View_Factory_Cmf_Item_Out)
        {
            try
            {
                if (null == MESUrl || MESUrl.Trim().Equals(""))
                        throw new Exception("INVALID_URL");

                if (0 >= MESTimeOut)
                        throw new Exception("INVALID_TIMEOUT");

                string sReplyMsg = null;
                string sSendMsg = null;
                byte[] aReplyData = null;
                SmartWebService oWebService = new SmartWebService();
                StreamTransformer former = new StreamTransformerImpl();

                oWebService.SetUrl(MESUrl);
                oWebService.SetTimeOut(MESTimeOut);

                MESType.serialize_WIP_View_Factory_Cmf_Item_In_Tag(former, View_Factory_Cmf_Item_In);

                sSendMsg = FwxCmnFunction.PackMessage(former.getBytes());
                oWebService.RequestReply(FunctionName, sSendMsg, ref sReplyMsg);
                aReplyData = FwxCmnFunction.UnPackMessage(sReplyMsg);

                former = new StreamTransformerImpl(aReplyData);
                MESType.transform_WIP_View_Factory_Cmf_Item_Out_Tag(former, ref View_Factory_Cmf_Item_Out);

    	    	return true;
    	    }
            catch(Exception ex)
            {
                throw ex;
            }
        }

        public static bool RAS_Resource_Event(RAS_Resource_Event_In_Tag Resource_Event_In, ref RAS_Resource_Event_Out_Tag Resource_Event_Out)
        {
            return RAS_Resource_Event("RAS_Resource_Event", Resource_Event_In, ref Resource_Event_Out);
        }
        public static bool RAS_Resource_Event(string FunctionName, RAS_Resource_Event_In_Tag Resource_Event_In, ref RAS_Resource_Event_Out_Tag Resource_Event_Out)
        {
            try
            {
                if (null == MESUrl || MESUrl.Trim().Equals(""))
                        throw new Exception("INVALID_URL");

                if (0 >= MESTimeOut)
                        throw new Exception("INVALID_TIMEOUT");

                string sReplyMsg = null;
                string sSendMsg = null;
                byte[] aReplyData = null;
                SmartWebService oWebService = new SmartWebService();
                StreamTransformer former = new StreamTransformerImpl();

                oWebService.SetUrl(MESUrl);
                oWebService.SetTimeOut(MESTimeOut);

                MESType.serialize_RAS_Resource_Event_In_Tag(former, Resource_Event_In);

                sSendMsg = FwxCmnFunction.PackMessage(former.getBytes());
                oWebService.RequestReply(FunctionName, sSendMsg, ref sReplyMsg);
                aReplyData = FwxCmnFunction.UnPackMessage(sReplyMsg);

                former = new StreamTransformerImpl(aReplyData);
                MESType.transform_RAS_Resource_Event_Out_Tag(former, ref Resource_Event_Out);

    	    	return true;
    	    }
            catch(Exception ex)
            {
                throw ex;
            }
        }


    }
}

