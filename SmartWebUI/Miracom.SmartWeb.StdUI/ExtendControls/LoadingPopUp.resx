<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
  <data name="$this.Name">
    <value>LoadingPopUp</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh+gBnAPcAAAAAAP///+BVHnt7e/r6/v39//b2+P7+/9bW18rKy+fo8sTFy9zd4/Dx9uHi5crM
        0eTm6/b4/PL0+Ofo6r/Awri6veLk5+vs7dDR0eHh4PrhD/naB/jaFPreFfrgLPznS/33zPnYF/nYHvvn
        ZvrrlPnOA/nSD/nSFfXRFfrVGfzVGvrSGvnRGvnTGvXPGvTNGvbQHvjYO+PMUunSZevaifHt2PnLE/PK
        FPjNGvnQG/LKHezCHfnTJvjQM+zKNfbUTfjrt/789PfKG/zOHPnKHfjHHvjMIPbfh+3ep+m4GvLBHPjE
        IPLDI/PDLPjZc/e8E+WwHfe/IPC8IOWxJPjGMvnQYuzWmPO0Hvq+IPa6IvG4J/S8K+m2MfDMc/mvEfm3
        I/a0JPO3NefJguPe0/757u7q4eWlJvW0LLu1qeGfIfatJdqcJ/StLvzYltfSyfWoJvCkKtOSKP7FbPvu
        2dLIuPSiKPy8W/i3Wv2/Yf3AZ/q9ZufGlvrds6WXg8qAH65vG82FKMKAK6FtJPSqRvmvTvmzUvmzVryJ
        RPm1W/OwWfm4YPa2X/q7Y/y/avnXp+naxv705vKRHfKYKuqWLOGOK/OcMvSjPO2jS/CqU/S0Y+urYPe3
        Zt2lXfi8dea4f/XOnM6ykdC8o9eHKsF6J92RPMqEN9aNPOyeQ+idTeikVvO0bffAgPfDiO3g0ffw6OWM
        M+uTN+GURM6GPsZ7Nb11NdWNSLJ5RPOpZe2TRuKVV+vEpNu/qPjcxdJzKuN8L9t4L8pyLMJtLbloLNOP
        WcWGV+2ocdyme922meTMudLOy+6bY/bq4v36+LhqN9Sgf75sPtuHWOuTYsRwQ8p0SdWPa/308OZ3S+qL
        ZeqOaeyZeO6kh/GwlvO7pffSw/DSxfnd0v349tN1UeWjjPXGtPXi2/vo4dt5We26quB8YeWEaumXgeyj
        kPCvnvvs6OZ+ZuiEbf7+/v39/fv7+/r6+vn5+fj4+PX19fLy8u/v7+fn5+Tk5OPj49zc3M/Pz8XFxf//
        /yH5BAEAAP8ALAAAAAD6AGcAAAj/AAcIHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOK
        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
        tVzbtV77tWAbtmI7tmRbtgIREAA7
</value>
  </data>
</root>