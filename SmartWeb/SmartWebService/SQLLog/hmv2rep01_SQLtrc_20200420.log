SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , ROUND(SUM(TOTAL)/10, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200420' AND '20200429' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , ROUND(SUM(TOTAL)/7, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200413' AND '20200419' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010423'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_8 ELSE WIP_8 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_8 ELSE END_8 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_8 ELSE EXP_8 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_8
                      WHEN B.GUBUN = 'RUN' THEN RUN_8
                 END), 0) AS D8
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 9, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 11.7350526648611 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_8
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 11.7350526648611 * 24 AS EXP_8
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200412' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_8
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                   AND LOT_CMF_5 LIKE 'P%' 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200412' AND '20200419'
                                   AND SHIFT = '3'
                                   AND CM_KEY_3 LIKE 'P%' 
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_8
                     , SUM(DECODE(WORK_DATE, '20200412', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_7
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_8
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND LOT_CMF_5 LIKE 'P%' 
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041222' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_8 ELSE WIP_8 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_8 ELSE END_8 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_8 ELSE EXP_8 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_8
                      WHEN B.GUBUN = 'RUN' THEN RUN_8
                 END), 0) AS D8
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 9, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 11.7815576909167 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_8
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 11.7815576909167 * 24 AS EXP_8
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200412' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_7
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_8
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200412' AND '20200419'
                                   AND SHIFT = '3'
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200412', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_8
                     , SUM(DECODE(WORK_DATE, '20200412', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_7
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_8
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041222' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE)  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND SYS_YEAR||LPAD(PLAN_WEEK,2,'0') = '202017'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010227'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE)  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND SYS_YEAR||LPAD(PLAN_WEEK,2,'0') = '202017'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, PKG, SAP_CODE
     , RESV_FIELD_1 AS PIN_TYPE
     , OPER
     , ROUND(TTL_PLAN / 1000, 0) AS TTL_PLAN
     , ROUND(TTL_DEF / 1000, 0) AS TTL_DEF
     , DECODE(SEQ, 1, 'PLAN', 2, 'ACT', 3, 'BAL', 4, 'BOH') AS GUBUN
     , ROUND(DECODE(SEQ, 1, PLAN_D0, 2, SHP_D0, 3, BAL_D0, 4, WIP_D0) / 1000, 0) AS D0
     , ROUND(DECODE(SEQ, 1, PLAN_D1, 2, SHP_D1, 3, BAL_D1, 4, WIP_D1) / 1000, 0) AS D1
     , ROUND(DECODE(SEQ, 1, PLAN_D2, 2, SHP_D2, 3, BAL_D2, 4, WIP_D2) / 1000, 0) AS D2
     , ROUND(DECODE(SEQ, 1, PLAN_D3, 2, SHP_D3, 3, BAL_D3, 4, WIP_D3) / 1000, 0) AS D3
     , ROUND(DECODE(SEQ, 1, PLAN_D4, 2, SHP_D4, 3, BAL_D4, 4, WIP_D4) / 1000, 0) AS D4
     , ROUND(DECODE(SEQ, 1, PLAN_D5, 2, SHP_D5, 3, BAL_D5, 4, WIP_D5) / 1000, 0) AS D5
     , ROUND(DECODE(SEQ, 1, PLAN_D6, 2, SHP_D6, 3, BAL_D6, 4, WIP_D6) / 1000, 0) AS D6
     , ROUND(DECODE(SEQ, 1, PLAN_D7, 2, SHP_D7, 3, BAL_D7, 4, WIP_D7) / 1000, 0) AS D7
     , ROUND(DECODE(SEQ, 1, PLAN_D8, 2, SHP_D8, 3, BAL_D8, 4, WIP_D8) / 1000, 0) AS D8
     , ROUND(DECODE(SEQ, 1, PLAN_D9, 2, SHP_D9, 3, BAL_D9, 4, WIP_D9) / 1000, 0) AS D9
     , ROUND(DECODE(SEQ, 1, PLAN_D10, 2, SHP_D10, 3, BAL_D10, 4, WIP_D10) / 1000, 0) AS D10
     , ROUND(DECODE(SEQ, 1, PLAN_D11, 2, SHP_D11, 3, BAL_D11, 4, WIP_D11) / 1000, 0) AS D11
     , ROUND(DECODE(SEQ, 1, PLAN_D12, 2, SHP_D12, 3, BAL_D12, 4, WIP_D12) / 1000, 0) AS D12
     , ROUND(DECODE(SEQ, 1, PLAN_D13, 2, SHP_D13, 3, BAL_D13, 4, WIP_D13) / 1000, 0) AS D13
  FROM RSUMSCMDAT A
     , (
        SELECT DISTINCT MAT_GRP_10 AS PKG, VENDOR_ID
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG'
       ) B
     , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 4) C
 WHERE 1=1   
   AND A.SAP_CODE = B.VENDOR_ID
   AND A.FACTORY = 'HMVA2'
   AND A.PLAN_WEEK = '202017'
 ORDER BY CUSTOMER, PKG, SAP_CODE, OPER_SEQ DESC, SEQ

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010423'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 2, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 12.2603854186111 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 12.2603854186111 * 24 AS EXP_1
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200419' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_1
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                   AND LOT_CMF_5 LIKE 'P%' 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200419' AND '20200419'
                                   AND SHIFT = '3'
                                   AND CM_KEY_3 LIKE 'P%' 
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_1
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND LOT_CMF_5 LIKE 'P%' 
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041922' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 8, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 12.2665797124722 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 12.2665797124722 * 24 AS EXP_7
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200413' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_7
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                   AND LOT_CMF_5 LIKE 'P%' 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200413' AND '20200419'
                                   AND SHIFT = '3'
                                   AND CM_KEY_3 LIKE 'P%' 
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_7
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND LOT_CMF_5 LIKE 'P%' 
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041322' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A0040')
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200414' AND '20200418' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A0040')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200414' AND '20200418' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_2 ELSE END_QTY_2 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A0040')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200414' AND '20200418' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A0400')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200414' AND '20200418' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200420')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200420', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010204'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'E%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200416' AND '20200420' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200416' AND '20200420' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010423'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010423'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 8, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 13.2815416634444 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 13.2815416634444 * 24 AS EXP_7
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200413' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_7
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200413' AND '20200419'
                                   AND SHIFT = '3'
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_7
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041322' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , ROUND(SUM(TOTAL)/5, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END),0) ASSY_END_QTY4
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN ROUND(SHIP_QTY_1/1000,3) ELSE ROUND(END_QTY_1/1000,3) END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A0400')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200414' AND '20200418' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 8, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 13.5334842118611 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 13.5334842118611 * 24 AS EXP_7
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200413' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_7
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                   AND LOT_CMF_5 LIKE 'P%' 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200413' AND '20200419'
                                   AND SHIFT = '3'
                                   AND CM_KEY_3 LIKE 'P%' 
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_7
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND LOT_CMF_5 LIKE 'P%' 
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041322' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_3 ELSE WIP_3 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_3 ELSE END_3 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_3 ELSE EXP_3 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_3
                      WHEN B.GUBUN = 'RUN' THEN RUN_3
                 END), 0) AS D3
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_4 ELSE WIP_4 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_4 ELSE END_4 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_4 ELSE EXP_4 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_4
                      WHEN B.GUBUN = 'RUN' THEN RUN_4
                 END), 0) AS D4
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_5 ELSE WIP_5 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_5 ELSE END_5 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_5 ELSE EXP_5 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_5
                      WHEN B.GUBUN = 'RUN' THEN RUN_5
                 END), 0) AS D5
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_6 ELSE WIP_6 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_6 ELSE END_6 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_6 ELSE EXP_6 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_6
                      WHEN B.GUBUN = 'RUN' THEN RUN_6
                 END), 0) AS D6
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_7 ELSE WIP_7 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_7 ELSE END_7 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_7 ELSE EXP_7 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_7
                      WHEN B.GUBUN = 'RUN' THEN RUN_7
                 END), 0) AS D7
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 8, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200420', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY , 0)) / 13.6494617694722 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS END_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS END_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS END_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS END_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) AS END_7
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_END_QTY, 0)) AS EXP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_END_QTY, 0)) AS EXP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_END_QTY, 0)) AS EXP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_END_QTY, 0)) AS EXP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_END_QTY, 0)) AS EXP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_END_QTY, 0)) / 13.6494617694722 * 24 AS EXP_7
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200413' AND '20200420'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200414', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200415', CONV_WIP_QTY, 0)) AS WIP_2
                     , SUM(DECODE(WORK_DATE, '20200416', CONV_WIP_QTY, 0)) AS WIP_3
                     , SUM(DECODE(WORK_DATE, '20200417', CONV_WIP_QTY, 0)) AS WIP_4
                     , SUM(DECODE(WORK_DATE, '20200418', CONV_WIP_QTY, 0)) AS WIP_5
                     , SUM(DECODE(WORK_DATE, '20200419', CONV_WIP_QTY, 0)) AS WIP_6
                     , SUM(DECODE(WORK_DATE, '20200420', CONV_WIP_QTY, 0)) AS WIP_7
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200420' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200413' AND '20200419'
                                   AND SHIFT = '3'
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200413', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200414', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200415', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200416', RES_CNT, 0)) AS RES_3
                     , SUM(DECODE(WORK_DATE, '20200417', RES_CNT, 0)) AS RES_4
                     , SUM(DECODE(WORK_DATE, '20200418', RES_CNT, 0)) AS RES_5
                     , SUM(DECODE(WORK_DATE, '20200419', RES_CNT, 0)) AS RES_6
                     , SUM(DECODE(WORK_DATE, '20200420', RES_CNT, 0)) AS RES_7
                     , SUM(DECODE(WORK_DATE, '20200413', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200414', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200415', RUN_CNT, 0)) AS RUN_2
                     , SUM(DECODE(WORK_DATE, '20200416', RUN_CNT, 0)) AS RUN_3
                     , SUM(DECODE(WORK_DATE, '20200417', RUN_CNT, 0)) AS RUN_4
                     , SUM(DECODE(WORK_DATE, '20200418', RUN_CNT, 0)) AS RUN_5
                     , SUM(DECODE(WORK_DATE, '20200419', RUN_CNT, 0)) AS RUN_6
                     , SUM(DECODE(WORK_DATE, '20200420', RUN_CNT, 0)) AS RUN_7
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200420' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020041322' AND '2020041922'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'YLD040801'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020209'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011016'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202004' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202004' 
   AND SYS_DATE <= '20200420' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200420')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200420', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200420')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200420', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200420')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200420', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200420')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200420', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010910'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '16' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '17' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID
  FROM (
        SELECT A.MAT_ID, B.KEY_1
          FROM (
                SELECT DISTINCT MAT_ID
                  FROM RWIPPLNWEK     
                 WHERE 1=1   
                   AND FACTORY = 'HMKT1'
                   AND PLAN_WEEK BETWEEN '202017' AND '202017'
                   AND GUBUN = '3'  
               ) A
             , MGCMTBLDAT B     
         WHERE 1=1
           AND A.MAT_ID = B.KEY_1(+)
           AND B.FACTORY(+) = 'HMKT1'
           AND B.TABLE_NAME(+) = 'H_CAPA_SIM_INFO'
       )
 WHERE KEY_1 IS NULL
 ORDER BY MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010403'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010410'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020106'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
     , SUM(QTY) AS QTY
     , SUM(W_QTY) AS W_QTY
     , ROUND(AVG(UPEH),2) AS UPEH
     , ROUND(AVG(UPEH * CONVERT_QTY),2)
  FROM (
        SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10, MAT.MAT_ID,  ' '
             , OPER_IN_QTY_1 AS QTY
             , QTY_2 AS W_QTY
             , DECODE(UPEH,0,(SELECT UPEH FROM CRESMSTUPH@RPTTOMES WHERE OPER=HIS.OPER AND MODEL=RES.RES_GRP_6 AND UPEH_GROUP=RES.RES_GRP_7 AND RES.DELETE_FLAG=' '),UPEH) AS UPEH 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND OLD_OPER LIKE 'A04%' THEN TO_NUMBER(COMP_CNT)
                    WHEN OLD_OPER LIKE 'A06%' THEN NVL((SELECT MAX(TO_NUMBER(TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = 'HMVA2' AND SET_FLAG = 'Y' AND TCD_CMF_2 <> ' ' AND MAT_ID = HIS.MAT_ID AND OPER = OLD_OPER), MAT.MAT_GRP_6)
                    ELSE 1 
               END CONVERT_QTY 
          FROM CWIPLOTEND HIS 
             , MRASRESDEF RES 
             , VWIPMATDEF MAT 
         WHERE 1=1 
           AND RES.FACTORY = HIS.FACTORY 
           AND RES.RES_ID = HIS.END_RES_ID 
           AND HIS.FACTORY = MAT.FACTORY 
           AND HIS.MAT_ID = MAT.MAT_ID 
           AND RES.DELETE_FLAG = ' ' 
           AND MAT.DELETE_FLAG = ' ' 
           AND MAT.MAT_TYPE = 'FG' 
           AND HIS.FACTORY = 'HMVA2'
           AND HIS.TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
           AND HIS.END_RES_ID != ' ' 
       ) A
 GROUP BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
 ORDER BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
     , SUM(QTY) AS QTY
     , SUM(W_QTY) AS W_QTY
     , ROUND(AVG(UPEH),2) AS UPEH
     , ROUND(AVG(UPEH * CONVERT_QTY),2)
  FROM (
        SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10, MAT.MAT_ID,  ' '
             , OPER_IN_QTY_1 AS QTY
             , QTY_2 AS W_QTY
             , DECODE(UPEH,0,(SELECT UPEH FROM CRESMSTUPH@RPTTOMES WHERE OPER=HIS.OPER AND MODEL=RES.RES_GRP_6 AND UPEH_GROUP=RES.RES_GRP_7 AND RES.DELETE_FLAG=' '),UPEH) AS UPEH 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND OLD_OPER LIKE 'A04%' THEN TO_NUMBER(COMP_CNT)
                    WHEN OLD_OPER LIKE 'A06%' THEN NVL((SELECT MAX(TO_NUMBER(TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = 'HMVA2' AND SET_FLAG = 'Y' AND TCD_CMF_2 <> ' ' AND MAT_ID = HIS.MAT_ID AND OPER = OLD_OPER), MAT.MAT_GRP_6)
                    ELSE 1 
               END CONVERT_QTY 
          FROM CWIPLOTEND HIS 
             , MRASRESDEF RES 
             , VWIPMATDEF MAT 
         WHERE 1=1 
           AND RES.FACTORY = HIS.FACTORY 
           AND RES.RES_ID = HIS.END_RES_ID 
           AND HIS.FACTORY = MAT.FACTORY 
           AND HIS.MAT_ID = MAT.MAT_ID 
           AND RES.DELETE_FLAG = ' ' 
           AND MAT.DELETE_FLAG = ' ' 
           AND MAT.MAT_TYPE = 'FG' 
           AND HIS.FACTORY = 'HMVA2'
           AND HIS.TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
           AND HIS.END_RES_ID != ' ' 
       ) A
 GROUP BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
 ORDER BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020105'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT(LOSS.CODE) CODE
  FROM ( 
        SELECT FACTORY, END_RES_ID AS RES_ID, MAT_ID, LOT_ID, START_TIME AS IN_TIME, TRAN_TIME AS OUT_TIME 
          FROM CWIPLOTEND
         WHERE FACTORY  = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
           AND END_RES_ID != ' ' 
           AND LOT_TYPE = 'W' 
           AND START_RES_ID = END_RES_ID  
       ) LTH  
     , ( 
        SELECT LOSS_CODE CODE, LOSS_QTY QTY, FACTORY, RES_ID, MAT_ID, LOT_ID, TRAN_TIME 
          FROM RWIPLOTLSM 
         WHERE FACTORY  = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
           AND MAT_VER = 1   
           AND HIST_DEL_FLAG = ' ' 
       ) LOSS  
     , MRASRESDEF RES 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND RES.FACTORY = LTH.FACTORY 
   AND RES.RES_ID = LTH.RES_ID 
   AND MAT.FACTORY = LTH.FACTORY 
   AND MAT.MAT_ID = LTH.MAT_ID 
   AND RES.FACTORY  = 'HMVA2' 
   AND LTH.FACTORY = LOSS.FACTORY(+) 
   AND LTH.LOT_ID = LOSS.LOT_ID(+) 
   AND LTH.MAT_ID = LOSS.MAT_ID(+) 
   AND LTH.RES_ID = LOSS.RES_ID(+) 
   AND LOSS.TRAN_TIME(+) BETWEEN LTH.IN_TIME AND LTH.OUT_TIME 
   AND RES.RES_TYPE NOT IN ('DUMMY')
   AND LOSS.CODE<>' '
ORDER BY LOSS.CODE 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT SUBSTR(TRAN_TIME, 1, 8) WORK_DATE,  ' ', RES.RES_ID AS RES, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_1), '-') AS TEAM, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_2), '-') AS PART, RES.RES_GRP_3 AS EQP_TYPE, RES.RES_GRP_5 AS MAKER, RES.RES_GRP_6 AS MODEL, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_CUSTOMER' AND ROWNUM=1 AND KEY_1 = MAT.MAT_GRP_1), '-') AS CUSTOMER,  ' ', MAT.MAT_GRP_3 as Package,  ' ',  ' ',  ' ',  ' ',  ' '
     , RES.MAT_ID AS PRODUCT 
     , RES.LOT_ID AS LOT_ID 
     , NVL(RES.UPEH,0) AS STD_UPEH 
     , DECODE(RES.WORK_TIME,0,1,TRUNC(RES.OUT_QTY/RES.WORK_TIME)) AS REAL_UPEH 
     , RES.OUT_QTY + RES.LOSS AS IN_QTY 
     , RES.OUT_QTY 
     , RES.LOSS 
     , ROUND(RES.OUT_QTY / (RES.OUT_QTY + RES.LOSS) * 100, 2) AS YIELD 
     , TRUNC(WORK_TIME*60) WORK_TIME 
     , TO_CHAR(TO_DATE(RES.IN_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') IN_TIME 
     , TO_CHAR(TO_DATE(RES.OUT_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') OUT_TIME 
     , RES.MODULE_CNT 
     , SUM(DECODE(RES.CODE, '208', RES.QTY, 0)) AS LOSS_0 
     , SUM(DECODE(RES.CODE, '211', RES.QTY, 0)) AS LOSS_1 
     , SUM(DECODE(RES.CODE, '302', RES.QTY, 0)) AS LOSS_2 
     , SUM(DECODE(RES.CODE, '307', RES.QTY, 0)) AS LOSS_3 
     , SUM(DECODE(RES.CODE, '318', RES.QTY, 0)) AS LOSS_4 
     , SUM(DECODE(RES.CODE, '319', RES.QTY, 0)) AS LOSS_5 
     , SUM(DECODE(RES.CODE, '321', RES.QTY, 0)) AS LOSS_6 
     , SUM(DECODE(RES.CODE, '326', RES.QTY, 0)) AS LOSS_7 
     , SUM(DECODE(RES.CODE, '392', RES.QTY, 0)) AS LOSS_8 
     , SUM(DECODE(RES.CODE, '402', RES.QTY, 0)) AS LOSS_9 
     , SUM(DECODE(RES.CODE, '403', RES.QTY, 0)) AS LOSS_10 
     , SUM(DECODE(RES.CODE, '406', RES.QTY, 0)) AS LOSS_11 
     , SUM(DECODE(RES.CODE, '413', RES.QTY, 0)) AS LOSS_12 
     , SUM(DECODE(RES.CODE, '479', RES.QTY, 0)) AS LOSS_13 
     , SUM(DECODE(RES.CODE, '480', RES.QTY, 0)) AS LOSS_14 
     , SUM(DECODE(RES.CODE, '481', RES.QTY, 0)) AS LOSS_15 
     , SUM(DECODE(RES.CODE, '491', RES.QTY, 0)) AS LOSS_16 
     , SUM(DECODE(RES.CODE, '616', RES.QTY, 0)) AS LOSS_17 
  FROM (   
        SELECT LTH.TRAN_TIME, LTH.FACTORY, LTH.RES_ID, LTH.MAT_ID, LTH.LOT_ID, RES.RES_TYPE, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, RES.RES_GRP_7 
             , LTH.IN_QTY, LTH.OUT_QTY, LTH.LOSS 
             , LTH.WORK_TIME, LTH.UPEH 
             , LTH.IN_TIME, LTH.OUT_TIME 
             , LOSS.CODE 
             , LOSS.QTY 
             , LTH.OPER 
             , LTH.MODULE_CNT 
          FROM ( 
                SELECT START_TIME AS TRAN_TIME, FACTORY, END_RES_ID AS RES_ID, MAT_ID, LOT_ID 
                     , HIST_SEQ, OLD_OPER AS OPER, START_QTY_1 AS IN_QTY, QTY_1 AS OUT_QTY, LOSS_QTY_1 AS LOSS
                     , START_TIME AS IN_TIME, TRAN_TIME AS OUT_TIME
                     , (TO_DATE(TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(START_TIME, 'YYYYMMDDHH24MISS'))*24 WORK_TIME
                     , UPEH, TRAN_CMF_6 AS MODULE_CNT 
                  FROM CWIPLOTEND LOT 
                 WHERE FACTORY  = 'HMVA2' 
                   AND TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
                   AND END_RES_ID != ' ' 
                   AND START_RES_ID = END_RES_ID 
                   AND LOT_TYPE = 'W' 
               ) LTH  
             , ( 
                SELECT LOSS_CODE CODE, LOSS_QTY QTY, FACTORY, RES_ID, MAT_ID, LOT_ID, TRAN_TIME, HIST_SEQ 
                  FROM RWIPLOTLSM     
                 WHERE FACTORY  = 'HMVA2' 
                   AND TRAN_TIME BETWEEN '20200415220000' AND '20200420215959'
                   AND MAT_VER = 1   
                   AND HIST_DEL_FLAG = ' ' 
               ) LOSS  
             , MRASRESDEF RES 
         WHERE 1=1 
           AND RES.FACTORY = LTH.FACTORY 
           AND RES.RES_ID = LTH.RES_ID 
           AND RES.FACTORY  = 'HMVA2' 
           AND LTH.FACTORY = LOSS.FACTORY(+) 
           AND LTH.LOT_ID = LOSS.LOT_ID(+) 
           AND LTH.MAT_ID = LOSS.MAT_ID(+) 
           AND LTH.RES_ID = LOSS.RES_ID(+) 
           AND LOSS.TRAN_TIME(+) BETWEEN LTH.IN_TIME AND LTH.OUT_TIME 
           AND RES.RES_TYPE NOT IN ('DUMMY')
       ) RES 
       , MWIPMATDEF MAT 
 WHERE 1=1 
   AND RES.FACTORY = MAT.FACTORY 
   AND RES.MAT_ID = MAT.MAT_ID 
   AND MAT.MAT_TYPE = 'FG' 
 GROUP BY 1,  ' ', RES.RES_ID, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', RES.FACTORY, RES.UPEH, RES.MAT_ID, RES.LOT_ID, RES.IN_QTY, RES.OUT_QTY, RES.LOSS, RES.WORK_TIME, RES.IN_TIME, RES.OUT_TIME, RES.MODULE_CNT 
 ORDER BY 1,  ' ', RES.RES_ID, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', RES.FACTORY, RES.UPEH, RES.MAT_ID, RES.LOT_ID, RES.IN_QTY, RES.OUT_QTY, RES.LOSS, RES.WORK_TIME, RES.IN_TIME, RES.OUT_TIME, RES.MODULE_CNT 

-------------------------------------------------------------
