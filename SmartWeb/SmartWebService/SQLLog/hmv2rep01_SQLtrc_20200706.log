SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = '' 
        AND TABLE_NAME='LOSS_CODE' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'YLD040601'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , ROUND(SUM(TOTAL)/17, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200620', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200621', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200622', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200623', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200624', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200625', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200626', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200627', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200628', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200629', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200630', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200701', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200702', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200703', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200704', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200705', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200706', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200620' AND '20200706' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT * 
   FROM CWIPLOTEND 
  WHERE 1=1 
    AND TRAN_TIME BETWEEN '20200601220000' AND '20200706215959' 
    AND TRAN_CODE = 'END' 
    AND LOT_TYPE = 'W' 
    AND FACTORY = 'HMVA2' 
    AND HIST_DEL_FLAG = ' ' 
    AND TRAN_CMF_1 = 'CLOSE' 
    AND MAT_ID LIKE 'DRET520E_A20_V2_KN7'
)
SELECT  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
     , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME 
     , SUMMERY.TAT AS TAT 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0) AS IL_IN 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS IL_OUT 
     , ROUND(((SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0))/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0)))*100,3)||'%' AS IL_YIELD 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS BE_IN 
     , SUMMERY.BE_OUT 
     , ROUND((SUMMERY.BE_OUT/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0)))*100,3)||'%' AS BE_YIELD 
     , SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0) AS IN_QTY  
     , SUMMERY.OUT_QTY 
     , ROUND(SUMMERY.OUT_QTY/(SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0))*100,3)||'%' AS YIELD 
     , '' AS BONUS 
     , NVL(SUM(LOSS.LOSS_QTY),0) AS LOSS_QTY 
     , SUM(DECODE(LOSS.LOSS_CODE,'80',LOSS.LOSS_QTY,0))  LOSS0
     , SUM(DECODE(LOSS.LOSS_CODE,'81',LOSS.LOSS_QTY,0))  LOSS1
     , SUM(DECODE(LOSS.LOSS_CODE,'82',LOSS.LOSS_QTY,0))  LOSS2
     , SUM(DECODE(LOSS.LOSS_CODE,'83',LOSS.LOSS_QTY,0))  LOSS3
     , SUM(DECODE(LOSS.LOSS_CODE,'84',LOSS.LOSS_QTY,0))  LOSS4
     , SUM(DECODE(LOSS.LOSS_CODE,'85',LOSS.LOSS_QTY,0))  LOSS5
     , SUM(DECODE(LOSS.LOSS_CODE,'86',LOSS.LOSS_QTY,0))  LOSS6
     , SUM(DECODE(LOSS.LOSS_CODE,'87',LOSS.LOSS_QTY,0))  LOSS7
     , SUM(DECODE(LOSS.LOSS_CODE,'88',LOSS.LOSS_QTY,0))  LOSS8
     , SUM(DECODE(LOSS.LOSS_CODE,'100',LOSS.LOSS_QTY,0))  LOSS9
     , SUM(DECODE(LOSS.LOSS_CODE,'102',LOSS.LOSS_QTY,0))  LOSS10
     , SUM(DECODE(LOSS.LOSS_CODE,'104',LOSS.LOSS_QTY,0))  LOSS11
     , SUM(DECODE(LOSS.LOSS_CODE,'105',LOSS.LOSS_QTY,0))  LOSS12
     , SUM(DECODE(LOSS.LOSS_CODE,'106',LOSS.LOSS_QTY,0))  LOSS13
     , SUM(DECODE(LOSS.LOSS_CODE,'107',LOSS.LOSS_QTY,0))  LOSS14
     , SUM(DECODE(LOSS.LOSS_CODE,'110',LOSS.LOSS_QTY,0))  LOSS15
     , SUM(DECODE(LOSS.LOSS_CODE,'111',LOSS.LOSS_QTY,0))  LOSS16
     , SUM(DECODE(LOSS.LOSS_CODE,'112',LOSS.LOSS_QTY,0))  LOSS17
     , SUM(DECODE(LOSS.LOSS_CODE,'114',LOSS.LOSS_QTY,0))  LOSS18
     , SUM(DECODE(LOSS.LOSS_CODE,'115',LOSS.LOSS_QTY,0))  LOSS19
     , SUM(DECODE(LOSS.LOSS_CODE,'116',LOSS.LOSS_QTY,0))  LOSS20
     , SUM(DECODE(LOSS.LOSS_CODE,'119',LOSS.LOSS_QTY,0))  LOSS21
     , SUM(DECODE(LOSS.LOSS_CODE,'120',LOSS.LOSS_QTY,0))  LOSS22
     , SUM(DECODE(LOSS.LOSS_CODE,'121',LOSS.LOSS_QTY,0))  LOSS23
     , SUM(DECODE(LOSS.LOSS_CODE,'122',LOSS.LOSS_QTY,0))  LOSS24
     , SUM(DECODE(LOSS.LOSS_CODE,'123',LOSS.LOSS_QTY,0))  LOSS25
     , SUM(DECODE(LOSS.LOSS_CODE,'124',LOSS.LOSS_QTY,0))  LOSS26
     , SUM(DECODE(LOSS.LOSS_CODE,'125',LOSS.LOSS_QTY,0))  LOSS27
     , SUM(DECODE(LOSS.LOSS_CODE,'127',LOSS.LOSS_QTY,0))  LOSS28
     , SUM(DECODE(LOSS.LOSS_CODE,'128',LOSS.LOSS_QTY,0))  LOSS29
     , SUM(DECODE(LOSS.LOSS_CODE,'200',LOSS.LOSS_QTY,0))  LOSS30
     , SUM(DECODE(LOSS.LOSS_CODE,'202',LOSS.LOSS_QTY,0))  LOSS31
     , SUM(DECODE(LOSS.LOSS_CODE,'203',LOSS.LOSS_QTY,0))  LOSS32
     , SUM(DECODE(LOSS.LOSS_CODE,'204',LOSS.LOSS_QTY,0))  LOSS33
     , SUM(DECODE(LOSS.LOSS_CODE,'205',LOSS.LOSS_QTY,0))  LOSS34
     , SUM(DECODE(LOSS.LOSS_CODE,'206',LOSS.LOSS_QTY,0))  LOSS35
     , SUM(DECODE(LOSS.LOSS_CODE,'207',LOSS.LOSS_QTY,0))  LOSS36
     , SUM(DECODE(LOSS.LOSS_CODE,'208',LOSS.LOSS_QTY,0))  LOSS37
     , SUM(DECODE(LOSS.LOSS_CODE,'209',LOSS.LOSS_QTY,0))  LOSS38
     , SUM(DECODE(LOSS.LOSS_CODE,'210',LOSS.LOSS_QTY,0))  LOSS39
     , SUM(DECODE(LOSS.LOSS_CODE,'211',LOSS.LOSS_QTY,0))  LOSS40
     , SUM(DECODE(LOSS.LOSS_CODE,'212',LOSS.LOSS_QTY,0))  LOSS41
     , SUM(DECODE(LOSS.LOSS_CODE,'213',LOSS.LOSS_QTY,0))  LOSS42
     , SUM(DECODE(LOSS.LOSS_CODE,'214',LOSS.LOSS_QTY,0))  LOSS43
     , SUM(DECODE(LOSS.LOSS_CODE,'215',LOSS.LOSS_QTY,0))  LOSS44
     , SUM(DECODE(LOSS.LOSS_CODE,'216',LOSS.LOSS_QTY,0))  LOSS45
     , SUM(DECODE(LOSS.LOSS_CODE,'217',LOSS.LOSS_QTY,0))  LOSS46
     , SUM(DECODE(LOSS.LOSS_CODE,'218',LOSS.LOSS_QTY,0))  LOSS47
     , SUM(DECODE(LOSS.LOSS_CODE,'219',LOSS.LOSS_QTY,0))  LOSS48
     , SUM(DECODE(LOSS.LOSS_CODE,'222',LOSS.LOSS_QTY,0))  LOSS49
     , SUM(DECODE(LOSS.LOSS_CODE,'224',LOSS.LOSS_QTY,0))  LOSS50
     , SUM(DECODE(LOSS.LOSS_CODE,'225',LOSS.LOSS_QTY,0))  LOSS51
     , SUM(DECODE(LOSS.LOSS_CODE,'250',LOSS.LOSS_QTY,0))  LOSS52
     , SUM(DECODE(LOSS.LOSS_CODE,'251',LOSS.LOSS_QTY,0))  LOSS53
     , SUM(DECODE(LOSS.LOSS_CODE,'265',LOSS.LOSS_QTY,0))  LOSS54
     , SUM(DECODE(LOSS.LOSS_CODE,'270',LOSS.LOSS_QTY,0))  LOSS55
     , SUM(DECODE(LOSS.LOSS_CODE,'291',LOSS.LOSS_QTY,0))  LOSS56
     , SUM(DECODE(LOSS.LOSS_CODE,'299',LOSS.LOSS_QTY,0))  LOSS57
     , SUM(DECODE(LOSS.LOSS_CODE,'302',LOSS.LOSS_QTY,0))  LOSS58
     , SUM(DECODE(LOSS.LOSS_CODE,'303',LOSS.LOSS_QTY,0))  LOSS59
     , SUM(DECODE(LOSS.LOSS_CODE,'304',LOSS.LOSS_QTY,0))  LOSS60
     , SUM(DECODE(LOSS.LOSS_CODE,'305',LOSS.LOSS_QTY,0))  LOSS61
     , SUM(DECODE(LOSS.LOSS_CODE,'306',LOSS.LOSS_QTY,0))  LOSS62
     , SUM(DECODE(LOSS.LOSS_CODE,'307',LOSS.LOSS_QTY,0))  LOSS63
     , SUM(DECODE(LOSS.LOSS_CODE,'308',LOSS.LOSS_QTY,0))  LOSS64
     , SUM(DECODE(LOSS.LOSS_CODE,'311',LOSS.LOSS_QTY,0))  LOSS65
     , SUM(DECODE(LOSS.LOSS_CODE,'312',LOSS.LOSS_QTY,0))  LOSS66
     , SUM(DECODE(LOSS.LOSS_CODE,'313',LOSS.LOSS_QTY,0))  LOSS67
     , SUM(DECODE(LOSS.LOSS_CODE,'314',LOSS.LOSS_QTY,0))  LOSS68
     , SUM(DECODE(LOSS.LOSS_CODE,'315',LOSS.LOSS_QTY,0))  LOSS69
     , SUM(DECODE(LOSS.LOSS_CODE,'316',LOSS.LOSS_QTY,0))  LOSS70
     , SUM(DECODE(LOSS.LOSS_CODE,'317',LOSS.LOSS_QTY,0))  LOSS71
     , SUM(DECODE(LOSS.LOSS_CODE,'318',LOSS.LOSS_QTY,0))  LOSS72
     , SUM(DECODE(LOSS.LOSS_CODE,'319',LOSS.LOSS_QTY,0))  LOSS73
     , SUM(DECODE(LOSS.LOSS_CODE,'320',LOSS.LOSS_QTY,0))  LOSS74
     , SUM(DECODE(LOSS.LOSS_CODE,'321',LOSS.LOSS_QTY,0))  LOSS75
     , SUM(DECODE(LOSS.LOSS_CODE,'322',LOSS.LOSS_QTY,0))  LOSS76
     , SUM(DECODE(LOSS.LOSS_CODE,'323',LOSS.LOSS_QTY,0))  LOSS77
     , SUM(DECODE(LOSS.LOSS_CODE,'324',LOSS.LOSS_QTY,0))  LOSS78
     , SUM(DECODE(LOSS.LOSS_CODE,'326',LOSS.LOSS_QTY,0))  LOSS79
     , SUM(DECODE(LOSS.LOSS_CODE,'330',LOSS.LOSS_QTY,0))  LOSS80
     , SUM(DECODE(LOSS.LOSS_CODE,'331',LOSS.LOSS_QTY,0))  LOSS81
     , SUM(DECODE(LOSS.LOSS_CODE,'332',LOSS.LOSS_QTY,0))  LOSS82
     , SUM(DECODE(LOSS.LOSS_CODE,'333',LOSS.LOSS_QTY,0))  LOSS83
     , SUM(DECODE(LOSS.LOSS_CODE,'368',LOSS.LOSS_QTY,0))  LOSS84
     , SUM(DECODE(LOSS.LOSS_CODE,'371',LOSS.LOSS_QTY,0))  LOSS85
     , SUM(DECODE(LOSS.LOSS_CODE,'373',LOSS.LOSS_QTY,0))  LOSS86
     , SUM(DECODE(LOSS.LOSS_CODE,'388',LOSS.LOSS_QTY,0))  LOSS87
     , SUM(DECODE(LOSS.LOSS_CODE,'392',LOSS.LOSS_QTY,0))  LOSS88
     , SUM(DECODE(LOSS.LOSS_CODE,'395',LOSS.LOSS_QTY,0))  LOSS89
     , SUM(DECODE(LOSS.LOSS_CODE,'402',LOSS.LOSS_QTY,0))  LOSS90
     , SUM(DECODE(LOSS.LOSS_CODE,'403',LOSS.LOSS_QTY,0))  LOSS91
     , SUM(DECODE(LOSS.LOSS_CODE,'404',LOSS.LOSS_QTY,0))  LOSS92
     , SUM(DECODE(LOSS.LOSS_CODE,'405',LOSS.LOSS_QTY,0))  LOSS93
     , SUM(DECODE(LOSS.LOSS_CODE,'406',LOSS.LOSS_QTY,0))  LOSS94
     , SUM(DECODE(LOSS.LOSS_CODE,'407',LOSS.LOSS_QTY,0))  LOSS95
     , SUM(DECODE(LOSS.LOSS_CODE,'408',LOSS.LOSS_QTY,0))  LOSS96
     , SUM(DECODE(LOSS.LOSS_CODE,'409',LOSS.LOSS_QTY,0))  LOSS97
     , SUM(DECODE(LOSS.LOSS_CODE,'410',LOSS.LOSS_QTY,0))  LOSS98
     , SUM(DECODE(LOSS.LOSS_CODE,'411',LOSS.LOSS_QTY,0))  LOSS99
     , SUM(DECODE(LOSS.LOSS_CODE,'412',LOSS.LOSS_QTY,0))  LOSS100
     , SUM(DECODE(LOSS.LOSS_CODE,'413',LOSS.LOSS_QTY,0))  LOSS101
     , SUM(DECODE(LOSS.LOSS_CODE,'414',LOSS.LOSS_QTY,0))  LOSS102
     , SUM(DECODE(LOSS.LOSS_CODE,'415',LOSS.LOSS_QTY,0))  LOSS103
     , SUM(DECODE(LOSS.LOSS_CODE,'417',LOSS.LOSS_QTY,0))  LOSS104
     , SUM(DECODE(LOSS.LOSS_CODE,'418',LOSS.LOSS_QTY,0))  LOSS105
     , SUM(DECODE(LOSS.LOSS_CODE,'419',LOSS.LOSS_QTY,0))  LOSS106
     , SUM(DECODE(LOSS.LOSS_CODE,'420',LOSS.LOSS_QTY,0))  LOSS107
     , SUM(DECODE(LOSS.LOSS_CODE,'421',LOSS.LOSS_QTY,0))  LOSS108
     , SUM(DECODE(LOSS.LOSS_CODE,'422',LOSS.LOSS_QTY,0))  LOSS109
     , SUM(DECODE(LOSS.LOSS_CODE,'423',LOSS.LOSS_QTY,0))  LOSS110
     , SUM(DECODE(LOSS.LOSS_CODE,'424',LOSS.LOSS_QTY,0))  LOSS111
     , SUM(DECODE(LOSS.LOSS_CODE,'425',LOSS.LOSS_QTY,0))  LOSS112
     , SUM(DECODE(LOSS.LOSS_CODE,'426',LOSS.LOSS_QTY,0))  LOSS113
     , SUM(DECODE(LOSS.LOSS_CODE,'427',LOSS.LOSS_QTY,0))  LOSS114
     , SUM(DECODE(LOSS.LOSS_CODE,'440',LOSS.LOSS_QTY,0))  LOSS115
     , SUM(DECODE(LOSS.LOSS_CODE,'472',LOSS.LOSS_QTY,0))  LOSS116
     , SUM(DECODE(LOSS.LOSS_CODE,'430',LOSS.LOSS_QTY,0))  LOSS117
     , SUM(DECODE(LOSS.LOSS_CODE,'473',LOSS.LOSS_QTY,0))  LOSS118
     , SUM(DECODE(LOSS.LOSS_CODE,'474',LOSS.LOSS_QTY,0))  LOSS119
     , SUM(DECODE(LOSS.LOSS_CODE,'475',LOSS.LOSS_QTY,0))  LOSS120
     , SUM(DECODE(LOSS.LOSS_CODE,'476',LOSS.LOSS_QTY,0))  LOSS121
     , SUM(DECODE(LOSS.LOSS_CODE,'477',LOSS.LOSS_QTY,0))  LOSS122
     , SUM(DECODE(LOSS.LOSS_CODE,'478',LOSS.LOSS_QTY,0))  LOSS123
     , SUM(DECODE(LOSS.LOSS_CODE,'479',LOSS.LOSS_QTY,0))  LOSS124
     , SUM(DECODE(LOSS.LOSS_CODE,'480',LOSS.LOSS_QTY,0))  LOSS125
     , SUM(DECODE(LOSS.LOSS_CODE,'481',LOSS.LOSS_QTY,0))  LOSS126
     , SUM(DECODE(LOSS.LOSS_CODE,'491',LOSS.LOSS_QTY,0))  LOSS127
     , SUM(DECODE(LOSS.LOSS_CODE,'492',LOSS.LOSS_QTY,0))  LOSS128
     , SUM(DECODE(LOSS.LOSS_CODE,'493',LOSS.LOSS_QTY,0))  LOSS129
     , SUM(DECODE(LOSS.LOSS_CODE,'494',LOSS.LOSS_QTY,0))  LOSS130
     , SUM(DECODE(LOSS.LOSS_CODE,'495',LOSS.LOSS_QTY,0))  LOSS131
     , SUM(DECODE(LOSS.LOSS_CODE,'503',LOSS.LOSS_QTY,0))  LOSS132
     , SUM(DECODE(LOSS.LOSS_CODE,'504',LOSS.LOSS_QTY,0))  LOSS133
     , SUM(DECODE(LOSS.LOSS_CODE,'508',LOSS.LOSS_QTY,0))  LOSS134
     , SUM(DECODE(LOSS.LOSS_CODE,'510',LOSS.LOSS_QTY,0))  LOSS135
     , SUM(DECODE(LOSS.LOSS_CODE,'512',LOSS.LOSS_QTY,0))  LOSS136
     , SUM(DECODE(LOSS.LOSS_CODE,'513',LOSS.LOSS_QTY,0))  LOSS137
     , SUM(DECODE(LOSS.LOSS_CODE,'514',LOSS.LOSS_QTY,0))  LOSS138
     , SUM(DECODE(LOSS.LOSS_CODE,'517',LOSS.LOSS_QTY,0))  LOSS139
     , SUM(DECODE(LOSS.LOSS_CODE,'520',LOSS.LOSS_QTY,0))  LOSS140
     , SUM(DECODE(LOSS.LOSS_CODE,'531',LOSS.LOSS_QTY,0))  LOSS141
     , SUM(DECODE(LOSS.LOSS_CODE,'538',LOSS.LOSS_QTY,0))  LOSS142
     , SUM(DECODE(LOSS.LOSS_CODE,'539',LOSS.LOSS_QTY,0))  LOSS143
     , SUM(DECODE(LOSS.LOSS_CODE,'563',LOSS.LOSS_QTY,0))  LOSS144
     , SUM(DECODE(LOSS.LOSS_CODE,'564',LOSS.LOSS_QTY,0))  LOSS145
     , SUM(DECODE(LOSS.LOSS_CODE,'565',LOSS.LOSS_QTY,0))  LOSS146
     , SUM(DECODE(LOSS.LOSS_CODE,'566',LOSS.LOSS_QTY,0))  LOSS147
     , SUM(DECODE(LOSS.LOSS_CODE,'567',LOSS.LOSS_QTY,0))  LOSS148
     , SUM(DECODE(LOSS.LOSS_CODE,'568',LOSS.LOSS_QTY,0))  LOSS149
     , SUM(DECODE(LOSS.LOSS_CODE,'571',LOSS.LOSS_QTY,0))  LOSS150
     , SUM(DECODE(LOSS.LOSS_CODE,'572',LOSS.LOSS_QTY,0))  LOSS151
     , SUM(DECODE(LOSS.LOSS_CODE,'573',LOSS.LOSS_QTY,0))  LOSS152
     , SUM(DECODE(LOSS.LOSS_CODE,'602',LOSS.LOSS_QTY,0))  LOSS153
     , SUM(DECODE(LOSS.LOSS_CODE,'603',LOSS.LOSS_QTY,0))  LOSS154
     , SUM(DECODE(LOSS.LOSS_CODE,'604',LOSS.LOSS_QTY,0))  LOSS155
     , SUM(DECODE(LOSS.LOSS_CODE,'605',LOSS.LOSS_QTY,0))  LOSS156
     , SUM(DECODE(LOSS.LOSS_CODE,'606',LOSS.LOSS_QTY,0))  LOSS157
     , SUM(DECODE(LOSS.LOSS_CODE,'607',LOSS.LOSS_QTY,0))  LOSS158
     , SUM(DECODE(LOSS.LOSS_CODE,'608',LOSS.LOSS_QTY,0))  LOSS159
     , SUM(DECODE(LOSS.LOSS_CODE,'609',LOSS.LOSS_QTY,0))  LOSS160
     , SUM(DECODE(LOSS.LOSS_CODE,'610',LOSS.LOSS_QTY,0))  LOSS161
     , SUM(DECODE(LOSS.LOSS_CODE,'611',LOSS.LOSS_QTY,0))  LOSS162
     , SUM(DECODE(LOSS.LOSS_CODE,'612',LOSS.LOSS_QTY,0))  LOSS163
     , SUM(DECODE(LOSS.LOSS_CODE,'613',LOSS.LOSS_QTY,0))  LOSS164
     , SUM(DECODE(LOSS.LOSS_CODE,'614',LOSS.LOSS_QTY,0))  LOSS165
     , SUM(DECODE(LOSS.LOSS_CODE,'615',LOSS.LOSS_QTY,0))  LOSS166
     , SUM(DECODE(LOSS.LOSS_CODE,'616',LOSS.LOSS_QTY,0))  LOSS167
     , SUM(DECODE(LOSS.LOSS_CODE,'619',LOSS.LOSS_QTY,0))  LOSS168
     , SUM(DECODE(LOSS.LOSS_CODE,'620',LOSS.LOSS_QTY,0))  LOSS169
     , SUM(DECODE(LOSS.LOSS_CODE,'621',LOSS.LOSS_QTY,0))  LOSS170
     , SUM(DECODE(LOSS.LOSS_CODE,'631',LOSS.LOSS_QTY,0))  LOSS171
     , SUM(DECODE(LOSS.LOSS_CODE,'633',LOSS.LOSS_QTY,0))  LOSS172
     , SUM(DECODE(LOSS.LOSS_CODE,'632',LOSS.LOSS_QTY,0))  LOSS173
     , SUM(DECODE(LOSS.LOSS_CODE,'702',LOSS.LOSS_QTY,0))  LOSS174
     , SUM(DECODE(LOSS.LOSS_CODE,'703',LOSS.LOSS_QTY,0))  LOSS175
     , SUM(DECODE(LOSS.LOSS_CODE,'704',LOSS.LOSS_QTY,0))  LOSS176
     , SUM(DECODE(LOSS.LOSS_CODE,'705',LOSS.LOSS_QTY,0))  LOSS177
     , SUM(DECODE(LOSS.LOSS_CODE,'706',LOSS.LOSS_QTY,0))  LOSS178
     , SUM(DECODE(LOSS.LOSS_CODE,'707',LOSS.LOSS_QTY,0))  LOSS179
     , SUM(DECODE(LOSS.LOSS_CODE,'708',LOSS.LOSS_QTY,0))  LOSS180
     , SUM(DECODE(LOSS.LOSS_CODE,'709',LOSS.LOSS_QTY,0))  LOSS181
     , SUM(DECODE(LOSS.LOSS_CODE,'710',LOSS.LOSS_QTY,0))  LOSS182
     , SUM(DECODE(LOSS.LOSS_CODE,'711',LOSS.LOSS_QTY,0))  LOSS183
     , SUM(DECODE(LOSS.LOSS_CODE,'712',LOSS.LOSS_QTY,0))  LOSS184
     , SUM(DECODE(LOSS.LOSS_CODE,'713',LOSS.LOSS_QTY,0))  LOSS185
     , SUM(DECODE(LOSS.LOSS_CODE,'714',LOSS.LOSS_QTY,0))  LOSS186
     , SUM(DECODE(LOSS.LOSS_CODE,'715',LOSS.LOSS_QTY,0))  LOSS187
     , SUM(DECODE(LOSS.LOSS_CODE,'716',LOSS.LOSS_QTY,0))  LOSS188
     , SUM(DECODE(LOSS.LOSS_CODE,'718',LOSS.LOSS_QTY,0))  LOSS189
     , SUM(DECODE(LOSS.LOSS_CODE,'719',LOSS.LOSS_QTY,0))  LOSS190
     , SUM(DECODE(LOSS.LOSS_CODE,'720',LOSS.LOSS_QTY,0))  LOSS191
     , SUM(DECODE(LOSS.LOSS_CODE,'721',LOSS.LOSS_QTY,0))  LOSS192
     , SUM(DECODE(LOSS.LOSS_CODE,'722',LOSS.LOSS_QTY,0))  LOSS193
     , SUM(DECODE(LOSS.LOSS_CODE,'760',LOSS.LOSS_QTY,0))  LOSS194
     , SUM(DECODE(LOSS.LOSS_CODE,'802',LOSS.LOSS_QTY,0))  LOSS195
     , SUM(DECODE(LOSS.LOSS_CODE,'803',LOSS.LOSS_QTY,0))  LOSS196
     , SUM(DECODE(LOSS.LOSS_CODE,'804',LOSS.LOSS_QTY,0))  LOSS197
     , SUM(DECODE(LOSS.LOSS_CODE,'805',LOSS.LOSS_QTY,0))  LOSS198
     , SUM(DECODE(LOSS.LOSS_CODE,'808',LOSS.LOSS_QTY,0))  LOSS199
     , SUM(DECODE(LOSS.LOSS_CODE,'809',LOSS.LOSS_QTY,0))  LOSS200
     , SUM(DECODE(LOSS.LOSS_CODE,'810',LOSS.LOSS_QTY,0))  LOSS201
     , SUM(DECODE(LOSS.LOSS_CODE,'811',LOSS.LOSS_QTY,0))  LOSS202
     , SUM(DECODE(LOSS.LOSS_CODE,'812',LOSS.LOSS_QTY,0))  LOSS203
     , SUM(DECODE(LOSS.LOSS_CODE,'813',LOSS.LOSS_QTY,0))  LOSS204
     , SUM(DECODE(LOSS.LOSS_CODE,'815',LOSS.LOSS_QTY,0))  LOSS205
     , SUM(DECODE(LOSS.LOSS_CODE,'816',LOSS.LOSS_QTY,0))  LOSS206
     , SUM(DECODE(LOSS.LOSS_CODE,'818',LOSS.LOSS_QTY,0))  LOSS207
     , SUM(DECODE(LOSS.LOSS_CODE,'819',LOSS.LOSS_QTY,0))  LOSS208
     , SUM(DECODE(LOSS.LOSS_CODE,'820',LOSS.LOSS_QTY,0))  LOSS209
     , SUM(DECODE(LOSS.LOSS_CODE,'821',LOSS.LOSS_QTY,0))  LOSS210
     , SUM(DECODE(LOSS.LOSS_CODE,'822',LOSS.LOSS_QTY,0))  LOSS211
     , SUM(DECODE(LOSS.LOSS_CODE,'823',LOSS.LOSS_QTY,0))  LOSS212
     , SUM(DECODE(LOSS.LOSS_CODE,'829',LOSS.LOSS_QTY,0))  LOSS213
     , SUM(DECODE(LOSS.LOSS_CODE,'830',LOSS.LOSS_QTY,0))  LOSS214
     , SUM(DECODE(LOSS.LOSS_CODE,'862',LOSS.LOSS_QTY,0))  LOSS215
     , SUM(DECODE(LOSS.LOSS_CODE,'866',LOSS.LOSS_QTY,0))  LOSS216
     , SUM(DECODE(LOSS.LOSS_CODE,'867',LOSS.LOSS_QTY,0))  LOSS217
     , SUM(DECODE(LOSS.LOSS_CODE,'889',LOSS.LOSS_QTY,0))  LOSS218
     , SUM(DECODE(LOSS.LOSS_CODE,'890',LOSS.LOSS_QTY,0))  LOSS219
     , SUM(DECODE(LOSS.LOSS_CODE,'891',LOSS.LOSS_QTY,0))  LOSS220
     , SUM(DECODE(LOSS.LOSS_CODE,'892',LOSS.LOSS_QTY,0))  LOSS221
     , SUM(DECODE(LOSS.LOSS_CODE,'893',LOSS.LOSS_QTY,0))  LOSS222
     , SUM(DECODE(LOSS.LOSS_CODE,'894',LOSS.LOSS_QTY,0))  LOSS223
     , SUM(DECODE(LOSS.LOSS_CODE,'903',LOSS.LOSS_QTY,0))  LOSS224
     , SUM(DECODE(LOSS.LOSS_CODE,'904',LOSS.LOSS_QTY,0))  LOSS225
     , SUM(DECODE(LOSS.LOSS_CODE,'905',LOSS.LOSS_QTY,0))  LOSS226
     , SUM(DECODE(LOSS.LOSS_CODE,'924',LOSS.LOSS_QTY,0))  LOSS227
     , SUM(DECODE(LOSS.LOSS_CODE,'925',LOSS.LOSS_QTY,0))  LOSS228
     , SUM(DECODE(LOSS.LOSS_CODE,'929',LOSS.LOSS_QTY,0))  LOSS229
     , SUM(DECODE(LOSS.LOSS_CODE,'930',LOSS.LOSS_QTY,0))  LOSS230
     , SUM(DECODE(LOSS.LOSS_CODE,'931',LOSS.LOSS_QTY,0))  LOSS231
     , SUM(DECODE(LOSS.LOSS_CODE,'932',LOSS.LOSS_QTY,0))  LOSS232
     , SUM(DECODE(LOSS.LOSS_CODE,'935',LOSS.LOSS_QTY,0))  LOSS233
     , SUM(DECODE(LOSS.LOSS_CODE,'936',LOSS.LOSS_QTY,0))  LOSS234
     , SUM(DECODE(LOSS.LOSS_CODE,'937',LOSS.LOSS_QTY,0))  LOSS235
     , SUM(DECODE(LOSS.LOSS_CODE,'940',LOSS.LOSS_QTY,0))  LOSS236
     , SUM(DECODE(LOSS.LOSS_CODE,'944',LOSS.LOSS_QTY,0))  LOSS237
     , SUM(DECODE(LOSS.LOSS_CODE,'945',LOSS.LOSS_QTY,0))  LOSS238
     , SUM(DECODE(LOSS.LOSS_CODE,'947',LOSS.LOSS_QTY,0))  LOSS239
     , SUM(DECODE(LOSS.LOSS_CODE,'948',LOSS.LOSS_QTY,0))  LOSS240
     , SUM(DECODE(LOSS.LOSS_CODE,'949',LOSS.LOSS_QTY,0))  LOSS241
     , SUM(DECODE(LOSS.LOSS_CODE,'950',LOSS.LOSS_QTY,0))  LOSS242
     , SUM(DECODE(LOSS.LOSS_CODE,'951',LOSS.LOSS_QTY,0))  LOSS243
     , SUM(DECODE(LOSS.LOSS_CODE,'953',LOSS.LOSS_QTY,0))  LOSS244
     , SUM(DECODE(LOSS.LOSS_CODE,'954',LOSS.LOSS_QTY,0))  LOSS245
     , SUM(DECODE(LOSS.LOSS_CODE,'955',LOSS.LOSS_QTY,0))  LOSS246
     , SUM(DECODE(LOSS.LOSS_CODE,'956',LOSS.LOSS_QTY,0))  LOSS247
     , SUM(DECODE(LOSS.LOSS_CODE,'957',LOSS.LOSS_QTY,0))  LOSS248
     , SUM(DECODE(LOSS.LOSS_CODE,'958',LOSS.LOSS_QTY,0))  LOSS249
     , SUM(DECODE(LOSS.LOSS_CODE,'962',LOSS.LOSS_QTY,0))  LOSS250
     , SUM(DECODE(LOSS.LOSS_CODE,'970',LOSS.LOSS_QTY,0))  LOSS251
     , SUM(DECODE(LOSS.LOSS_CODE,'971',LOSS.LOSS_QTY,0))  LOSS252
     , SUM(DECODE(LOSS.LOSS_CODE,'991',LOSS.LOSS_QTY,0))  LOSS253
     , SUM(DECODE(LOSS.LOSS_CODE,'992',LOSS.LOSS_QTY,0))  LOSS254
     , SUM(DECODE(LOSS.LOSS_CODE,'995',LOSS.LOSS_QTY,0))  LOSS255
     , SUM(DECODE(LOSS.LOSS_CODE,'996',LOSS.LOSS_QTY,0))  LOSS256
     , SUM(DECODE(LOSS.LOSS_CODE,'997',LOSS.LOSS_QTY,0))  LOSS257
     , SUM(DECODE(LOSS.LOSS_CODE,'129',LOSS.LOSS_QTY,0))  LOSS258
     , SUM(DECODE(LOSS.LOSS_CODE,'130',LOSS.LOSS_QTY,0))  LOSS259
     , SUM(DECODE(LOSS.LOSS_CODE,'131',LOSS.LOSS_QTY,0))  LOSS260
     , SUM(DECODE(LOSS.LOSS_CODE,'132',LOSS.LOSS_QTY,0))  LOSS261
     , SUM(DECODE(LOSS.LOSS_CODE,'133',LOSS.LOSS_QTY,0))  LOSS262
     , SUM(DECODE(LOSS.LOSS_CODE,'1001',LOSS.LOSS_QTY,0))  LOSS263
     , SUM(DECODE(LOSS.LOSS_CODE,'1002',LOSS.LOSS_QTY,0))  LOSS264
     , SUM(DECODE(LOSS.LOSS_CODE,'1003',LOSS.LOSS_QTY,0))  LOSS265
     , SUM(DECODE(LOSS.LOSS_CODE,'1004',LOSS.LOSS_QTY,0))  LOSS266
     , SUM(DECODE(LOSS.LOSS_CODE,'1005',LOSS.LOSS_QTY,0))  LOSS267
     , SUM(DECODE(LOSS.LOSS_CODE,'1006',LOSS.LOSS_QTY,0))  LOSS268
     , SUM(DECODE(LOSS.LOSS_CODE,'1007',LOSS.LOSS_QTY,0))  LOSS269
     , SUM(DECODE(LOSS.LOSS_CODE,'1008',LOSS.LOSS_QTY,0))  LOSS270
     , SUM(DECODE(LOSS.LOSS_CODE,'1009',LOSS.LOSS_QTY,0))  LOSS271
     , SUM(DECODE(LOSS.LOSS_CODE,'1010',LOSS.LOSS_QTY,0))  LOSS272
     , SUM(DECODE(LOSS.LOSS_CODE,'1011',LOSS.LOSS_QTY,0))  LOSS273
     , SUM(DECODE(LOSS.LOSS_CODE,'1012',LOSS.LOSS_QTY,0))  LOSS274
     , SUM(DECODE(LOSS.LOSS_CODE,'1021',LOSS.LOSS_QTY,0))  LOSS275
     , SUM(DECODE(LOSS.LOSS_CODE,'1022',LOSS.LOSS_QTY,0))  LOSS276
     , SUM(DECODE(LOSS.LOSS_CODE,'1023',LOSS.LOSS_QTY,0))  LOSS277
     , SUM(DECODE(LOSS.LOSS_CODE,'1024',LOSS.LOSS_QTY,0))  LOSS278
     , SUM(DECODE(LOSS.LOSS_CODE,'1025',LOSS.LOSS_QTY,0))  LOSS279
     , SUM(DECODE(LOSS.LOSS_CODE,'1026',LOSS.LOSS_QTY,0))  LOSS280
     , SUM(DECODE(LOSS.LOSS_CODE,'1027',LOSS.LOSS_QTY,0))  LOSS281
     , SUM(DECODE(LOSS.LOSS_CODE,'1028',LOSS.LOSS_QTY,0))  LOSS282
     , SUM(DECODE(LOSS.LOSS_CODE,'1029',LOSS.LOSS_QTY,0))  LOSS283
     , SUM(DECODE(LOSS.LOSS_CODE,'1031',LOSS.LOSS_QTY,0))  LOSS284
     , SUM(DECODE(LOSS.LOSS_CODE,'1032',LOSS.LOSS_QTY,0))  LOSS285
     , SUM(DECODE(LOSS.LOSS_CODE,'1033',LOSS.LOSS_QTY,0))  LOSS286
     , SUM(DECODE(LOSS.LOSS_CODE,'1034',LOSS.LOSS_QTY,0))  LOSS287
     , SUM(DECODE(LOSS.LOSS_CODE,'1035',LOSS.LOSS_QTY,0))  LOSS288
     , SUM(DECODE(LOSS.LOSS_CODE,'1099',LOSS.LOSS_QTY,0))  LOSS289
     , SUM(DECODE(LOSS.LOSS_CODE,'1101',LOSS.LOSS_QTY,0))  LOSS290
     , SUM(DECODE(LOSS.LOSS_CODE,'1102',LOSS.LOSS_QTY,0))  LOSS291
     , SUM(DECODE(LOSS.LOSS_CODE,'1103',LOSS.LOSS_QTY,0))  LOSS292
     , SUM(DECODE(LOSS.LOSS_CODE,'1111',LOSS.LOSS_QTY,0))  LOSS293
     , SUM(DECODE(LOSS.LOSS_CODE,'1112',LOSS.LOSS_QTY,0))  LOSS294
     , SUM(DECODE(LOSS.LOSS_CODE,'1113',LOSS.LOSS_QTY,0))  LOSS295
     , SUM(DECODE(LOSS.LOSS_CODE,'1114',LOSS.LOSS_QTY,0))  LOSS296
     , SUM(DECODE(LOSS.LOSS_CODE,'1115',LOSS.LOSS_QTY,0))  LOSS297
     , SUM(DECODE(LOSS.LOSS_CODE,'1116',LOSS.LOSS_QTY,0))  LOSS298
     , SUM(DECODE(LOSS.LOSS_CODE,'1117',LOSS.LOSS_QTY,0))  LOSS299
     , SUM(DECODE(LOSS.LOSS_CODE,'1118',LOSS.LOSS_QTY,0))  LOSS300
     , SUM(DECODE(LOSS.LOSS_CODE,'1119',LOSS.LOSS_QTY,0))  LOSS301
     , SUM(DECODE(LOSS.LOSS_CODE,'1131',LOSS.LOSS_QTY,0))  LOSS302
     , SUM(DECODE(LOSS.LOSS_CODE,'1132',LOSS.LOSS_QTY,0))  LOSS303
     , SUM(DECODE(LOSS.LOSS_CODE,'1133',LOSS.LOSS_QTY,0))  LOSS304
     , SUM(DECODE(LOSS.LOSS_CODE,'1134',LOSS.LOSS_QTY,0))  LOSS305
     , SUM(DECODE(LOSS.LOSS_CODE,'1135',LOSS.LOSS_QTY,0))  LOSS306
     , SUM(DECODE(LOSS.LOSS_CODE,'1201',LOSS.LOSS_QTY,0))  LOSS307
     , SUM(DECODE(LOSS.LOSS_CODE,'1202',LOSS.LOSS_QTY,0))  LOSS308
     , SUM(DECODE(LOSS.LOSS_CODE,'1203',LOSS.LOSS_QTY,0))  LOSS309
     , SUM(DECODE(LOSS.LOSS_CODE,'1204',LOSS.LOSS_QTY,0))  LOSS310
     , SUM(DECODE(LOSS.LOSS_CODE,'1205',LOSS.LOSS_QTY,0))  LOSS311
     , SUM(DECODE(LOSS.LOSS_CODE,'1206',LOSS.LOSS_QTY,0))  LOSS312
     , SUM(DECODE(LOSS.LOSS_CODE,'1207',LOSS.LOSS_QTY,0))  LOSS313
     , SUM(DECODE(LOSS.LOSS_CODE,'1208',LOSS.LOSS_QTY,0))  LOSS314
     , SUM(DECODE(LOSS.LOSS_CODE,'1209',LOSS.LOSS_QTY,0))  LOSS315
     , SUM(DECODE(LOSS.LOSS_CODE,'1210',LOSS.LOSS_QTY,0))  LOSS316
     , SUM(DECODE(LOSS.LOSS_CODE,'1211',LOSS.LOSS_QTY,0))  LOSS317
     , SUM(DECODE(LOSS.LOSS_CODE,'9500',LOSS.LOSS_QTY,0))  LOSS318
     , SUM(DECODE(LOSS.LOSS_CODE,'9100',LOSS.LOSS_QTY,0))  LOSS319
     , SUM(DECODE(LOSS.LOSS_CODE,'9000',LOSS.LOSS_QTY,0))  LOSS320
     , SUM(DECODE(LOSS.LOSS_CODE,'9501',LOSS.LOSS_QTY,0))  LOSS321
     , SUM(DECODE(LOSS.LOSS_CODE,'1076',LOSS.LOSS_QTY,0))  LOSS322
     , SUM(DECODE(LOSS.LOSS_CODE,'1077',LOSS.LOSS_QTY,0))  LOSS323
     , SUM(DECODE(LOSS.LOSS_CODE,'1078',LOSS.LOSS_QTY,0))  LOSS324
     , SUM(DECODE(LOSS.LOSS_CODE,'1079',LOSS.LOSS_QTY,0))  LOSS325
     , SUM(DECODE(LOSS.LOSS_CODE,'1080',LOSS.LOSS_QTY,0))  LOSS326
     , SUM(DECODE(LOSS.LOSS_CODE,'1081',LOSS.LOSS_QTY,0))  LOSS327
     , SUM(DECODE(LOSS.LOSS_CODE,'1082',LOSS.LOSS_QTY,0))  LOSS328
     , SUM(DECODE(LOSS.LOSS_CODE,'1083',LOSS.LOSS_QTY,0))  LOSS329
     , SUM(DECODE(LOSS.LOSS_CODE,'1084',LOSS.LOSS_QTY,0))  LOSS330
     , SUM(DECODE(LOSS.LOSS_CODE,'1085',LOSS.LOSS_QTY,0))  LOSS331
     , SUM(DECODE(LOSS.LOSS_CODE,'1086',LOSS.LOSS_QTY,0))  LOSS332
     , SUM(DECODE(LOSS.LOSS_CODE,'1087',LOSS.LOSS_QTY,0))  LOSS333
     , SUM(DECODE(LOSS.LOSS_CODE,'1088',LOSS.LOSS_QTY,0))  LOSS334
     , SUM(DECODE(LOSS.LOSS_CODE,'1089',LOSS.LOSS_QTY,0))  LOSS335
     , SUM(DECODE(LOSS.LOSS_CODE,'1801',LOSS.LOSS_QTY,0))  LOSS336
     , SUM(DECODE(LOSS.LOSS_CODE,'1802',LOSS.LOSS_QTY,0))  LOSS337
     , SUM(DECODE(LOSS.LOSS_CODE,'1803',LOSS.LOSS_QTY,0))  LOSS338
     , SUM(DECODE(LOSS.LOSS_CODE,'1804',LOSS.LOSS_QTY,0))  LOSS339
     , SUM(DECODE(LOSS.LOSS_CODE,'1805',LOSS.LOSS_QTY,0))  LOSS340
     , SUM(DECODE(LOSS.LOSS_CODE,'1806',LOSS.LOSS_QTY,0))  LOSS341
     , SUM(DECODE(LOSS.LOSS_CODE,'1807',LOSS.LOSS_QTY,0))  LOSS342
     , SUM(DECODE(LOSS.LOSS_CODE,'1075',LOSS.LOSS_QTY,0))  LOSS343
     , SUM(DECODE(LOSS.LOSS_CODE,'1074',LOSS.LOSS_QTY,0))  LOSS344
     , SUM(DECODE(LOSS.LOSS_CODE,'1073',LOSS.LOSS_QTY,0))  LOSS345
     , SUM(DECODE(LOSS.LOSS_CODE,'1071',LOSS.LOSS_QTY,0))  LOSS346
     , SUM(DECODE(LOSS.LOSS_CODE,'1072',LOSS.LOSS_QTY,0))  LOSS347
     , SUM(DECODE(LOSS.LOSS_CODE,'1090',LOSS.LOSS_QTY,0))  LOSS348

  FROM ( 
        SELECT  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', A.MAT_ID
             , A.LOT_ID AS LOT_ID 
             , TO_CHAR(TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')) AS IN_TIME 
             , TO_CHAR(TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss')) AS SHIP_TIME 
             , ROUND((TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss') - TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')),2) AS TAT 
             , (  
                SELECT MIN(QTY_1)   
                  FROM RWIPLOTHIS  
                 WHERE FACTORY = 'HMVA2'  
                   AND OLD_OPER >= 'A1000'  
                   AND LOT_ID=A.LOT_ID  
                   AND TRAN_CODE IN ('END','SHIP')    
                   AND HIST_DEL_FLAG = ' '               
               ) AS BE_OUT 
             , A.QTY_1 AS OUT_QTY 
          FROM DT A
             , MWIPMATDEF MAT
             , RWIPLOTSTS C 
         WHERE 1=1
           AND A.MAT_ID=MAT.MAT_ID 
           AND A.LOT_ID=C.LOT_ID 
           AND MAT.FACTORY = 'HMVA2' 
       ) SUMMERY
     , (
        SELECT LOT_ID
             , LOSS_CODE
             , SUM(LOSS_QTY) AS LOSS_QTY 
             , SUM(CASE WHEN OPER < 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) IL_LOSS_QTY 
             , SUM(CASE WHEN OPER >= 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) BE_LOSS_QTY 
          FROM (
                SELECT LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
                   AND LOT_ID IN ( 
                                  SELECT LOT_ID 
                                    FROM DT 
                                 ) 
                UNION ALL 
                SELECT /*+ INDEX (LSM, RWIPLOTLSM_IDX02) */SPL.FROM_TO_LOT_ID AS LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM LSM
                     , (
                        SELECT LOT_ID, FROM_TO_LOT_ID 
                          FROM RWIPLOTSTS 
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'  
                           AND LOT_TYPE = 'W' 
                           AND ADD_ORDER_ID_2 = 'MULTIEQP' 
                           AND FROM_TO_LOT_ID IN ( 
                                                  SELECT LOT_ID 
                                                    FROM DT 
                                                 ) 
                       ) SPL
                 WHERE 1=1
                   AND LSM.LOT_ID = SPL.LOT_ID
                   AND LSM.FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
               )
         GROUP BY LOT_ID,LOSS_CODE,LOSS_QTY
       ) LOSS
 WHERE SUMMERY.LOT_ID=LOSS.LOT_ID(+)
 GROUP BY  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
        , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME, SUMMERY.TAT 
        , SUMMERY.BE_OUT, SUMMERY.OUT_QTY 
 ORDER BY   ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID,SUMMERY.LOT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010405'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' '
     , SUMMERY.MAT_ID 
     , SUMMERY.LOT_ID 
     , SUMMERY.LOT_CMF_5 
     , SUMMERY.END_RES_ID 
     , SUMMERY.QTY_1 + SUMMERY.LOSS_QTY AS OPER_IN_QTY_1 
     , SUMMERY.QTY_1 
     , ROUND(SUMMERY.QTY_1/(SUMMERY.QTY_1 + SUMMERY.LOSS_QTY)*100,3) AS YIELD 
     , TO_CHAR(TO_DATE(SUMMERY.OPER_IN_TIME,'yyyymmddhh24miss')) AS OPER_IN_TIME 
     , TO_CHAR(TO_DATE(SUMMERY.TRAN_TIME,'yyyymmddhh24miss')) AS TRAN_TIME 
     , DECODE(SUMMERY.TRAN_CMF_18, ' ', ' ', SUMMERY.IN_USER_DESC || '(' || SUMMERY.TRAN_CMF_18 || ')') AS IN_USER_ID 
     , SUMMERY.END_USER_DESC || '(' || SUMMERY.TRAN_USER_ID || ')' AS END_USER_ID 
     , SUMMERY.LOT_CMF_10 
     , SUMMERY.TRAN_CMF_2 AS HD 
     , SUMMERY.TRAN_CMF_3 AS PGM 
     , SUMMERY.CRR_ID 
     , '' EPOXY 
     , '' LF 
     , '' GW 
     , '' MATAL_CARD 
     , '' EMC_LOT 
     , '' EMC_CAN 
     , '' EMC_TYPE 
     , SUMMERY.TRAN_COMMENT 
     , SUMMERY.QTY_2 
     , SUMMERY.TRAN_CMF_17 AS CV 
     , SUMMERY.LOT_CMF_7 AS ASSY_SITE 
     , SUMMERY.LOT_CMF_11 AS SHIP_SITE 
     , SUMMERY.TRAN_CMF_7 AS REWORK_BALL 
     , SUMMERY.TRAN_CMF_8 AS REWORK_CLEAN 
     , SUMMERY.TRAN_CMF_9 AS REWORK_PRINT 
     , LOT_CMF_3 
  FROM (  
        SELECT MAT_ID 
             , LOT_ID 
             , LOT_CMF_5 
             , LOT_CMF_10 
             , OLD_OPER AS OPER 
             , END_RES_ID 
             , TRAN_CMF_2 
             , TRAN_CMF_3 
             , NVL(( 
                    SELECT SUM(LOSS_QTY) AS LOSS_QTY 
                      FROM RWIPLOTLSM 
                     WHERE LOT_ID = A.LOT_ID 
                       AND OPER = A.OLD_OPER 
                     GROUP BY LOT_ID 
                  ), 0) AS LOSS_QTY 
             , CASE WHEN TRAN_CODE = 'SHIP' AND FACTORY = OLD_FACTORY THEN OLD_QTY_1 - QTY_1 
                    ELSE QTY_1 
               END QTY_1 
             , DECODE(START_TIME, ' ', OLD_OPER_IN_TIME, START_TIME) AS OPER_IN_TIME 
             , TRAN_TIME 
             , TRAN_USER_ID 
             , CRR_ID 
             , TRAN_COMMENT 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_USER_ID 
               ) AS END_USER_DESC 
             , QTY_2 
             , CASE WHEN A.OLD_OPER LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND (SELECT CASE WHEN (TRAN_CMF_4 = 'RFID TAG WRITE : SUCCESS') 
                                                                                            OR (RESV_FLAG_5 = 'Y' AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS') THEN 'RFID' 
                                                                                          ELSE ' ' 
                                                                                     END  
                                                                                FROM RWIPLOTHIS 
                                                                               WHERE FACTORY = A.OLD_FACTORY 
                                                                                 AND LOT_TYPE = A.OLD_LOT_TYPE 
                                                                                 AND LOT_ID = A.LOT_ID 
                                                                                 AND OPER = A.OLD_OPER 
                                                                                 AND TRAN_TIME < A.TRAN_TIME 
                                                                                 AND FACTORY = 'HMVA2' 
                                                                                 AND LOT_TYPE = 'W' 
                                                                                 AND RESV_FLAG_5 = 'Y' 
                                                                                 AND TRAN_CODE = 'START' 
                                                                                 AND HIST_DEL_FLAG = ' ') = 'RFID' THEN TRAN_CMF_18 || '[RFID]' 
                     WHEN A.OLD_OPER NOT LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND A.TRAN_CMF_19 = 'RFID' AND A.TRAN_USER_ID = 'EIS' THEN TRAN_CMF_18 || '[' || TRIM(TRAN_CMF_19) || ']' 
                     ELSE TRAN_CMF_18 
               END AS TRAN_CMF_18 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_CMF_18 
               ) AS IN_USER_DESC 
             , LOT_CMF_7 
             , TRAN_CMF_17 
             , LOT_CMF_11 
             , TRAN_CMF_7 
             , TRAN_CMF_8 
             , TRAN_CMF_9 
             , LOT_CMF_3 
          FROM RWIPLOTHIS A 
         WHERE 1=1 
           AND TRAN_TIME BETWEEN '20200401220000' AND '20200706215959' 
           AND OLD_FACTORY = 'HMVA2' 
           AND TRAN_CODE IN ('END','SHIP') 
           AND LOT_TYPE = 'W' 
           AND HIST_DEL_FLAG = ' ' 
           AND MAT_ID LIKE 'CSET702_WING_CWKC7' 
           AND OLD_OPER IN ('A0000')
           AND END_RES_ID LIKE '%'
           AND LOT_CMF_5 LIKE '%'
       ) SUMMERY 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND SUMMERY.MAT_ID = MAT.MAT_ID 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_TYPE = 'FG' 
 ORDER BY  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' ',SUMMERY.END_RES_ID,LOT_ID,MAT_ID 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020208'
-------------------------------------------------------------
