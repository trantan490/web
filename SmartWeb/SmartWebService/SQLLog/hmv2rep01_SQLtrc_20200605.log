SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , ROUND(SUM(TOTAL)/2, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200604', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200605', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200604' AND '20200605' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050502'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DECODE(COUNT(*), 1, 'TRUE', 'FALSE') FROM RWIPLOTSTS_BOH WHERE 1 =1 AND CUTOFF_DT = '2020060506' AND ROWNUM = 1
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_V AS (         
SELECT TOTAL_SEQ, DECODE(TOTAL_SEQ, 1, '일간', 2, '월간', 3, 'INPUT', 4, 'OUTPUT', 5, 'WIP') GUBUN, MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
     , SUM(DECODE(TO_CHAR(TOTAL_SEQ), SUBSTR(GUBUN, 1, 1), "20200601", 0))  "20200601"                          
     , SUM(DECODE(TO_CHAR(TOTAL_SEQ), SUBSTR(GUBUN, 1, 1), "20200602", 0))  "20200602"                          
     , SUM(DECODE(TO_CHAR(TOTAL_SEQ), SUBSTR(GUBUN, 1, 1), "20200603", 0))  "20200603"                          
     , SUM(DECODE(TO_CHAR(TOTAL_SEQ), SUBSTR(GUBUN, 1, 1), "20200604", 0))  "20200604"                          
     , SUM(DECODE(TO_CHAR(TOTAL_SEQ), SUBSTR(GUBUN, 1, 1), "20200605", 0))  "20200605"                          
  FROM (            
    SELECT DECODE(OPER,'A0000', '3_INPUT', 'AZ010', '4_DAILY','') GUBUN, MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
         , SUM("20200601") "20200601"         
         , SUM("20200602") "20200602"         
         , SUM("20200603") "20200603"         
         , SUM("20200604") "20200604"         
         , SUM("20200605") "20200605"         
      FROM (         
            SELECT OPER, MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
                 , DECODE(WORK_DATE, '20200601', DAILY, 0) "20200601"         
                 , DECODE(WORK_DATE, '20200602', DAILY, 0) "20200602"         
                 , DECODE(WORK_DATE, '20200603', DAILY, 0) "20200603"         
                 , DECODE(WORK_DATE, '20200604', DAILY, 0) "20200604"         
                 , DECODE(WORK_DATE, '20200605', DAILY, 0) "20200605"         
              FROM (         
                    SELECT MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '      , MAT_GRP_7 AS DENSITY    
                        , WORK_DATE         
                        , OPER         
                        , SUM((CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END)) DAILY         
                     FROM (         
                          SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3         
                               , SUM(END_LOT) AS END_LOT         
                               , SUM(END_QTY_1) AS END_QTY_1         
                               , SUM(END_QTY_2) AS END_QTY_2         
                               , SUM(SHIP_QTY_1) AS SHIP_QTY_1         
                               , SUM(SHIP_QTY_2) AS SHIP_QTY_2         
                            FROM (         
                                 SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3         
                                      , SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT) END_LOT         
                                      , SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) END_QTY_1         
                                      , SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2) END_QTY_2         
                                      , 0 SHIP_QTY_1         
                                      , 0 SHIP_QTY_2         
                                   FROM CSUMWIPMOV          
                                  WHERE OPER = 'A0000'         
                                  GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3         
                                 UNION ALL         
                                 SELECT CM_KEY_1 AS FACTORY, MAT_ID         
                                      , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010') OPER         
                                      , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3         
                                      , 0 END_LOT         
                                      , 0 END_QTY_1         
                                      , 0 END_QTY_2         
                                      , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1         
                                      , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2         
                                   FROM CSUMFACMOV          
                                  WHERE FACTORY NOT IN ('RETURN')         
                                  GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3         
                                 )         
                           GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3         
                          )A         
                          , MWIPMATDEF B         
                          , (SELECT KEY_1 AS KEY, DATA_3 AS VALUE         
                               FROM MGCMTBLDAT         
                              WHERE FACTORY = 'HMVA2'         
                                AND TABLE_NAME = 'H_DENSITY') DENSITY            
                     WHERE 1=1          
                       AND A.FACTORY  = 'HMVA2'          
                       AND A.FACTORY = B.FACTORY          
                       AND A.MAT_ID = B.MAT_ID                         
                       AND A.MAT_VER = 1          
                       AND B.MAT_VER = 1          
                       AND B.MAT_TYPE = 'FG'          
                       AND A.OPER IN ('A0000', 'AZ010')         
                       AND A.MAT_ID LIKE '%'           
                       AND A.OPER NOT IN ('00001','00002')          
                       AND A.WORK_DATE BETWEEN '20200601' AND '20200605'          
                       AND B.MAT_ID LIKE 'X%'
                       AND B.MAT_GRP_3 <> '-'
                       AND DENSITY.KEY = B.MAT_GRP_7         
                       AND (B.MAT_GRP_5 IN ('-','Merge')  OR B.MAT_GRP_5 LIKE 'Middle%')         
                     GROUP BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ' , MAT_GRP_7, WORK_DATE, OPER)         
    )         
     GROUP BY DECODE(OPER,'A0000', '3_INPUT', 'AZ010', '4_DAILY',''), MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
    UNION ALL         
    SELECT '5_WIP' GUBUN, MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '    
         , SUM( DECODE(WORK_DATE, '20200601', TTL, 0)) "20200601"         
         , SUM( DECODE(WORK_DATE, '20200602', TTL, 0)) "20200602"         
         , SUM( DECODE(WORK_DATE, '20200603', TTL, 0)) "20200603"         
         , SUM( DECODE(WORK_DATE, '20200604', TTL, 0)) "20200604"         
         , SUM( DECODE(WORK_DATE, '20200605', TTL, 0)) "20200605"         
      FROM (         
        SELECT MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8,  ' ',  ' ',  ' ',  ' '      , MAT.MAT_GRP_7 AS DENSITY   
             , WORK_DATE         
             , SUM(NVL((CASE WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16,0), 'Merge', NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16,0), 0)         
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16,0) ELSE 0 END         
                             ELSE NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16,0)         
                        END),0)) AS TTL         
          FROM (         
                SELECT *         
                  FROM MWIPMATDEF MAT          
                 WHERE 1 = 1          
                   AND MAT.FACTORY = 'HMVA2'          
                   AND MAT.DELETE_FLAG <> 'Y'          
                   AND (MAT_GRP_5 IN ('-','Merge')  OR MAT_GRP_5 LIKE 'Middle%')          
               ) MAT           
             , (          
                SELECT LOT.MAT_ID, MAT.MAT_GRP_3, WORK_DATE          
                     , SUM(DECODE(OPER_GRP_1, 'HMK2A', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V0          
                     , SUM(DECODE(OPER_GRP_1, 'B/G', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V1          
                     , SUM(DECODE(OPER_GRP_1, 'SAW', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V2          
                     , SUM(DECODE(OPER_GRP_1, 'S/P', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V3          
                     , SUM(DECODE(OPER_GRP_1, 'D/A', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V4          
                     , SUM(DECODE(OPER_GRP_1, 'W/B', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V5          
                     , SUM(DECODE(OPER_GRP_1, 'MOLD', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V6          
                     , SUM(DECODE(OPER_GRP_1, 'CURE', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V7          
                     , SUM(DECODE(OPER_GRP_1, 'M/K', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V8          
                     , SUM(DECODE(OPER_GRP_1, 'TRIM', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V9          
                     , SUM(DECODE(OPER_GRP_1, 'TIN', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V10         
                     , SUM(DECODE(OPER_GRP_1, 'S/B/A', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V11          
                     , SUM(DECODE(OPER_GRP_1, 'SIG', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V12          
                     , SUM(DECODE(OPER_GRP_1, 'AVI', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V13          
                     , SUM(DECODE(OPER_GRP_1, 'V/I', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V14          
                     , SUM(DECODE(OPER_GRP_1, 'HMK3A', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V15          
                     , SUM(DECODE(OPER_GRP_1, 'GATE', DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY), 0)) V16          
                  FROM (           
                        SELECT FACTORY, MAT_ID, OPER_GRP_1 , WORK_DATE         
                             , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1)          
                                        ELSE QTY_1          
                                   END) QTY          
                          FROM (          
                                SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, SUBSTR(A.CUTOFF_DT,1,8) WORK_DATE, A.QTY_1          
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT           
                                  FROM (SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, LOT_DEL_FLAG, LOT_CMF_5, CUTOFF_DT, QTY_1  FROM RWIPLOTSTS_BOH) A          
                                     , MWIPOPRDEF B          
                                 WHERE 1 = 1         
                                   AND A.CUTOFF_DT IN(  '2020060106' , '2020060206' , '2020060306' , '2020060406' , '2020060506'                                                     )         
                                   AND A.FACTORY = B.FACTORY(+)           
                                   AND A.OPER = B.OPER(+)           
                                   AND A.FACTORY = 'HMVA2'           
                                   AND A.LOT_TYPE = 'W'          
                                   AND A.LOT_DEL_FLAG = ' '          
                                   AND A.OPER NOT IN ('A0000', 'A0020', 'A0040') 
                               )          
                         GROUP BY FACTORY, MAT_ID, OPER_GRP_1, WORK_DATE          
                       ) LOT          
                     , MWIPMATDEF MAT          
                 WHERE 1 = 1          
                   AND LOT.FACTORY = MAT.FACTORY          
                   AND LOT.MAT_ID = MAT.MAT_ID          
                   AND MAT.DELETE_FLAG <> 'Y'          
                   AND MAT.MAT_GRP_2 <> '-'          
                 GROUP BY LOT.MAT_ID ,MAT.MAT_GRP_3, WORK_DATE         
               ) F         
             , (SELECT KEY_1 AS KEY, DATA_3 AS VALUE         
                  FROM MGCMTBLDAT         
                 WHERE FACTORY = 'HMVA2'         
                   AND TABLE_NAME = 'H_DENSITY') DENSITY          
         WHERE 1 = 1          
           AND MAT.MAT_ID = F.MAT_ID(+)         
           AND MAT.MAT_ID LIKE 'X%'
           AND MAT.MAT_GRP_3 <> '-'
           AND MAT.MAT_GRP_7 = DENSITY.KEY         
         GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8,  ' ',  ' ',  ' ',  ' ',  MAT.MAT_GRP_7, WORK_DATE         
        HAVING (         
                NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16), 0)           
               ) <> 0                 
         )                    
        GROUP BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
    ) , (SELECT ROWNUM TOTAL_SEQ FROM DUAL CONNECT BY LEVEL <= 5) SEQ             
 GROUP BY TOTAL_SEQ, DECODE(TOTAL_SEQ, 1, '일간', 2, '월간', 3, 'INPUT', 4, 'OUTPUT', 5, 'WIP') , MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '                  
)         
SELECT DECODE(MAT_GRP_1,'SE','SEC','HX','HYNIX','IM','iML','FC','FCI','IG','IMAGIS' , (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1)) CUSTOMER,  ' ', NVL(MAT_GRP_3, ' '),  ' ',  ' ', NVL(MAT_GRP_6, ' '), NVL(MAT_GRP_7, ' '), NVL(MAT_GRP_8, ' '),  ' ',  ' ',  ' ',  ' ', NVL(TO_CHAR(TARGET_TAT),' ') TAT, GUBUN  
     , NULLIF(TRIM(DECODE(RNUM, 1, TO_CHAR("20200601",'9999990D99'), 2, TO_CHAR("20200601",'9999990D99'), TO_CHAR("20200601",'999,999,999,999'))),'0')  "20200601"
     , NULLIF(TRIM(DECODE(RNUM, 1, TO_CHAR("20200602",'9999990D99'), 2, TO_CHAR("20200602",'9999990D99'), TO_CHAR("20200602",'999,999,999,999'))),'0')  "20200602"
     , NULLIF(TRIM(DECODE(RNUM, 1, TO_CHAR("20200603",'9999990D99'), 2, TO_CHAR("20200603",'9999990D99'), TO_CHAR("20200603",'999,999,999,999'))),'0')  "20200603"
     , NULLIF(TRIM(DECODE(RNUM, 1, TO_CHAR("20200604",'9999990D99'), 2, TO_CHAR("20200604",'9999990D99'), TO_CHAR("20200604",'999,999,999,999'))),'0')  "20200604"
     , NULLIF(TRIM(DECODE(RNUM, 1, TO_CHAR("20200605",'9999990D99'), 2, TO_CHAR("20200605",'9999990D99'), TO_CHAR("20200605",'999,999,999,999'))),'0')  "20200605"
  FROM (SELECT MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '         
             , (SELECT /*CUSTOMER, PKGAGE, MAT_GRP_4, MAT_GRP_3,*/ MIN(TAT)          
                  FROM (SELECT DISTINCT CUSTOMER, PKGAGE, MAT_GRP_4, MAT_GRP_3, TAT         
                          FROM (SELECT DISTINCT MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_CMF_10, MAT_ID         
                                  FROM MWIPMATDEF         
                                 WHERE FACTORY = 'HMVA2'         
                                   AND DELETE_FLAG = ' ') MAT,         
                               (SELECT KEY_2 AS CUSTOMER, KEY_3 AS PKGAGE, SUM(DATA_2) AS TAT         
                                  FROM MGCMTBLDAT         
                                 WHERE TABLE_NAME = 'H_RPT_TAT_HANA'         
                                   AND KEY_1 <= TO_CHAR(SYSDATE, 'YYYYMMDD')         
                                   AND DATA_1 >= TO_CHAR(SYSDATE, 'YYYYMMDD')         
                                 GROUP BY KEY_2, KEY_3         
                               ) TAT               
                         WHERE 1 = 1         
                           AND  MAT.MAT_GRP_1 = TAT.CUSTOMER         
                           AND ((MAT.MAT_GRP_4 IN ('FU', 'FD') AND MAT.MAT_GRP_3 = TAT.PKGAGE)          
                                 OR (REGEXP_LIKE(MAT.MAT_GRP_4, 'SD*|SS*') AND TAT.PKGAGE = SUBSTR(MAT.MAT_GRP_4, LENGTH(MAT.MAT_GRP_4) , 1)||MAT.MAT_GRP_3))         
                        )         
                  WHERE CUSTOMER = V.MAT_GRP_1         
                    AND PKGAGE = V.MAT_GRP_3) AS TARGET_TAT         
             , GUBUN 
         , CASE WHEN TOTAL_SEQ = '1' THEN ROUND(LEAD(SUM("20200601"), 4) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ) / NULLIF(LEAD(SUM("20200601"), 3) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ),0),2) ELSE ROUND(SUM("20200601")/1000,0) END "20200601"         
         , CASE WHEN TOTAL_SEQ = '1' THEN ROUND(LEAD(SUM("20200602"), 4) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ) / NULLIF(LEAD(SUM("20200602"), 3) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ),0),2) ELSE ROUND(SUM("20200602")/1000,0) END "20200602"         
         , CASE WHEN TOTAL_SEQ = '1' THEN ROUND(LEAD(SUM("20200603"), 4) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ) / NULLIF(LEAD(SUM("20200603"), 3) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ),0),2) ELSE ROUND(SUM("20200603")/1000,0) END "20200603"         
         , CASE WHEN TOTAL_SEQ = '1' THEN ROUND(LEAD(SUM("20200604"), 4) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ) / NULLIF(LEAD(SUM("20200604"), 3) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ),0),2) ELSE ROUND(SUM("20200604")/1000,0) END "20200604"         
         , CASE WHEN TOTAL_SEQ = '1' THEN ROUND(LEAD(SUM("20200605"), 4) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ) / NULLIF(LEAD(SUM("20200605"), 3) OVER(ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', TOTAL_SEQ),0),2) ELSE ROUND(SUM("20200605")/1000,0) END "20200605"         
             , ROW_NUMBER() OVER(PARTITION BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ' ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' ', DECODE(GUBUN, '일간', 1, '월간', 2, 'INPUT', 3, 'OUTPUT', 4, 'WIP', 5, 'OUTPUT_TOTAL', 6, 'WIP_TOTAL', 7, 0)) AS rnum 
  FROM (         
    SELECT TOTAL_SEQ, MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '     
         ,  GUBUN         
         , "20200601"         
         , "20200602"         
         , "20200603"         
         , "20200604"         
         , "20200605"         
      FROM TEMP_V         
       ) V         
 WHERE 1 = 1         
 GROUP BY GROUPING SETS(  (MAT_GRP_1, MAT_GRP_3, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, GUBUN,TOTAL_SEQ), (MAT_GRP_1, MAT_GRP_3, GUBUN,TOTAL_SEQ), (MAT_GRP_1, GUBUN,TOTAL_SEQ), (GUBUN,TOTAL_SEQ)  )            
 ) 
 WHERE RNUM <= 5  
 ORDER BY DECODE(MAT_GRP_1, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ', MAT_GRP_6, MAT_GRP_7, MAT_GRP_8,  ' ',  ' ',  ' ',  ' '     , DECODE(GUBUN, '일간', 1, '월간', 2, 'INPUT', 3, 'OUTPUT', 4, 'WIP', 5, 6)     

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050702'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050403'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT B.OPER, OPER_CMF_2
  FROM MWIPFLWOPR@RPTTOMES A
     , MWIPOPRDEF B
 WHERE 1=1 
   AND A.FACTORY = B.FACTORY 
   AND A.OPER = B.OPER 
   AND A.FACTORY = 'HMVA2'
   AND A.FLOW IN (
                SELECT DISTINCT FLOW
                  FROM RWIPLOTSTS A
                     , MWIPMATDEF B
                 WHERE 1=1
                   AND A.FACTORY = B.FACTORY
                   AND A.MAT_ID = B.MAT_ID
                   AND A.FACTORY = 'HMVA2'
                   AND A.LOT_DEL_FLAG = ' '
                   AND A.LOT_TYPE = 'W'
                   AND A.QTY_1 > 0
                   AND A.LOT_CMF_5 LIKE 'P%'
               )
 ORDER BY TO_NUMBER(OPER_CMF_2), OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
SELECT MAT_ID, OPER
     , SUM(QTY_1) AS WIP_QTY
     , SUM(TAT_QTY) AS TAT_QTY
     , SUM(SUM_TAT_QTY) AS SUM_TAT_QTY
  FROM (
        SELECT MAT_ID, OPER, LOT_ID, QTY_1
             , (SYSDATE - TO_DATE(OPER_IN_TIME, 'YYYYMMDDHH24MISS')) * QTY_1 AS TAT_QTY
             , DECODE(RESV_FIELD_1, ' ', 0, (SYSDATE - TO_DATE(RESV_FIELD_1, 'YYYYMMDDHH24MISS')) * QTY_1) AS SUM_TAT_QTY
          FROM RWIPLOTSTS 
         WHERE 1=1  
           AND FACTORY = 'HMVA2'
           AND LOT_DEL_FLAG = ' '
           AND LOT_TYPE = 'W'
           AND QTY_1 > 0
           AND LOT_CMF_5 LIKE 'P%'
       )
 GROUP BY MAT_ID, OPER
)
SELECT MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, GUBUN
     , ROUND(SUM(DECODE(OPER, 'A0000', DATA)), 1) AS A0000
     , ROUND(SUM(DECODE(OPER, 'A0020', DATA)), 1) AS A0020
     , ROUND(SUM(DECODE(OPER, 'A0040', DATA)), 1) AS A0040
     , ROUND(SUM(DECODE(OPER, 'A0200', DATA)), 1) AS A0200
     , ROUND(SUM(DECODE(OPER, 'A0300', DATA)), 1) AS A0300
     , ROUND(SUM(DECODE(OPER, 'A0250', DATA)), 1) AS A0250
     , ROUND(SUM(DECODE(OPER, 'A0400', DATA)), 1) AS A0400
     , ROUND(SUM(DECODE(OPER, 'A0500', DATA)), 1) AS A0500
     , ROUND(SUM(DECODE(OPER, 'A0550', DATA)), 1) AS A0550
     , ROUND(SUM(DECODE(OPER, 'A0600', DATA)), 1) AS A0600
     , ROUND(SUM(DECODE(OPER, 'A0800', DATA)), 1) AS A0800
     , ROUND(SUM(DECODE(OPER, 'A0950', DATA)), 1) AS A0950
     , ROUND(SUM(DECODE(OPER, 'A1000', DATA)), 1) AS A1000
     , ROUND(SUM(DECODE(OPER, 'A1100', DATA)), 1) AS A1100
     , ROUND(SUM(DECODE(OPER, 'A1150', DATA)), 1) AS A1150
     , ROUND(SUM(DECODE(OPER, 'A1960', DATA)), 1) AS A1960
     , ROUND(SUM(DECODE(OPER, 'A1840', DATA)), 1) AS A1840
     , ROUND(SUM(DECODE(OPER, 'A2070', DATA)), 1) AS A2070
     , ROUND(SUM(DECODE(OPER, 'A2050', DATA)), 1) AS A2050
     , ROUND(SUM(DECODE(OPER, 'A2100', DATA)), 1) AS A2100
     , ROUND(SUM(DECODE(OPER, 'A2300', DATA)), 1) AS A2300
     , ROUND(SUM(DECODE(OPER, 'A2350', DATA)), 1) AS A2350
     , ROUND(SUM(DECODE(OPER, 'AZ010', DATA)), 1) AS AZ010
  FROM (
        SELECT MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, GUBUN, OPER
             , NVL(CASE GUBUN WHEN 'WIP' THEN WIP_QTY
                          WHEN '공정 Target' THEN TARGET_TAT
                          WHEN '공정 TAT' THEN TAT
                          WHEN '누계 Target' THEN SUM_TARGET_TAT
                          WHEN '누계 TAT' THEN SUM_TAT
                          ELSE 0
               END, 0) DATA     
          FROM (
                SELECT MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, OPER
                     , ROUND(SUM(WIP_QTY) / 1000, 0) AS WIP_QTY
                     , AVG(TARGET_TAT) * 24 AS TARGET_TAT
                     , AVG(SUM_TARGET_TAT) * 24 AS SUM_TARGET_TAT
                     , SUM(TAT_QTY) / SUM(WIP_QTY) * 24 AS TAT
                     , SUM(SUM_TAT_QTY) / SUM(WIP_QTY) * 24 AS SUM_TAT
                  FROM (
                        SELECT A.*
                             , NVL(B.TAT_DAY + B.TAT_DAY_WAIT, 0) AS TARGET_TAT
                             , SUM(NVL(B.TAT_DAY + B.TAT_DAY_WAIT, 0)) OVER(PARTITION BY A.MAT_ID ORDER BY A.SEQ_NUM) AS SUM_TARGET_TAT
                             , C.WIP_QTY
                             , C.TAT_QTY
                             , C.SUM_TAT_QTY     
                          FROM (
                                SELECT A.*, B.OPER, B.SEQ_NUM
                                  FROM MWIPMATDEF A          
                                     , MWIPFLWOPR@RPTTOMES B
                                 WHERE 1=1
                                   AND A.FACTORY = B.FACTORY      
                                   AND A.FIRST_FLOW = B.FLOW   
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.DELETE_FLAG = ' '
                                   AND A.MAT_TYPE = 'FG'
                                   AND A.MAT_ID IN (SELECT DISTINCT MAT_ID FROM DT)
                               ) A
                             , CWIPSAPTAT@RPTTOMES B
                             , DT C
                         WHERE 1=1
                           AND A.VENDOR_ID = B.SAP_CODE(+)
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = B.OPER(+)
                           AND A.OPER = C.OPER(+)
                           AND B.FACTORY(+) = 'HMVA2'
                           AND B.RESV_FIELD_1(+) = ' '
                       )
                 GROUP BY MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, OPER
               ) A
             , (SELECT DECODE(LEVEL, 1, 'WIP', 2, '공정 Target', 3, '공정 TAT', 4, '누계 Target', 5, '누계 TAT') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5) B
       )
 GROUP BY MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, GUBUN
 ORDER BY MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID, DECODE(GUBUN, 'WIP', 1, '공정 Target', 2, '공정 TAT', 3, '누계 Target', 4, '누계 TAT', 5)

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050403'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT SYS_DATE     , SUBSTR(SYS_DATE, 5, 2)||'월 '||SUBSTR(SYS_DATE, 7, 2)||'일' AS CONV     , TO_CHAR(TO_DATE('20200605', 'YYYYMMDD'), 'DY') AS DY     , TO_CHAR(TO_DATE(SYS_DATE, 'YYYYMMDD'), 'DY') AS DY2  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200605')  ORDER BY SYS_DATE
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200605')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200605', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011012'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050702'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050502'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200605')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200605', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070402'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200605')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200605', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200605', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200605', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200605', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200605'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
