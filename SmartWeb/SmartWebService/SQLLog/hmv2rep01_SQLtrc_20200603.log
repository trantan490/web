SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010405'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020106'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
     , SUM(QTY) AS QTY
     , SUM(W_QTY) AS W_QTY
     , ROUND(AVG(UPEH),2) AS UPEH
     , ROUND(AVG(UPEH * CONVERT_QTY),2)
  FROM (
        SELECT END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10, MAT.MAT_ID,  ' '
             , OPER_IN_QTY_1 AS QTY
             , QTY_2 AS W_QTY
             , DECODE(UPEH,0,(SELECT UPEH FROM CRESMSTUPH@RPTTOMES WHERE OPER=HIS.OPER AND MODEL=RES.RES_GRP_6 AND UPEH_GROUP=RES.RES_GRP_7 AND RES.DELETE_FLAG=' '),UPEH) AS UPEH 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND OLD_OPER LIKE 'A04%' THEN TO_NUMBER(COMP_CNT)
                    WHEN OLD_OPER LIKE 'A06%' THEN NVL((SELECT MAX(TO_NUMBER(TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = 'HMVA2' AND SET_FLAG = 'Y' AND TCD_CMF_2 <> ' ' AND MAT_ID = HIS.MAT_ID AND OPER = OLD_OPER), MAT.MAT_GRP_6)
                    ELSE 1 
               END CONVERT_QTY 
          FROM CWIPLOTEND HIS 
             , MRASRESDEF RES 
             , VWIPMATDEF MAT 
         WHERE 1=1 
           AND RES.FACTORY = HIS.FACTORY 
           AND RES.RES_ID = HIS.END_RES_ID 
           AND HIS.FACTORY = MAT.FACTORY 
           AND HIS.MAT_ID = MAT.MAT_ID 
           AND RES.DELETE_FLAG = ' ' 
           AND MAT.DELETE_FLAG = ' ' 
           AND MAT.MAT_TYPE = 'FG' 
           AND HIS.FACTORY = 'HMVA2'
           AND HIS.TRAN_TIME BETWEEN '20200401220000' AND '20200603215959'
           AND HIS.END_RES_ID != ' ' 
       ) A
 GROUP BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '
 ORDER BY END_RES_ID, OLD_OPER,  ' ',  ' ',  ' ',  ' ',  ' ', CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020105'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT(LOSS.CODE) CODE
  FROM ( 
        SELECT FACTORY, END_RES_ID AS RES_ID, MAT_ID, LOT_ID, START_TIME AS IN_TIME, TRAN_TIME AS OUT_TIME 
          FROM CWIPLOTEND
         WHERE FACTORY  = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200401220000' AND '20200603215959'
           AND END_RES_ID != ' ' 
           AND LOT_TYPE = 'W' 
           AND START_RES_ID = END_RES_ID  
       ) LTH  
     , ( 
        SELECT LOSS_CODE CODE, LOSS_QTY QTY, FACTORY, RES_ID, MAT_ID, LOT_ID, TRAN_TIME 
          FROM RWIPLOTLSM 
         WHERE FACTORY  = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200401220000' AND '20200603215959'
           AND MAT_VER = 1   
           AND HIST_DEL_FLAG = ' ' 
       ) LOSS  
     , MRASRESDEF RES 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND RES.FACTORY = LTH.FACTORY 
   AND RES.RES_ID = LTH.RES_ID 
   AND MAT.FACTORY = LTH.FACTORY 
   AND MAT.MAT_ID = LTH.MAT_ID 
   AND RES.FACTORY  = 'HMVA2' 
   AND LTH.FACTORY = LOSS.FACTORY(+) 
   AND LTH.LOT_ID = LOSS.LOT_ID(+) 
   AND LTH.MAT_ID = LOSS.MAT_ID(+) 
   AND LTH.RES_ID = LOSS.RES_ID(+) 
   AND LOSS.TRAN_TIME(+) BETWEEN LTH.IN_TIME AND LTH.OUT_TIME 
   AND RES.RES_TYPE NOT IN ('DUMMY')
   AND LOSS.CODE<>' '
ORDER BY LOSS.CODE 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT SUBSTR(TRAN_TIME, 1, 8) WORK_DATE,  ' ', RES.RES_ID AS RES, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_1), '-') AS TEAM, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_2), '-') AS PART, RES.RES_GRP_3 AS EQP_TYPE, RES.RES_GRP_5 AS MAKER, RES.RES_GRP_6 AS MODEL, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_CUSTOMER' AND ROWNUM=1 AND KEY_1 = MAT.MAT_GRP_1), '-') AS CUSTOMER,  ' ', MAT.MAT_GRP_3 as Package,  ' ',  ' ',  ' ',  ' ',  ' '
     , RES.MAT_ID AS PRODUCT 
     , RES.LOT_ID AS LOT_ID 
     , NVL(RES.UPEH,0) AS STD_UPEH 
     , DECODE(RES.WORK_TIME,0,1,TRUNC(RES.OUT_QTY/RES.WORK_TIME)) AS REAL_UPEH 
     , RES.OUT_QTY + RES.LOSS AS IN_QTY 
     , RES.OUT_QTY 
     , RES.LOSS 
     , ROUND(RES.OUT_QTY / (RES.OUT_QTY + RES.LOSS) * 100, 2) AS YIELD 
     , TRUNC(WORK_TIME*60) WORK_TIME 
     , TO_CHAR(TO_DATE(RES.IN_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') IN_TIME 
     , TO_CHAR(TO_DATE(RES.OUT_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') OUT_TIME 
     , RES.MODULE_CNT 
     , SUM(DECODE(RES.CODE, '106', RES.QTY, 0)) AS LOSS_0 
     , SUM(DECODE(RES.CODE, '207', RES.QTY, 0)) AS LOSS_1 
     , SUM(DECODE(RES.CODE, '208', RES.QTY, 0)) AS LOSS_2 
     , SUM(DECODE(RES.CODE, '210', RES.QTY, 0)) AS LOSS_3 
     , SUM(DECODE(RES.CODE, '211', RES.QTY, 0)) AS LOSS_4 
     , SUM(DECODE(RES.CODE, '213', RES.QTY, 0)) AS LOSS_5 
     , SUM(DECODE(RES.CODE, '302', RES.QTY, 0)) AS LOSS_6 
     , SUM(DECODE(RES.CODE, '307', RES.QTY, 0)) AS LOSS_7 
     , SUM(DECODE(RES.CODE, '318', RES.QTY, 0)) AS LOSS_8 
     , SUM(DECODE(RES.CODE, '319', RES.QTY, 0)) AS LOSS_9 
     , SUM(DECODE(RES.CODE, '321', RES.QTY, 0)) AS LOSS_10 
     , SUM(DECODE(RES.CODE, '326', RES.QTY, 0)) AS LOSS_11 
     , SUM(DECODE(RES.CODE, '330', RES.QTY, 0)) AS LOSS_12 
     , SUM(DECODE(RES.CODE, '392', RES.QTY, 0)) AS LOSS_13 
     , SUM(DECODE(RES.CODE, '402', RES.QTY, 0)) AS LOSS_14 
     , SUM(DECODE(RES.CODE, '403', RES.QTY, 0)) AS LOSS_15 
     , SUM(DECODE(RES.CODE, '406', RES.QTY, 0)) AS LOSS_16 
     , SUM(DECODE(RES.CODE, '413', RES.QTY, 0)) AS LOSS_17 
     , SUM(DECODE(RES.CODE, '479', RES.QTY, 0)) AS LOSS_18 
     , SUM(DECODE(RES.CODE, '480', RES.QTY, 0)) AS LOSS_19 
     , SUM(DECODE(RES.CODE, '481', RES.QTY, 0)) AS LOSS_20 
     , SUM(DECODE(RES.CODE, '491', RES.QTY, 0)) AS LOSS_21 
     , SUM(DECODE(RES.CODE, '616', RES.QTY, 0)) AS LOSS_22 
     , SUM(DECODE(RES.CODE, '81', RES.QTY, 0)) AS LOSS_23 
     , SUM(DECODE(RES.CODE, '829', RES.QTY, 0)) AS LOSS_24 
     , SUM(DECODE(RES.CODE, '85', RES.QTY, 0)) AS LOSS_25 
  FROM (   
        SELECT LTH.TRAN_TIME, LTH.FACTORY, LTH.RES_ID, LTH.MAT_ID, LTH.LOT_ID, RES.RES_TYPE, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, RES.RES_GRP_7 
             , LTH.IN_QTY, LTH.OUT_QTY, LTH.LOSS 
             , LTH.WORK_TIME, LTH.UPEH 
             , LTH.IN_TIME, LTH.OUT_TIME 
             , LOSS.CODE 
             , LOSS.QTY 
             , LTH.OPER 
             , LTH.MODULE_CNT 
          FROM ( 
                SELECT START_TIME AS TRAN_TIME, FACTORY, END_RES_ID AS RES_ID, MAT_ID, LOT_ID 
                     , HIST_SEQ, OLD_OPER AS OPER, START_QTY_1 AS IN_QTY, QTY_1 AS OUT_QTY, LOSS_QTY_1 AS LOSS
                     , START_TIME AS IN_TIME, TRAN_TIME AS OUT_TIME
                     , (TO_DATE(TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(START_TIME, 'YYYYMMDDHH24MISS'))*24 WORK_TIME
                     , UPEH, TRAN_CMF_6 AS MODULE_CNT 
                  FROM CWIPLOTEND LOT 
                 WHERE FACTORY  = 'HMVA2' 
                   AND TRAN_TIME BETWEEN '20200401220000' AND '20200603215959'
                   AND END_RES_ID != ' ' 
                   AND START_RES_ID = END_RES_ID 
                   AND LOT_TYPE = 'W' 
               ) LTH  
             , ( 
                SELECT LOSS_CODE CODE, LOSS_QTY QTY, FACTORY, RES_ID, MAT_ID, LOT_ID, TRAN_TIME, HIST_SEQ 
                  FROM RWIPLOTLSM     
                 WHERE FACTORY  = 'HMVA2' 
                   AND TRAN_TIME BETWEEN '20200401220000' AND '20200603215959'
                   AND MAT_VER = 1   
                   AND HIST_DEL_FLAG = ' ' 
               ) LOSS  
             , MRASRESDEF RES 
         WHERE 1=1 
           AND RES.FACTORY = LTH.FACTORY 
           AND RES.RES_ID = LTH.RES_ID 
           AND RES.FACTORY  = 'HMVA2' 
           AND LTH.FACTORY = LOSS.FACTORY(+) 
           AND LTH.LOT_ID = LOSS.LOT_ID(+) 
           AND LTH.MAT_ID = LOSS.MAT_ID(+) 
           AND LTH.RES_ID = LOSS.RES_ID(+) 
           AND LOSS.TRAN_TIME(+) BETWEEN LTH.IN_TIME AND LTH.OUT_TIME 
           AND RES.RES_TYPE NOT IN ('DUMMY')
       ) RES 
       , MWIPMATDEF MAT 
 WHERE 1=1 
   AND RES.FACTORY = MAT.FACTORY 
   AND RES.MAT_ID = MAT.MAT_ID 
   AND MAT.MAT_TYPE = 'FG' 
 GROUP BY 1,  ' ', RES.RES_ID, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', RES.FACTORY, RES.UPEH, RES.MAT_ID, RES.LOT_ID, RES.IN_QTY, RES.OUT_QTY, RES.LOSS, RES.WORK_TIME, RES.IN_TIME, RES.OUT_TIME, RES.MODULE_CNT 
 ORDER BY 1,  ' ', RES.RES_ID, RES.RES_GRP_1, RES.RES_GRP_2, RES.RES_GRP_3, RES.RES_GRP_5, RES.RES_GRP_6, MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', RES.FACTORY, RES.UPEH, RES.MAT_ID, RES.LOT_ID, RES.IN_QTY, RES.OUT_QTY, RES.LOSS, RES.WORK_TIME, RES.IN_TIME, RES.OUT_TIME, RES.MODULE_CNT 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PQC030202'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT RES_ID Code, '' Data
  FROM MRASRESDEF
 WHERE FACTORY = 'HMVA2' 
   AND DELETE_FLAG = ' '   AND RES_ID NOT LIKE '%$%'   AND RES_CMF_9 = 'Y'   AND RES_CMF_20 <= TO_CHAR(SYSDATE,'YYYYMMDD') ORDER BY RES_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT UNIQUE A.MAT_GRP_1 Code, NVL(B.DATA_1, ' ') Data
  FROM MWIPMATDEF A, MGCMTBLDAT B
 WHERE A.FACTORY = B.FACTORY(+)
   AND A.MAT_GRP_1 = B.KEY_1(+)
   AND B.TABLE_NAME(+) = 'H_CUSTOMER'
   AND A.MAT_TYPE = 'FG'
   AND A.FACTORY = 'HMVA2' 
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT UNIQUE A.MAT_GRP_3 Code, NVL(B.DATA_1, ' ') Data
  FROM MWIPMATDEF A, MGCMTBLDAT B
 WHERE A.FACTORY = B.FACTORY(+)
   AND A.MAT_GRP_3 = B.KEY_1(+)
   AND B.TABLE_NAME(+) = 'H_PACKAGE'
   AND A.MAT_TYPE = 'FG'
   AND A.FACTORY = 'HMVA2' 
   AND A.MAT_GRP_1 LIKE '%' 
   AND A.MAT_GRP_2 LIKE '%' 
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT UNIQUE A.MAT_GRP_7 Code, NVL(B.DATA_1, ' ') Data
  FROM MWIPMATDEF A, MGCMTBLDAT B
 WHERE A.FACTORY = B.FACTORY(+)
   AND A.MAT_GRP_7 = B.KEY_1(+)
   AND B.TABLE_NAME(+) = 'H_DENSITY'
   AND A.MAT_TYPE = 'FG'
   AND A.FACTORY = 'HMVA2' 
   AND A.MAT_GRP_1 LIKE '%' 
   AND A.MAT_GRP_2 LIKE '%' 
   AND A.MAT_GRP_3 LIKE '%' 
   AND A.MAT_GRP_4 LIKE '%' 
   AND A.MAT_GRP_5 LIKE '%' 
   AND A.MAT_GRP_6 LIKE '%' 
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT UNIQUE A.MAT_GRP_8 Code, NVL(B.DATA_1, ' ') Data
  FROM MWIPMATDEF A, MGCMTBLDAT B
 WHERE A.FACTORY = B.FACTORY(+)
   AND A.MAT_GRP_8 = B.KEY_1(+)
   AND B.TABLE_NAME(+) = 'H_GENERATION'
   AND A.MAT_TYPE = 'FG'
   AND A.FACTORY = 'HMVA2' 
   AND A.MAT_GRP_1 LIKE '%' 
   AND A.MAT_GRP_2 LIKE '%' 
   AND A.MAT_GRP_3 LIKE '%' 
   AND A.MAT_GRP_4 LIKE '%' 
   AND A.MAT_GRP_5 LIKE '%' 
   AND A.MAT_GRP_6 LIKE '%' 
   AND A.MAT_GRP_7 LIKE '%' 
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT UNIQUE A.MAT_GRP_6 Code, NVL(B.DATA_1, ' ') Data
  FROM MWIPMATDEF A, MGCMTBLDAT B
 WHERE A.FACTORY = B.FACTORY(+)
   AND A.MAT_GRP_6 = B.KEY_1(+)
   AND B.TABLE_NAME(+) = 'H_LEAD_COUNT'
   AND A.MAT_TYPE = 'FG'
   AND A.FACTORY = 'HMVA2' 
   AND A.MAT_GRP_1 LIKE '%' 
   AND A.MAT_GRP_2 LIKE '%' 
   AND A.MAT_GRP_3 LIKE '%' 
   AND A.MAT_GRP_4 LIKE '%' 
   AND A.MAT_GRP_5 LIKE '%' 
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011011'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010405'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010304'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010307'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010305'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER AS STEP, A.MAT_CMF_10 AS PIN_TYPE, A.MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , A.LOT_ID 
     , A.LOT_CMF_5 
     , A.STATUS 
     , A.HOLD_CODE 
     , A.HOLD_DESC 
     , A.CREATE_DAYDIFF 
     , A.ISSUE_DAYDIFF 
     , A.OPER_IN_DAYDIFF 
     , A.QTY_1 
     , A.LOT_CMF_14 
     , A.ISSUE_TIME 
     , A.OPER_IN_TIME 
     , A.LAST_COMMENT 
     , A.LOT_CMF_7 
     , CASE WHEN A.S_TIME IS NOT NULL AND A.S_TIME <= A.E_TIME THEN TRUNC(TO_DATE(A.E_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.S_TIME, 'YYYYMMDDHH24MISS'), 2) END AS DA_DAYDIFF
  FROM ( 
        SELECT C.* 
             , A.OPER  
             , A.LOT_ID  
             , A.LOT_CMF_5  
             , CASE WHEN HOLD_FLAG = 'Y' THEN 'HOLD'
                    ELSE DECODE(A.LOT_STATUS, 'PROC', 'RUN', A.LOT_STATUS)   
               END AS STATUS 
             , A.HOLD_CODE 
             , DECODE(A.HOLD_CODE, ' ', ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY=A.FACTORY AND TABLE_NAME = 'HOLD_CODE' AND KEY_1 = A.HOLD_CODE AND ROWNUM=1)) HOLD_DESC 
             , TRUNC(TO_DATE('20200603133839','YYYYMMDDHH24MISS') - DECODE(A.LOT_CMF_14, ' ', TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS')), 2) AS CREATE_DAYDIFF 
             , TRUNC(TO_DATE('20200603133839','YYYYMMDDHH24MISS') - DECODE(A.RESV_FIELD_1, ' ', SYSDATE, TO_DATE(A.RESV_FIELD_1,'YYYYMMDDHH24MISS')), 2) AS ISSUE_DAYDIFF 
             , TRUNC(TO_DATE('20200603133839','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_IN_DAYDIFF 
             , A.QTY_1  
             , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS') AS LOT_CMF_14 
             , DECODE(A.RESV_FIELD_1, ' ', ' ', TO_CHAR(TO_DATE(A.RESV_FIELD_1, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS ISSUE_TIME 
             , DECODE(A.OPER_IN_TIME, ' ', ' ', TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS OPER_IN_TIME 
             , A.LAST_COMMENT
             , A.LOT_CMF_7
             , (SELECT TRAN_TIME FROM RWIPLOTHIS WHERE FACTORY = 'HMVA2' AND HIST_DEL_FLAG = ' ' AND TRAN_CODE = 'END' AND OLD_OPER = 'A0250' AND LOT_ID = DECODE(D.FROM_TO_LOT_ID, NULL, A.LOT_ID, D.FROM_TO_LOT_ID)) AS S_TIME 
             , A.CREATE_TIME AS E_TIME 
          FROM RWIPLOTSTS A, MWIPMATDEF C 
             , (SELECT * FROM RWIPLOTSPL WHERE FACTORY = 'HMVA2' AND (OPER LIKE 'A04%' OR OPER = 'A0333') AND FROM_TO_FLAG = 'T') D
         WHERE 1=1
           AND A.FACTORY = C.FACTORY 
           AND A.MAT_ID = C.MAT_ID 
           AND A.LOT_ID = D.LOT_ID(+) 
           AND A.FACTORY  = 'HMVA2'  
           AND A.OPER NOT IN ('00001','00002') 
           AND A.MAT_VER = 1
           AND A.LOT_DEL_FLAG = ' ' 
           AND A.LOT_TYPE = 'W' 
           AND A.OPER IN ('A0600')
           AND TRUNC(TO_DATE('20200603133839','YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) > 2
       ) A 
ORDER BY A.OPER, A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.LOT_ID, A.LOT_CMF_5, A.STATUS, A.HOLD_CODE, A.LOT_CMF_14, A.OPER_IN_TIME, A.LAST_COMMENT, A.LOT_CMF_7 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010405'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' '
     , SUMMERY.MAT_ID 
     , SUMMERY.LOT_ID 
     , SUMMERY.LOT_CMF_5 
     , SUMMERY.END_RES_ID 
     , SUMMERY.QTY_1 + SUMMERY.LOSS_QTY AS OPER_IN_QTY_1 
     , SUMMERY.QTY_1 
     , ROUND(SUMMERY.QTY_1/(SUMMERY.QTY_1 + SUMMERY.LOSS_QTY)*100,3) AS YIELD 
     , TO_CHAR(TO_DATE(SUMMERY.OPER_IN_TIME,'yyyymmddhh24miss')) AS OPER_IN_TIME 
     , TO_CHAR(TO_DATE(SUMMERY.TRAN_TIME,'yyyymmddhh24miss')) AS TRAN_TIME 
     , DECODE(SUMMERY.TRAN_CMF_18, ' ', ' ', SUMMERY.IN_USER_DESC || '(' || SUMMERY.TRAN_CMF_18 || ')') AS IN_USER_ID 
     , SUMMERY.END_USER_DESC || '(' || SUMMERY.TRAN_USER_ID || ')' AS END_USER_ID 
     , SUMMERY.LOT_CMF_10 
     , SUMMERY.TRAN_CMF_2 AS HD 
     , SUMMERY.TRAN_CMF_3 AS PGM 
     , SUMMERY.CRR_ID 
     , '' EPOXY 
     , '' LF 
     , '' GW 
     , '' MATAL_CARD 
     , '' EMC_LOT 
     , '' EMC_CAN 
     , '' EMC_TYPE 
     , SUMMERY.TRAN_COMMENT 
     , SUMMERY.QTY_2 
     , SUMMERY.TRAN_CMF_17 AS CV 
     , SUMMERY.LOT_CMF_7 AS ASSY_SITE 
     , SUMMERY.LOT_CMF_11 AS SHIP_SITE 
     , SUMMERY.TRAN_CMF_7 AS REWORK_BALL 
     , SUMMERY.TRAN_CMF_8 AS REWORK_CLEAN 
     , SUMMERY.TRAN_CMF_9 AS REWORK_PRINT 
     , LOT_CMF_3 
  FROM (  
        SELECT MAT_ID 
             , LOT_ID 
             , LOT_CMF_5 
             , LOT_CMF_10 
             , OLD_OPER AS OPER 
             , END_RES_ID 
             , TRAN_CMF_2 
             , TRAN_CMF_3 
             , NVL(( 
                    SELECT SUM(LOSS_QTY) AS LOSS_QTY 
                      FROM RWIPLOTLSM 
                     WHERE LOT_ID = A.LOT_ID 
                       AND OPER = A.OLD_OPER 
                     GROUP BY LOT_ID 
                  ), 0) AS LOSS_QTY 
             , CASE WHEN TRAN_CODE = 'SHIP' AND FACTORY = OLD_FACTORY THEN OLD_QTY_1 - QTY_1 
                    ELSE QTY_1 
               END QTY_1 
             , DECODE(START_TIME, ' ', OLD_OPER_IN_TIME, START_TIME) AS OPER_IN_TIME 
             , TRAN_TIME 
             , TRAN_USER_ID 
             , CRR_ID 
             , TRAN_COMMENT 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_USER_ID 
               ) AS END_USER_DESC 
             , QTY_2 
             , CASE WHEN A.OLD_OPER LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND (SELECT CASE WHEN (TRAN_CMF_4 = 'RFID TAG WRITE : SUCCESS') 
                                                                                            OR (RESV_FLAG_5 = 'Y' AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS') THEN 'RFID' 
                                                                                          ELSE ' ' 
                                                                                     END  
                                                                                FROM RWIPLOTHIS 
                                                                               WHERE FACTORY = A.OLD_FACTORY 
                                                                                 AND LOT_TYPE = A.OLD_LOT_TYPE 
                                                                                 AND LOT_ID = A.LOT_ID 
                                                                                 AND OPER = A.OLD_OPER 
                                                                                 AND TRAN_TIME < A.TRAN_TIME 
                                                                                 AND FACTORY = 'HMVA2' 
                                                                                 AND LOT_TYPE = 'W' 
                                                                                 AND RESV_FLAG_5 = 'Y' 
                                                                                 AND TRAN_CODE = 'START' 
                                                                                 AND HIST_DEL_FLAG = ' ') = 'RFID' THEN TRAN_CMF_18 || '[RFID]' 
                     WHEN A.OLD_OPER NOT LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND A.TRAN_CMF_19 = 'RFID' AND A.TRAN_USER_ID = 'EIS' THEN TRAN_CMF_18 || '[' || TRIM(TRAN_CMF_19) || ']' 
                     ELSE TRAN_CMF_18 
               END AS TRAN_CMF_18 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_CMF_18 
               ) AS IN_USER_DESC 
             , LOT_CMF_7 
             , TRAN_CMF_17 
             , LOT_CMF_11 
             , TRAN_CMF_7 
             , TRAN_CMF_8 
             , TRAN_CMF_9 
             , LOT_CMF_3 
          FROM RWIPLOTHIS A 
         WHERE 1=1 
           AND TRAN_TIME BETWEEN '20200602220000' AND '20200603215959' 
           AND OLD_FACTORY = 'HMVA2' 
           AND TRAN_CODE IN ('END','SHIP') 
           AND LOT_TYPE = 'W' 
           AND HIST_DEL_FLAG = ' ' 
           AND OLD_OPER IN ('A0020')
           AND END_RES_ID LIKE '%'
           AND LOT_CMF_5 LIKE '%'
       ) SUMMERY 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND SUMMERY.MAT_ID = MAT.MAT_ID 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_TYPE = 'FG' 
 ORDER BY  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' ',SUMMERY.END_RES_ID,LOT_ID,MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' '
     , SUMMERY.MAT_ID 
     , SUMMERY.LOT_ID 
     , SUMMERY.LOT_CMF_5 
     , SUMMERY.END_RES_ID 
     , SUMMERY.QTY_1 + SUMMERY.LOSS_QTY AS OPER_IN_QTY_1 
     , SUMMERY.QTY_1 
     , ROUND(SUMMERY.QTY_1/(SUMMERY.QTY_1 + SUMMERY.LOSS_QTY)*100,3) AS YIELD 
     , TO_CHAR(TO_DATE(SUMMERY.OPER_IN_TIME,'yyyymmddhh24miss')) AS OPER_IN_TIME 
     , TO_CHAR(TO_DATE(SUMMERY.TRAN_TIME,'yyyymmddhh24miss')) AS TRAN_TIME 
     , DECODE(SUMMERY.TRAN_CMF_18, ' ', ' ', SUMMERY.IN_USER_DESC || '(' || SUMMERY.TRAN_CMF_18 || ')') AS IN_USER_ID 
     , SUMMERY.END_USER_DESC || '(' || SUMMERY.TRAN_USER_ID || ')' AS END_USER_ID 
     , SUMMERY.LOT_CMF_10 
     , SUMMERY.TRAN_CMF_2 AS HD 
     , SUMMERY.TRAN_CMF_3 AS PGM 
     , SUMMERY.CRR_ID 
     , '' EPOXY 
     , '' LF 
     , '' GW 
     , '' MATAL_CARD 
     , '' EMC_LOT 
     , '' EMC_CAN 
     , '' EMC_TYPE 
     , SUMMERY.TRAN_COMMENT 
     , SUMMERY.QTY_2 
     , SUMMERY.TRAN_CMF_17 AS CV 
     , SUMMERY.LOT_CMF_7 AS ASSY_SITE 
     , SUMMERY.LOT_CMF_11 AS SHIP_SITE 
     , SUMMERY.TRAN_CMF_7 AS REWORK_BALL 
     , SUMMERY.TRAN_CMF_8 AS REWORK_CLEAN 
     , SUMMERY.TRAN_CMF_9 AS REWORK_PRINT 
     , LOT_CMF_3 
  FROM (  
        SELECT MAT_ID 
             , LOT_ID 
             , LOT_CMF_5 
             , LOT_CMF_10 
             , OLD_OPER AS OPER 
             , END_RES_ID 
             , TRAN_CMF_2 
             , TRAN_CMF_3 
             , NVL(( 
                    SELECT SUM(LOSS_QTY) AS LOSS_QTY 
                      FROM RWIPLOTLSM 
                     WHERE LOT_ID = A.LOT_ID 
                       AND OPER = A.OLD_OPER 
                     GROUP BY LOT_ID 
                  ), 0) AS LOSS_QTY 
             , CASE WHEN TRAN_CODE = 'SHIP' AND FACTORY = OLD_FACTORY THEN OLD_QTY_1 - QTY_1 
                    ELSE QTY_1 
               END QTY_1 
             , DECODE(START_TIME, ' ', OLD_OPER_IN_TIME, START_TIME) AS OPER_IN_TIME 
             , TRAN_TIME 
             , TRAN_USER_ID 
             , CRR_ID 
             , TRAN_COMMENT 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_USER_ID 
               ) AS END_USER_DESC 
             , QTY_2 
             , CASE WHEN A.OLD_OPER LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND (SELECT CASE WHEN (TRAN_CMF_4 = 'RFID TAG WRITE : SUCCESS') 
                                                                                            OR (RESV_FLAG_5 = 'Y' AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS') THEN 'RFID' 
                                                                                          ELSE ' ' 
                                                                                     END  
                                                                                FROM RWIPLOTHIS 
                                                                               WHERE FACTORY = A.OLD_FACTORY 
                                                                                 AND LOT_TYPE = A.OLD_LOT_TYPE 
                                                                                 AND LOT_ID = A.LOT_ID 
                                                                                 AND OPER = A.OLD_OPER 
                                                                                 AND TRAN_TIME < A.TRAN_TIME 
                                                                                 AND FACTORY = 'HMVA2' 
                                                                                 AND LOT_TYPE = 'W' 
                                                                                 AND RESV_FLAG_5 = 'Y' 
                                                                                 AND TRAN_CODE = 'START' 
                                                                                 AND HIST_DEL_FLAG = ' ') = 'RFID' THEN TRAN_CMF_18 || '[RFID]' 
                     WHEN A.OLD_OPER NOT LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND A.TRAN_CMF_19 = 'RFID' AND A.TRAN_USER_ID = 'EIS' THEN TRAN_CMF_18 || '[' || TRIM(TRAN_CMF_19) || ']' 
                     ELSE TRAN_CMF_18 
               END AS TRAN_CMF_18 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_CMF_18 
               ) AS IN_USER_DESC 
             , LOT_CMF_7 
             , TRAN_CMF_17 
             , LOT_CMF_11 
             , TRAN_CMF_7 
             , TRAN_CMF_8 
             , TRAN_CMF_9 
             , LOT_CMF_3 
          FROM RWIPLOTHIS A 
         WHERE 1=1 
           AND TRAN_TIME BETWEEN '20200602220000' AND '20200603215959' 
           AND OLD_FACTORY = 'HMVA2' 
           AND TRAN_CODE IN ('END','SHIP') 
           AND LOT_TYPE = 'W' 
           AND HIST_DEL_FLAG = ' ' 
           AND OLD_OPER LIKE '%'
           AND END_RES_ID LIKE '%'
           AND LOT_CMF_5 LIKE '%'
       ) SUMMERY 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND SUMMERY.MAT_ID = MAT.MAT_ID 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_TYPE = 'FG' 
 ORDER BY  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' ',SUMMERY.END_RES_ID,LOT_ID,MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010701'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID AS MAT_ID,  ' '
     , HLD.LOT_ID 
     , HLD.OPER 
     , TO_CHAR(TO_DATE(HLD.HOLD_TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS SHIP_TIME
     , HLD.QTY_1 AS SHIP_QTY 
     , DECODE(TRIM(HLD.RELEASE_TRAN_TIME), NULL, NULL, TO_CHAR(TO_DATE(HLD.RELEASE_TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')) AS RECV_TIME 
     , DECODE(TRIM(HLD.RELEASE_TRAN_TIME), NULL, 0, HLD.QTY_1) AS RECV_QTY 
     , TRUNC(DECODE(TRIM(HLD.RELEASE_TRAN_TIME), NULL, SYSDATE,TO_DATE(HLD.RELEASE_TRAN_TIME,'YYYYMMDDHH24MISS')) - TO_DATE(HLD.HOLD_TRAN_TIME,'YYYYMMDDHH24MISS'),2) AS TAT 
     , DECODE(TRIM(HLD.RELEASE_TRAN_TIME), NULL, HLD.QTY_1, 0) AS CUST_QTY 
     , ' ' AS LOSS_QTY
  FROM RWIPLOTHLD HLD 
     , MWIPMATDEF MAT
 WHERE 1=1
   AND HLD.FACTORY = MAT.FACTORY 
   AND HLD.MAT_ID = MAT.MAT_ID 
   AND HLD.FACTORY = 'HMVA2' 
   AND HLD.HIST_DEL_FLAG = ' ' 
   AND HLD.HOLD_CODE IN ('S0', 'H55', 'H74') 
   AND HLD.OPER IN ('A1050', 'A1440', 'A1450', 'A1460') 
   AND HLD.HOLD_TRAN_TIME BETWEEN '20200602220000' AND '20200603215959' 
 ORDER BY  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_ID,  ' ', SHIP_TIME 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011010'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202006', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_VIEW AS (
SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS FAMILY, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' '
     , DECODE(SEQ, 1, '대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율') GUBUN, SEQ GUBUN_SEQ 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA_TTL, 0 ) ) DA_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB_TTL, 0 ) ) WB_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA1, 0 ) ) DA1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA2, 0 ) ) DA2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA3, 0 ) ) DA3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA4, 0 ) ) DA4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA5, 0 ) ) DA5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA6, 0 ) ) DA6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA7, 0 ) ) DA7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA8, 0 ) ) DA8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA9, 0 ) ) DA9 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB1, 0 ) ) WB1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB2, 0 ) ) WB2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB3, 0 ) ) WB3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB4, 0 ) ) WB4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB5, 0 ) ) WB5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB6, 0 ) ) WB6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB7, 0 ) ) WB7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB8, 0 ) ) WB8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB9, 0 ) ) WB9 
  FROM ( 
        SELECT B.MAT_GRP_1,  B.MAT_GRP_2,  B.MAT_GRP_3,  B.MAT_GRP_4,  B.MAT_GRP_5,  B.MAT_GRP_6,  B.MAT_GRP_7,  B.MAT_GRP_8,  B.MAT_GRP_9,  B.MAT_GRP_10,  B.MAT_CMF_10, B.MAT_CMF_11, GUBUN,  DA_TTL, WB_TTL, DA1, WB1, DA2, WB2, DA3, WB3, DA4, WB4, DA5, WB5, DA6, WB6, DA7, WB7, DA8, WB8, DA9, WB9 
          FROM ( 
                SELECT DECODE(V.V_COL,'RES', '1_설비댓수', '2_RUN_CNT') GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) DA_TTL 
                     , SUM( CASE WHEN OPER LIKE 'A060%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) WB_TTL 
                     , SUM( DECODE(OPER, 'A0400', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0401', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0) ) DA1 
                     , SUM( DECODE(OPER, 'A0600', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0601', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB1 
                     , SUM( DECODE(OPER, 'A0402', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA2, SUM( DECODE(OPER, 'A0602', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB2 
                     , SUM( DECODE(OPER, 'A0403', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA3,SUM( DECODE(OPER, 'A0603', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB3 
                     , SUM( DECODE(OPER, 'A0404', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA4, SUM( DECODE(OPER, 'A0604', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB4 
                     , SUM( DECODE(OPER, 'A0405', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA5, SUM( DECODE(OPER, 'A0605', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB5 
                     , SUM( DECODE(OPER, 'A0406', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA6, SUM( DECODE(OPER, 'A0606', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB6 
                     , SUM( DECODE(OPER, 'A0407', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA7, SUM( DECODE(OPER, 'A0607', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB7 
                     , SUM( DECODE(OPER, 'A0408', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA8, SUM( DECODE(OPER, 'A0608', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB8 
                     , SUM( DECODE(OPER, 'A0409', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA9, SUM( DECODE(OPER, 'A0609', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_STS_2 MAT_ID, RES_GRP_6 RES_MODEL, RES_GRP_7 UPEH_GROUP, RES_STS_8 OPER , COUNT(RES_ID) RES_CNT, NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(LOT.LOT_ID, '-'), '-', 0, 1))), 0)  RUN_CNT 
                          FROM MRASRESDEF RAS 
                             , ( 
                                SELECT * 
                                  FROM MWIPLOTSTS LOT 
                                 WHERE LOT.FACTORY = 'HMVA2' 
                                   AND LOT.LOT_TYPE = 'W' AND LOT_DEL_FLAG = ' ' 
                                   AND LOT.LOT_CMF_5 LIKE 'P%' 
                                   AND (LOT.OPER LIKE 'A040%' OR LOT.OPER LIKE 'A060%' ) 
                                   AND LOT.LOT_STATUS = 'PROC' 
                               ) LOT 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.FACTORY = LOT.FACTORY(+) 
                           AND RES_ID = LOT.START_RES_ID(+) 
                           AND RES_CMF_9 = 'Y' 
                           AND RES_CMF_7 = 'Y' 
                           AND DELETE_FLAG  = ' ' 
                           AND RES_TYPE  = 'EQUIPMENT' 
                           AND (RES_STS_8 LIKE 'A040%' OR RES_STS_8 LIKE 'A060%' ) 
                           AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RES_STS_2, RES_GRP_6, RES_GRP_7, RES_STS_8 
                       ) 
                     , (SELECT 'RES' V_COL FROM DUAL UNION ALL SELECT 'RUN' FROM DUAL) V 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY  MAT_ID, V.V_COL 
                 UNION ALL 
                SELECT '3_CAPA' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_DA_TTL 
                     , SUM( CASE WHEN  OPER LIKE 'A060%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_WB_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400',  'A0401' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END ) RES_CNT_DA1 
                     , SUM( CASE WHEN OPER IN ( 'A0600',  'A0601' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END )   RES_CNT_WB1 
                     , SUM( DECODE( OPER, 'A0402',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA2, SUM( DECODE( OPER, 'A0602', RES_CNT *  NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB2 
                     , SUM( DECODE( OPER, 'A0403',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA3, SUM( DECODE( OPER, 'A0603',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB3 
                     , SUM( DECODE( OPER, 'A0404',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA4, SUM( DECODE( OPER, 'A0604',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB4 
                     , SUM( DECODE( OPER, 'A0405',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA5, SUM( DECODE( OPER, 'A0605',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB5 
                     , SUM( DECODE( OPER, 'A0406',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA6, SUM( DECODE( OPER, 'A0606',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB6 
                     , SUM( DECODE( OPER, 'A0407',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA7, SUM( DECODE( OPER, 'A0607',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB7 
                     , SUM( DECODE( OPER, 'A0408',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA8, SUM( DECODE( OPER, 'A0608',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB8 
                     , SUM( DECODE( OPER, 'A0409',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA9, SUM( DECODE( OPER, 'A0609',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_GRP_6 RES_MODEL, RAS.RES_STS_2 MAT_ID, RAS.RES_STS_8 OPER , COUNT(RES_ID) RES_CNT 
                             , MAX(DECODE(SUBSTR(RAS.RES_STS_8, 1, 3), 'A04', NVL(UPEH.UPEH, 0) * 0.68,  NVL(UPEH.UPEH, 0) * 0.71 )  ) UPEH 
                             , 1 CONV_RATE 
                          FROM MRASRESDEF RAS
                             , CRASUPHDEF UPEH
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.RES_CMF_9 = 'Y' 
                           AND RAS.RES_CMF_7 = 'Y' 
                           AND RAS.DELETE_FLAG  = ' ' 
                           AND RAS.RES_TYPE  = 'EQUIPMENT' 
                           AND (RAS.RES_STS_8 LIKE 'A040%' OR RAS.RES_STS_8 LIKE 'A060%') 
                           AND RAS.RES_STS_2 LIKE '%'
                           AND RAS.FACTORY = UPEH.FACTORY(+) 
                           AND RAS.RES_GRP_6 = UPEH.RES_MODEL(+) 
                           AND RAS.RES_STS_2 = UPEH.MAT_ID(+) 
                           AND RAS.RES_STS_8 = UPEH.OPER(+) 
                           AND RAS.RES_STS_2 = WIR.MAT_ID(+) 
                           AND RAS.RES_STS_8 = WIR.OPER(+) 
                           AND RAS.RES_STS_2 = GCM.MAT_ID(+) 
                           AND (RAS.RES_STS_1 NOT IN ('C200', 'B199') OR RAS.RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RAS.RES_GRP_6, RAS.RES_STS_2, RAS.RES_STS_8 
                       ) 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , WB_1+WB_2+WB_3+WB_4+WB_5+WB_6+WB_7+WB_8+WB_9 AS WB_WIP_TTL 
                     , DA_1 
                     , WB_1 
                     , DA_2 
                     , WB_2 
                     , DA_3 
                     , WB_3 
                     , DA_4 
                     , WB_4 
                     , DA_5 
                     , WB_5 
                     , DA_6 
                     , WB_6 
                     , DA_7 
                     , WB_7 
                     , DA_8 
                     , WB_8 
                     , DA_9 
                     , WB_9 
                  FROM ( 
                        SELECT '6_WIP_MAIN_M' AS GUBUN, LOT.MAT_ID 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('-', '1st') AND OPER IN ('A0250', 'A0400', 'A0401') THEN QTY_1 ELSE 0 END ) DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle', 'Merge' ) AND OPER = 'A0402' THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 1', 'Merge' ) AND OPER = 'A0403' THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 2', 'Merge' ) AND OPER = 'A0404' THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 3', 'Merge' ) AND OPER = 'A0405' THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 4', 'Merge' ) AND OPER = 'A0406' THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 5', 'Merge' ) AND OPER = 'A0407' THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 6', 'Merge' ) AND OPER = 'A0408' THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 7', 'Merge' ) AND OPER = 'A0409' THEN QTY_1 ELSE 0 END ) DA_9 
                             , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600', 'A0601') THEN QTY_1 ELSE 0 END ) WB_1 
                             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY_1 ELSE 0 END ) WB_2 
                             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY_1 ELSE 0 END ) WB_3 
                             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY_1 ELSE 0 END ) WB_4 
                             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY_1 ELSE 0 END ) WB_5 
                             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY_1 ELSE 0 END ) WB_6 
                             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY_1 ELSE 0 END ) WB_7 
                             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY_1 ELSE 0 END ) WB_8 
                             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY_1 ELSE 0 END ) WB_9 
                          FROM RWIPLOTSTS LOT 
                             , VWIPMATDEF MAT 
                         WHERE 1 = 1 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , DA_1 
                     , 0 AS WB_1 
                     , DA_2 
                     , 0 AS WB_2 
                     , DA_3 
                     , 0 AS WB_3 
                     , DA_4 
                     , 0 AS WB_4 
                     , DA_5 
                     , 0 AS WB_5 
                     , DA_6 
                     , 0 AS WB_6 
                     , DA_7 
                     , 0 AS WB_7 
                     , DA_8 
                     , 0 AS WB_8 
                     , DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT '5_WIP_MAIN' AS GUBUN, LOT.MAT_ID 
                             , 0 AS DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0402', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle' AND OPER IN ('A0403', 'A0502', 'A0532') THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 1' AND OPER IN ('A0404', 'A0503', 'A0533') THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 2' AND OPER IN ('A0405', 'A0504', 'A0534') THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 3' AND OPER IN ('A0406', 'A0505', 'A0535') THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 4' AND OPER IN ('A0407', 'A0506', 'A0536') THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 5' AND OPER IN ('A0408', 'A0507', 'A0537') THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 6' AND OPER IN ('A0409', 'A0508', 'A0538') THEN QTY_1 ELSE 0 END ) DA_9 
                          FROM RWIPLOTSTS LOT 
                             , VWIPMATDEF MAT 
                         WHERE 1 = 1 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT '4_WIP_CHIP' GUBUN, MAT_ID 
                     , SUM(QTY_1) AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , 0 AS DA_1 
                     , 0 AS WB_1 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0402') AND MAT_GRP_5 = '2nd' THEN QTY_1 ELSE 0 END) AS DA_2 
                     , 0 AS WB_2 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0403') AND MAT_GRP_5 = '3rd' THEN QTY_1 ELSE 0 END) AS DA_3 
                     , 0 AS WB_3 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0404') AND MAT_GRP_5 = '4th' THEN QTY_1 ELSE 0 END) AS DA_4 
                     , 0 AS WB_4 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0405') AND MAT_GRP_5 = '5th' THEN QTY_1 ELSE 0 END) AS DA_5 
                     , 0 AS WB_5 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0406') AND MAT_GRP_5 = '6th' THEN QTY_1 ELSE 0 END) AS DA_6 
                     , 0 AS WB_6 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0407') AND MAT_GRP_5 = '7th' THEN QTY_1 ELSE 0 END) AS DA_7 
                     , 0 AS WB_7 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0408') AND MAT_GRP_5 = '8th' THEN QTY_1 ELSE 0 END) AS DA_8 
                     , 0 AS WB_8 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0409') AND MAT_GRP_5 = '9th' THEN QTY_1 ELSE 0 END) AS DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, B.MAT_GRP_5, A.QTY_1 
                          FROM RWIPLOTSTS A, MWIPMATDEF B 
                         WHERE 1 = 1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.MAT_ID = B.MAT_ID 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.LOT_TYPE = 'W' 
                           AND A.LOT_CMF_5 LIKE 'P%' 
                           AND A.LOT_DEL_FLAG = ' ' 
                           AND A.OPER IN ('A0250', 'A0402', 'A0403', 'A0404', 'A0405', 'A0406', 'A0407', 'A0408', 'A0409') 
                           AND B.MAT_TYPE = 'FG' 
                           AND B.MAT_GRP_4 NOT IN ('-','FD','FU') 
                           AND B.MAT_GRP_5 IN ( '2nd',  '3rd', '4th', '5th', '6th',  '7th', '8th', '9th') 
                           AND B.DELETE_FLAG <> 'Y' 
                           AND B.MAT_GRP_2 <> '-' 
                       ) 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT '7_실적' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  QTY * CONV_RATE  ELSE 0  END ) DA_RST_TTL ,  SUM( CASE WHEN OPER LIKE 'A060%' THEN  QTY * CONV_RATE  ELSE 0  END ) WB_RST_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400', 'A0401') THEN QTY * CONV_RATE  ELSE 0 END ) DA401 , SUM( CASE WHEN OPER IN ( 'A0600', 'A0601') THEN QTY * CONV_RATE ELSE 0 END )  WB601 
                     , SUM(DECODE(OPER, 'A0402', QTY * CONV_RATE,  0)) DA402  , SUM(DECODE(OPER, 'A0602', QTY * CONV_RATE,  0)) WB602 
                     , SUM(DECODE(OPER, 'A0403', QTY * CONV_RATE,  0)) DA403  , SUM(DECODE(OPER, 'A0603', QTY * CONV_RATE,  0)) WB603 
                     , SUM(DECODE(OPER, 'A0404', QTY * CONV_RATE,  0)) DA404  , SUM(DECODE(OPER, 'A0604', QTY * CONV_RATE,  0)) WB604 
                     , SUM(DECODE(OPER, 'A0405', QTY * CONV_RATE,  0)) DA405  , SUM(DECODE(OPER, 'A0605', QTY * CONV_RATE,  0)) WB605 
                     , SUM(DECODE(OPER, 'A0406', QTY * CONV_RATE,  0)) DA406  , SUM(DECODE(OPER, 'A0606', QTY * CONV_RATE,  0)) WB606 
                     , SUM(DECODE(OPER, 'A0407', QTY * CONV_RATE,  0)) DA407  , SUM(DECODE(OPER, 'A0607', QTY * CONV_RATE,  0)) WB607 
                     , SUM(DECODE(OPER, 'A0408', QTY * CONV_RATE,  0)) DA408  , SUM(DECODE(OPER, 'A0608', QTY * CONV_RATE,  0)) WB608 
                     , SUM(DECODE(OPER, 'A0409', QTY * CONV_RATE,  0)) DA409  , SUM(DECODE(OPER, 'A0609', QTY * CONV_RATE,  0)) WB609 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1 + S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1 ) QTY 
                             , 1 CONV_RATE 
                          FROM RSUMWIPMOV A 
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE 1=1 
                           AND A.FACTORY  = 'HMVA2' 
                           AND A.MAT_VER  = 1 
                           AND A.WORK_DATE = GET_WORK_DATE(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 'D')
                           AND A.LOT_TYPE  = 'W' 
                           AND A.MAT_ID LIKE '%'
                           AND ( A.OPER LIKE  'A040%' OR  A.OPER LIKE  'A060%'  ) 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND A.MAT_ID = WIR.MAT_ID(+) 
                           AND A.OPER  = WIR.OPER(+) 
                           AND A.MAT_ID = GCM.MAT_ID(+) 
                         GROUP BY A.MAT_ID, A.OPER 
                       ) 
                 GROUP BY MAT_ID 
               ) A 
             , (SELECT * FROM MWIPMATDEF WHERE FACTORY = 'HMVA2'  AND MAT_TYPE = 'FG' AND MAT_VER =  1 AND  DELETE_FLAG <> 'Y' ) B 
         WHERE A.MAT_ID = B.MAT_ID(+) 
       ) A 
     , ( SELECT SEQ FROM HRTDSUMSEQ@RPTTOMES WHERE SEQ <= 8 ) C 
 WHERE 1 = 1 
   AND A.MAT_GRP_1 IS NOT NULL 
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ' 
        , DECODE(SEQ, 1, '설비대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율'), SEQ
) 
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER)  CUSTOMER, FAMILY, PKG,  ' ',  ' ',  ' ' 
     , DECODE(GUBUN_SEQ, 1, '설비', 2, '설비', 3, 'CAPA', 4, '재공', 5, '재공', 6, '재공', 7, '실적', 8, 'CAPA 효율') AS GUBUN0 
     , GUBUN 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999'))) AS DA_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')) ) AS DA1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')) ) AS DA2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')) ) AS DA3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')) ) AS DA4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')) ) AS DA5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')) ) AS DA6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')) ) AS DA7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')) ) AS DA8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')) ) AS DA9 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999')),'0', '',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999'))) AS WB_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999'))) AS WB1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999'))) AS WB2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999'))) AS WB3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999'))) AS WB4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999'))) AS WB5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999'))) AS WB6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999'))) AS WB7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999'))) AS WB8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999'))) AS WB9 
  FROM TEMP_VIEW 
 GROUP BY GROUPING SETS((CUSTOMER, FAMILY, PKG, GUBUN, GUBUN_SEQ), (CUSTOMER, FAMILY, GUBUN, GUBUN_SEQ), (CUSTOMER, GUBUN, GUBUN_SEQ), (GUBUN, GUBUN_SEQ) ) 
 ORDER BY DECODE(TEMP_VIEW.CUSTOMER, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), TEMP_VIEW.CUSTOMER, FAMILY, PKG,GUBUN_SEQ 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202006', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200602','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_VIEW AS (
SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS FAMILY, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' '
     , DECODE(SEQ, 1, '대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율') GUBUN, SEQ GUBUN_SEQ 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA_TTL, 0 ) ) DA_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB_TTL, 0 ) ) WB_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA1, 0 ) ) DA1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA2, 0 ) ) DA2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA3, 0 ) ) DA3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA4, 0 ) ) DA4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA5, 0 ) ) DA5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA6, 0 ) ) DA6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA7, 0 ) ) DA7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA8, 0 ) ) DA8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA9, 0 ) ) DA9 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB1, 0 ) ) WB1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB2, 0 ) ) WB2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB3, 0 ) ) WB3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB4, 0 ) ) WB4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB5, 0 ) ) WB5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB6, 0 ) ) WB6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB7, 0 ) ) WB7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB8, 0 ) ) WB8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB9, 0 ) ) WB9 
  FROM ( 
        SELECT B.MAT_GRP_1,  B.MAT_GRP_2,  B.MAT_GRP_3,  B.MAT_GRP_4,  B.MAT_GRP_5,  B.MAT_GRP_6,  B.MAT_GRP_7,  B.MAT_GRP_8,  B.MAT_GRP_9,  B.MAT_GRP_10,  B.MAT_CMF_10, B.MAT_CMF_11, GUBUN,  DA_TTL, WB_TTL, DA1, WB1, DA2, WB2, DA3, WB3, DA4, WB4, DA5, WB5, DA6, WB6, DA7, WB7, DA8, WB8, DA9, WB9 
          FROM ( 
                SELECT DECODE(V.V_COL,'RES', '1_설비댓수', '2_RUN_CNT') GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) DA_TTL 
                     , SUM( CASE WHEN OPER LIKE 'A060%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) WB_TTL 
                     , SUM( DECODE(OPER, 'A0400', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0401', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0) ) DA1 
                     , SUM( DECODE(OPER, 'A0600', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0601', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB1 
                     , SUM( DECODE(OPER, 'A0402', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA2, SUM( DECODE(OPER, 'A0602', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB2 
                     , SUM( DECODE(OPER, 'A0403', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA3,SUM( DECODE(OPER, 'A0603', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB3 
                     , SUM( DECODE(OPER, 'A0404', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA4, SUM( DECODE(OPER, 'A0604', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB4 
                     , SUM( DECODE(OPER, 'A0405', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA5, SUM( DECODE(OPER, 'A0605', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB5 
                     , SUM( DECODE(OPER, 'A0406', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA6, SUM( DECODE(OPER, 'A0606', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB6 
                     , SUM( DECODE(OPER, 'A0407', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA7, SUM( DECODE(OPER, 'A0607', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB7 
                     , SUM( DECODE(OPER, 'A0408', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA8, SUM( DECODE(OPER, 'A0608', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB8 
                     , SUM( DECODE(OPER, 'A0409', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA9, SUM( DECODE(OPER, 'A0609', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_STS_2 MAT_ID, RES_GRP_6 RES_MODEL, RES_GRP_7 UPEH_GROUP, RES_STS_8 OPER , COUNT(RES_ID) RES_CNT, NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(LOT.LOT_ID, '-'), '-', 0, 1))), 0)  RUN_CNT 
                          FROM MRASRESDEF_BOH RAS 
                             , ( 
                                SELECT * 
                                  FROM RWIPLOTSTS_BOH LOT 
                                 WHERE LOT.FACTORY = 'HMVA2' 
                                   AND LOT.CUTOFF_DT = '2020060222' 
                                   AND LOT.LOT_TYPE = 'W' AND LOT_DEL_FLAG = ' ' 
                                   AND LOT.LOT_CMF_5 LIKE 'P%' 
                                   AND (LOT.OPER LIKE 'A040%' OR LOT.OPER LIKE 'A060%' ) 
                                   AND LOT.LOT_STATUS = 'PROC' 
                               ) LOT 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.CUTOFF_DT = '2020060222' 
                           AND RAS.FACTORY = LOT.FACTORY(+) 
                           AND RES_ID = LOT.START_RES_ID(+) 
                           AND RES_CMF_9 = 'Y' 
                           AND RES_CMF_7 = 'Y' 
                           AND DELETE_FLAG  = ' ' 
                           AND RES_TYPE  = 'EQUIPMENT' 
                           AND (RES_STS_8 LIKE 'A040%' OR RES_STS_8 LIKE 'A060%' ) 
                           AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RES_STS_2, RES_GRP_6, RES_GRP_7, RES_STS_8 
                       ) 
                     , (SELECT 'RES' V_COL FROM DUAL UNION ALL SELECT 'RUN' FROM DUAL) V 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY  MAT_ID, V.V_COL 
                 UNION ALL 
                SELECT '3_CAPA' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_DA_TTL 
                     , SUM( CASE WHEN  OPER LIKE 'A060%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_WB_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400',  'A0401' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END ) RES_CNT_DA1 
                     , SUM( CASE WHEN OPER IN ( 'A0600',  'A0601' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END )   RES_CNT_WB1 
                     , SUM( DECODE( OPER, 'A0402',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA2, SUM( DECODE( OPER, 'A0602', RES_CNT *  NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB2 
                     , SUM( DECODE( OPER, 'A0403',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA3, SUM( DECODE( OPER, 'A0603',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB3 
                     , SUM( DECODE( OPER, 'A0404',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA4, SUM( DECODE( OPER, 'A0604',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB4 
                     , SUM( DECODE( OPER, 'A0405',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA5, SUM( DECODE( OPER, 'A0605',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB5 
                     , SUM( DECODE( OPER, 'A0406',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA6, SUM( DECODE( OPER, 'A0606',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB6 
                     , SUM( DECODE( OPER, 'A0407',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA7, SUM( DECODE( OPER, 'A0607',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB7 
                     , SUM( DECODE( OPER, 'A0408',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA8, SUM( DECODE( OPER, 'A0608',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB8 
                     , SUM( DECODE( OPER, 'A0409',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA9, SUM( DECODE( OPER, 'A0609',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_GRP_6 RES_MODEL, RAS.RES_STS_2 MAT_ID, RAS.RES_STS_8 OPER , COUNT(RES_ID) RES_CNT 
                             , MAX(DECODE(SUBSTR(RAS.RES_STS_8, 1, 3), 'A04', NVL(UPEH.UPEH, 0) * 0.68,  NVL(UPEH.UPEH, 0) * 0.71 )  ) UPEH 
                             , 1 CONV_RATE 
                          FROM MRASRESDEF_BOH RAS
                             , CRASUPHDEF UPEH
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.CUTOFF_DT = '2020060222' 
                           AND RAS.RES_CMF_9 = 'Y' 
                           AND RAS.RES_CMF_7 = 'Y' 
                           AND RAS.DELETE_FLAG  = ' ' 
                           AND RAS.RES_TYPE  = 'EQUIPMENT' 
                           AND (RAS.RES_STS_8 LIKE 'A040%' OR RAS.RES_STS_8 LIKE 'A060%') 
                           AND RAS.RES_STS_2 LIKE '%'
                           AND RAS.FACTORY = UPEH.FACTORY(+) 
                           AND RAS.RES_GRP_6 = UPEH.RES_MODEL(+) 
                           AND RAS.RES_STS_2 = UPEH.MAT_ID(+) 
                           AND RAS.RES_STS_8 = UPEH.OPER(+) 
                           AND RAS.RES_STS_2 = WIR.MAT_ID(+) 
                           AND RAS.RES_STS_8 = WIR.OPER(+) 
                           AND RAS.RES_STS_2 = GCM.MAT_ID(+) 
                           AND (RAS.RES_STS_1 NOT IN ('C200', 'B199') OR RAS.RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RAS.RES_GRP_6, RAS.RES_STS_2, RAS.RES_STS_8 
                       ) 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , WB_1+WB_2+WB_3+WB_4+WB_5+WB_6+WB_7+WB_8+WB_9 AS WB_WIP_TTL 
                     , DA_1 
                     , WB_1 
                     , DA_2 
                     , WB_2 
                     , DA_3 
                     , WB_3 
                     , DA_4 
                     , WB_4 
                     , DA_5 
                     , WB_5 
                     , DA_6 
                     , WB_6 
                     , DA_7 
                     , WB_7 
                     , DA_8 
                     , WB_8 
                     , DA_9 
                     , WB_9 
                  FROM ( 
                        SELECT '6_WIP_MAIN_M' AS GUBUN, LOT.MAT_ID 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('-', '1st') AND OPER IN ('A0250', 'A0400', 'A0401') THEN QTY_1 ELSE 0 END ) DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle', 'Merge' ) AND OPER = 'A0402' THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 1', 'Merge' ) AND OPER = 'A0403' THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 2', 'Merge' ) AND OPER = 'A0404' THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 3', 'Merge' ) AND OPER = 'A0405' THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 4', 'Merge' ) AND OPER = 'A0406' THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 5', 'Merge' ) AND OPER = 'A0407' THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 6', 'Merge' ) AND OPER = 'A0408' THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 7', 'Merge' ) AND OPER = 'A0409' THEN QTY_1 ELSE 0 END ) DA_9 
                             , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600', 'A0601') THEN QTY_1 ELSE 0 END ) WB_1 
                             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY_1 ELSE 0 END ) WB_2 
                             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY_1 ELSE 0 END ) WB_3 
                             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY_1 ELSE 0 END ) WB_4 
                             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY_1 ELSE 0 END ) WB_5 
                             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY_1 ELSE 0 END ) WB_6 
                             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY_1 ELSE 0 END ) WB_7 
                             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY_1 ELSE 0 END ) WB_8 
                             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY_1 ELSE 0 END ) WB_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020060222' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , DA_1 
                     , 0 AS WB_1 
                     , DA_2 
                     , 0 AS WB_2 
                     , DA_3 
                     , 0 AS WB_3 
                     , DA_4 
                     , 0 AS WB_4 
                     , DA_5 
                     , 0 AS WB_5 
                     , DA_6 
                     , 0 AS WB_6 
                     , DA_7 
                     , 0 AS WB_7 
                     , DA_8 
                     , 0 AS WB_8 
                     , DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT '5_WIP_MAIN' AS GUBUN, LOT.MAT_ID 
                             , 0 AS DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0402', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle' AND OPER IN ('A0403', 'A0502', 'A0532') THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 1' AND OPER IN ('A0404', 'A0503', 'A0533') THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 2' AND OPER IN ('A0405', 'A0504', 'A0534') THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 3' AND OPER IN ('A0406', 'A0505', 'A0535') THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 4' AND OPER IN ('A0407', 'A0506', 'A0536') THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 5' AND OPER IN ('A0408', 'A0507', 'A0537') THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 6' AND OPER IN ('A0409', 'A0508', 'A0538') THEN QTY_1 ELSE 0 END ) DA_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020060222' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT '4_WIP_CHIP' GUBUN, MAT_ID 
                     , SUM(QTY_1) AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , 0 AS DA_1 
                     , 0 AS WB_1 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0402') AND MAT_GRP_5 = '2nd' THEN QTY_1 ELSE 0 END) AS DA_2 
                     , 0 AS WB_2 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0403') AND MAT_GRP_5 = '3rd' THEN QTY_1 ELSE 0 END) AS DA_3 
                     , 0 AS WB_3 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0404') AND MAT_GRP_5 = '4th' THEN QTY_1 ELSE 0 END) AS DA_4 
                     , 0 AS WB_4 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0405') AND MAT_GRP_5 = '5th' THEN QTY_1 ELSE 0 END) AS DA_5 
                     , 0 AS WB_5 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0406') AND MAT_GRP_5 = '6th' THEN QTY_1 ELSE 0 END) AS DA_6 
                     , 0 AS WB_6 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0407') AND MAT_GRP_5 = '7th' THEN QTY_1 ELSE 0 END) AS DA_7 
                     , 0 AS WB_7 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0408') AND MAT_GRP_5 = '8th' THEN QTY_1 ELSE 0 END) AS DA_8 
                     , 0 AS WB_8 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0409') AND MAT_GRP_5 = '9th' THEN QTY_1 ELSE 0 END) AS DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, B.MAT_GRP_5, A.QTY_1 
                          FROM RWIPLOTSTS_BOH A, MWIPMATDEF B 
                         WHERE A.CUTOFF_DT = '2020060222' 
                           AND A.FACTORY = B.FACTORY 
                           AND A.MAT_ID = B.MAT_ID 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.LOT_TYPE = 'W' 
                           AND A.LOT_CMF_5 LIKE 'P%' 
                           AND A.LOT_DEL_FLAG = ' ' 
                           AND A.OPER IN ('A0250', 'A0402', 'A0403', 'A0404', 'A0405', 'A0406', 'A0407', 'A0408', 'A0409') 
                           AND B.MAT_TYPE = 'FG' 
                           AND B.MAT_GRP_4 NOT IN ('-','FD','FU') 
                           AND B.MAT_GRP_5 IN ( '2nd',  '3rd', '4th', '5th', '6th',  '7th', '8th', '9th') 
                           AND B.DELETE_FLAG <> 'Y' 
                           AND B.MAT_GRP_2 <> '-' 
                       ) 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT '7_실적' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  QTY * CONV_RATE  ELSE 0  END ) DA_RST_TTL ,  SUM( CASE WHEN OPER LIKE 'A060%' THEN  QTY * CONV_RATE  ELSE 0  END ) WB_RST_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400', 'A0401') THEN QTY * CONV_RATE  ELSE 0 END ) DA401 , SUM( CASE WHEN OPER IN ( 'A0600', 'A0601') THEN QTY * CONV_RATE ELSE 0 END )  WB601 
                     , SUM(DECODE(OPER, 'A0402', QTY * CONV_RATE,  0)) DA402  , SUM(DECODE(OPER, 'A0602', QTY * CONV_RATE,  0)) WB602 
                     , SUM(DECODE(OPER, 'A0403', QTY * CONV_RATE,  0)) DA403  , SUM(DECODE(OPER, 'A0603', QTY * CONV_RATE,  0)) WB603 
                     , SUM(DECODE(OPER, 'A0404', QTY * CONV_RATE,  0)) DA404  , SUM(DECODE(OPER, 'A0604', QTY * CONV_RATE,  0)) WB604 
                     , SUM(DECODE(OPER, 'A0405', QTY * CONV_RATE,  0)) DA405  , SUM(DECODE(OPER, 'A0605', QTY * CONV_RATE,  0)) WB605 
                     , SUM(DECODE(OPER, 'A0406', QTY * CONV_RATE,  0)) DA406  , SUM(DECODE(OPER, 'A0606', QTY * CONV_RATE,  0)) WB606 
                     , SUM(DECODE(OPER, 'A0407', QTY * CONV_RATE,  0)) DA407  , SUM(DECODE(OPER, 'A0607', QTY * CONV_RATE,  0)) WB607 
                     , SUM(DECODE(OPER, 'A0408', QTY * CONV_RATE,  0)) DA408  , SUM(DECODE(OPER, 'A0608', QTY * CONV_RATE,  0)) WB608 
                     , SUM(DECODE(OPER, 'A0409', QTY * CONV_RATE,  0)) DA409  , SUM(DECODE(OPER, 'A0609', QTY * CONV_RATE,  0)) WB609 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1 + S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1 ) QTY 
                             , 1 CONV_RATE 
                          FROM RSUMWIPMOV A 
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE 1=1 
                           AND A.FACTORY  = 'HMVA2' 
                           AND A.MAT_VER  = 1 
                           AND A.WORK_DATE = '20200602'
                           AND A.LOT_TYPE  = 'W' 
                           AND A.MAT_ID LIKE '%'
                           AND ( A.OPER LIKE  'A040%' OR  A.OPER LIKE  'A060%'  ) 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND A.MAT_ID = WIR.MAT_ID(+) 
                           AND A.OPER  = WIR.OPER(+) 
                           AND A.MAT_ID = GCM.MAT_ID(+) 
                         GROUP BY A.MAT_ID, A.OPER 
                       ) 
                 GROUP BY MAT_ID 
               ) A 
             , (SELECT * FROM MWIPMATDEF WHERE FACTORY = 'HMVA2'  AND MAT_TYPE = 'FG' AND MAT_VER =  1 AND  DELETE_FLAG <> 'Y' ) B 
         WHERE A.MAT_ID = B.MAT_ID(+) 
       ) A 
     , ( SELECT SEQ FROM HRTDSUMSEQ@RPTTOMES WHERE SEQ <= 8 ) C 
 WHERE 1 = 1 
   AND A.MAT_GRP_1 IS NOT NULL 
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ' 
        , DECODE(SEQ, 1, '설비대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율'), SEQ
) 
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER)  CUSTOMER, FAMILY, PKG,  ' ',  ' ',  ' ' 
     , DECODE(GUBUN_SEQ, 1, '설비', 2, '설비', 3, 'CAPA', 4, '재공', 5, '재공', 6, '재공', 7, '실적', 8, 'CAPA 효율') AS GUBUN0 
     , GUBUN 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999'))) AS DA_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')) ) AS DA1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')) ) AS DA2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')) ) AS DA3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')) ) AS DA4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')) ) AS DA5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')) ) AS DA6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')) ) AS DA7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')) ) AS DA8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')) ) AS DA9 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999')),'0', '',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999'))) AS WB_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999'))) AS WB1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999'))) AS WB2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999'))) AS WB3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999'))) AS WB4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999'))) AS WB5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999'))) AS WB6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999'))) AS WB7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999'))) AS WB8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999'))) AS WB9 
  FROM TEMP_VIEW 
 GROUP BY GROUPING SETS((CUSTOMER, FAMILY, PKG, GUBUN, GUBUN_SEQ), (CUSTOMER, FAMILY, GUBUN, GUBUN_SEQ), (CUSTOMER, GUBUN, GUBUN_SEQ), (GUBUN, GUBUN_SEQ) ) 
 ORDER BY DECODE(TEMP_VIEW.CUSTOMER, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), TEMP_VIEW.CUSTOMER, FAMILY, PKG,GUBUN_SEQ 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202006', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200602','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_VIEW AS (
SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS FAMILY, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' '
     , DECODE(SEQ, 1, '대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율') GUBUN, SEQ GUBUN_SEQ 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA_TTL, 0 ) ) DA_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB_TTL, 0 ) ) WB_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA1, 0 ) ) DA1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA2, 0 ) ) DA2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA3, 0 ) ) DA3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA4, 0 ) ) DA4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA5, 0 ) ) DA5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA6, 0 ) ) DA6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA7, 0 ) ) DA7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA8, 0 ) ) DA8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA9, 0 ) ) DA9 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB1, 0 ) ) WB1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB2, 0 ) ) WB2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB3, 0 ) ) WB3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB4, 0 ) ) WB4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB5, 0 ) ) WB5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB6, 0 ) ) WB6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB7, 0 ) ) WB7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB8, 0 ) ) WB8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB9, 0 ) ) WB9 
  FROM ( 
        SELECT B.MAT_GRP_1,  B.MAT_GRP_2,  B.MAT_GRP_3,  B.MAT_GRP_4,  B.MAT_GRP_5,  B.MAT_GRP_6,  B.MAT_GRP_7,  B.MAT_GRP_8,  B.MAT_GRP_9,  B.MAT_GRP_10,  B.MAT_CMF_10, B.MAT_CMF_11, GUBUN,  DA_TTL, WB_TTL, DA1, WB1, DA2, WB2, DA3, WB3, DA4, WB4, DA5, WB5, DA6, WB6, DA7, WB7, DA8, WB8, DA9, WB9 
          FROM ( 
                SELECT DECODE(V.V_COL,'RES', '1_설비댓수', '2_RUN_CNT') GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) DA_TTL 
                     , SUM( CASE WHEN OPER LIKE 'A060%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) WB_TTL 
                     , SUM( DECODE(OPER, 'A0400', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0401', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0) ) DA1 
                     , SUM( DECODE(OPER, 'A0600', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0601', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB1 
                     , SUM( DECODE(OPER, 'A0402', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA2, SUM( DECODE(OPER, 'A0602', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB2 
                     , SUM( DECODE(OPER, 'A0403', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA3,SUM( DECODE(OPER, 'A0603', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB3 
                     , SUM( DECODE(OPER, 'A0404', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA4, SUM( DECODE(OPER, 'A0604', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB4 
                     , SUM( DECODE(OPER, 'A0405', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA5, SUM( DECODE(OPER, 'A0605', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB5 
                     , SUM( DECODE(OPER, 'A0406', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA6, SUM( DECODE(OPER, 'A0606', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB6 
                     , SUM( DECODE(OPER, 'A0407', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA7, SUM( DECODE(OPER, 'A0607', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB7 
                     , SUM( DECODE(OPER, 'A0408', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA8, SUM( DECODE(OPER, 'A0608', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB8 
                     , SUM( DECODE(OPER, 'A0409', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA9, SUM( DECODE(OPER, 'A0609', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_STS_2 MAT_ID, RES_GRP_6 RES_MODEL, RES_GRP_7 UPEH_GROUP, RES_STS_8 OPER , COUNT(RES_ID) RES_CNT, NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(LOT.LOT_ID, '-'), '-', 0, 1))), 0)  RUN_CNT 
                          FROM MRASRESDEF_BOH RAS 
                             , ( 
                                SELECT * 
                                  FROM RWIPLOTSTS_BOH LOT 
                                 WHERE LOT.FACTORY = 'HMVA2' 
                                   AND LOT.CUTOFF_DT = '2020060222' 
                                   AND LOT.LOT_TYPE = 'W' AND LOT_DEL_FLAG = ' ' 
                                   AND LOT.LOT_CMF_5 LIKE 'P%' 
                                   AND (LOT.OPER LIKE 'A040%' OR LOT.OPER LIKE 'A060%' ) 
                                   AND LOT.LOT_STATUS = 'PROC' 
                               ) LOT 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.CUTOFF_DT = '2020060222' 
                           AND RAS.FACTORY = LOT.FACTORY(+) 
                           AND RES_ID = LOT.START_RES_ID(+) 
                           AND RES_CMF_9 = 'Y' 
                           AND RES_CMF_7 = 'Y' 
                           AND DELETE_FLAG  = ' ' 
                           AND RES_TYPE  = 'EQUIPMENT' 
                           AND (RES_STS_8 LIKE 'A040%' OR RES_STS_8 LIKE 'A060%' ) 
                           AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RES_STS_2, RES_GRP_6, RES_GRP_7, RES_STS_8 
                       ) 
                     , (SELECT 'RES' V_COL FROM DUAL UNION ALL SELECT 'RUN' FROM DUAL) V 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY  MAT_ID, V.V_COL 
                 UNION ALL 
                SELECT '3_CAPA' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_DA_TTL 
                     , SUM( CASE WHEN  OPER LIKE 'A060%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_WB_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400',  'A0401' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END ) RES_CNT_DA1 
                     , SUM( CASE WHEN OPER IN ( 'A0600',  'A0601' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END )   RES_CNT_WB1 
                     , SUM( DECODE( OPER, 'A0402',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA2, SUM( DECODE( OPER, 'A0602', RES_CNT *  NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB2 
                     , SUM( DECODE( OPER, 'A0403',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA3, SUM( DECODE( OPER, 'A0603',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB3 
                     , SUM( DECODE( OPER, 'A0404',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA4, SUM( DECODE( OPER, 'A0604',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB4 
                     , SUM( DECODE( OPER, 'A0405',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA5, SUM( DECODE( OPER, 'A0605',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB5 
                     , SUM( DECODE( OPER, 'A0406',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA6, SUM( DECODE( OPER, 'A0606',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB6 
                     , SUM( DECODE( OPER, 'A0407',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA7, SUM( DECODE( OPER, 'A0607',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB7 
                     , SUM( DECODE( OPER, 'A0408',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA8, SUM( DECODE( OPER, 'A0608',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB8 
                     , SUM( DECODE( OPER, 'A0409',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA9, SUM( DECODE( OPER, 'A0609',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_GRP_6 RES_MODEL, RAS.RES_STS_2 MAT_ID, RAS.RES_STS_8 OPER , COUNT(RES_ID) RES_CNT 
                             , MAX(DECODE(SUBSTR(RAS.RES_STS_8, 1, 3), 'A04', NVL(UPEH.UPEH, 0) * 0.68,  NVL(UPEH.UPEH, 0) * 0.71 )  ) UPEH 
                             , CASE WHEN RAS.RES_STS_8 LIKE 'A040%' AND MAX(DATA_1) IS NOT NULL THEN TO_NUMBER(MAX(DATA_1)) 
                                    WHEN RAS.RES_STS_8 LIKE 'A060%' AND MAX(WIRE_CNT) IS NOT NULL THEN TO_NUMBER(MAX(WIRE_CNT)) 
                                    ELSE 1 
                               END CONV_RATE 
                          FROM MRASRESDEF_BOH RAS
                             , CRASUPHDEF UPEH
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE RAS.FACTORY = 'HMVA2' 
                           AND RAS.CUTOFF_DT = '2020060222' 
                           AND RAS.RES_CMF_9 = 'Y' 
                           AND RAS.RES_CMF_7 = 'Y' 
                           AND RAS.DELETE_FLAG  = ' ' 
                           AND RAS.RES_TYPE  = 'EQUIPMENT' 
                           AND (RAS.RES_STS_8 LIKE 'A040%' OR RAS.RES_STS_8 LIKE 'A060%') 
                           AND RAS.RES_STS_2 LIKE '%'
                           AND RAS.FACTORY = UPEH.FACTORY(+) 
                           AND RAS.RES_GRP_6 = UPEH.RES_MODEL(+) 
                           AND RAS.RES_STS_2 = UPEH.MAT_ID(+) 
                           AND RAS.RES_STS_8 = UPEH.OPER(+) 
                           AND RAS.RES_STS_2 = WIR.MAT_ID(+) 
                           AND RAS.RES_STS_8 = WIR.OPER(+) 
                           AND RAS.RES_STS_2 = GCM.MAT_ID(+) 
                           AND (RAS.RES_STS_1 NOT IN ('C200', 'B199') OR RAS.RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RAS.RES_GRP_6, RAS.RES_STS_2, RAS.RES_STS_8 
                       ) 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , WB_1+WB_2+WB_3+WB_4+WB_5+WB_6+WB_7+WB_8+WB_9 AS WB_WIP_TTL 
                     , DA_1 
                     , WB_1 
                     , DA_2 
                     , WB_2 
                     , DA_3 
                     , WB_3 
                     , DA_4 
                     , WB_4 
                     , DA_5 
                     , WB_5 
                     , DA_6 
                     , WB_6 
                     , DA_7 
                     , WB_7 
                     , DA_8 
                     , WB_8 
                     , DA_9 
                     , WB_9 
                  FROM ( 
                        SELECT '6_WIP_MAIN_M' AS GUBUN, LOT.MAT_ID 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('-', '1st') AND OPER IN ('A0250', 'A0400', 'A0401') THEN QTY_1 ELSE 0 END ) DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle', 'Merge' ) AND OPER = 'A0402' THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 1', 'Merge' ) AND OPER = 'A0403' THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 2', 'Merge' ) AND OPER = 'A0404' THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 3', 'Merge' ) AND OPER = 'A0405' THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 4', 'Merge' ) AND OPER = 'A0406' THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 5', 'Merge' ) AND OPER = 'A0407' THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 6', 'Merge' ) AND OPER = 'A0408' THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 7', 'Merge' ) AND OPER = 'A0409' THEN QTY_1 ELSE 0 END ) DA_9 
                             , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600', 'A0601') THEN QTY_1 ELSE 0 END ) WB_1 
                             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY_1 ELSE 0 END ) WB_2 
                             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY_1 ELSE 0 END ) WB_3 
                             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY_1 ELSE 0 END ) WB_4 
                             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY_1 ELSE 0 END ) WB_5 
                             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY_1 ELSE 0 END ) WB_6 
                             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY_1 ELSE 0 END ) WB_7 
                             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY_1 ELSE 0 END ) WB_8 
                             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY_1 ELSE 0 END ) WB_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020060222' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , DA_1 
                     , 0 AS WB_1 
                     , DA_2 
                     , 0 AS WB_2 
                     , DA_3 
                     , 0 AS WB_3 
                     , DA_4 
                     , 0 AS WB_4 
                     , DA_5 
                     , 0 AS WB_5 
                     , DA_6 
                     , 0 AS WB_6 
                     , DA_7 
                     , 0 AS WB_7 
                     , DA_8 
                     , 0 AS WB_8 
                     , DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT '5_WIP_MAIN' AS GUBUN, LOT.MAT_ID 
                             , 0 AS DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0402', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle' AND OPER IN ('A0403', 'A0502', 'A0532') THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 1' AND OPER IN ('A0404', 'A0503', 'A0533') THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 2' AND OPER IN ('A0405', 'A0504', 'A0534') THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 3' AND OPER IN ('A0406', 'A0505', 'A0535') THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 4' AND OPER IN ('A0407', 'A0506', 'A0536') THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 5' AND OPER IN ('A0408', 'A0507', 'A0537') THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 6' AND OPER IN ('A0409', 'A0508', 'A0538') THEN QTY_1 ELSE 0 END ) DA_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020060222' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMVA2' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT '4_WIP_CHIP' GUBUN, MAT_ID 
                     , SUM(QTY_1) AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , 0 AS DA_1 
                     , 0 AS WB_1 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0402') AND MAT_GRP_5 = '2nd' THEN QTY_1 ELSE 0 END) AS DA_2 
                     , 0 AS WB_2 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0403') AND MAT_GRP_5 = '3rd' THEN QTY_1 ELSE 0 END) AS DA_3 
                     , 0 AS WB_3 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0404') AND MAT_GRP_5 = '4th' THEN QTY_1 ELSE 0 END) AS DA_4 
                     , 0 AS WB_4 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0405') AND MAT_GRP_5 = '5th' THEN QTY_1 ELSE 0 END) AS DA_5 
                     , 0 AS WB_5 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0406') AND MAT_GRP_5 = '6th' THEN QTY_1 ELSE 0 END) AS DA_6 
                     , 0 AS WB_6 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0407') AND MAT_GRP_5 = '7th' THEN QTY_1 ELSE 0 END) AS DA_7 
                     , 0 AS WB_7 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0408') AND MAT_GRP_5 = '8th' THEN QTY_1 ELSE 0 END) AS DA_8 
                     , 0 AS WB_8 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0409') AND MAT_GRP_5 = '9th' THEN QTY_1 ELSE 0 END) AS DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, B.MAT_GRP_5, A.QTY_1 
                          FROM RWIPLOTSTS_BOH A, MWIPMATDEF B 
                         WHERE A.CUTOFF_DT = '2020060222' 
                           AND A.FACTORY = B.FACTORY 
                           AND A.MAT_ID = B.MAT_ID 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.LOT_TYPE = 'W' 
                           AND A.LOT_CMF_5 LIKE 'P%' 
                           AND A.LOT_DEL_FLAG = ' ' 
                           AND A.OPER IN ('A0250', 'A0402', 'A0403', 'A0404', 'A0405', 'A0406', 'A0407', 'A0408', 'A0409') 
                           AND B.MAT_TYPE = 'FG' 
                           AND B.MAT_GRP_4 NOT IN ('-','FD','FU') 
                           AND B.MAT_GRP_5 IN ( '2nd',  '3rd', '4th', '5th', '6th',  '7th', '8th', '9th') 
                           AND B.DELETE_FLAG <> 'Y' 
                           AND B.MAT_GRP_2 <> '-' 
                       ) 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT '7_실적' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  QTY * CONV_RATE  ELSE 0  END ) DA_RST_TTL ,  SUM( CASE WHEN OPER LIKE 'A060%' THEN  QTY * CONV_RATE  ELSE 0  END ) WB_RST_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400', 'A0401') THEN QTY * CONV_RATE  ELSE 0 END ) DA401 , SUM( CASE WHEN OPER IN ( 'A0600', 'A0601') THEN QTY * CONV_RATE ELSE 0 END )  WB601 
                     , SUM(DECODE(OPER, 'A0402', QTY * CONV_RATE,  0)) DA402  , SUM(DECODE(OPER, 'A0602', QTY * CONV_RATE,  0)) WB602 
                     , SUM(DECODE(OPER, 'A0403', QTY * CONV_RATE,  0)) DA403  , SUM(DECODE(OPER, 'A0603', QTY * CONV_RATE,  0)) WB603 
                     , SUM(DECODE(OPER, 'A0404', QTY * CONV_RATE,  0)) DA404  , SUM(DECODE(OPER, 'A0604', QTY * CONV_RATE,  0)) WB604 
                     , SUM(DECODE(OPER, 'A0405', QTY * CONV_RATE,  0)) DA405  , SUM(DECODE(OPER, 'A0605', QTY * CONV_RATE,  0)) WB605 
                     , SUM(DECODE(OPER, 'A0406', QTY * CONV_RATE,  0)) DA406  , SUM(DECODE(OPER, 'A0606', QTY * CONV_RATE,  0)) WB606 
                     , SUM(DECODE(OPER, 'A0407', QTY * CONV_RATE,  0)) DA407  , SUM(DECODE(OPER, 'A0607', QTY * CONV_RATE,  0)) WB607 
                     , SUM(DECODE(OPER, 'A0408', QTY * CONV_RATE,  0)) DA408  , SUM(DECODE(OPER, 'A0608', QTY * CONV_RATE,  0)) WB608 
                     , SUM(DECODE(OPER, 'A0409', QTY * CONV_RATE,  0)) DA409  , SUM(DECODE(OPER, 'A0609', QTY * CONV_RATE,  0)) WB609 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1 + S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1 ) QTY 
                             , CASE WHEN A.OPER LIKE 'A040%' AND MAX(DATA_1) IS NOT NULL THEN TO_NUMBER(MAX(DATA_1)) 
                                    WHEN A.OPER LIKE 'A060%' AND MAX(WIRE_CNT) IS NOT NULL THEN TO_NUMBER(MAX(WIRE_CNT)) 
                                    ELSE 1 
                               END CONV_RATE 
                          FROM RSUMWIPMOV A 
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE 1=1 
                           AND A.FACTORY  = 'HMVA2' 
                           AND A.MAT_VER  = 1 
                           AND A.WORK_DATE = '20200602'
                           AND A.LOT_TYPE  = 'W' 
                           AND A.MAT_ID LIKE '%'
                           AND ( A.OPER LIKE  'A040%' OR  A.OPER LIKE  'A060%'  ) 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND A.MAT_ID = WIR.MAT_ID(+) 
                           AND A.OPER  = WIR.OPER(+) 
                           AND A.MAT_ID = GCM.MAT_ID(+) 
                         GROUP BY A.MAT_ID, A.OPER 
                       ) 
                 GROUP BY MAT_ID 
               ) A 
             , (SELECT * FROM MWIPMATDEF WHERE FACTORY = 'HMVA2'  AND MAT_TYPE = 'FG' AND MAT_VER =  1 AND  DELETE_FLAG <> 'Y' ) B 
         WHERE A.MAT_ID = B.MAT_ID(+) 
       ) A 
     , ( SELECT SEQ FROM HRTDSUMSEQ@RPTTOMES WHERE SEQ <= 8 ) C 
 WHERE 1 = 1 
   AND A.MAT_GRP_1 IS NOT NULL 
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ' 
        , DECODE(SEQ, 1, '설비대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율'), SEQ
) 
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER)  CUSTOMER, FAMILY, PKG,  ' ',  ' ',  ' ' 
     , DECODE(GUBUN_SEQ, 1, '설비', 2, '설비', 3, 'CAPA', 4, '재공', 5, '재공', 6, '재공', 7, '실적', 8, 'CAPA 효율') AS GUBUN0 
     , GUBUN 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999'))) AS DA_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')) ) AS DA1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')) ) AS DA2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')) ) AS DA3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')) ) AS DA4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')) ) AS DA5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')) ) AS DA6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')) ) AS DA7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')) ) AS DA8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')) ) AS DA9 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999')),'0', '',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999'))) AS WB_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999'))) AS WB1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999'))) AS WB2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999'))) AS WB3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999'))) AS WB4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999'))) AS WB5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999'))) AS WB6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999'))) AS WB7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999'))) AS WB8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999'))) AS WB9 
  FROM TEMP_VIEW 
 GROUP BY GROUPING SETS((CUSTOMER, FAMILY, PKG, GUBUN, GUBUN_SEQ), (CUSTOMER, FAMILY, GUBUN, GUBUN_SEQ), (CUSTOMER, GUBUN, GUBUN_SEQ), (GUBUN, GUBUN_SEQ) ) 
 ORDER BY DECODE(TEMP_VIEW.CUSTOMER, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), TEMP_VIEW.CUSTOMER, FAMILY, PKG,GUBUN_SEQ 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010206'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200602','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = PLN.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', PLN.MAT_GRP_2 AS FAMILY, PLN.MAT_GRP_3 AS PACKAGE,  ' ',  ' ',  ' ', PLN.MAT_CMF_10 AS PIN_TYPE, PLN.MAT_GRP_7 AS DENSITY,  ' ', PLN.MAT_ID AS PRODUCT,  ' '
     , ROUND(SUM(NVL(PLN.MON_PLAN,0)) / 1000, 1) AS MON
     , ROUND(SUM(NVL(RCV.MON_RCV,0)) / 1000, 1) AS MON_IN
     , ROUND((SUM(NVL(PLN.MON_PLAN,0)) - SUM(NVL(RCV.MON_RCV,0))) / 1000, 1) AS DEF
     , ROUND(((SUM(NVL(PLN.MON_PLAN,0)) - SUM(NVL(RCV.MON_RCV,0))) / 25) / 1000, 1) AS TARGET
     , ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100), 2) AS JINDO
     , CASE WHEN ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, 7.4 - (SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100)), 2) < 0 THEN 0
            ELSE ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, 7.4 - (SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100)), 2)
       END AS DEF_PER
     , ROUND(SUM(NVL(RCV.RCV0,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV1,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV2,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV3,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV4,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.MON_RCV_AVG,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP0,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP1,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP2,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP3,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP4,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.MON_SHP,0)) / 1000, 0)
     , ROUND(((SUM(NVL(PLN.MON_PLAN,0)) - (SUM(NVL(RCV_SHP.MON_SHP,0)) + SUM(NVL(WIP_BOH.QTY_1,0))) ) / 25) / 1000, 1) AS SHP_TARGET
     , ROUND(SUM(NVL(SHP.MON_SHP_AVG,0)) / 1000, 0)
     , ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, SUM(NVL(SHP.MON_SHP,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100), 2) AS SHP_JINDO
     , ROUND(SUM(NVL(WIP.STOCK,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.LN,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.BG,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.LG,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.SAW,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.GATE,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.TOTAL,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_1,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_2,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_3,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.TOTAL,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_1,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_2,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_3,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.TOTAL,0)) / 1000, 0)
     , SUM(NVL(RAS.QTY_1,0))
  FROM (
        SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7 
             , SUM(PLAN.PLAN_QTY_ASSY) AS MON_PLAN
          FROM MWIPMATDEF MAT 
             , ( 
                 SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH 
                   FROM ( 
                          SELECT FACTORY, MAT_ID, PLAN_QTY_ASSY, PLAN_MONTH 
                            FROM CWIPPLNMON 
                           WHERE 1=1 
                             AND FACTORY = 'HMVA2' 
                             AND MAT_ID NOT IN ( 
                                                SELECT MAT_ID 
                                                  FROM MWIPMATDEF 
                                                 WHERE 1=1 
                                                   AND MAT_GRP_1 = 'SE' 
                                                   AND MAT_GRP_9 = 'S-LSI' 
                                               ) 
                          UNION ALL 
                          SELECT A.FACTORY, A.MAT_ID, SUM(A.PLAN_QTY) AS PLAN_QTY_ASSY , '202006' AS PLAN_MONTH 
                            FROM ( 
                                   SELECT FACTORY, MAT_ID, SUM(NVL(PLAN_QTY, 0)) AS PLAN_QTY 
                                     FROM CWIPPLNDAY 
                                    WHERE 1=1 
                                      AND FACTORY = 'HMVA2' 
                                      AND PLAN_DAY BETWEEN '20200601' AND '20200630'
                                      AND IN_OUT_FLAG = 'OUT' 
                                      AND CLASS = 'ASSY' 
                                   GROUP BY FACTORY, MAT_ID 
                                   UNION ALL 
                                   SELECT CM_KEY_1 AS FACTORY, MAT_ID, 
                                          SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1) AS PLAN_QTY 
                                     FROM RSUMFACMOV 
                                    WHERE 1=1 
                                      AND CM_KEY_1 = 'HMVA2' 
                                      AND CM_KEY_2 = 'PROD' 
                                      AND CM_KEY_3 LIKE 'P%' 
                                      AND WORK_DATE BETWEEN '20200601' AND '20200600'
                                   GROUP BY CM_KEY_1, MAT_ID 
                                 ) A,
                                 MWIPMATDEF B 
                           WHERE 1=1  
                             AND A.FACTORY = B.FACTORY 
                             AND A.MAT_ID = B.MAT_ID 
                             AND B.MAT_GRP_1 = 'SE' 
                             AND B.MAT_GRP_9 = 'S-LSI' 
                          GROUP BY A.FACTORY, A.MAT_ID 
                        ) 
               ) PLAN     
         WHERE 1 = 1 
           AND MAT.FACTORY = 'HMVA2' 
           AND PLAN.PLAN_MONTH(+) = '202006' 
           AND MAT.MAT_TYPE= 'FG' 
           AND MAT.DELETE_FLAG <> 'Y' 
           AND MAT.FACTORY =PLAN.FACTORY(+) 
           AND MAT.MAT_ID = PLAN.MAT_ID(+) 
         GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.MAT_CMF_13
       ) PLN
     , (
         SELECT MAT_ID        
              , SUM(DECODE(WORK_DATE, '20200530', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV0
              , SUM(DECODE(WORK_DATE, '20200531', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV1
              , SUM(DECODE(WORK_DATE, '20200601', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV2
              , SUM(DECODE(WORK_DATE, '20200602', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV3
              , SUM(DECODE(WORK_DATE, '20200603', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV4
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) AS MON_RCV
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) / 2, 0) AS MON_RCV_AVG
           FROM RSUMFACMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND CM_KEY_1 = 'HMVA2'
            AND OPER = 'A0000'
            AND MAT_ID NOT LIKE 'HX%'
            AND WORK_DATE BETWEEN '20200530' AND '20200603'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
         UNION ALL
         SELECT MAT_ID        
              , SUM(DECODE(WORK_DATE, '20200530', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV0
              , SUM(DECODE(WORK_DATE, '20200531', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV1
              , SUM(DECODE(WORK_DATE, '20200601', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV2
              , SUM(DECODE(WORK_DATE, '20200602', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV3
              , SUM(DECODE(WORK_DATE, '20200603', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV4
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) AS MON_RCV
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) / 2, 0) AS MON_RCV_AVG
           FROM CSUMFACMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND CM_KEY_1 = 'HMVA2'
            AND OPER = 'A0000'
            AND MAT_ID LIKE 'HX%'
            AND WORK_DATE BETWEEN '20200530' AND '20200603'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) RCV
     , (
         SELECT MAT_ID        
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
           FROM RSUMFACMOV
          WHERE 1=1
            AND WORK_DATE BETWEEN '20200530' AND '20200603'
            AND LOT_TYPE = 'W'
            AND CM_KEY_1 = 'HMVA2'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) RCV_SHP
     , (
         SELECT MAT_ID
              , SUM(DECODE(WORK_DATE, '20200530', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP0
              , SUM(DECODE(WORK_DATE, '20200531', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP1
              , SUM(DECODE(WORK_DATE, '20200601', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP2
              , SUM(DECODE(WORK_DATE, '20200602', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP3
              , SUM(DECODE(WORK_DATE, '20200603', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP4
              , SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202006', DECODE(WORK_DATE, '20200603', 0, S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1), 0)) / 2, 0) AS MON_SHP_AVG
           FROM RSUMWIPMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND OPER = 'A0200'
            AND WORK_DATE BETWEEN '20200530' AND '20200603'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) SHP
     , (
         SELECT MAT_ID, STOCK, LN, BG, LG, SAW, GATE, STOCK+LN+BG+LG+SAW+GATE AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0000', QTY_1, 0)) AS STOCK
                      , SUM(DECODE(LOT.OPER, 'A0020', QTY_1, 0)) AS LN
                      , SUM(CASE WHEN LOT.OPER BETWEEN 'A0040' AND 'A0100' THEN QTY_1
                                 ELSE 0
                        END) AS BG
                      , SUM(DECODE(LOT.OPER, 'A0170', QTY_1, 0)) AS LG
                      , SUM(DECODE(LOT.OPER, 'A0200', QTY_1, 0)) AS SAW
                      , SUM(DECODE(LOT.OPER, 'A0300', QTY_1, 0)) AS GATE
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE STOCK+LN+BG+LG+SAW+GATE > 0
        ) WIP
     , (
         SELECT MAT_ID, QTY_1 
           FROM (
                 SELECT MAT_ID
                      , SUM(QTY_1) AS QTY_1 
                   FROM RWIPLOTSTS_BOH 
                  WHERE 1=1
                    AND CUTOFF_DT = '2020060222' 
                    AND FACTORY = 'HMVA2'
                    AND LOT_TYPE = 'W'
                    AND LOT_DEL_FLAG = ' '
                    AND OPER > 'A0200'
                    AND LOT_CMF_5 LIKE 'P%'
                  GROUP BY MAT_ID
                )
          WHERE QTY_1 > 0
        ) WIP_BOH
     , (
         SELECT MAT_ID, DA_1, DA_2, DA_3, DA_1+DA_2+DA_3 AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0250', QTY_1, 0)) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0340' AND 'A0401' THEN QTY_1
                                 ELSE 0
                        END) AS DA_1
                      , SUM(DECODE(LOT.OPER, 'A0402', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0501', QTY_1, 0)) AS DA_2
                      , SUM(DECODE(LOT.OPER, 'A0403', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0502', QTY_1, 0)) AS DA_3
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE DA_1+DA_2+DA_3 > 0
        ) WIP_DA
     , (
         SELECT MAT_ID, WB_1, WB_2, WB_3, WB_1+WB_2+WB_3 AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0550', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0551', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0600', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0601', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0800', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0801', QTY_1, 0)) AS WB_1 
                      , SUM(DECODE(LOT.OPER, 'A0552', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0602', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0802', QTY_1, 0)) AS WB_2 
                      , SUM(CASE WHEN LOT.OPER BETWEEN 'A0553' AND 'A0559' THEN QTY_1
                                 ELSE 0
                        END) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0603' AND 'A0609' THEN QTY_1
                                 ELSE 0
                        END) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0803' AND 'A0809' THEN QTY_1
                                 ELSE 0
                        END) AS WB_3
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE WB_1+WB_2+WB_3 > 0
        ) WIP_WB
      , (
          SELECT RES_STS_2 AS MAT_ID, COUNT(*) AS QTY_1
           FROM MRASRESDEF
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND RES_CMF_9 = 'Y' 
            AND DELETE_FLAG = ' ' 
            AND RES_STS_8 IN ('A0170', 'A0180',  'A0200')
          GROUP BY RES_STS_2
        ) RAS
 WHERE 1=1
   AND PLN.MAT_ID = RCV.MAT_ID(+)
   AND PLN.MAT_ID = RCV_SHP.MAT_ID(+)
   AND PLN.MAT_ID = SHP.MAT_ID(+)
   AND PLN.MAT_ID = WIP.MAT_ID(+)
   AND PLN.MAT_ID = WIP_BOH.MAT_ID(+)
   AND PLN.MAT_ID = RAS.MAT_ID(+)
   AND PLN.MAT_ID = WIP_DA.MAT_ID(+)
   AND PLN.MAT_ID = WIP_WB.MAT_ID(+)
 GROUP BY PLN.MAT_GRP_1,  ' ', PLN.MAT_GRP_2, PLN.MAT_GRP_3,  ' ',  ' ',  ' ', PLN.MAT_CMF_10, PLN.MAT_GRP_7,  ' ', PLN.MAT_ID,  ' '
 HAVING NVL(SUM(PLN.MON_PLAN), 0) + NVL(SUM(RCV.MON_RCV), 0) + NVL(SUM(RCV.RCV0+RCV.RCV1+RCV.RCV2+RCV.RCV3+RCV.RCV4), 0)
       + NVL(SUM(SHP.SHP0+SHP.SHP1+SHP.SHP2+SHP.SHP3+SHP.SHP4), 0) + NVL(SUM(SHP.MON_SHP), 0)
       + NVL(SUM(WIP.TOTAL), 0) + NVL(SUM(RAS.QTY_1), 0) > 0
 ORDER BY DECODE(PLN.MAT_GRP_1, 'SE', 1, 'HX', 2, 'AB', 3, 'FC', 4, 'IG', 5, 'IM', 6, 7), PLN.MAT_GRP_1,  ' ', PLN.MAT_GRP_2, PLN.MAT_GRP_3,  ' ',  ' ',  ' ', PLN.MAT_CMF_10, PLN.MAT_GRP_7,  ' ', PLN.MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT OPER
  FROM RWIPLOTSTS 
 WHERE FACTORY = 'HMVA2'
   AND LOT_TYPE = 'W' 
   AND LOT_DEL_FLAG = ' '
   AND OPER BETWEEN 'A0950' AND 'AZ010'
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010211'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT OPER
  FROM RWIPLOTSTS 
 WHERE FACTORY = 'HMVA2'
   AND LOT_TYPE = 'W' 
   AND LOT_DEL_FLAG = ' '
   AND OPER BETWEEN 'A0950' AND 'AZ010'
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 AS PIN_TYPE,  ' ',  ' ', MAT.MAT_ID AS PRODUCT,  ' '
     , SUBSTR(MAT.MAT_ID, LENGTH(MAT.MAT_ID) - 2) AS PKG_CODE
     , ROUND(SUM(NVL(MON_PLN.MON_PLAN,0)) / 1000,0) AS MON_PLAN
     , ROUND(SUM(NVL(MON_AO.SHP_MONTH,0)) / 1000,0) AS SHP_MONTH
     , ROUND(SUM(NVL(MON_PLN.MON_PLAN,0) - NVL(MON_AO.SHP_MONTH,0)) / 1000,0) AS MON_DEF
     , ROUND(DECODE(SUM(NVL(MON_PLN.MON_PLAN,0)), 0, 0, SUM(NVL(MON_AO.SHP_MONTH,0)) / SUM(NVL(MON_PLN.MON_PLAN,0)) * 100), 0) AS JINDO
     , ROUND(SUM(NVL(MON_PLN.MON_PLAN,0)) / 27 / 1000 ,0) AS TARGET
     , ROUND(SUM(NVL(WEEK_PLN.D0_PLAN, 0) + (NVL(WEEK_PLN.WEEK1_TTL, 0) - NVL(MON_AO.SHP_WEEK_TTL, 0))) / 1000, 0) AS PLAN_TODAY
     , ROUND(SUM(NVL(WEEK_PLN.D0_PLAN, 0) + (NVL(WEEK_PLN.WEEK1_TTL, 0) - NVL(MON_AO.SHP_WEEK_TTL, 0)) - NVL(MON_AO.SHP_TODAY, 0)) / 1000, 0) AS DEF_TODAY
     , ROUND(SUM(NVL(MON_AO.SHP_TODAY, 0)) / 1000, 0) AS SHP_TODAY
     , ROUND(SUM(NVL(WIP.A1150,0)) / 1000,0) AS A1150
     , ROUND(SUM(NVL(WIP.AZ010,0)) / 1000,0) AS AZ010
     , ROUND(SUM(NVL(WIP.WIP_TTL,0)) / 1000,0) AS WIP_TOTAL
     , '' AS ETC0     
     , ROUND(SUM(NVL(MON_AO.SHP_YESTERDAY,0)) / 1000,0) AS SHP_YESTERDAY
     , '' AS ETC1
     , ROUND(SUM(NVL(MON_PLN.MON_PLAN,0) - NVL(MON_AO.SHP_MONTH,0)) / 27 / 1000,0) AS GOAL
     , '' AS ETC2
     , '' AS ETC3
     , ROUND(SUM(NVL(WIP.HOLD_WIP,0)) / 1000,0) AS HOLD_WIP
     , ROUND(SUM(NVL(WIP.WIP_TTL,0) - NVL(WIP.HOLD_WIP,0)) / 1000,0) AS FORECAST_SHP
     , ROUND(SUM((NVL(WIP.WIP_TTL,0) - NVL(WIP.HOLD_WIP,0)) * NVL(SUBSTR(MAT.MAT_GRP_4, 3),1)) / 1000,0) AS CHIP
  FROM MWIPMATDEF MAT 
     , ( 
        SELECT MAT_ID, SUM(RESV_FIELD1) AS MON_PLAN 
          FROM CWIPPLNMON 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND PLAN_MONTH = '202006' 
         GROUP BY MAT_ID 
       ) MON_PLN  
     , ( 
        SELECT MAT_ID 
             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY
                        ELSE 0
                   END) AS WEEK1_TTL 
             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D1_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY
                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY
                        ELSE 0
                   END) AS D0_PLAN 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D0_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D1_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D2_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D3_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D4_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D5_QTY, 0)) AS D5_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202023', D6_QTY, 0)) AS D6_QTY 
                  FROM RWIPPLNWEK 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND GUBUN = '3' 
                   AND PLAN_WEEK = '202023'
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) WEEK_PLN 
     , (       
        SELECT MAT_ID 
             , SUM(DECODE(WORK_DATE, '20200602', NVL(SHP_QTY_1, 0), 0)) AS SHP_YESTERDAY 
             , SUM(DECODE(WORK_DATE, '20200603', NVL(SHP_QTY_1, 0), 0)) AS SHP_TODAY 
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200530' AND '20200602' THEN NVL(SHP_QTY_1, 0) END) AS SHP_WEEK_TTL 
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH 
          FROM VSUMWIPOUT
         WHERE 1=1 
           AND FACTORY  = 'HMVA2' 
           AND CM_KEY_2 = 'PROD' 
           AND LOT_TYPE = 'W' 
           AND MAT_ID NOT LIKE 'HX%' 
           AND WORK_DATE BETWEEN LEAST('20200530', '20200601', '20200602') AND '20200603' 
         GROUP BY MAT_ID 
         UNION ALL 
        SELECT MAT_ID 
             , SUM(DECODE(WORK_DATE, '20200602', NVL(SHP_QTY_1, 0), 0)) AS SHP_YESTERDAY 
             , SUM(DECODE(WORK_DATE, '20200603', NVL(SHP_QTY_1, 0), 0)) AS SHP_TODAY 
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200530' AND '20200602' THEN NVL(SHP_QTY_1, 0) END) AS SHP_WEEK_TTL 
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH 
          FROM VSUMWIPOUT_06
         WHERE 1=1 
           AND FACTORY  = 'HMVA2' 
           AND CM_KEY_2 = 'PROD' 
           AND LOT_TYPE = 'W' 
           AND MAT_ID LIKE 'HX%' 
           AND WORK_DATE BETWEEN LEAST('20200530', '20200601', '20200602') AND '20200603' 
         GROUP BY MAT_ID 
       ) MON_AO        
     , (
        SELECT MAT_ID
             , SUM(DECODE(OPER, 'A1150', QTY_1, 0)) AS A1150
             , SUM(DECODE(OPER, 'AZ010', QTY_1, 0)) AS AZ010
             , SUM(QTY_1) AS WIP_TTL
             , SUM(DECODE(HOLD_FLAG, 'Y', QTY_1, 0)) AS HOLD_WIP
          FROM RWIPLOTSTS
         WHERE 1=1
           AND FACTORY = 'HMVA2'
           AND LOT_TYPE = 'W'
           AND LOT_DEL_FLAG = ' '
           AND OPER BETWEEN 'A0950' AND 'AZ010'
         GROUP BY MAT_ID
       ) WIP
 WHERE 1=1
   AND MAT.MAT_ID = MON_PLN.MAT_ID(+)
   AND MAT.MAT_ID = WEEK_PLN.MAT_ID(+)
   AND MAT.MAT_ID = MON_AO.MAT_ID(+)
   AND MAT.MAT_ID = WIP.MAT_ID(+)
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_TYPE= 'FG' 
   AND MAT.DELETE_FLAG <> 'Y' 
 GROUP BY MAT.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10,  ' ',  ' ', MAT.MAT_ID,  ' ', SUBSTR(MAT.MAT_ID, LENGTH(MAT.MAT_ID) - 2)
 HAVING (
         SUM(NVL(MON_AO.SHP_MONTH,0)) + SUM(NVL(MON_AO.SHP_WEEK_TTL,0)) + SUM(NVL(MON_AO.SHP_YESTERDAY,0)) + 
         SUM(NVL(WIP.WIP_TTL,0)) + 
         SUM(NVL(MON_PLN.MON_PLAN,0))  + SUM(NVL(WEEK_PLN.D0_PLAN,0)) + SUM(NVL(WEEK_PLN.WEEK1_TTL,0))
         ) <> 0
 ORDER BY DECODE(MAT.MAT_GRP_1, 'SE', 1, 'HX', 2, 3), MAT.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10,  ' ',  ' ', MAT.MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') - 7, 'YYYYMMDD'))) PREV_WEEK                
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')) CUR_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 14, 'YYYYMMDD'))) NEXT_NEXT_WEEK                  
FROM DUAL         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070504'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') - 7, 'YYYYMMDD'))) PREV_WEEK                
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')) CUR_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 14, 'YYYYMMDD'))) NEXT_NEXT_WEEK                  
FROM DUAL         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH V_CAL AS (         
SELECT MIN(DAYSTR) START_DAY         
     , MAX(DAYSTR) END_DAY         
     , MAX((SELECT SYS_YEAR FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603' )) YEAR         
     , MAX((SELECT SYS_MONTH FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')) MONTH         
     , MAX((SELECT PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')) CUR_WEEK         
     , MAX((SELECT PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK         
     , MAX((SELECT TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') - 1, 'YYYYMMDD') FROM DUAL)) PREV_DAY         
     , '20200603' TODAY         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')) YEAR_CUR_WEEK         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 7, 'YYYYMMDD'))) YEAR_NEXT_WEEK         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200603', 'YYYYMMDD') + 14, 'YYYYMMDD'))) YEAR_NEXT_NEXT_WEEK         
     , MAX(CASE WHEN GUBUN = 'MON' THEN START_T ELSE '' END) MONTH_START         
     , MAX(CASE WHEN GUBUN = 'MON' THEN END_T ELSE '' END) MONTH_END         
     , MAX(CASE WHEN GUBUN = 'WEEK' THEN START_T ELSE '' END) WEEK_START         
     , MAX(CASE WHEN GUBUN = 'WEEK' THEN END_T ELSE '' END) WEEK_END         
  FROM (SELECT 'MON' GUBUN, B.SYS_YEAR, B.SYS_MONTH, B.SYS_DAY, B.PLAN_WEEK, B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0') AS DAYSTR, MIN(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER() START_T, MAX(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER() END_T         
          FROM MWIPCALDEF A, MWIPCALDEF B         
         WHERE A.CALENDAR_ID = 'OTD'         
           AND A.SYS_DATE = '20200603'         
           AND A.CALENDAR_ID = B.CALENDAR_ID         
           AND A.SYS_YEAR = B.SYS_YEAR         
           AND A.SYS_MONTH = B.SYS_MONTH         
           AND A.SYS_DATE >= B.SYS_DATE         
        UNION ALL         
        SELECT 'WEEK', B.SYS_YEAR, B.SYS_MONTH, B.SYS_DAY, B.PLAN_WEEK, B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0') AS DAYSTR, MIN(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER(), MAX(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER()         
          FROM MWIPCALDEF A, MWIPCALDEF B         
         WHERE A.CALENDAR_ID = 'OTD'         
           AND A.SYS_DATE = '20200603'         
           AND A.CALENDAR_ID = B.CALENDAR_ID         
           AND A.SYS_YEAR = B.SYS_YEAR         
           AND A.PLAN_WEEK = B.PLAN_WEEK         
           AND A.SYS_DATE >= B.SYS_DATE)         
)          
, V_MAT AS (         
SELECT DISTINCT REPLACE(BOM.MATCODE, '-O', '') AS MATCODE, MAX(DES.DESCRIPT) DESCRIPT/*, MAT.MAT_ID*/, MAT.VENDOR_ID, MAT.MAT_CMF_11, NVL(PROD.MAT_ID,MAT.MAT_ID) MAT_ID                                            
  FROM MWIPMATDEF MAT                    
     , (SELECT /*+ ORDERED */MATCODE, PARTNUMBER, RESV_FLAG_1                   
          FROM CWIPBOMDEF B                  
             , MWIPMATDEF M                  
         WHERE B.MATCODE = M.MAT_ID                  
           AND M.MAT_TYPE = 'PB'                  
           AND B.RESV_FLAG_1 = 'Y'                  
           AND B.DELFLAG = ' ') BOM                           
     , (SELECT DISTINCT REPLACE(MATCODE, '-O', '') MATCODE, MAX(DESCRIPT) DESCRIPT                            
          FROM CWIPBOMDEF                            
         WHERE 1 = 1                           
           AND RESV_FLAG_1 = 'Y'                                              
           AND DELFLAG = ' '                           
         GROUP BY REPLACE(MATCODE, '-O', '')) DES          
     , HRTDMCPROUT@RPTTOMES PROD                                          
 WHERE MAT.MAT_ID = BOM.PARTNUMBER                                             
   AND MAT.FACTORY = 'HMVA2'                                             
   AND MAT.MAT_GRP_10 IN ('EMCP', 'EMMC')                                             
   AND MAT.MAT_ID LIKE '%'        
   AND MAT.VENDOR_ID <> ' '                           
   AND MAT.VENDOR_ID NOT LIKE 'PMSE000%'              
   AND REPLACE(BOM.MATCODE, '-O', '') = DES.MATCODE            
   AND PROD.MAT_KEY(+) = MAT.MAT_ID                        
 GROUP BY REPLACE(BOM.MATCODE, '-O', ''), MAT.MAT_ID, MAT.VENDOR_ID, MAT.MAT_CMF_11, PROD.MAT_ID             
)         
, V_WEEK_PLAN AS (         
SELECT MAT.MAT_ID                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END) AS W0                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END) AS W1                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END) AS W2                  
  FROM MWIPMATDEF MAT                  
     , (                  
        SELECT MAT_ID                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_CUR_WEEK, WW_QTY, 0)) AS W0                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_NEXT_WEEK, WW_QTY, 0)) AS W1                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_NEXT_NEXT_WEEK, WW_QTY, 0)) AS W2                  
          FROM RWIPPLNWEK, V_CAL                  
         WHERE 1=1                  
           AND FACTORY = 'HMVA2'                  
           AND GUBUN = '3'         
           AND PLAN_WEEK BETWEEN V_CAL.YEAR_CUR_WEEK AND V_CAL.YEAR_NEXT_NEXT_WEEK                  
         GROUP BY MAT_ID                  
       ) PLN                  
 WHERE 1=1                  
   AND MAT.MAT_ID = PLN.MAT_ID                  
   AND MAT.FACTORY = 'HMVA2'                  
   AND MAT.DELETE_FLAG = ' '                  
   AND MAT.MAT_TYPE = 'FG'                  
 GROUP BY MAT.MAT_ID                 
)         
, V_WIP AS (         
SELECT MAT_ID, DA1_AFTER_WIP AS TTL         
  FROM (SELECT MAT_ID         
             , SUM(CASE WHEN OPER BETWEEN 'A0402' AND 'AZ010' THEN QTY ELSE 0 END) DA1_AFTER_WIP         
          FROM (         
                SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_4, MAT_GRP_5         
                     , CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) ELSE QTY_1 END AS QTY         
                  FROM (         
                        SELECT A.MAT_ID, A.OPER, B.OPER_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, QTY_1         
                             , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT          
                          FROM RWIPLOTSTS A          
                             , MWIPOPRDEF B         
                             , MWIPMATDEF C         
                         WHERE  1 = 1           
                           AND A.FACTORY = B.FACTORY          
                           AND A.FACTORY = C.FACTORY          
                           AND A.OPER = B.OPER         
                           AND A.MAT_ID = C.MAT_ID         
                           AND A.FACTORY  = 'HMVA2'          
                           AND A.LOT_DEL_FLAG = ' '         
                           AND A.LOT_TYPE = 'W'         
                           AND A.LOT_CMF_5 LIKE 'P%'          
                           AND (C.MAT_GRP_5 IN ('1st','Merge', '-') OR C.MAT_GRP_5 LIKE 'Middle%')         
                           AND C.DELETE_FLAG = ' '          
                       )         
               )         
         GROUP BY MAT_ID         
       )                  
)         
, V_AO AS (         
SELECT MAT_ID, SUM(WEEK_AO) WEEK_AO, SUM(MONTH_AO) MONTH_AO         
  FROM (SELECT A.MAT_ID          
             , SUM(SHIP_QTY_1) QTY         
             , CASE WHEN WORK_DATE BETWEEN MAX(V_CAL.WEEK_START) AND MAX(V_CAL.WEEK_END) THEN SUM(SHIP_QTY_1)          
                    ELSE 0 END AS WEEK_AO         
             , CASE WHEN WORK_DATE BETWEEN MAX(V_CAL.MONTH_START) AND MAX(V_CAL.MONTH_END) THEN SUM(SHIP_QTY_1)          
                    ELSE 0 END AS MONTH_AO                  
         FROM (                  
              SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3                         
                   , SHIP_QTY_1 AS SHIP_QTY_1                  
                   , SHIP_QTY_2 AS SHIP_QTY_2                  
                FROM (                  
                     SELECT CM_KEY_1 AS FACTORY, MAT_ID                  
                          , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010') OPER                  
                          , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3                        
                         , S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1 SHIP_QTY_1             
                         , S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2 SHIP_QTY_2              
                       FROM RSUMFACMOV                   
                      WHERE FACTORY NOT IN ('RETURN')                       
                     )                        
              )A                  
              , MWIPMATDEF B         
              , V_CAL                 
         WHERE 1=1                   
           AND A.FACTORY  = 'HMVA2'                   
           AND A.FACTORY = B.FACTORY                   
           AND A.MAT_ID = B.MAT_ID                                  
           AND A.MAT_VER = 1                   
           AND B.MAT_VER = 1                   
           AND B.MAT_TYPE = 'FG'                   
           AND A.OPER IN ('AZ010')                  
           AND A.MAT_ID LIKE '%'                    
           AND A.OPER NOT IN ('00001','00002')                   
           AND A.WORK_DATE BETWEEN V_CAL.START_DAY AND V_CAL.END_DAY               
           AND B.MAT_GRP_3 <> '-'         
           AND (B.MAT_GRP_5 IN ('1st','-','Merge')  OR B.MAT_GRP_5 LIKE 'Middle%')         
         GROUP BY A.MAT_ID, WORK_DATE         
     )         
 GROUP BY MAT_ID         
)         
, V_STOCK AS (         
SELECT REPLACE(A.MAT_ID,'-O','') AS MAT_ID         
     , SUM(B.INV_QTY) AS "창고재고"         
     , SUM(B.INV_L_QTY) AS "공정창고"         
     , SUM(E.WIK_WIP) AS "외주재고"          
     , SUM(C.QTY_TTL) AS "현장재고"         
     , SUM(C.QTY_SMT) AS "SMT"         
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS "재고합"         
  FROM MWIPMATDEF A          
     , (          
        SELECT MAT_ID          
             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY            
             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY          
          FROM CWMSLOTSTS@RPTTOMES          
         WHERE 1=1          
           AND QUANTITY> 0          
           AND STORAGE_LOCATION IN ('1000', '1001', '1003')          
         GROUP BY MAT_ID          
         UNION ALL 
        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
          FROM CWIPMATSLP@RPTTOMES 
         WHERE 1=1 
           AND RECV_FLAG = ' ' 
           AND MAT_ID LIKE 'R16%' 
           AND IN_TIME BETWEEN '20200601000000' AND '20200603235959' 
         GROUP BY MAT_ID 
       ) B          
     , (          
        SELECT MAT_ID         
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1          
                        ELSE 0          
                   END) AS GRADE_A          
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1          
                        ELSE 0         
                   END) AS GRADE_B          
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1          
                        ELSE 0          
                   END) AS IN_QTY          
             , COUNT(*) AS LOT_TTL          
             , SUM(CASE WHEN A.OPER = 'M0330' THEN QTY_1         
                        ELSE 0 END) QTY_SMT                   
             , SUM(CASE WHEN A.OPER <> 'M0330' THEN QTY_1         
                        ELSE 0 END) QTY_TTL           
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+)          
           AND A.LOT_ID = B.LOT_ID(+)          
           AND A.FACTORY = 'HMVA2'         
           AND A.LOT_TYPE != 'W'         
           AND A.LOT_DEL_FLAG = ' '         
           AND A.LOT_CMF_2 = '-'          
           AND A.LOT_CMF_9 != ' '          
           AND A.QTY_1 > 0          
           AND A.OPER NOT IN  ('00001', '00002', 'V0000')          
         GROUP BY A.MAT_ID           
       ) C          
     , (          
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP          
          FROM ISTMWIKWIP@RPTTOMES, V_CAL          
         WHERE 1=1          
                   AND CUTOFF_DT = '20200603' || TO_CHAR(SYSDATE, 'HH24')          
         GROUP BY MAT_ID          
       ) E          
 WHERE 1=1         
   AND A.MAT_ID = B.MAT_ID(+)         
   AND A.MAT_ID = C.MAT_ID(+)         
   AND A.MAT_ID = E.MAT_ID(+)         
   AND A.FACTORY = 'HMVA2'         
   AND A.MAT_ID LIKE '%'         
 GROUP BY REPLACE(A.MAT_ID,'-O','')         
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) > 0         
 ORDER BY REPLACE(A.MAT_ID,'-O','')         
)         
, V_PCB AS (         
SELECT REPLACE(A.MAT_ID,'-O','')  AS MAT_ID         
     , SUM(DECODE(WORK_DATE, V_CAL.PREV_DAY, END_QTY)) AS PREV_DAY         
     , SUM(DECODE(WORK_DATE, V_CAL.TODAY, END_QTY)) AS CURRENT_DAY         
  FROM (         
        SELECT FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3         
             , SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1) AS END_QTY         
          FROM RSUMWIPMOV, V_CAL         
         WHERE 1=1         
           AND FACTORY = 'HMVA2'         
           AND WORK_DATE BETWEEN V_CAL.PREV_DAY AND V_CAL.TODAY         
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%')         
         GROUP BY FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3          
       ) A         
     , MWIPMATDEF B         
     , V_CAL         
 WHERE 1=1         
   AND A.FACTORY = B.FACTORY         
   AND A.MAT_ID = B.MAT_ID         
   AND A.END_QTY > 0         
   AND A.OPER IN ('V0000')         
 GROUP BY REPLACE(A.MAT_ID,'-O','')         
)         
, V_MON_PLN AS (         
SELECT MAT_ID, RESV_FIELD3 SOP_PLN         
  FROM CWIPPLNMON, V_CAL         
 WHERE FACTORY = 'HMVA2'         
   AND PLAN_MONTH = V_CAL.YEAR || LPAD(V_CAL.MONTH, 2, '0')           
   AND RESV_FIELD3 <> ' '          
)         
, V_ORDER AS (         
SELECT REPLACE(SMM.MATCODE, '-O', '')    AS MATCODE         
     , SUM(SMM.ORDER_QTY) AS ORDER_QTY          
  FROM RSUMWIPMAT SMM         
 GROUP BY REPLACE(SMM.MATCODE, '-O', '')         
)         
SELECT MAT.MATCODE, MAT.DESCRIPT,  ' ', MAT.MAT_CMF_11         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" - BY_MATCODE."현장재고",0) AS "당주 SMT 잔량"         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" - (BY_MATCODE."현장재고" + BY_MATCODE."외주재고"),0) AS "차주 불출 잔량"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" - (BY_MATCODE."현장재고" + BY_MATCODE."외주재고")) / (7 - (SYSDATE - (TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE,2) - 7, 'YYYYMMDD')||'220000', 'YYYYMMDDHH24MISS'))) - 1),0)  AS "차주 일필요"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공") + MAT."SOP 차주 계획" - BY_MATCODE."현장재고",0) AS "차주 입고 총량"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" -(BY_MATCODE."현장재고")) / (7 - (SYSDATE - (TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE,2) - 7, 'YYYYMMDD')||'220000', 'YYYYMMDDHH24MISS'))) ),0)  AS "차주 입고 일필요"         
     , ROUND(((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공") + MAT."SOP 차주 계획" - BY_MATCODE."현장재고" + MAT."SOP 차차주 계획")/1,0) AS "차차주 입고 필요량"         
     , ROUND(((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" -(BY_MATCODE."현장재고") + MAT."SOP 차차주 계획") / (14 - (SYSDATE - (TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE,2) - 7, 'YYYYMMDD')||'220000', 'YYYYMMDDHH24MISS'))) ))/1,0)  AS "차차주 일필요량"         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공",0) AS "SOP 당주 잔량"         
     , ROUND(MAT."SOP 차주 계획",0) AS "SOP 차주 계획"         
     , ROUND(MAT."SOP 차차주 계획",0) AS "SOP 차차주 계획"         
     , ROUND(BY_MATCODE.TTL,0) AS TTL         
     , ROUND(BY_MATCODE."현장재고",0) AS "현장재고"         
     , ROUND(BY_MATCODE."SMT",0) AS "SMT"         
     , ROUND(BY_MATCODE."외주재고",0) AS "외주재고"         
     , ROUND(BY_MATCODE."공정창고",0) AS "공정창고"          
     , ROUND(BY_MATCODE."창고재고",0) AS "창고재고"          
     , (BY_MATCODE.TTL - (MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획")) AS "당주+차주 PCB 부족"         
     , ROUND(BY_MATCODE."발주잔량",0) AS "발주잔량"         
     , 0 AS "MZ 소요량"         
     , 0 AS "전일 PCB 불출실적"         
     , 0 AS "당일 PCB 불출실적"         
     , ROUND(BY_MATCODE."전일 PCB 입고 실적",0) AS "전일 PCB 입고 실적"         
     , ROUND(BY_MATCODE."당일 PCB 입고 실적",0) AS "당일 PCB 입고 실적"         
     , ROUND(MAT."월계획",0) AS "월계획"         
     , ROUND(MAT."달AO실적"+MAT."DA이후재공"+BY_MATCODE."현장재고",0) AS "작업 완료"         
     , ROUND(MAT."월계획" - (MAT."달AO실적"+MAT."DA이후재공"+BY_MATCODE."현장재고") ,0) AS "SMT 잔량"              
     , ROUND(MAT."DA이후재공",1) AS "DA이후재공"         
     , ROUND(MAT."주AO실적",1) AS "주AO실적"          
     , ROUND(MAT."달AO실적",1) AS "달AO실적"          
  FROM (SELECT          
               V_MAT.MATCODE, MAX(V_MAT.DESCRIPT) DESCRIPT,  ' ', V_MAT.MAT_CMF_11          
             , NVL(SUM(V_WEEK_PLAN.W0),0) AS "SOP 당주 계획"          
             , NVL(SUM(V_WEEK_PLAN.W1),0) AS "SOP 차주 계획"         
             , NVL(SUM(V_WEEK_PLAN.W2),0) AS "SOP 차차주 계획"         
             , NVL(SUM(V_AO.WEEK_AO),0)   AS "주AO실적"         
             , NVL(SUM(V_AO.MONTH_AO),0)  AS "달AO실적"         
             , NVL(SUM(V_MON_PLN.SOP_PLN),0) AS "월계획"         
             , NVL(SUM(V_AO.MONTH_AO + V_WIP.TTL),0) AS "작업 완료"         
             , NVL(SUM(V_MON_PLN.SOP_PLN - (V_AO.MONTH_AO + V_WIP.TTL)),0) AS "SMT 잔량"         
             , NVL(SUM(V_WIP.TTL),0) AS "DA이후재공"         
          FROM V_MAT         
             , V_WEEK_PLAN         
             , V_WIP         
             , V_AO         
             , V_MON_PLN         
         WHERE V_MAT.MAT_ID = V_WEEK_PLAN.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_WIP.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_AO.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_MON_PLN.MAT_ID(+)         
         GROUP BY V_MAT.MATCODE, ' ', V_MAT.MAT_CMF_11          
       ) MAT         
     , (SELECT V_STOCK.MAT_ID         
             , NVL(V_STOCK."창고재고",0) + NVL(V_STOCK."공정창고",0) + NVL(V_STOCK."외주재고",0)  + NVL(V_STOCK."현장재고",0) + NVL(V_STOCK."SMT",0) AS TTL         
             , NVL(V_STOCK."현장재고",0) AS "현장재고"         
             , NVL(V_STOCK."SMT",0) AS "SMT"         
             , NVL(V_STOCK."외주재고",0) AS "외주재고"         
             , NVL(V_STOCK."공정창고",0) AS "공정창고"         
             , NVL(V_STOCK."창고재고",0) AS "창고재고"         
             , NVL(V_ORDER.ORDER_QTY, 0) AS "발주잔량"         
             , NVL(V_PCB.PREV_DAY,0) AS "전일 PCB 입고 실적"         
             , NVL(V_PCB.CURRENT_DAY,0) AS "당일 PCB 입고 실적"         
          FROM V_STOCK         
             , V_PCB         
             , V_ORDER         
         WHERE 1 = 1         
           AND V_STOCK.MAT_ID = V_PCB.MAT_ID(+)         
           AND V_STOCK.MAT_ID = V_ORDER.MATCODE(+)         
       ) BY_MATCODE                    
 WHERE MAT.MATCODE = BY_MATCODE.MAT_ID(+)                
   AND MAT.MATCODE LIKE '%'         
 ORDER BY 1,2,3,4                

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010204'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202006', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , A.ORI_PLAN AS "월계획"
     , A.MON_PLAN AS "월계획Rev"
     , A.MON_PLAN -A.ORI_PLAN AS "월계획 차이"
     , A.TARGET_MON, A.ASSY_MON
     , DECODE(A.MON_PLAN, 0, 0, ROUND((A.ASSY_MON/A.MON_PLAN)*100, 1)) JINDO, A.DEF, WEEK_PLAN, ASSY_WEEK, WEEK_PLAN-ASSY_WEEK AS "주계획 차이"
     , A.HMK3A, A.FINISH, A.MOLD, A.WB, A.DA, A.SAW, A.STOCK, A.HMK3A+A.FINISH+A.MOLD+A.WB+A.DA+A.SAW+A.STOCK AS TTL, A.TARGET_DAY AS "일목표", A.AO0, A.AO1, A.AO2 
     , A.RCV0, A.RCV1, A.RCV2, A.SW0, A.SW1, A.SW2, A.DA0, A.DA1, A.DA2, A.WB0, A.WB1, A.WB2, A.MD0, A.MD1, A.MD2, A.TF0, A.TF1, A.TF2 
     , ROUND(B.TAT1*24,2)
     , CASE WHEN HIST_AO > 0 THEN '●' END AS HIST_AO
  FROM ( 
        SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS MAJOR, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
             , SUM(NVL(A.MON_PLAN,0)) AS MON_PLAN 
             , SUM(NVL(A.ORI_PLAN,0)) AS ORI_PLAN 
             , SUM(NVL(A.WEEK_PLAN,0)) AS WEEK_PLAN 
             , SUM(NVL(A.ASSY_WEEK,0)) AS ASSY_WEEK 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) * 10) / 100),0) AS TARGET_MON 
             , SUM(NVL(A.ASSY_MON,0)) AS ASSY_MON 
             , SUM(NVL(A.ASSY_MON,0)) - ROUND(((SUM(NVL(A.MON_PLAN,0)) * 10) / 100),1) AS DEF   
             , SUM(NVL(A.AO0,0)) AS AO0 
             , SUM(NVL(A.AO1,0)) AS AO1 
             , SUM(NVL(A.AO2,0)) AS AO2 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) - SUM(NVL(A.ASSY_MON,0))) /28), 1) AS TARGET_DAY 
             , SUM(NVL(A.RCV0,0)) AS RCV0
             , SUM(NVL(A.RCV1,0)) AS RCV1
             , SUM(NVL(A.RCV2,0)) AS RCV2
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW0 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW0 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT) ELSE 0 END 
                                   ELSE D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT)
                              END),0)
                    ),0) AS SW0
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW1 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW1 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW1
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW2 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW2 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA02,0) + NVL(D.DA03,0) + NVL(D.DA04,0) + NVL(D.DA05,0) + NVL(D.DA06,0) + NVL(D.DA07,0) + NVL(D.DA08,0) + NVL(D.DA09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA02, '3', D.DA03, '4', D.DA04, '5', D.DA05, '6', D.DA06, '7', D.DA07, '8', D.DA08, '9', D.DA09, 0)
                             ELSE D.DA0
                        END),0)
                   ) AS DA0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA12,0) + NVL(D.DA13,0) + NVL(D.DA14,0) + NVL(D.DA15,0) + NVL(D.DA16,0) + NVL(D.DA17,0) + NVL(D.DA18,0) + NVL(D.DA19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA12, '3', D.DA13, '4', D.DA14, '5', D.DA15, '6', D.DA16, '7', D.DA17, '8', D.DA18, '9', D.DA19, 0)
                             ELSE D.DA1
                        END),0)
                   ) AS DA1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA22,0) + NVL(D.DA23,0) + NVL(D.DA24,0) + NVL(D.DA25,0) + NVL(D.DA26,0) + NVL(D.DA27,0) + NVL(D.DA28,0) + NVL(D.DA29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA22, '3', D.DA23, '4', D.DA24, '5', D.DA25, '6', D.DA26, '7', D.DA27, '8', D.DA28, '9', D.DA29, 0)
                             ELSE D.DA2
                        END),0)
                   ) AS DA2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB02,0) + NVL(D.WB03,0) + NVL(D.WB04,0) + NVL(D.WB05,0) + NVL(D.WB06,0) + NVL(D.WB07,0) + NVL(D.WB08,0) + NVL(D.WB09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB02, '3', D.WB03, '4', D.WB04, '5', D.WB05, '6', D.WB06, '7', D.WB07, '8', D.WB08, '9', D.WB09, 0)
                             ELSE D.WB0
                        END),0)
                   ) AS WB0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB12,0) + NVL(D.WB13,0) + NVL(D.WB14,0) + NVL(D.WB15,0) + NVL(D.WB16,0) + NVL(D.WB17,0) + NVL(D.WB18,0) + NVL(D.WB19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB12, '3', D.WB13, '4', D.WB14, '5', D.WB15, '6', D.WB16, '7', D.WB17, '8', D.WB18, '9', D.WB19, 0)
                             ELSE D.WB1
                        END),0)
                   ) AS WB1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB22,0) + NVL(D.WB23,0) + NVL(D.WB24,0) + NVL(D.WB25,0) + NVL(D.WB26,0) + NVL(D.WB27,0) + NVL(D.WB28,0) + NVL(D.WB29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB22, '3', D.WB23, '4', D.WB24, '5', D.WB25, '6', D.WB26, '7', D.WB27, '8', D.WB28, '9', D.WB29, 0)
                             ELSE D.WB2
                        END),0)
                   ) AS WB2
             , SUM(NVL(D.MD0,0)) AS MD0, SUM(NVL(D.MD1,0)) AS MD1, SUM(NVL(D.MD2,0)) AS MD2 
             , SUM(NVL(D.TF0,0)) AS TF0, SUM(NVL(D.TF1,0)) AS TF1, SUM(NVL(D.TF2,0)) AS TF2 
             , SUM(NVL(F.V0,0)) AS STOCK
             , SUM(NVL(F.V1,0)+NVL(F.V2,0)) AS SAW
             , SUM(NVL(F.V3,0)+NVL(F.V4,0)+NVL(F.V17,0)) AS DA
             , SUM(NVL(F.V5+F.V16,0)) AS WB
             , SUM(NVL(F.V6,0)+NVL(F.V7,0)) AS MOLD
             , SUM(NVL(F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14,0)) AS FINISH
             , SUM(NVL(F.V15,0)) AS HMK3A
             , SUM(NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17,0)) AS TTL
             , SUM(HIST_AO) AS HIST_AO 
          FROM ( 
                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8 
                     , DECODE(MAT.MAT_GRP_1,'SE',MAT.MAT_GRP_9,' ') AS MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT  
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.RESV_FIELD1 / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.RESV_FIELD1)
                       END MON_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.PLAN_QTY_ASSY / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.PLAN_QTY_ASSY)
                       END ORI_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(WEEK_PLAN.WEEK_PLAN / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_PLAN.WEEK_PLAN)
                            END WEEK_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(WEEK_AO.WEEK_AO / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_AO.WEEK_AO)
                            END ASSY_WEEK
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.ASSY_MON / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.ASSY_MON)
                       END ASSY_MON
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO0 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO0)
                       END AO0
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO1 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO1)
                       END AO1
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO2 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO2)
                       END AO2
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV0 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV0 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV0 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV0 / MAT.COMP_CNT)
                             END, 0) AS RCV0
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV1 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV1 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV1 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV1 / MAT.COMP_CNT)
                             END, 0) AS RCV1
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV2 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV2 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV2 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV2 / MAT.COMP_CNT)
                             END, 0) AS RCV2
                     , SUM(HIST_AO.HIST_AO) AS HIST_AO 
                  FROM VWIPMATDEF MAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                          FROM ( 
                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                  FROM ( 
                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                          FROM CWIPPLNMON 
                                         WHERE 1=1 
                                           AND FACTORY = 'HMVA2' 
                                         GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                       ) 
                                 GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                               ) 
                       ) PLAN 
                     , ( 
                        SELECT FACTORY,MAT_ID, SUM(WW_QTY) AS WEEK_PLAN 
                          FROM RWIPPLNWEK 
                         WHERE FACTORY = 'HMVA2' 
                           AND PLAN_WEEK = '202023'
                           AND GUBUN = '3' 
                        GROUP BY FACTORY,MAT_ID 
                       ) WEEK_PLAN 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(AO0) AS AO0 
                             , SUM(AO1) AS AO1 
                             , SUM(AO2) AS AO2 
                             , SUM(ASSY_MON) AS ASSY_MON 
                          FROM (
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200601', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO0 
                                     , SUM(DECODE(WORK_DATE,'20200602', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO1
                                     , SUM(DECODE(WORK_DATE,'20200603', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO2
                                     , 0 AS ASSY_MON  
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200601' AND '20200603'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                                 UNION ALL 
                                SELECT MAT_ID 
                                     , 0, 0, 0 
                                     , SUM(SHP_QTY_1) AS ASSY_MON 
                                  FROM VSUMWIPOUT 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200601' AND '20200603'
                                   AND FACTORY = 'HMVA2' 
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID 
                       ) MON_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200530' AND '20200603'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) WEEK_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(DECODE(WORK_DATE,'20200601', NVL(RCV_QTY_1,0), 0)) AS RCV0
                             , SUM(DECODE(WORK_DATE,'20200602', NVL(RCV_QTY_1,0), 0)) AS RCV1
                             , SUM(DECODE(WORK_DATE,'20200603', NVL(RCV_QTY_1,0), 0)) AS RCV2
                          FROM VSUMWIPRCV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200601' AND '20200603'
                           AND LOT_TYPE = 'W' 
                           AND FACTORY = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                         GROUP BY MAT_ID 
                       ) DAY_RCV  
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS HIST_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN TO_CHAR(ADD_MONTHS('20200603', -6), 'YYYYMMDD') AND '20200603'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) HIST_AO 
                 WHERE 1 = 1 
                   AND MAT.FACTORY =PLAN.FACTORY(+) 
                   AND MAT.FACTORY =WEEK_PLAN.FACTORY(+) 
                   AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = MON_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = DAY_RCV.MAT_ID(+) 
                   AND MAT.MAT_ID = HIST_AO.MAT_ID(+) 
                   AND MAT.FACTORY = 'HMVA2' 
                   AND PLAN.PLAN_MONTH(+) = '202006' 
                   AND MAT.MAT_TYPE= 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT
               ) A  
             , ( 
                SELECT MAT_ID 
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200601', QTY,0))) AS SW0
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200602', QTY,0))) AS SW1
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200603', QTY,0))) AS SW2
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA0
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA1
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA2
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB0
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB1
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB2
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200601', QTY,0))) AS MD0
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200602', QTY,0))) AS MD1
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200603', QTY,0))) AS MD2
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200601', QTY,0))) AS TF0
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200602', QTY,0))) AS TF1
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200603', QTY,0))) AS TF2
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA02
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA12
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA22
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA03
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA13
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA23
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA04
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA14
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA24
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA05
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA15
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA25
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA06
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA16
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA26
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA07
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA17
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA27
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA08
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA18
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA28
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200601', QTY,0))) AS DA09
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200602', QTY,0))) AS DA19
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200603', QTY,0))) AS DA29
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB02
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB12
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB22
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB03
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB13
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB23
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB04
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB14
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB24
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB05
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB15
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB25 
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB06
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB16
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB26 
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB07
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB17
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB27 
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB08
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB18
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB28 
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200601', QTY,0))) AS WB09
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200602', QTY,0))) AS WB19
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200603', QTY,0))) AS WB29 
                  FROM ( 
                        SELECT A.MAT_ID,A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                             , SUM(A.S1_END_QTY_1 + A.S2_END_QTY_1 + A.S3_END_QTY_1 + A.S1_END_RWK_QTY_1 + A.S2_END_RWK_QTY_1 + A.S3_END_RWK_QTY_1 ) AS QTY 
                          FROM RSUMWIPMOV A 
                             , MWIPOPRDEF B 
                         WHERE 1=1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.OPER = B.OPER 
                           AND A.FACTORY = 'HMVA2' 
                           AND B.OPER_GRP_7 IN ('SAW','D/A','W/B','MOLD','SIG','V/I') 
                           AND A.MAT_VER = 1 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND A.WORK_DATE BETWEEN '20200601' AND '20200603'
                           AND A.LOT_TYPE = 'W'
                           AND A.OPER <> 'A1760'
                         GROUP BY A.MAT_ID, A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                       ) 
                 GROUP BY MAT_ID 
               ) D  
             , ( 
                SELECT MAT_ID 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)), 0) AS V0 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)), 0) AS V1 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)), 0) AS V2 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)), 0) AS V3 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)), 0) AS V4 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)), 0) AS V5 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)), 0) AS V6 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)), 0) AS V7 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)), 0) AS V8 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)), 0) AS V9 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)), 0) AS V10 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)), 0) AS V11 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)), 0) AS V12 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)), 0) AS V13 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)), 0) AS V14 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)), 0) AS V15 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)), 0) AS V16 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)), 0) AS V17 
                  FROM (  
                        SELECT MAT_ID, OPER, OPER_GRP_1 
                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM ( 
                                SELECT A.MAT_ID, B.OPER, C.MAT_GRP_1  
                                     , CASE WHEN C.MAT_GRP_3 IN ('FCBGA', 'FCFBGA') AND B.OPER = 'A0800' THEN 'D/A' ELSE B.OPER_GRP_1 END OPER_GRP_1  
                                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN QTY_1/NET_DIE ELSE QTY_1 END AS QTY_1
                                     , COMP_CNT  
                                     , HX_COMP_MIN, HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C 
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.FACTORY = C.FACTORY 
                                   AND A.OPER = B.OPER 
                                   AND A.MAT_ID = C.MAT_ID 
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.DELETE_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                                   AND REGEXP_LIKE(C.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                                   AND A.LOT_CMF_5 LIKE 'P%'
                               ) 
                       )  
                 GROUP BY MAT_ID 
               ) F 
         WHERE 1 = 1 
           AND A.MAT_ID = D.MAT_ID(+)
           AND A.MAT_ID = F.MAT_ID(+)
           AND A.MAT_ID LIKE '%' 
         GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
        HAVING (
                NVL(SUM(A.MON_PLAN), 0)+ 
                NVL(SUM(A.ORI_PLAN), 0)+ 
                NVL(SUM(A.ASSY_MON), 0)+ 
                NVL(SUM(A.WEEK_PLAN), 0)+ 
                NVL(SUM(A.AO0), 0)+ NVL(SUM(A.AO1), 0)+ NVL(SUM(A.AO2), 0)+ 
                NVL(SUM(A.RCV0), 0)+ NVL(SUM(A.RCV1), 0)+ NVL(SUM(A.RCV2), 0)+ 
                NVL(SUM(D.SW0), 0)+ NVL(SUM(D.SW1), 0)+ NVL(SUM(D.SW2), 0)+ 
                NVL(SUM(D.DA0), 0)+ NVL(SUM(D.DA1), 0)+ NVL(SUM(D.DA2), 0)+ 
                NVL(SUM(D.WB0), 0)+ NVL(SUM(D.WB1), 0)+ NVL(SUM(D.WB2), 0)+ 
                NVL(SUM(D.MD0), 0)+ NVL(SUM(D.MD1), 0)+ NVL(SUM(D.MD2), 0)+  
                NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ 
                NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17), 0)  
               ) <> 0
       ) A 
     , ( 
        SELECT MAT_GRP_1 AS CUSTOMER
             , MAT_GRP_10 AS PKG 
             , SUM(DECODE(SHIP_DATE,'20200601', TAT, 0)) AS TAT0 
             , SUM(DECODE(SHIP_DATE,'20200602', TAT, 0)) AS TAT1 
             , SUM(DECODE(SHIP_DATE,'20200603', TAT, 0)) AS TAT2 
          FROM ( 
                SELECT MAT.MAT_GRP_1,MAT.MAT_GRP_10,TAT.SHIP_DATE,SUM(TAT.TOTAL_TAT_QTY),SUM(SHIP.SHIP_QTY),ROUND(DECODE(SUM(SHIP.SHIP_QTY),0,0,(SUM(TAT.TOTAL_TAT_QTY)/SUM(SHIP.SHIP_QTY))),4) AS TAT 
                  FROM ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE 
                             , ROUND(SUM(TOTAL_TAT_QTY),4) AS TOTAL_TAT_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER <> 'A0000' 
                           AND SHIP_DATE BETWEEN '20200601' AND '20200603'
                         GROUP BY FACTORY,MAT_ID,SHIP_DATE 
                       ) TAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE,SHIP_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER = 'AZ010' 
                           AND SHIP_DATE BETWEEN '20200601' AND '20200603'
                       ) SHIP 
                     , MWIPMATDEF MAT 
                 WHERE 1=1 
                   AND TAT.FACTORY = SHIP.FACTORY 
                   AND TAT.MAT_ID = SHIP.MAT_ID 
                   AND TAT.SHIP_DATE = SHIP.SHIP_DATE 
                   AND TAT.MAT_ID = MAT.MAT_ID 
                   AND MAT.MAT_TYPE = 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                   AND MAT.FACTORY = 'HMVA2' 
                 GROUP BY MAT_GRP_1,MAT_GRP_10,TAT.SHIP_DATE
               ) 
         GROUP BY MAT_GRP_1, MAT_GRP_10 
       ) B  
 WHERE 1=1 
   AND A.CUSTOMER = B.CUSTOMER(+) 
   AND A.PKG = B.PKG(+) 
   AND A.PKG <> '-' 
   AND NVL(ORI_PLAN,0) + NVL(MON_PLAN,0) + NVL(TARGET_MON,0) + NVL(ASSY_MON,0) + NVL(WEEK_PLAN,0) + NVL(DEF,0) + NVL(AO0,0) + NVL(AO1,0) + NVL(AO2,0) + NVL(A.RCV0,0) + NVL(A.RCV1,0) + NVL(A.RCV2,0) + NVL(A.SW0,0) 
     + NVL(A.SW1,0) + NVL(A.SW2,0) + NVL(A.DA0,0) + NVL(A.DA1,0) + NVL(A.DA2,0) + NVL(A.WB0,0) + NVL(A.WB1,0) + NVL(A.WB2,0) + NVL(A.MD0,0) + NVL(A.MD1,0) + NVL(A.MD2,0) + NVL(A.TF0,0) 
     + NVL(A.TF1,0) + NVL(A.TF2,0) + NVL(TTL,0) <> 0 
 ORDER BY DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200603', '20200610', '20200617', '20200624', '20200701')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070505'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200603', '20200610', '20200617', '20200624', '20200701')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '
     , ROUND(SUM(PLN_W1) / 1, 0) AS PLN_W1
     , ROUND(SUM(SMT) / 1, 0) AS SMT_END
     , ROUND(SUM(AO_QTY) / 1, 0) AS AO_QTY
     , ROUND(SUM(AFTER_DA1) / 1, 0) AS AFTER_DA1
     , ROUND(SUM(SMT_DEF) / 1, 0) AS SMT_DEF
     , ROUND(SUM(SMT_DEF2) / 1, 0) AS SMT_DEF2
     , ROUND(SUM(SMT_DEF3) / 1, 0) AS SMT_DEF3
     , ROUND(SUM(SMT_OUT_TODAY) / 1, 0) AS SMT_OUT_TODAY
     , ROUND(SUM(SMT_OUT_YESTERDAY) / 1, 0) AS SMT_OUT_YESTERDAY
     , ROUND(SUM(SMT_TARGET) / 1, 0) AS SMT_TARGET
     , ROUND(SUM(DA1_CAPA) / 1, 0) AS DA1_CAPA
     , ROUND(SUM(BEFORE_DA1) / 1, 0) AS BEFORE_DA1
     , ROUND(SUM(DA_SMT) / 1, 0) AS DA_SMT
     , ROUND(SUM(PCB_SCH) / 1, 0) AS PCB_SCH
     , CASE WHEN SUM(PCB_SCH) = 0 THEN 0
            ELSE ROW_NUMBER() OVER(ORDER BY DECODE(SUM(PCB_SCH),0, 999, SUM(PCB_SCH)))
       END AS RNK
     , ROUND(SUM(TTL_WIP) / 1, 0) AS TTL_WIP
     , ROUND(SUM(SMT) / 1, 0) AS SMT
     , ROUND(SUM(SMT_WAIT) / 1, 0) AS SMT_WAIT
     , ROUND(SUM(WIK_WIP) / 1, 0) AS WIK_WIP
     , ROUND(SUM(INV_L_QTY) / 1, 0) AS INV_L_QTY
     , ROUND(SUM(INV_QTY) / 1, 0) AS INV_QTY
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > SUM(SMT_TARGET) THEN SUM(SMT_TARGET) ELSE SUM(TTL_WAIT) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > SUM(DA1_CAPA) THEN SUM(DA1_CAPA) ELSE SUM(TTL_WAIT) END)
       END / 1, 0) AS GUIDE_D1
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 2) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - SUM(SMT_TARGET) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - SUM(SMT_TARGET) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 2) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - SUM(DA1_CAPA) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - SUM(DA1_CAPA) END)
       END / 1, 0) AS GUIDE_D2
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 3) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 3) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) END)
       END / 1, 0) AS GUIDE_D3
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 4) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 4) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) END)
       END / 1, 0) AS GUIDE_D4
     , ROUND(SUM(ORDER_QTY) / 1, 0) AS ORDER_QTY
     , ROUND(SUM(PLN_W2) / 1, 0) AS PLN_W2
     , ROUND(SUM(PLN_W3) / 1, 0) AS PLN_W3
     , ROUND(SUM(PLN_W4) / 1, 0) AS PLN_W4
     , ROUND(SUM(PLN_W5) / 1, 0) AS PLN_W5
  FROM (
        SELECT MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
             , SUM(NVL(MAT.PLN_W1,0)) AS PLN_W1
             , SUM(NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)) AS SMT_END
             , SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF2
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0) + NVL(MAT.PLN_W3,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF3
             , SUM(NVL(MOV.SMT_OUT_YESTERDAY,0)) AS SMT_OUT_YESTERDAY
             , SUM(NVL(MOV.SMT_OUT_TODAY,0)) AS SMT_OUT_TODAY
             , ROUND(CASE TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'DY') WHEN '월' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)))
                                                                         WHEN '화' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 7
                                                                         WHEN '수' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 6
                                                                         WHEN '목' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 5
                                                                         WHEN '금' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 4
                                                                         WHEN '토' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 3
                                                                         ELSE SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 2
               END, 0) AS SMT_TARGET 
             , SUM(NVL(MAT.DA1_CAPA,0)) AS DA1_CAPA
             , SUM(NVL(MAT.BEFORE_DA1,0)) AS BEFORE_DA1
             , SUM(NVL(WIP.SMT,0) - NVL(MAT.BEFORE_DA1,0)) AS DA_SMT
             , CASE WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 AND SUM(NVL(MAT.BEFORE_DA1,0)) > 0 THEN 72
                    WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 THEN 0
                    ELSE ROUND(SUM(NVL(WIP.SMT,0)) / SUM(NVL(MAT.DA1_CAPA,0)) * 24, 2)
               END AS PCB_SCH
             , SUM(NVL(WIP.SMT,0) + NVL(WIP.SMT_WAIT,0) + NVL(WIK.WIK_WIP,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WIP
             , SUM(NVL(WIP.SMT_WAIT,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WAIT
             , SUM(NVL(WIP.SMT_WAIT,0)) AS SMT_WAIT
             , SUM(NVL(WIK.WIK_WIP,0)) AS WIK_WIP
             , SUM(NVL(WMS.INV_L_QTY,0)) AS INV_L_QTY
             , SUM(NVL(WMS.INV_QTY,0)) AS INV_QTY
             , SUM(NVL(ORD.ORDER_QTY,0)) AS ORDER_QTY
             , SUM(NVL(MAT.PLN_W2,0)) AS PLN_W2
             , SUM(NVL(MAT.PLN_W3,0)) AS PLN_W3
             , SUM(NVL(MAT.PLN_W4,0)) AS PLN_W4
             , SUM(NVL(MAT.PLN_W5,0)) AS PLN_W5
             , SUM(NVL(WIP.SMT,0)) AS SMT
             , SUM(NVL(MAT.AO_QTY,0)) AS AO_QTY
             , SUM(NVL(MAT.AFTER_DA1,0)) AS AFTER_DA1
          FROM (
                SELECT A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
                     , SUM(NVL(B.PLN_W1,0)) AS PLN_W1
                     , SUM(NVL(B.PLN_W2,0)) AS PLN_W2
                     , SUM(NVL(B.PLN_W3,0)) AS PLN_W3
                     , SUM(NVL(B.PLN_W4,0)) AS PLN_W4
                     , SUM(NVL(B.PLN_W5,0)) AS PLN_W5
                     , SUM(NVL(C.AO_QTY,0)) AS AO_QTY
                     , SUM(NVL(D.AFTER_DA1,0)) AS AFTER_DA1
                     , SUM(NVL(D.BEFORE_DA1,0)) AS BEFORE_DA1
                     , SUM(NVL(E.DA1_CAPA,0)) AS DA1_CAPA 
                  FROM (
                        SELECT DISTINCT MAT_CODE, MAT_CODE_DESC, B.VENDOR_ID, B.MAT_CMF_11, B.MAT_ID
                          FROM (
                                SELECT DISTINCT A.MAT_ID AS MAT_CODE, A.MAT_DESC AS MAT_CODE_DESC, B.PARTNUMBER
                                  FROM MWIPMATDEF A
                                     , CWIPBOMDEF B
                                 WHERE 1=1
                                   AND A.MAT_ID = B.MATCODE
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.DELETE_FLAG = ' '
                                   AND A.FIRST_FLOW IN ('HMAI','HMAJ','HMAR','HMBF', 'HMBJ')
                                   AND B.RESV_FLAG_1 = 'Y'
                                   AND B.RESV_FIELD_2 = 'PB'
                                   AND LENGTH(A.MAT_ID) = 10
                               ) A
                             , MWIPMATDEF B
                         WHERE A.PARTNUMBER = B.MAT_ID
                           AND B.FACTORY = 'HMVA2'
                           AND B.DELETE_FLAG = ' '
                           AND REGEXP_LIKE(B.MAT_GRP_5, '-|1st|Merge|Middle*')
                       ) A
                     , (
                        SELECT MAT_ID
                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS PLN_W1
                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS PLN_W2
                             , SUM(DECODE(PLAN_WEEK, '202025', WW_QTY, 0)) AS PLN_W3
                             , SUM(DECODE(PLAN_WEEK, '202026', WW_QTY, 0)) AS PLN_W4
                             , SUM(DECODE(PLAN_WEEK, '202027', WW_QTY, 0)) AS PLN_W5
                          FROM RWIPPLNWEK
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'
                           AND GUBUN = '3'
                           AND PLAN_WEEK BETWEEN '202023' AND '202027'
                         GROUP BY MAT_ID
                       ) B
                     , (
                        SELECT MAT_ID 
                             , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS AO_QTY
                          FROM RSUMFACMOV
                         WHERE 1=1
                           AND CM_KEY_1 = 'HMVA2'
                           AND WORK_DATE BETWEEN '20200530' AND '20200605'
                           AND LOT_TYPE = 'W'
                           AND FACTORY <> 'RETURN'
                         GROUP BY MAT_ID
                       ) C
                     , (
                        SELECT MAT_ID 
                             , SUM(CASE WHEN OPER > 'A0401' THEN QTY_1 ELSE 0 END) AS AFTER_DA1
                             , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1)
                                        WHEN OPER <= 'A0401' THEN QTY_1
                                        ELSE 0 
                                   END) AS BEFORE_DA1 
                          FROM ( 
                                SELECT MAT_ID, OPER, QTY_1 
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                  FROM RWIPLOTSTS A
                                 WHERE 1=1   
                                   AND FACTORY = 'HMVA2'
                                   AND LOT_DEL_FLAG = ' '
                                   AND LOT_TYPE = 'W'
                                   AND OPER <> 'A0000'
                               ) 
                         GROUP BY MAT_ID
                       ) D
                     , (
                        SELECT RES.MAT_ID
                             , SUM(TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0))) AS DA1_CAPA
                          FROM ( 
                                SELECT FACTORY, RES_STS_2 AS MAT_ID, RES_STS_8 AS OPER                      
                                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                                  FROM MRASRESDEF 
                                 WHERE 1 = 1  
                                   AND FACTORY  = 'HMVA2' 
                                   AND RES_CMF_9 = 'Y' 
                                   AND RES_CMF_7 = 'Y' 
                                   AND DELETE_FLAG = ' ' 
                                   AND RES_STS_8 IN ('A0333', 'A0400', 'A0401')
                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
                               ) RES 
                             , CRASUPHDEF UPH 
                         WHERE 1 = 1 
                           AND RES.FACTORY = UPH.FACTORY(+) 
                           AND RES.OPER = UPH.OPER(+) 
                           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
                           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
                           AND RES.MAT_ID = UPH.MAT_ID(+)
                         GROUP BY RES.MAT_ID 
                       ) E
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.MAT_ID = D.MAT_ID(+)
                   AND A.MAT_ID = E.MAT_ID(+)
                 GROUP BY A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
               ) MAT
             , (
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(CASE WHEN GUBUN = 'SMT' THEN QTY_1 ELSE 0 END) SMT
                     , SUM(CASE WHEN GUBUN = 'SMT_WAIT' THEN QTY_1 ELSE 0 END) SMT_WAIT
                  FROM (
                        SELECT MAT_ID, OPER
                             , CASE WHEN OPER <= 'M0330' THEN 'SMT_WAIT' ELSE 'SMT' END AS GUBUN
                             , QTY_1
                          FROM RWIPLOTSTS
                         WHERE 1=1   
                           AND FACTORY = 'HMVA2'
                           AND LOT_TYPE = 'P'
                           AND LOT_DEL_FLAG = ' '
                           AND LOT_CMF_2 = '-'
                           AND LOT_CMF_9 != ' '
                           AND QTY_1 > 0
                           AND OPER <>  'V0000'
                           AND (OPER LIKE 'M%' OR OPER LIKE 'V%')
                       )
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIP
             , (
                SELECT MAT_CODE
                     , SUM(INV_QTY) AS INV_QTY
                     , SUM(INV_L_QTY) AS INV_L_QTY
                  FROM (
                        SELECT MAT_ID AS MAT_CODE
                             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY
                             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY
                          FROM CWMSLOTSTS@RPTTOMES
                         WHERE 1=1
                           AND QUANTITY> 0
                           AND STORAGE_LOCATION IN ('1000', '1001', '1003')
                           AND MAT_ID LIKE 'R16%'
                         GROUP BY MAT_ID 
                         UNION ALL 
                        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                          FROM CWIPMATSLP@RPTTOMES 
                         WHERE 1=1 
                           AND RECV_FLAG = ' ' 
                           AND MAT_ID LIKE 'R16%' 
                           AND IN_TIME BETWEEN '20200601000000' AND '20200603235959' 
                         GROUP BY MAT_ID 
                       )
                 GROUP BY MAT_CODE 
               ) WMS
             , (          
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(LOT_QTY) AS WIK_WIP           
                  FROM ISTMWIKWIP@RPTTOMES
                 WHERE 1=1
                   AND CUTOFF_DT = '20200603' || TO_CHAR(SYSDATE, 'HH24')
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIK
             , (
                SELECT REPLACE(MATCODE, '-O', '') AS MAT_CODE
                     , SUM(ORDER_QTY) AS ORDER_QTY
                  FROM RSUMWIPMAT
                 WHERE MAT_TYPE = 'PB'
                 GROUP BY REPLACE(MATCODE, '-O', '')  
               ) ORD
             , (
                SELECT MAT_ID AS MAT_CODE
                     , SUM(DECODE(WORK_DATE, '20200602', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_YESTERDAY
                     , SUM(DECODE(WORK_DATE, '20200603', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_TODAY
                  FROM RSUMWIPMOV
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE IN ('20200602','20200603')
                   AND OPER = 'M0330'
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_CODE = WIP.MAT_CODE(+)
           AND MAT.MAT_CODE = WMS.MAT_CODE(+)
           AND MAT.MAT_CODE = WIK.MAT_CODE(+)
           AND MAT.MAT_CODE = ORD.MAT_CODE(+)
           AND MAT.MAT_CODE = MOV.MAT_CODE(+)
         GROUP BY MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
       )
 GROUP BY MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070506'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT.CUSTOMER, MAT.PKG_CODE, MAT.MATCODE
     , RAS.RES_ID 
     , ROUND(DAT.WIP_STOCK / 1, 0) AS WIP_STOCK
     , ROUND(DAT.WIP_DP / 1, 0) AS WIP_DP
     , ROUND(DAT.WIP_DA / 1, 0) AS WIP_DA
     , ROUND(DAT.WIP_TTL / 1, 0) AS WIP_TTL
     , ROUND(WMS.SMT / 1, 0) AS SMT
     , DAT.DA_CAPA
     , ROUND(CASE WHEN NVL(DAT.DA_CAPA,0) = 0 THEN 0
                  ELSE (WMS.SMT / DAT.DA_CAPA) * 24
             END, 0) AS SMTPCB_CAPA
     , ROUND(CASE WHEN NVL(DAT.W1_TARGET,0) = 0 THEN 0
                  ELSE (WMS.SMT / DAT.W1_TARGET) * 24
             END, 0) AS SMTPCB_TARGET
     , ROUND(WMS.INV_QTY / 1, 0) AS INV_QTY
     , ROUND(WMS.INV_L_QTY / 1, 0) AS INV_L_QTY
     , ROUND(WMS.WIK_WIP / 1, 0) AS WIK_WIP
     , ROUND(WMS.SMT_WAIT / 1, 0) AS SMT_WAIT
     , ROUND((NVL(WMS.INV_QTY,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.WIK_WIP,0) + NVL(WMS.SMT_WAIT,0)) / 1, 0) AS SMT_WIP_TTL
     , ROUND(S_OUT.T_SMT_OUT / 1, 0) AS T_SMT_OUT
     , ROUND(S_OUT.Y_SMT_OUT / 1, 0) AS Y_SMT_OUT
     , ROUND(DAT.W0_PLAN / 1, 0) AS W0_PLAN
     , ROUND(DAT.W0_AO / 1, 0) AS W0_AO
     , ROUND(DAT.W0_DEF / 1, 0) AS W0_DEF
     , ROUND(DAT.W0_TARGET / 1, 0) AS W0_TARGET
     , ROUND((NVL(DAT.W0_DEF,0) - NVL(WMS.SMT,0)) / 1, 0) AS W0_SMT_DEF
     , ROUND(DAT.W1_PLAN / 1, 0) AS W1_PLAN
     , ROUND(DAT.W1_AO / 1, 0) AS W1_AO
     , ROUND(DAT.W1_DEF / 1, 0) AS W1_DEF
     , ROUND(DAT.W1_TARGET / 1, 0) AS W1_TARGET
     , ROUND((NVL(DAT.W1_DEF,0) - NVL(WMS.SMT,0)) / 1, 0) AS W1_SMT_DEF
     , ROUND(DAT.MON_PLAN / 1, 0) AS MON_PLAN
     , ROUND(DAT.MONTH_AO / 1, 0) AS MONTH_AO
     , ROUND(DAT.MON_DEF / 1, 0) AS MON_DEF
     , ROUND(DAT.MON_TARGET / 1, 0) AS MON_TARGET
     , ROUND((NVL(DAT.MON_DEF,0) - NVL(WMS.SMT,0)) / 1, 0) AS MON_SMT_DEF
  FROM (
        SELECT MATCODE, WM_CONCAT(MAT_CMF_11) AS PKG_CODE, WM_CONCAT(MAT_GRP_1) AS CUSTOMER
          FROM (
                SELECT MATCODE, MAT_GRP_1, WM_CONCAT(MAT_CMF_11) AS MAT_CMF_11
                  FROM (
                        SELECT DISTINCT REPLACE(A.MATCODE, '-O', '') AS MATCODE, B.MAT_CMF_11, B.MAT_GRP_1
                          FROM CWIPBOMDEF A
                             , MWIPMATDEF B
                         WHERE 1=1
                           AND A.PARTNUMBER = B.MAT_ID 
                           AND A.STEPID = 'A0300'
                           AND A.RESV_FIELD_2 = 'PB'
                           AND A.RESV_FLAG_1 = 'Y' 
                           AND B.FACTORY = 'HMVA2'
                           AND B.DELETE_FLAG = ' '
                       )
                 GROUP BY MATCODE, MAT_GRP_1
               )
         GROUP BY MATCODE
       ) MAT
     , (
        SELECT MATCODE
             , SUM(WIP_STOCK) AS WIP_STOCK
             , SUM(WIP_DP) AS WIP_DP
             , SUM(WIP_DA) AS WIP_DA
             , SUM(WIP_STOCK + WIP_DP + WIP_DA) AS WIP_TTL
             , SUM(DA_CAPA) AS DA_CAPA
             , SUM(W0_PLAN) AS W0_PLAN
             , SUM(WEEK_AO) AS W0_AO
             , SUM(W0_DEF) AS W0_DEF
             , SUM(ROUND(W0_TARGET,0)) AS W0_TARGET
             , SUM(W1_PLAN) AS W1_PLAN
             , SUM(WEEK_AO) AS W1_AO
             , SUM(W1_DEF) AS W1_DEF
             , SUM(ROUND(W1_TARGET,0)) AS W1_TARGET
             , SUM(MON_PLAN) AS MON_PLAN
             , SUM(MONTH_AO) AS MONTH_AO
             , SUM(MON_DEF) AS MON_DEF
             , SUM(ROUND(MON_TARGET,0)) AS MON_TARGET
          FROM (
                SELECT A.MAT_ID, A.MATCODE, A.STACK, A.W0_DEF_DAY, A.W1_DEF_DAY, A.MON_DEF_DAY
                     , NVL(B.W0_PLAN,0) AS W0_PLAN
                     , NVL(B.W1_PLAN,0) AS W1_PLAN
                     , NVL(C.MON_PLAN,0) AS MON_PLAN
                     , NVL(D.WIP_STOCK,0) AS WIP_STOCK
                     , NVL(D.WIP_DP,0) AS WIP_DP
                     , NVL(D.WIP_DA,0) AS WIP_DA
                     , NVL(D.WIP_DA_AFTER,0) AS WIP_DA_AFTER
                     , NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0) AS WEEK_AO
                     , NVL(E.MONTH_AO,0) + NVL(D.WIP_DA_AFTER,0) AS MONTH_AO
                     , NVL(B.W0_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0)) AS W0_DEF
                     , CASE WHEN NVL(B.W0_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0)) <= 0 THEN 0
                            ELSE (NVL(B.W0_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0))) / A.W0_DEF_DAY 
                       END AS W0_TARGET
                     , NVL(B.W0_PLAN,0) + NVL(B.W1_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0)) AS W1_DEF
                     , CASE WHEN NVL(B.W0_PLAN,0) + NVL(B.W1_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0)) <= 0 THEN 0
                            ELSE (NVL(B.W0_PLAN,0) + NVL(B.W1_PLAN,0) - (NVL(E.WEEK_AO,0) + NVL(D.WIP_DA_AFTER,0))) / A.W1_DEF_DAY 
                       END AS W1_TARGET
                     , NVL(C.MON_PLAN,0) - (NVL(E.MONTH_AO,0) + NVL(D.WIP_DA_AFTER,0)) AS MON_DEF
                     , CASE WHEN NVL(C.MON_PLAN,0) - (NVL(E.MONTH_AO,0) + NVL(D.WIP_DA_AFTER,0)) <= 0 THEN 0
                            ELSE (NVL(C.MON_PLAN,0) - (NVL(E.MONTH_AO,0) + NVL(D.WIP_DA_AFTER,0))) / A.MON_DEF_DAY 
                       END AS MON_TARGET
                     , NVL(F.DA_CAPA,0) AS DA_CAPA 
                  FROM (
                        SELECT MAT_ID, MATCODE, STACK 
                             , CASE WHEN W0_CUTOFF - (STACK + 1) < 1 THEN 1 ELSE W0_CUTOFF - (STACK + 1) END AS W0_DEF_DAY
                             , CASE WHEN (W0_CUTOFF + 7) - (STACK + 1) < 1 THEN 1 ELSE (W0_CUTOFF + 7) - (STACK + 1) END AS W1_DEF_DAY 
                             , CASE WHEN MON_CUTOFF - (STACK + 1) < 1 THEN 1 ELSE MON_CUTOFF - (STACK + 1) END AS MON_DEF_DAY
                          FROM (
                                SELECT MAT_ID, MATCODE, STACK
                                     , CASE TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'DY') WHEN '월' THEN 4
                                                                                           WHEN '화' THEN 3
                                                                                           WHEN '수' THEN 2
                                                                                           WHEN '목' THEN 1
                                                                                           WHEN '금' THEN 0
                                                                                           WHEN '토' THEN 7
                                                                                           WHEN '일' THEN 6
                                       END AS W0_CUTOFF
                                     , LAST_DAY(TO_DATE('20200603', 'YYYYMMDD')) - TO_DATE('20200603', 'YYYYMMDD') AS MON_CUTOFF 
                                  FROM (
                                        SELECT DISTINCT PARTNUMBER AS MAT_ID, REPLACE(MATCODE, '-O', '') AS MATCODE
                                             , CASE WHEN B.MAT_GRP_4 IN ('-','FD','FU') THEN '2'
                                                    ELSE SUBSTR(MAT_GRP_4, 3)
                                               END AS STACK  
                                             , MAT_GRP_4
                                          FROM CWIPBOMDEF A
                                             , MWIPMATDEF B
                                         WHERE 1=1
                                           AND A.PARTNUMBER = B.MAT_ID   
                                           AND A.STEPID = 'A0300'
                                           AND A.RESV_FIELD_2 = 'PB'
                                           AND A.RESV_FLAG_1 = 'Y' 
                                           AND B.FACTORY = 'HMVA2'
                                           AND B.DELETE_FLAG = ' '
                                       )
                               )
                       ) A    
                     , ( 
                        SELECT MAT_ID
                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W0_PLAN
                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W1_PLAN
                          FROM RWIPPLNWEK 
                         WHERE FACTORY = 'HMVA2' 
                           AND PLAN_WEEK IN ('202023', '202024')
                           AND GUBUN = '3' 
                        GROUP BY MAT_ID 
                       ) B 
                     , (          
                        SELECT MAT_ID, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS MON_PLAN 
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND PLAN_MONTH = '202006'
                           AND TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1)) > 0 
                         GROUP BY MAT_ID  
                       ) C
                     , ( 
                        SELECT MAT_ID
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER = 'A0000' THEN QTY_1 ELSE 0 END) AS WIP_STOCK
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER BETWEEN 'A0001' AND 'A0399' THEN QTY_1 ELSE 0 END) AS WIP_DP
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0400', 'A0401') THEN QTY_1 ELSE 0 END) AS WIP_DA
                             , SUM(CASE WHEN OPER >= 'A0402' THEN QTY_1 ELSE 0 END) AS WIP_DA_AFTER
                          FROM ( 
                                SELECT A.MAT_ID, OPER, B.MAT_GRP_5 
                                     , CASE WHEN B.MAT_GRP_1 = 'HX' AND B.HX_COMP_MIN IS NOT NULL
                                                 THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                            WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                            ELSE QTY_1 END)
                                            WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                            ELSE QTY_1 
                                       END QTY_1 
                                     , COMP_CNT  
                                     , HX_COMP_MIN, HX_COMP_MAX 
                                  FROM RWIPLOTSTS A 
                                     , VWIPMATDEF B
                                 WHERE 1=1 
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.MAT_ID = B.MAT_ID 
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND B.DELETE_FLAG = ' ' 
                                   AND B.MAT_GRP_2 <> '-' 
                                   AND REGEXP_LIKE(B.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                               ) 
                         GROUP BY MAT_ID 
                       ) D
                     , ( 
                        SELECT MAT_ID 
                             , SUM(CASE WHEN WORK_DATE BETWEEN '20200530' AND '20200605' THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) END) AS WEEK_AO  
                             , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) END) AS MONTH_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN LEAST('20200530', '20200601') AND '20200603'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID
                       ) E 
                     , (
                        SELECT MAT.MAT_ID
                             , SUM(TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0))) AS DA_CAPA
                          FROM ( 
                                SELECT FACTORY, RES_STS_2, RES_STS_8 AS OPER 
                                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                                  FROM MRASRESDEF 
                                 WHERE 1=1
                                   AND FACTORY  = 'HMVA2' 
                                   AND RES_CMF_9 = 'Y' 
                                   AND RES_CMF_7 = 'Y' 
                                   AND DELETE_FLAG = ' ' 
                                   AND (RES_STS_8 LIKE 'A04%' OR RES_STS_8 = 'A0333')
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
                               ) RES 
                             , CRASUPHDEF UPH 
                             , MWIPMATDEF MAT 
                         WHERE 1=1 
                           AND RES.FACTORY = UPH.FACTORY(+) 
                           AND RES.FACTORY = MAT.FACTORY 
                           AND RES.OPER = UPH.OPER(+) 
                           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
                           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
                           AND RES.RES_STS_2 = UPH.MAT_ID(+) 
                           AND RES.RES_STS_2 = MAT.MAT_ID 
                           AND MAT.DELETE_FLAG = ' ' 
                           AND MAT.MAT_GRP_5 IN ('-', '1st') 
                         GROUP BY MAT.MAT_ID 
                       ) F
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.MAT_ID = D.MAT_ID(+)
                   AND A.MAT_ID = E.MAT_ID(+)
                   AND A.MAT_ID = F.MAT_ID(+)
               )
         GROUP BY MATCODE 
       ) DAT
     , (
        SELECT RES_STS_2 AS MATCODE, WM_CONCAT(RES_ID) AS RES_ID
          FROM MRASRESDEF
         WHERE 1=1
           AND RES_STS_8 = 'A0330'
           AND RES_CMF_9 = 'Y' 
           AND RES_CMF_7 = 'Y' 
           AND DELETE_FLAG = ' ' 
           AND RES_STS_2 IN (
                             SELECT DISTINCT REPLACE(MATCODE, '-O', '') AS MATCODE
                               FROM CWIPBOMDEF
                              WHERE 1=1
                                AND STEPID = 'A0300'
                                AND RESV_FIELD_2 = 'PB'
                                AND RESV_FLAG_1 = 'Y'
                            )   
         GROUP BY RES_STS_2
       ) RAS
     , (
        SELECT MATCODE
             , SUM(SMT) AS SMT
             , SUM(SMT_WAIT) AS SMT_WAIT
             , SUM(INV_QTY) AS INV_QTY
             , SUM(INV_L_QTY) AS INV_L_QTY
             , SUM(WIK_WIP) AS WIK_WIP
          FROM (
                SELECT MATCODE
                     , SUM(CASE WHEN GUBUN = 'SMT' THEN QTY_1 ELSE 0 END) SMT
                     , SUM(CASE WHEN GUBUN = 'SMT_WAIT' THEN QTY_1 ELSE 0 END) SMT_WAIT
                     , 0 AS INV_QTY, 0 AS INV_L_QTY, 0 AS WIK_WIP
                  FROM (
                        SELECT REPLACE(MAT_ID, '-O', '') AS MATCODE, OPER
                             , CASE WHEN OPER <= 'M0330' THEN 'SMT_WAIT' ELSE 'SMT' END AS GUBUN
                             , QTY_1
                          FROM RWIPLOTSTS 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND LOT_TYPE = 'P'
                           AND LOT_DEL_FLAG = ' '
                           AND LOT_CMF_2 = '-'
                           AND LOT_CMF_9 != ' '
                           AND QTY_1 > 0
                           AND OPER <>  'V0000'
                           AND (OPER LIKE 'M%' OR OPER LIKE 'V%')
                       )
                 GROUP BY MATCODE
                 UNION ALL
                SELECT MATCODE
                     , 0, 0
                     , SUM(INV_QTY) AS INV_QTY
                     , SUM(INV_L_QTY) AS INV_L_QTY
                     , 0
                  FROM (
                        SELECT MAT_ID AS MATCODE
                             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY
                             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY
                          FROM CWMSLOTSTS@RPTTOMES
                         WHERE 1=1
                           AND QUANTITY> 0
                           AND STORAGE_LOCATION IN ('1000', '1001', '1003')
                           AND MAT_ID LIKE 'R16%'
                         GROUP BY MAT_ID 
                         UNION ALL 
                        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                          FROM CWIPMATSLP@RPTTOMES 
                         WHERE 1=1 
                           AND RECV_FLAG = ' ' 
                           AND MAT_ID LIKE 'R16%' 
                           AND IN_TIME BETWEEN '20200601000000' AND '20200603235959' 
                         GROUP BY MAT_ID 
                       )
                 GROUP BY MATCODE
                 UNION ALL
                SELECT REPLACE(MAT_ID, '-O', '') AS MATCODE
                     , 0, 0, 0, 0
                     , SUM(LOT_QTY) AS WIK_WIP 
                  FROM ISTMWIKWIP@RPTTOMES
                 WHERE 1=1
                   AND CUTOFF_DT = '20200603' || TO_CHAR(SYSDATE, 'HH24')
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               )
         GROUP BY MATCODE
       ) WMS
     , (
        SELECT MAT_ID AS MATCODE
             , SUM(DECODE(WORK_DATE, '20200602', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS Y_SMT_OUT
             , SUM(DECODE(WORK_DATE, '20200603', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS T_SMT_OUT
          FROM RSUMWIPMOV
         WHERE 1=1
           AND FACTORY = 'HMVA2'
           AND WORK_DATE IN ('20200602', '20200603')
           AND OPER = 'M0330'
         GROUP BY MAT_ID
       ) S_OUT
 WHERE 1=1
   AND MAT.MATCODE = DAT.MATCODE(+)
   AND MAT.MATCODE = RAS.MATCODE(+)
   AND MAT.MATCODE = WMS.MATCODE(+)
   AND MAT.MATCODE = S_OUT.MATCODE(+)
   AND NVL(DAT.WIP_TTL,0) + NVL(WMS.SMT,0) + NVL(DAT.DA_CAPA,0) + NVL(WMS.INV_QTY,0) + NVL(WMS.SMT_WAIT,0) + 
       NVL(WMS.INV_L_QTY,0) + NVL(WMS.WIK_WIP,0) + NVL(S_OUT.Y_SMT_OUT,0) + NVL(S_OUT.T_SMT_OUT,0) + NVL(DAT.W0_PLAN,0) + 
       NVL(DAT.W0_AO,0) + NVL(DAT.W1_PLAN,0) + NVL(DAT.MON_PLAN,0) + NVL(DAT.MONTH_AO,0) > 0
 ORDER BY MAT.CUSTOMER, MAT.PKG_CODE, MAT.MATCODE

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010315'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT MAT_ID, INVOICE_NO, LOT_CMF_11 AS SHIP_SITE, LOT_ID, TRAN_TIME, WORK_DATE, LOT_CMF_5 AS LOT_TYPE, SHIP_QTY_1
      , (SELECT SUM(LOSS_QTY) FROM RWIPLOTLSM WHERE FACTORY = A.FROM_FACTORY AND LOT_ID = A.LOT_ID AND HIST_DEL_FLAG = ' ') AS LOSS_QTY
   FROM VWIPSHPLOT A
  WHERE 1=1
    AND FROM_FACTORY = 'HMVA2'
    AND TRAN_TIME BETWEEN '20200601220000' AND '20200603215959'
)
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' '
     , SHP.INVOICE_NO
     , SHP.SHIP_SITE
     , SHP.LOT_ID
     , SHP.TRAN_TIME
     , SHP.WORK_DATE
     , SHP.LOT_TYPE
     , NVL(SHP.SHIP_QTY_1,0) + NVL(SHP.LOSS_QTY,0) AS IN_QTY
     , SHP.SHIP_QTY_1
     , ROUND(NVL(SHP.SHIP_QTY_1,0) / (NVL(SHP.SHIP_QTY_1,0) + NVL(SHP.LOSS_QTY,0)) * 100, 1) AS YIELD
     , HLD.TTL_HOLD_CNT
     , HLD.LAMI, HLD.PRI_BG, HLD.STEALTH, HLD.BG, HLD.LG, HLD.SAW, HLD.DDS
     , HLD.CA, HLD.DA, HLD.WB, HLD.MOLD, HLD.PCB_MK, HLD.MK, HLD.SBA
     , HLD.STRIP_TEST, HLD.SST, HLD.DC_TEST, HLD.PKG_GRINDING, HLD.QC
  FROM MWIPMATDEF MAT
     , DT SHP
     , (   
        SELECT LOT_ID
             , COUNT(LOT_ID) AS TTL_HOLD_CNT
             , SUM(DECODE(OPER, 'A0020', CNT, 0)) AS LAMI
             , SUM(DECODE(OPER, 'A0030', CNT, 0)) AS PRI_BG
             , SUM(DECODE(OPER, 'A0033', CNT, 0)) AS STEALTH 
             , SUM(DECODE(OPER, 'A0040', CNT, 0)) AS BG
             , SUM(DECODE(OPER, 'A0170', CNT, 0)) AS LG
             , SUM(DECODE(OPER, 'A0200', CNT, 0)) AS SAW
             , SUM(DECODE(OPER, 'A0230', CNT, 0)) AS DDS
             , SUM(DECODE(OPER, 'A0333', CNT, 0)) AS CA
             , SUM(CASE WHEN OPER LIKE 'A040%' THEN CNT ELSE 0 END) AS DA
             , SUM(CASE WHEN OPER LIKE 'A060%' THEN CNT ELSE 0 END) AS WB
             , SUM(DECODE(OPER, 'A1000', CNT, 0)) AS MOLD
             , SUM(DECODE(OPER, 'A1020', CNT, 0)) AS PCB_MK
             , SUM(DECODE(OPER, 'A1150', CNT, 'A1500', CNT, 0)) AS MK
             , SUM(DECODE(OPER, 'A1300', CNT, 0)) AS SBA 
             , SUM(DECODE(OPER, 'A1710', CNT, 'A1840', CNT, 0)) AS STRIP_TEST
             , SUM(DECODE(OPER, 'A1750', CNT, 'A1825', CNT, 0)) AS SST 
             , SUM(DECODE(OPER, 'A1790', CNT, 'A1795', CNT, 0)) AS DC_TEST 
             , SUM(DECODE(OPER, 'A1810', CNT, 0)) AS PKG_GRINDING 
             , SUM(DECODE(OPER, 'A2100', CNT, 0)) AS QC 
          FROM (
                SELECT LOT_ID, OPER, COUNT(*) AS CNT 
                  FROM RWIPLOTHLD 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2'
                   AND LOT_ID IN (SELECT LOT_ID FROM DT)
                   AND REGEXP_LIKE(OPER, 'A0020|A0030|A0033|A0040|A0170|A0200|A0230|A0333|A040*|A060*|A1000|A1020|A1150|A1300|A1500|A1710|A1750|A1790|A1795|A1810|A1825|A1840|A2100')
                 GROUP BY LOT_ID, OPER
               )
         GROUP BY LOT_ID
       ) HLD
 WHERE 1=1
   AND MAT.MAT_ID = SHP.MAT_ID
   AND SHP.LOT_ID = HLD.LOT_ID(+)
   AND MAT.FACTORY = 'HMVA2'
   AND MAT.DELETE_FLAG = ' '
 ORDER BY MAT.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID,  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 30)) - 3, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((3 + 5) / 30) ) * 30, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 30), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 27.1337206980127 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202006'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200603', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200601' AND '20200603' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200603', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200601' AND '20200603' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200603', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200601' AND '20200603'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200603', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200601' AND '20200603'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200603'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200603'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011015'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(PLAN)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS PLAN 
     , ROUND(SUM(SHP)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SHP 
     , ROUND(SUM(DEF)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DEF 
     , GUBUN 
     , ROUND(SUM(HMK3A)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS HMK3A 
     , ROUND(SUM(QC_GATE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS QC_GATE 
     , ROUND(SUM(PVI)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS PVI 
     , ROUND(SUM(AVI)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS AVI 
     , ROUND(SUM(SIG)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SIG 
     , ROUND(SUM(SBA)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SBA 
     , ROUND(SUM(TIN)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS TIN 
     , ROUND(SUM(TRIM)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS TRIM 
     , ROUND(SUM(MK)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS MK 
     , ROUND(SUM(CURE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS CURE 
     , ROUND(SUM(MOLD)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS MOLD 
     , ROUND(SUM(GATE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS GATE 
     , ROUND(SUM(WB9)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB9 
     , ROUND(SUM(DA9)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA9 
     , ROUND(SUM(WB8)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB8 
     , ROUND(SUM(DA8)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA8 
     , ROUND(SUM(WB7)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB7 
     , ROUND(SUM(DA7)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA7 
     , ROUND(SUM(WB6)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB6 
     , ROUND(SUM(DA6)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA6 
     , ROUND(SUM(WB5)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB5 
     , ROUND(SUM(DA5)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA5 
     , ROUND(SUM(WB4)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB4 
     , ROUND(SUM(DA4)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA4 
     , ROUND(SUM(WB3)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB3 
     , ROUND(SUM(DA3)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA3 
     , ROUND(SUM(WB2)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB2 
     , ROUND(SUM(DA2)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA2 
     , ROUND(SUM(WB1)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB1 
     , ROUND(SUM(DA1)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA1 
     , ROUND(SUM(SP)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SP 
     , ROUND(SUM(SAW)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SAW 
     , ROUND(SUM(BG)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS BG 
     , ROUND(SUM(HMK2A)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS HMK2A 
     , ROUND(SUM(WIP_DEF)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WIP_DEF 
  FROM (  
        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
             , MAX(PLAN) AS PLAN 
             , MAX(SHP) AS SHP 
             , MAX(DEF) AS DEF 
             , SUM(DECODE(OPER_GRP_1, 'HMK3A', SUM_DEF, 0)) AS HMK3A 
             , SUM(DECODE(OPER_GRP_1, 'QC_GATE', SUM_DEF, 0)) AS QC_GATE 
             , SUM(DECODE(OPER_GRP_1, 'PVI', SUM_DEF, 0)) AS PVI 
             , SUM(DECODE(OPER_GRP_1, 'AVI', SUM_DEF, 0)) AS AVI 
             , SUM(DECODE(OPER_GRP_1, 'SIG', SUM_DEF, 0)) AS SIG 
             , SUM(DECODE(OPER_GRP_1, 'SBA', SUM_DEF, 0)) AS SBA 
             , SUM(DECODE(OPER_GRP_1, 'TIN', SUM_DEF, 0)) AS TIN 
             , SUM(DECODE(OPER_GRP_1, 'TRIM', SUM_DEF, 0)) AS TRIM 
             , SUM(DECODE(OPER_GRP_1, 'MK', SUM_DEF, 0)) AS MK 
             , SUM(DECODE(OPER_GRP_1, 'CURE', SUM_DEF, 0)) AS CURE 
             , SUM(DECODE(OPER_GRP_1, 'MOLD', SUM_DEF, 0)) AS MOLD 
             , SUM(DECODE(OPER_GRP_1, 'GATE', SUM_DEF, 0)) AS GATE 
             , SUM(DECODE(OPER_GRP_1, 'WB9', SUM_DEF, 0)) AS WB9 
             , SUM(DECODE(OPER_GRP_1, 'DA9', SUM_DEF, 0)) AS DA9 
             , SUM(DECODE(OPER_GRP_1, 'WB8', SUM_DEF, 0)) AS WB8 
             , SUM(DECODE(OPER_GRP_1, 'DA8', SUM_DEF, 0)) AS DA8 
             , SUM(DECODE(OPER_GRP_1, 'WB7', SUM_DEF, 0)) AS WB7 
             , SUM(DECODE(OPER_GRP_1, 'DA7', SUM_DEF, 0)) AS DA7 
             , SUM(DECODE(OPER_GRP_1, 'WB6', SUM_DEF, 0)) AS WB6 
             , SUM(DECODE(OPER_GRP_1, 'DA6', SUM_DEF, 0)) AS DA6 
             , SUM(DECODE(OPER_GRP_1, 'WB5', SUM_DEF, 0)) AS WB5 
             , SUM(DECODE(OPER_GRP_1, 'DA5', SUM_DEF, 0)) AS DA5 
             , SUM(DECODE(OPER_GRP_1, 'WB4', SUM_DEF, 0)) AS WB4 
             , SUM(DECODE(OPER_GRP_1, 'DA4', SUM_DEF, 0)) AS DA4 
             , SUM(DECODE(OPER_GRP_1, 'WB3', SUM_DEF, 0)) AS WB3 
             , SUM(DECODE(OPER_GRP_1, 'DA3', SUM_DEF, 0)) AS DA3 
             , SUM(DECODE(OPER_GRP_1, 'WB2', SUM_DEF, 0)) AS WB2 
             , SUM(DECODE(OPER_GRP_1, 'DA2', SUM_DEF, 0)) AS DA2 
             , SUM(DECODE(OPER_GRP_1, 'WB1', SUM_DEF, 0)) AS WB1 
             , SUM(DECODE(OPER_GRP_1, 'DA1', SUM_DEF, 0)) AS DA1 
             , SUM(DECODE(OPER_GRP_1, 'SP', SUM_DEF, 0)) AS SP 
             , SUM(DECODE(OPER_GRP_1, 'SAW', SUM_DEF, 0)) AS SAW 
             , SUM(DECODE(OPER_GRP_1, 'BG', SUM_DEF, 0)) AS BG 
             , SUM(DECODE(OPER_GRP_1, 'HMK2A',SUM_DEF, 0)) AS HMK2A 
             , MAX(WIP_TTL) AS WIP_TTL 
             , MAX(DEF) - MAX(WIP_TTL) AS WIP_DEF 
          FROM ( 
                SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
                     , OPER_GRP_1 
                     , DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') AS GUBUN 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_PLAN, 6, D1_PLAN, 7, D2_PLAN, 8, WEEK_PLAN, 9, WEEK2_PLAN, 10, MON_PLAN)) AS PLAN  
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, SHP_TODAY, 6, SHP_D1, 7, SHP_D2, 8, SHP_WEEK, 9, SHP2_WEEK, 10, SHP_MONTH)) AS SHP 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_DEF, 6, D1_DEF, 7, D2_DEF, 8, WEEK_DEF, 9, WEEK2_DEF, 10, MONTH_DEF)) AS DEF 
                     , SUM(DECODE(SEQ, 1, WIP_QTY, 2, RES_CNT, 3, RES_CAPA, 4, ASSY_END_QTY, 5, D0_SUM_QUANTITY, 6, D1_SUM_QUANTITY, 7, D2_SUM_QUANTITY, 8, WEEK_SUM_QUANTITY, 9, WEEK2_SUM_QUANTITY, 10, MONTH_SUM_QUANTITY)) AS SUM_DEF 
                     , MAX(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, WIP_TTL)) AS WIP_TTL 
                  FROM ( 
                        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                             , SUM(NVL(D0_PLAN,0)) AS D0_PLAN, SUM(NVL(SHP_TODAY,0)) AS SHP_TODAY, SUM(NVL(D0_DEF,0)) AS D0_DEF 
                             , SUM(NVL(D1_PLAN,0)) AS D1_PLAN, SUM(NVL(SHP_D1,0)) AS SHP_D1, SUM(NVL(D1_DEF,0)) AS D1_DEF 
                             , SUM(NVL(D2_PLAN,0)) AS D2_PLAN, SUM(NVL(SHP_D2,0)) AS SHP_D2, SUM(NVL(D2_DEF,0)) AS D2_DEF 
                             , SUM(NVL(WEEK_PLAN,0)) AS WEEK_PLAN, SUM(NVL(SHP_WEEK,0)) AS SHP_WEEK, SUM(NVL(WEEK_DEF,0)) AS WEEK_DEF 
                             , SUM(NVL(WEEK2_PLAN,0)) AS WEEK2_PLAN, SUM(NVL(SHP2_WEEK,0)) AS SHP2_WEEK, SUM(NVL(WEEK2_DEF,0)) AS WEEK2_DEF 
                             , SUM(NVL(MON_PLAN,0)) AS MON_PLAN, SUM(NVL(SHP_MONTH,0)) AS SHP_MONTH, SUM(NVL(MONTH_DEF,0)) AS MONTH_DEF 
                             , SUM(NVL(ASSY_END_QTY,0)) AS ASSY_END_QTY 
                             , SUM(NVL(WIP_QTY,0)) AS WIP_QTY 
                             , SUM(SUM(WIP_QTY)) OVER(PARTITION BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS WIP_TTL 
                             , SUM(RES_CNT) AS RES_CNT 
                             , SUM(RES_CAPA) AS RES_CAPA 
                             , SUM(NVL(D0_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D0_SUM_QUANTITY 
                             , SUM(NVL(D1_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D1_SUM_QUANTITY 
                             , SUM(NVL(D2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D2_SUM_QUANTITY 
                             , SUM(NVL(WEEK_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK_SUM_QUANTITY 
                             , SUM(NVL(WEEK2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK2_SUM_QUANTITY 
                             , SUM(NVL(MONTH_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS MONTH_SUM_QUANTITY 
                          FROM ( 
                                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_CMF_7, MAT.MAT_CMF_8, MAT.MAT_CMF_11, MAT.MAT_ID, MAT.CONV_MAT_ID, MAT.OPER_GRP_1 
                                     , A.D0_PLAN, A.SHP_TODAY, A.D0_DEF 
                                     , A.D1_PLAN, A.SHP_D1, A.D1_DEF 
                                     , A.D2_PLAN, A.SHP_D2, A.D2_DEF 
                                     , A.WEEK_PLAN, A.SHP_WEEK, A.WEEK_DEF 
                                     , A.WEEK2_PLAN, A.SHP2_WEEK, A.WEEK2_DEF 
                                     , A.MON_PLAN, A.SHP_MONTH, A.MONTH_DEF 
                                     , A.D0_ORI_PLAN 
                                     , NVL(B.ASSY_END_QTY,0) AS ASSY_END_QTY 
                                     , MAX(NVL(B.ASSY_END_QTY,0)) OVER(PARTITION BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS CHK_ASSY_END_QTY 
                                     , NVL(WIP.QTY,0) AS WIP_QTY 
                                     , RES_CNT 
                                     , RES_CAPA 
                                     , SUM(NVL(WIP.QTY,0)) OVER(PARTITION BY A.MAT_ID ORDER BY MAT.MAT_ID, DECODE(MAT.OPER_GRP_1, 'HMK3A', 1, 'QC_GATE', 2, 'PVI', 3, 'AVI', 4, 'SIG', 5, 'SBA', 6, 'TIN', 7, 'TRIM', 8, 'MK', 9, 'CURE', 10, 'MOLD', 11, 'GATE', 12 
                                                                                                                                , 'WB9', 13, 'DA9', 14, 'WB8', 15, 'DA8', 16, 'WB7', 17, 'DA7', 18, 'WB6', 19, 'DA6', 20, 'WB5', 21, 'DA5', 22, 'WB4', 23, 'DA4', 24 
                                                                                                                                , 'WB3', 25, 'DA3', 26, 'WB2', 27, 'DA2', 28, 'WB1', 29, 'DA1', 30, 'SP', 31, 'SAW', 32, 'BG', 33, 'HMK2A',34, 35)) AS WIP_SUM_QUANTITY 
                                  FROM ( 
                                        SELECT MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_7, MAT_CMF_8, MAT_CMF_11, MAT_ID, OPER_GRP_1 
                                             , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT_ID, -3) 
                                                    WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                                                    ELSE MAT_ID 
                                                END CONV_MAT_ID 
                                          FROM ( 
                                                SELECT * 
                                                  FROM (
                                                        SELECT A.* 
                                                          FROM MWIPMATDEF A
                                                         WHERE 1=1 
                                                           AND FACTORY = 'HMVA2' 
                                                           AND DELETE_FLAG = ' ' 
                                                           AND MAT_TYPE = 'FG' 
                                                           AND MAT_ID LIKE '%' 
                                                           AND MAT_GRP_10 NOT LIKE 'COB%' 
                                                       ) 
                                               ) 
                                             , ( 
                                                SELECT DECODE(LEVEL, 1, 'HMK3A', 2, 'QC_GATE', 3, 'PVI', 4, 'AVI', 5, 'SIG', 6, 'SBA', 7, 'TIN', 8, 'TRIM', 9, 'MK', 10, 'CURE', 11, 'MOLD', 12, 'GATE' 
                                                                   , 13, 'WB9', 14, 'DA9', 15, 'WB8', 16, 'DA8', 17, 'WB7', 18, 'DA7', 19, 'WB6', 20, 'DA6', 21, 'WB5', 22, 'DA5', 23, 'WB4', 24, 'DA4'
                                                                   , 25, 'WB3', 26, 'DA3', 27, 'WB2', 28, 'DA2', 29, 'WB1', 30, 'DA1', 31, 'SP', 32, 'SAW', 33, 'BG', 34, 'HMK2A' 
                                                             ) OPER_GRP_1 
                                                  FROM DUAL CONNECT BY LEVEL <= 34 
                                               ) 
                                       ) MAT 
                                     , ( 
                                        SELECT MAT.MAT_ID 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) AS D0_PLAN 
                                             , SUM(NVL(D0_PLAN, 0)) AS D0_ORI_PLAN 
                                             , SUM(NVL(SHP_TODAY, 0)) AS SHP_TODAY 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D0_DEF 
                                             , SUM(NVL(D1_PLAN, 0)) AS D1_PLAN 
                                             , 0 AS SHP_D1 
                                             , SUM(NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D1_DEF 
                                             , SUM(NVL(D2_PLAN, 0)) AS D2_PLAN 
                                             , 0 AS SHP_D2 
                                             , SUM(NVL(D2_PLAN, 0) + NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D2_DEF 
                                             , SUM(NVL(WEEK1_PLAN, 0)) AS WEEK_PLAN 
                                             , SUM(NVL(SHP_WEEK, 0)) AS SHP_WEEK 
                                             , SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK_DEF 
                                             , SUM(NVL(WEEK2_PLAN, 0)) AS WEEK2_PLAN 
                                             , 0 AS SHP2_WEEK 
                                             , SUM(NVL(WEEK2_PLAN, 0) + NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK2_DEF 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(MON.RESV_FIELD1/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) 
                                                    ELSE MON.RESV_FIELD1 
                                                END,0)) MON_PLAN 
                                             , SUM(NVL(SHP_MONTH, 0)) AS SHP_MONTH 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(MON.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)-NVL(SHP_MONTH, 0) 
                                                    ELSE NVL(MON.RESV_FIELD1, 0)-NVL(SHP_MONTH, 0) 
                                                END,0)) MONTH_DEF 
                                          FROM MWIPMATDEF MAT 
                                             , ( 
                                                SELECT FACTORY, MAT_ID 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                ELSE 0 
                                                           END) AS WEEK1_TTL 
                                                     , SUM(W1_QTY) AS WEEK1_PLAN 
                                                     , SUM(W2_QTY) AS WEEK2_PLAN 
                                                     , SUM(NVL(W1_QTY,0) + NVL(W2_QTY,0)) AS WEEK_TTL 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D6_QTY 
                                                                ELSE 0 
                                                           END) AS D0_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D7_QTY 
                                                                ELSE 0 
                                                           END) AS D1_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D8_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D8_QTY 
                                                                ELSE 0 
                                                           END) AS D2_PLAN 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, 'OTD' AS CALENDAR_ID 
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID NOT LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202023','202024') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                         UNION ALL 
                                                        SELECT FACTORY, MAT_ID, 'SE' AS CALENDAR_ID  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202023','202024') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                       )  
                                                 GROUP BY FACTORY, MAT_ID  
                                               ) PLN 
                                             , (  
                                                SELECT FACTORY,MAT_ID, RESV_FIELD1  
                                                  FROM (  
                                                        SELECT FACTORY, MAT_ID, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                                          FROM (  
                                                                SELECT FACTORY, MAT_ID, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                                  FROM CWIPPLNMON  
                                                                 WHERE 1=1  
                                                                   AND FACTORY = 'HMVA2'  
                                                                   AND PLAN_MONTH = '202006' 
                                                                 GROUP BY FACTORY, MAT_ID 
                                                               )  
                                                         GROUP BY FACTORY, MAT_ID 
                                                       ) 
                                               ) MON 
                                             , (  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200603' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200601' AND '20200603' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200530' AND '20200603' THEN NVL(SHP_QTY_1, 0) 
                                                                ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200601' AND '20200602' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200530' AND '20200602' THEN NVL(SHP_QTY_1, 0)  
                                                                ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID NOT LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN LEAST('20200601', '20200530', '20200601') AND '20200603' 
                                                 GROUP BY MAT_ID  
                                                 UNION ALL  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200603' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200530' AND '20200603' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200530' AND '20200602' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT_06 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN '20200530' AND '20200603' 
                                                 GROUP BY MAT_ID 
                                               ) SHP 
                                         WHERE 1=1 
                                           AND MAT.FACTORY = 'HMVA2' 
                                           AND MAT.MAT_TYPE = 'FG' 
                                           AND MAT.DELETE_FLAG = ' ' 
                                           AND MAT.MAT_ID = PLN.MAT_ID(+) 
                                           AND MAT.MAT_ID = MON.MAT_ID(+) 
                                           AND MAT.MAT_ID = SHP.MAT_ID(+) 
                                         GROUP BY MAT.MAT_ID 
                                         ORDER BY MAT.MAT_ID 
                                       ) A 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1 
                                             , SUM(ASSY_END_QTY) AS ASSY_END_QTY 
                                          FROM ( 
                                                SELECT B.MAT_ID 
                                                     , CASE WHEN OPER IN ('A0000', 'A000N') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'HMK2A' 
                                                            WHEN OPER IN ('A0040') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'BG' 
                                                            WHEN OPER IN ('A0200', 'A0230') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'SAW' 
                                                            WHEN OPER IN ('A0400', 'A0401', 'A0333') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA1' 
                                                            WHEN OPER IN ('A0402') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA2' 
                                                            WHEN OPER IN ('A0403') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA3' 
                                                            WHEN OPER IN ('A0404') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA4' 
                                                            WHEN OPER IN ('A0405') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA5' 
                                                            WHEN OPER IN ('A0406') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA6' 
                                                            WHEN OPER IN ('A0407') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA7' 
                                                            WHEN OPER IN ('A0408') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA8' 
                                                            WHEN OPER IN ('A0409') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA9' 
                                                            WHEN OPER IN ('A0600','A0601') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB1' 
                                                            WHEN OPER IN ('A0602') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB2' 
                                                            WHEN OPER IN ('A0603') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB3' 
                                                            WHEN OPER IN ('A0604') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB4' 
                                                            WHEN OPER IN ('A0605') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB5' 
                                                            WHEN OPER IN ('A0606') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB6' 
                                                            WHEN OPER IN ('A0607') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB7' 
                                                            WHEN OPER IN ('A0608') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB8' 
                                                            WHEN OPER IN ('A0609') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB9' 
                                                            WHEN OPER IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') AND MAT_GRP_5 IN ('-', 'Merge') THEN 'GATE' 
                                                            WHEN OPER IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN OPER IN ('A1100') THEN 'CURE' 
                                                            WHEN OPER IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN OPER IN ('A1200') THEN 'TRIM' 
                                                            WHEN OPER IN ('A1450') THEN 'TIN' 
                                                            WHEN OPER IN ('A1300') THEN 'SBA' 
                                                            WHEN OPER IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN OPER IN ('A2000') THEN 'AVI' 
                                                            WHEN OPER IN ('A2050') THEN 'PVI' 
                                                            WHEN OPER IN ('A2100') THEN 'QC_GATE' 
                                                            WHEN OPER IN ('AZ010') THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                     , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) ASSY_END_QTY 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                             , SUM(END_LOT) AS END_LOT 
                                                             , SUM(END_QTY_1) AS END_QTY_1 
                                                             , SUM(END_QTY_2) AS END_QTY_2 
                                                             , SUM(CASE WHEN SHIP_QTY_1 > 0 THEN SHIP_QTY_1 ELSE 0 END) AS SHIP_QTY_1 
                                                             , SUM(CASE WHEN SHIP_QTY_2 > 0 THEN SHIP_QTY_2 ELSE 0 END) AS SHIP_QTY_2 
                                                          FROM ( 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM RSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM CSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT_06 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                               ) 
                                                         GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                       ) A 
                                                     , MWIPMATDEF B 
                                                 WHERE 1=1 
                                                   AND A.FACTORY  = 'HMVA2' 
                                                   AND A.FACTORY = B.FACTORY 
                                                   AND A.MAT_ID = B.MAT_ID 
                                                   AND B.MAT_TYPE = 'FG' 
                                                   AND A.MAT_ID LIKE '%' 
                                                   AND A.CM_KEY_3 LIKE 'P%'
                                                   AND A.OPER NOT IN ('00001','00002') 
                                                   AND A.WORK_DATE = '20200603' 
                                                 ) 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(ASSY_END_QTY) > 0 
                                       ) B 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1, SUM(NVL(QTY,0)) QTY 
                                          FROM (  
                                                SELECT MAT_ID 
                                                     , QTY 
                                                     , CASE WHEN OPER_GRP_8 = 'HMK2A' THEN 'HMK2A' 
                                                            WHEN OPER_GRP_8 = 'B/G' THEN 'BG' 
                                                            WHEN OPER_GRP_8 = 'SAW' THEN 'SAW' 
                                                            WHEN OPER_GRP_8 = 'S/P' THEN 'SP' 
                                                            WHEN OPER_GRP_8 IN ('D/A1', 'D/A1 CURE') THEN 'DA1' 
                                                            WHEN OPER_GRP_8 IN ('D/A2', 'D/A2 CURE') THEN 'DA2' 
                                                            WHEN OPER_GRP_8 IN ('D/A3', 'D/A3 CURE') THEN 'DA3' 
                                                            WHEN OPER_GRP_8 IN ('D/A4', 'D/A4 CURE') THEN 'DA4' 
                                                            WHEN OPER_GRP_8 IN ('D/A5', 'D/A5 CURE') THEN 'DA5' 
                                                            WHEN OPER_GRP_8 IN ('D/A6', 'D/A6 CURE') THEN 'DA6' 
                                                            WHEN OPER_GRP_8 IN ('D/A7', 'D/A7 CURE') THEN 'DA7' 
                                                            WHEN OPER_GRP_8 IN ('D/A8', 'D/A8 CURE') THEN 'DA8' 
                                                            WHEN OPER_GRP_8 IN ('D/A9', 'D/A9 CURE') THEN 'DA9' 
                                                            WHEN OPER_GRP_8 = 'W/B1' THEN 'WB1' 
                                                            WHEN OPER_GRP_8 = 'W/B2' THEN 'WB2' 
                                                            WHEN OPER_GRP_8 = 'W/B3' THEN 'WB3' 
                                                            WHEN OPER_GRP_8 = 'W/B4' THEN 'WB4' 
                                                            WHEN OPER_GRP_8 = 'W/B5' THEN 'WB5' 
                                                            WHEN OPER_GRP_8 = 'W/B6' THEN 'WB6' 
                                                            WHEN OPER_GRP_8 = 'W/B7' THEN 'WB7' 
                                                            WHEN OPER_GRP_8 = 'W/B8' THEN 'WB8' 
                                                            WHEN OPER_GRP_8 = 'W/B9' THEN 'WB9' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_5 = '-' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'HX' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 NOT IN ('SE','HX') AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'MOLD' THEN 'MOLD' 
                                                            WHEN OPER_GRP_8 = 'CURE' THEN 'CURE' 
                                                            WHEN OPER_GRP_8 = 'M/K' THEN 'MK' 
                                                            WHEN OPER_GRP_8 = 'TRIM' THEN 'TRIM' 
                                                            WHEN OPER_GRP_8 = 'TIN' THEN 'TIN' 
                                                            WHEN OPER_GRP_8 = 'S/B/A' THEN 'SBA' 
                                                            WHEN OPER_GRP_8 = 'SIG' THEN 'SIG' 
                                                            WHEN OPER_GRP_8 = 'AVI' THEN 'AVI' 
                                                            WHEN OPER_GRP_8 = 'V/I' THEN 'PVI' 
                                                            WHEN OPER_GRP_8 = 'QC GATE' THEN 'QC_GATE' 
                                                            WHEN OPER_GRP_8 = 'HMK3A' THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                  FROM ( 
                                                        SELECT MAT_ID, OPER, OPER_GRP_8, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_10 
                                                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                                         WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                                         ELSE QTY_1 END)
                                                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                                                    ELSE QTY_1 
                                                               END QTY 
                                                          FROM ( 
                                                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_8, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, C.MAT_GRP_10 
                                                                     , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END 
                                                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/TO_NUMBER(DECODE(MAT_CMF_13, ' ', 1, '-', 1, MAT_CMF_13)),0) 
                                                                            ELSE QTY_1 
                                                                       END AS QTY_1 
                                                                     , COMP_CNT  
                                                                     , HX_COMP_MIN, HX_COMP_MAX 
                                                                  FROM RWIPLOTSTS A   
                                                                     , MWIPOPRDEF B   
                                                                     , VWIPMATDEF C 
                                                                 WHERE 1 = 1  
                                                                   AND A.FACTORY = B.FACTORY 
                                                                   AND A.FACTORY = C.FACTORY 
                                                                   AND A.OPER = B.OPER 
                                                                   AND A.MAT_ID = C.MAT_ID 
                                                                   AND A.FACTORY = 'HMVA2'   
                                                                   AND A.LOT_TYPE = 'W'  
                                                                   AND A.LOT_CMF_5 LIKE 'P%'
                                                                   AND A.LOT_DEL_FLAG = ' '  
                                                                   AND C.MAT_GRP_2 <> '-' 
                                                                   AND C.DELETE_FLAG = ' '  
                                                               ) 
                                                       ) 
                                               ) 
                                         WHERE 1=1 
                                           AND OPER_GRP_1 <> ' ' 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(NVL(QTY,0)) > 0 
                                       ) WIP 
                                     , ( 
                                        SELECT A.RES_STS_2 AS MAT_ID 
                                             , A.OPER_GRP_1 
                                             , SUM(A.RES_CNT) AS RES_CNT 
                                             , SUM(TRUNC(NVL(NVL(B.UPEH,0) * 24 * A.PERCENT * A.RES_CNT, 0))) AS RES_CAPA 
                                          FROM ( 
                                                SELECT FACTORY, RES_STS_2, RES_STS_8 AS OPER, RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RES_CNT 
                                                     , CASE WHEN RES_STS_8 LIKE 'A06%' THEN 0.71
                                                            WHEN RES_STS_8 LIKE 'A04%' THEN 0.68
                                                            WHEN RES_STS_8 = 'A0333' THEN 0.68
                                                            ELSE 0.7
                                                       END PERCENT 
                                                     , CASE WHEN RES_STS_8 IN ('A0040') THEN 'BG' 
                                                            WHEN RES_STS_8 IN ('A0200', 'A0230') THEN 'SAW' 
                                                            WHEN RES_STS_8 IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                                                            WHEN RES_STS_8 IN ('A0402') THEN 'DA2' 
                                                            WHEN RES_STS_8 IN ('A0403') THEN 'DA3' 
                                                            WHEN RES_STS_8 IN ('A0404') THEN 'DA4' 
                                                            WHEN RES_STS_8 IN ('A0405') THEN 'DA5' 
                                                            WHEN RES_STS_8 IN ('A0406') THEN 'DA6' 
                                                            WHEN RES_STS_8 IN ('A0407') THEN 'DA7' 
                                                            WHEN RES_STS_8 IN ('A0408') THEN 'DA8' 
                                                            WHEN RES_STS_8 IN ('A0409') THEN 'DA9' 
                                                            WHEN RES_STS_8 IN ('A0600','A0601') THEN 'WB1' 
                                                            WHEN RES_STS_8 IN ('A0602') THEN 'WB2' 
                                                            WHEN RES_STS_8 IN ('A0603') THEN 'WB3' 
                                                            WHEN RES_STS_8 IN ('A0604') THEN 'WB4' 
                                                            WHEN RES_STS_8 IN ('A0605') THEN 'WB5' 
                                                            WHEN RES_STS_8 IN ('A0606') THEN 'WB6' 
                                                            WHEN RES_STS_8 IN ('A0607') THEN 'WB7' 
                                                            WHEN RES_STS_8 IN ('A0608') THEN 'WB8' 
                                                            WHEN RES_STS_8 IN ('A0609') THEN 'WB9' 
                                                            WHEN RES_STS_8 IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') THEN 'GATE' 
                                                            WHEN RES_STS_8 IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN RES_STS_8 IN ('A1100') THEN 'CURE' 
                                                            WHEN RES_STS_8 IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN RES_STS_8 IN ('A1200') THEN 'TRIM' 
                                                            WHEN RES_STS_8 IN ('A1450') THEN 'TIN' 
                                                            WHEN RES_STS_8 IN ('A1300') THEN 'SBA' 
                                                            WHEN RES_STS_8 IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN RES_STS_8 IN ('A2000') THEN 'AVI' 
                                                            WHEN RES_STS_8 IN ('A2050') THEN 'PVI' 
                                                            WHEN RES_STS_8 IN ('A2100') THEN 'QC_GATE' 
                                                            ELSE ' ' 
                                                       END OPER_GRP_1 
                                                  FROM MRASRESDEF 
                                                 WHERE 1 = 1  
                                                   AND FACTORY  = 'HMVA2' 
                                                   AND RES_CMF_9 = 'Y' 
                                                   AND RES_CMF_7 = 'Y' 
                                                   AND DELETE_FLAG = ' ' 
                                                   AND RES_TYPE='EQUIPMENT' 
                                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7  
                                               ) A 
                                             , CRASUPHDEF B 
                                         WHERE 1=1 
                                           AND A.FACTORY = B.FACTORY(+) 
                                           AND A.OPER = B.OPER(+) 
                                           AND A.RES_MODEL = B.RES_MODEL(+) 
                                           AND A.UPEH_GRP = B.UPEH_GRP(+) 
                                           AND A.RES_STS_2 = B.MAT_ID(+) 
                                           AND A.FACTORY  = 'HMVA2' 
                                           AND A.OPER NOT IN ('00001','00002') 
                                           AND A.OPER_GRP_1 <> ' ' 
                                         GROUP BY A.RES_STS_2, A.OPER_GRP_1 
                                       ) RES 
                                 WHERE 1=1 
                                   AND MAT.MAT_ID = A.MAT_ID(+) 
                                   AND MAT.MAT_ID = B.MAT_ID(+) 
                                   AND MAT.MAT_ID = WIP.MAT_ID(+) 
                                   AND MAT.MAT_ID = RES.MAT_ID(+) 
                                   AND MAT.OPER_GRP_1 = B.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = WIP.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = RES.OPER_GRP_1(+) 
                               ) 
                         GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                        HAVING ( 
                                SUM(NVL(D0_ORI_PLAN,0))+SUM(NVL(D1_PLAN,0))+SUM(NVL(D2_PLAN,0))+SUM(NVL(WEEK_PLAN,0))+SUM(NVL(WEEK2_PLAN,0))+SUM(NVL(MON_PLAN,0))+SUM(NVL(WIP_QTY,0)) 
                              + SUM(NVL(D0_PLAN,0))+SUM(NVL(SHP_WEEK,0))+SUM(NVL(SHP_MONTH,0))+SUM(NVL(ASSY_END_QTY,0)) 
                               ) > 0 
                      ) 
                    , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 10) 
                 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1, DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') 
               ) 
         GROUP BY  MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
       ) A 
 WHERE 1=1 
 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(GUBUN, 'WIP', 1, '설비대수', 2, 'CAPA현황', 3, '당일 실적', 4, 'D0 잔량', 5, 'D1 잔량', 6, 'D2 잔량', 7, '당주 잔량', 8, '차주 잔량', 9, '월간 잔량', 10) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , MAX(DECODE(OPER_GRP_1, 'HMK3A', 'T', '', 'F', 'F')) AS HMK3A 
     , MAX(DECODE(OPER_GRP_1, 'QC_GATE', 'T', '', 'F', 'F')) AS QC_GATE 
     , MAX(DECODE(OPER_GRP_1, 'PVI', 'T', '', 'F', 'F')) AS PVI 
     , MAX(DECODE(OPER_GRP_1, 'AVI', 'T', '', 'F', 'F')) AS AVI 
     , MAX(DECODE(OPER_GRP_1, 'SIG', 'T', '', 'F', 'F')) AS SIG 
     , MAX(DECODE(OPER_GRP_1, 'SBA', 'T', '', 'F', 'F')) AS SBA 
     , MAX(DECODE(OPER_GRP_1, 'TIN', 'T', '', 'F', 'F')) AS TIN 
     , MAX(DECODE(OPER_GRP_1, 'TRIM', 'T', '', 'F', 'F')) AS TRIM 
     , MAX(DECODE(OPER_GRP_1, 'MK', 'T', '', 'F', 'F')) AS MK 
     , MAX(DECODE(OPER_GRP_1, 'CURE', 'T', '', 'F', 'F')) AS CURE 
     , MAX(DECODE(OPER_GRP_1, 'MOLD', 'T', '', 'F', 'F')) AS MOLD 
     , MAX(DECODE(OPER_GRP_1, 'GATE', 'T', '', 'F', 'F')) AS GATE 
     , MAX(DECODE(OPER_GRP_1, 'WB9', 'T', '', 'F', 'F')) AS WB9 
     , MAX(DECODE(OPER_GRP_1, 'DA9', 'T', '', 'F', 'F')) AS DA9 
     , MAX(DECODE(OPER_GRP_1, 'WB8', 'T', '', 'F', 'F')) AS WB8 
     , MAX(DECODE(OPER_GRP_1, 'DA8', 'T', '', 'F', 'F')) AS DA8 
     , MAX(DECODE(OPER_GRP_1, 'WB7', 'T', '', 'F', 'F')) AS WB7 
     , MAX(DECODE(OPER_GRP_1, 'DA7', 'T', '', 'F', 'F')) AS DA7 
     , MAX(DECODE(OPER_GRP_1, 'WB6', 'T', '', 'F', 'F')) AS WB6 
     , MAX(DECODE(OPER_GRP_1, 'DA6', 'T', '', 'F', 'F')) AS DA6 
     , MAX(DECODE(OPER_GRP_1, 'WB5', 'T', '', 'F', 'F')) AS WB5 
     , MAX(DECODE(OPER_GRP_1, 'DA5', 'T', '', 'F', 'F')) AS DA5 
     , MAX(DECODE(OPER_GRP_1, 'WB4', 'T', '', 'F', 'F')) AS WB4 
     , MAX(DECODE(OPER_GRP_1, 'DA4', 'T', '', 'F', 'F')) AS DA4 
     , MAX(DECODE(OPER_GRP_1, 'WB3', 'T', '', 'F', 'F')) AS WB3 
     , MAX(DECODE(OPER_GRP_1, 'DA3', 'T', '', 'F', 'F')) AS DA3  
     , MAX(DECODE(OPER_GRP_1, 'WB2', 'T', '', 'F', 'F')) AS WB2 
     , MAX(DECODE(OPER_GRP_1, 'DA2', 'T', '', 'F', 'F')) AS DA2 
     , MAX(DECODE(OPER_GRP_1, 'WB1', 'T', '', 'F', 'F')) AS WB1 
     , MAX(DECODE(OPER_GRP_1, 'DA1', 'T', '', 'F', 'F')) AS DA1 
     , MAX(DECODE(OPER_GRP_1, 'SP', 'T', '', 'F', 'F')) AS SP 
     , MAX(DECODE(OPER_GRP_1, 'SAW', 'T', '', 'F', 'F')) AS SAW 
     , MAX(DECODE(OPER_GRP_1, 'BG', 'T', '', 'F', 'F')) AS BG 
     , MAX(DECODE(OPER_GRP_1, 'HMK2A','T', '', 'F', 'F')) AS HMK2A 
  FROM ( 
        SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID, MAT.DELETE_FLAG 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND MAT.MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT.MAT_ID, -3) 
                                                                    WHEN MAT.MAT_GRP_1 = 'HX' THEN MAT.MAT_CMF_10 
                                                                    ELSE MAT_ID 
                                                               END CONV_MAT_ID 
          FROM MWIPMATDEF MAT 
       ) MAT 
     , ( 
        SELECT A.MAT_ID 
                     , CASE WHEN B.OPER IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                            WHEN B.OPER IN ('A0402') THEN 'DA2' 
                            WHEN B.OPER IN ('A0403') THEN 'DA3' 
                            WHEN B.OPER IN ('A0404') THEN 'DA4' 
                            WHEN B.OPER IN ('A0405') THEN 'DA5' 
                            WHEN B.OPER IN ('A0406') THEN 'DA6' 
                            WHEN B.OPER IN ('A0407') THEN 'DA7' 
                            WHEN B.OPER IN ('A0408') THEN 'DA8' 
                            WHEN B.OPER IN ('A0409') THEN 'DA9' 
                            WHEN B.OPER IN ('A0600', 'A0601') THEN 'WB1' 
                            WHEN B.OPER IN ('A0602') THEN 'WB2' 
                            WHEN B.OPER IN ('A0603') THEN 'WB3' 
                            WHEN B.OPER IN ('A0604') THEN 'WB4' 
                            WHEN B.OPER IN ('A0605') THEN 'WB5' 
                            WHEN B.OPER IN ('A0606') THEN 'WB6' 
                            WHEN B.OPER IN ('A0607') THEN 'WB7' 
                            WHEN B.OPER IN ('A0608') THEN 'WB8' 
                            WHEN B.OPER IN ('A0609') THEN 'WB9' 
                            ELSE ' ' 
                        END OPER_GRP_1 
          FROM MWIPMATDEF A 
             , MWIPFLWOPR@RPTTOMES B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.FIRST_FLOW = B.FLOW 
           AND A.FACTORY = 'HMVA2' 
           AND A.DELETE_FLAG = ' ' 
           AND A.MAT_TYPE = 'FG' 
           AND A.MAT_GRP_5 IN ('-', 'Merge') 
           AND A.MAT_ID LIKE '%' 
       ) A 
 WHERE 1=1 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.DELETE_FLAG = ' ' 
   AND MAT.MAT_ID = A.MAT_ID  
 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070402'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200603', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200603', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200603', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200603'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200602')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200602', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200602', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200602', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200602', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200602'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1
   AND SAFTY_WARNING = 'Y'

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200602')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200602', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200602', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200602', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200602', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200602'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
          HAVING MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) < 0
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010910'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH MD AS
(
SELECT *
  FROM (
        SELECT '계획' AS GUBUN1 FROM DUAL UNION
        SELECT '일목표' AS GUBUN1 FROM DUAL
       ) A
     , (
        SELECT 'Wafer' AS GUBUN2, 'Half cut' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'B/G' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Pre_G' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Saw' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Stealth saw' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Laser G/V' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'DAF Cut' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'DDS' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'Epoxy' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'BOC' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'Others' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wire수' AS GUBUN2, ' ' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'C-Mold' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'ORP' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'SBA' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'SST' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'Mold' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'SBA' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'SST' AS GUBUN3 FROM DUAL
       ) B      
)
SELECT MDL.GUBUN1, MDL.GUBUN2, MDL.GUBUN3
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V0 ELSE V0 / TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')), 'DD') END / 1000, 0) V0
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V1 ELSE V1 / TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'DD') END / 1000, 0) V1
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V2 ELSE V2 / TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'DD') END / 1000, 0) V2
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V3 ELSE V3 / TO_CHAR(LAST_DAY(TO_DATE('202006', 'YYYYMM')), 'DD') END / 1000, 0) V3
  FROM MD MDL
     , (
        SELECT *
          FROM (
                SELECT '계획' AS GUBUN1 FROM DUAL UNION
                SELECT '일목표' AS GUBUN1 FROM DUAL
               ) A
             , (
                SELECT GUBUN2, GUBUN3
                     , SUM(DECODE(PLAN_DATE, '202003', CONV_QTY, 0)) V0
                     , SUM(DECODE(PLAN_DATE, '202004', CONV_QTY, 0)) V1
                     , SUM(DECODE(PLAN_DATE, '202005', CONV_QTY, 0)) V2
                     , SUM(DECODE(PLAN_DATE, '202006', CONV_QTY, 0)) V3
                  FROM (
                        SELECT PLAN_DATE 
                             , CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN 'PKG수'
                                    ELSE 'Wafer' 
                               END AS GUBUN2 
                             , OPER AS GUBUN3
                             , CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN PLAN_QTY
                                    ELSE PLAN_QTY * NVL(COMP_CNT,1) 
                               END AS PLAN_QTY
                             , ROUND(CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN PLAN_QTY
                                          ELSE PLAN_QTY * NVL(COMP_CNT,1) / (MAT_CMF_13 * 0.85) 
                                     END, 0) AS CONV_QTY
                          FROM (
                                SELECT PLAN_DATE, MAT_ID
                                     , CASE WHEN OPER = 'A0010' THEN 'Half cut'
                                            WHEN OPER = 'A0040' THEN 'B/G'
                                            WHEN OPER = 'A0030' THEN 'Pre_G'
                                            WHEN OPER = 'A0200' THEN 'Saw'
                                            WHEN OPER IN ('A0012', 'A0033') THEN 'Stealth saw'
                                            WHEN OPER = 'A0170' THEN 'Laser G/V'
                                            WHEN OPER = 'A0180' THEN 'DAF Cut'
                                            WHEN OPER = 'A0230' THEN 'DDS'
                                            WHEN OPER = 'A1000' THEN 'C-Mold'
                                            WHEN OPER IN ('A1250', 'A1260') THEN 'ORP'
                                            WHEN OPER = 'A1300' THEN 'SBA'
                                            WHEN OPER = 'A1750' THEN 'SST'
                                            ELSE ''
                                       END OPER
                                     , PLAN_QTY
                                     , MAT_CMF_13
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT
                                     , (SELECT KEY_3 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = A.MAT_GRP_1 AND KEY_3 = A.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = A.MAT_ID)) AS C_MOLD
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMVA2'   
                                                   AND A.PLAN_MONTH BETWEEN '202003' AND '202006'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     ,( SELECT FLOW PLNNR,' ' ARBPL,OPER KTSCH FROM MWIPFLWOPR@RPTTOMES  WHERE FACTORY = 'HMVA2') SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMVA2'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                                 WHERE 1=1
                                   AND OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1000', 'A1250', 'A1260', 'A1300', 'A1750')
                               )
                         WHERE 1=1
                           AND (OPER <> 'C-Mold' OR (OPER = 'C-Mold' AND C_MOLD IS NOT NULL))
                         UNION ALL
                        SELECT PLAN_DATE
                             , 'CHIP수' AS GUBUN2
                             , FAMILY AS GUBUN3
                             , SUM(PLAN_QTY * STACK) AS PLAN_QTY
                             , SUM(PLAN_QTY * STACK) AS CONV_QTY
                          FROM (
                                SELECT DISTINCT A.PLAN_DATE, A.MAT_KEY, A.STACK, A.PLAN_QTY 
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = A.MAT_GRP_2) AS FAMILY
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMVA2'   
                                                   AND A.PLAN_MONTH BETWEEN '202003' AND '202006'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     ,( SELECT FLOW PLNNR,' ' ARBPL,OPER KTSCH FROM MWIPFLWOPR@RPTTOMES  WHERE FACTORY = 'HMVA2') SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMVA2'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                               )
                         WHERE 1=1
                           AND FAMILY IN ('Epoxy', 'BOC', 'Others')
                         GROUP BY PLAN_DATE, FAMILY
                         UNION ALL
                        SELECT PLAN_DATE
                             , 'Wire수' AS GUBUN2     
                             , ' ' AS GUBUN3
                             , PLAN_QTY
                             , PLAN_QTY * NVL(WIRE_QTY, MAT_GRP_6) AS CONV_QTY
                          FROM (
                                SELECT PLAN_DATE
                                     , OPER
                                     , PLAN_QTY
                                     , MAT_ID
                                     , MAT_GRP_6
                                     , (SELECT MAX(TO_NUMBER(TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = 'HMVA2' AND SET_FLAG = 'Y' AND TCD_CMF_2 <> ' ' AND MAT_ID = A.MAT_ID AND OPER = A.OPER) AS WIRE_QTY
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMVA2'   
                                                   AND A.PLAN_MONTH BETWEEN '202003' AND '202006'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     ,( SELECT FLOW PLNNR,' ' ARBPL,OPER KTSCH FROM MWIPFLWOPR@RPTTOMES  WHERE FACTORY = 'HMVA2') SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMVA2'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                                 WHERE 1=1
                                   AND OPER LIKE 'A06%'
                               )
                         UNION ALL
                        SELECT PLAN_DATE
                             , '95mm' AS GUBUN2
                             , CASE WHEN OPER = 'A1000' THEN 'Mold'
                                    WHEN OPER = 'A1300' THEN 'SBA'
                                    ELSE 'SST'
                               END GUBUN3
                             , SUM(PLAN_QTY) AS PLAN_QTY
                             , SUM(PLAN_QTY) AS CONV_QTY
                          FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMVA2'   
                                                   AND A.PLAN_MONTH BETWEEN '202003' AND '202006'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     ,( SELECT FLOW PLNNR,' ' ARBPL,OPER KTSCH FROM MWIPFLWOPR@RPTTOMES  WHERE FACTORY = 'HMVA2') SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMVA2'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                             , (
                                SELECT * 
                                  FROM MATRNAMSTS@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND ATTR_TYPE = 'MAT_ETC'
                                   AND ATTR_NAME = 'MAGAZINE_TYPE' 
                                   AND ATTR_VALUE = '95'
                               ) B
                         WHERE 1=1
                           AND A.MAT_ID = B.ATTR_KEY
                           AND A.OPER IN ('A1000', 'A1300', 'A1750')
                         GROUP BY PLAN_DATE, OPER
                       )
                 GROUP BY GUBUN2, GUBUN3
               )
       ) PLN
 WHERE 1=1
   AND MDL.GUBUN1 = PLN.GUBUN1(+)   
   AND MDL.GUBUN2 = PLN.GUBUN2(+)   
   AND MDL.GUBUN3 = PLN.GUBUN3(+)   
 ORDER BY GUBUN1, DECODE(GUBUN2, 'Wafer', 1, 'CHIP수', 2, 'Wire수', 3, 'PKG수', 4, 5), GUBUN3

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) CUSTOMER, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
     , ROUND(SUM(ORI_PLN) / 1000, 0) AS ORI_PLN
     , ROUND(SUM(REV_PLN) / 1000, 0) AS REV_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , ROUND(DECODE(SUM(ORI_PLN), 0, 0, SUM(SHP_TTL) / SUM(ORI_PLN) * 100), 1) AS JINDO_1
     , ROUND(DECODE(SUM(REV_PLN), 0, 0, SUM(SHP_TTL) / SUM(REV_PLN) * 100), 1) AS JINDO_2
     , ROUND(SUM(D1_PLAN) / 1000, 0) AS D1_PLAN
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0)) / 1000, 0) AS D0_PLAN
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0) - NVL(SHP_TODAY,0)) / 1000, 0) AS D0_DEF
     , ROUND(SUM(HMK3A) / 1000, 0) AS HMK3A
     , ROUND(SUM(QC_GATE) / 1000, 0) AS QC_GATE
     , ROUND(SUM(PVI) / 1000, 0) AS PVI
     , ROUND(SUM(AVI) / 1000, 0) AS AVI
     , ROUND(SUM(SIG) / 1000, 0) AS SIG
     , ROUND(SUM(SBA) / 1000, 0) AS SBA
     , ROUND(SUM(TIN) / 1000, 0) AS TIN
     , ROUND(SUM(TRIM) / 1000, 0) AS TRIM
     , ROUND(SUM(MK) / 1000, 0) AS MK
     , ROUND(SUM(CURE) / 1000, 0) AS CURE
     , ROUND(SUM(MOLD) / 1000, 0) AS MOLD
     , ROUND(SUM(F_GATE) / 1000, 0) AS F_GATE
     , ROUND(SUM(F_WB9) / 1000, 0) AS F_WB9
     , ROUND(SUM(F_DA9) / 1000, 0) AS F_DA9
     , ROUND(SUM(F_WB8) / 1000, 0) AS F_WB8
     , ROUND(SUM(F_DA8) / 1000, 0) AS F_DA8
     , ROUND(SUM(F_WB7) / 1000, 0) AS F_WB7
     , ROUND(SUM(F_DA7) / 1000, 0) AS F_DA7
     , ROUND(SUM(F_WB6) / 1000, 0) AS F_WB6
     , ROUND(SUM(F_DA6) / 1000, 0) AS F_DA6
     , ROUND(SUM(F_WB5) / 1000, 0) AS F_WB5
     , ROUND(SUM(F_DA5) / 1000, 0) AS F_DA5
     , ROUND(SUM(F_WB4) / 1000, 0) AS F_WB4
     , ROUND(SUM(F_DA4) / 1000, 0) AS F_DA4
     , ROUND(SUM(F_WB3) / 1000, 0) AS F_WB3
     , ROUND(SUM(F_DA3) / 1000, 0) AS F_DA3
     , ROUND(SUM(F_WB2) / 1000, 0) AS F_WB2
     , ROUND(SUM(F_DA2) / 1000, 0) AS F_DA2
     , ROUND(SUM(F_WB1) / 1000, 0) AS F_WB1
     , ROUND(SUM(F_DA1 + SMT) / 1000, 0) AS F_DA1
     , ROUND(SUM(SP) / 1000, 0) AS SP
     , ROUND(SUM(SAW) / 1000, 0) AS SAW
     , ROUND(SUM(BG) / 1000, 0) AS BG
     , ROUND(SUM(STOCK) / 1000, 0) AS STOCK
     , ROUND(SUM(HMK3A + QC_GATE + PVI + AVI + SIG + SBA + TIN + TRIM + MK + CURE + MOLD + F_GATE + F_WB5 + F_DA5 + 
                 F_WB4 + F_DA4 + F_WB3 + F_DA3 + F_WB2 + F_DA2 + F_WB1 + F_DA1 + SP + SAW + BG + STOCK) / 1000, 0) AS WIP_TTL 
     , ROUND(SUM(RCV_QTY) / 1000, 0) AS RCV_QTY
     , ROUND(SUM(OUT_HMKA3) / 1000, 0) AS OUT_HMKA3
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(OUT_SIG) / 1000, 0) AS OUT_SIG
     , ROUND(SUM(OUT_MK) / 1000, 0) AS OUT_MK
     , ROUND(SUM(OUT_MOLD) / 1000, 0) AS OUT_MOLD
     , ROUND(SUM(OUT_WB9) / 1000, 0) AS OUT_WB9
     , ROUND(SUM(OUT_DA9) / 1000, 0) AS OUT_DA9
     , ROUND(SUM(OUT_WB8) / 1000, 0) AS OUT_WB8
     , ROUND(SUM(OUT_DA8) / 1000, 0) AS OUT_DA8
     , ROUND(SUM(OUT_WB7) / 1000, 0) AS OUT_WB7
     , ROUND(SUM(OUT_DA7) / 1000, 0) AS OUT_DA7
     , ROUND(SUM(OUT_WB6) / 1000, 0) AS OUT_WB6
     , ROUND(SUM(OUT_DA6) / 1000, 0) AS OUT_DA6
     , ROUND(SUM(OUT_WB5) / 1000, 0) AS OUT_WB5
     , ROUND(SUM(OUT_DA5) / 1000, 0) AS OUT_DA5
     , ROUND(SUM(OUT_WB4) / 1000, 0) AS OUT_WB4
     , ROUND(SUM(OUT_DA4) / 1000, 0) AS OUT_DA4
     , ROUND(SUM(OUT_WB3) / 1000, 0) AS OUT_WB3
     , ROUND(SUM(OUT_DA3) / 1000, 0) AS OUT_DA3
     , ROUND(SUM(OUT_WB2) / 1000, 0) AS OUT_WB2
     , ROUND(SUM(OUT_DA2) / 1000, 0) AS OUT_DA2
     , ROUND(SUM(OUT_WB1) / 1000, 0) AS OUT_WB1
     , ROUND(SUM(OUT_DA1) / 1000, 0) AS OUT_DA1
     , ROUND(SUM(OUT_DDS) / 1000, 0) AS OUT_DDS
     , ROUND(SUM(OUT_SAW) / 1000, 0) AS OUT_SAW
     , ROUND(SUM(OUT_BG) / 1000, 0) AS OUT_BG
     , ROUND(SUM(OUT_STEALTH) / 1000, 0) AS OUT_STEALTH
     , ROUND(SUM(OUT_PRI) / 1000, 0) AS OUT_PRI
     , ROUND(SUM(OUT_LAMI) / 1000, 0) AS OUT_LAMI
     , ROUND(SUM(OUT_STOCK) / 1000, 0) AS OUT_STOCK
  FROM (
        SELECT MAT.*
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.ORI_PLN/MAT.NET_DIE,0) ELSE PLN.ORI_PLN END, 0) * PRICE AS ORI_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.REV_PLN/MAT.NET_DIE,0) ELSE PLN.REV_PLN END, 0) * PRICE AS REV_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D0_PLAN/MAT.NET_DIE,0) ELSE PLN.D0_PLAN END, 0) * PRICE AS D0_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D1_PLAN/MAT.NET_DIE,0) ELSE PLN.D1_PLAN END, 0) * PRICE AS D1_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_WEEK/MAT.NET_DIE,0) ELSE SHP.SHP_WEEK END, 0) * PRICE AS SHP_WEEK 
             , NVL(STOCK,0) * PRICE AS STOCK, NVL(BG,0) * PRICE AS BG, NVL(SAW,0) * PRICE AS SAW, NVL(SP,0) * PRICE AS SP, NVL(SMT,0) * PRICE AS SMT, NVL(DA,0) * PRICE AS DA
             , NVL(S_DA1,0) * PRICE AS S_DA1, NVL(S_DA2,0) * PRICE AS S_DA2, NVL(S_DA3,0) * PRICE AS S_DA3, NVL(S_DA4,0) * PRICE AS S_DA4, NVL(S_DA5,0) * PRICE AS S_DA5
             , NVL(S_DA6,0) * PRICE AS S_DA6, NVL(S_DA7,0) * PRICE AS S_DA7, NVL(S_DA8,0) * PRICE AS S_DA8, NVL(S_DA9,0) * PRICE AS S_DA9
             , NVL(F_DA1,0) * PRICE AS F_DA1, NVL(F_DA2,0) * PRICE AS F_DA2, NVL(F_DA3,0) * PRICE AS F_DA3, NVL(F_DA4,0) * PRICE AS F_DA4, NVL(F_DA5,0) * PRICE AS F_DA5
             , NVL(F_DA6,0) * PRICE AS F_DA6, NVL(F_DA7,0) * PRICE AS F_DA7, NVL(F_DA8,0) * PRICE AS F_DA8, NVL(F_DA9,0) * PRICE AS F_DA9
             , NVL(WB,0) * PRICE AS WB, NVL(S_WB1,0) * PRICE AS S_WB1, NVL(S_WB2,0) * PRICE AS S_WB2, NVL(S_WB3,0) * PRICE AS S_WB3, NVL(S_WB4,0) * PRICE AS S_WB4
             , NVL(S_WB5,0) * PRICE AS S_WB5, NVL(S_WB6,0) * PRICE AS S_WB6, NVL(S_WB7,0) * PRICE AS S_WB7, NVL(S_WB8,0) * PRICE AS S_WB8, NVL(S_WB9,0) * PRICE AS S_WB9
             , NVL(F_WB1,0) * PRICE AS F_WB1, NVL(F_WB2,0) * PRICE AS F_WB2, NVL(F_WB3,0) * PRICE AS F_WB3, NVL(F_WB4,0) * PRICE AS F_WB4
             , NVL(F_WB5,0) * PRICE AS F_WB5, NVL(F_WB6,0) * PRICE AS F_WB6, NVL(F_WB7,0) * PRICE AS F_WB7, NVL(F_WB8,0) * PRICE AS F_WB8, NVL(F_WB9,0) * PRICE AS F_WB9
             , NVL(GATE,0) * PRICE AS GATE, NVL(F_GATE,0) * PRICE  AS F_GATE, NVL(MOLD,0) * PRICE AS MOLD, NVL(CURE,0) * PRICE AS CURE
             , NVL(MK,0) * PRICE AS MK, NVL(TRIM,0) * PRICE AS TRIM, NVL(TIN,0) * PRICE AS TIN, NVL(SBA,0) * PRICE AS SBA, NVL(SIG,0) * PRICE AS SIG
             , NVL(AVI,0) * PRICE AS AVI, NVL(VI,0) * PRICE AS VI, NVL(PVI,0) * PRICE AS PVI, NVL(QC_GATE,0) * PRICE AS QC_GATE, NVL(HMK3A,0) * PRICE AS HMK3A
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_QTY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_QTY
             , NVL(MOV.OUT_WB,0) * PRICE AS OUT_WB
             , NVL(MOV.OUT_DA,0) * PRICE AS OUT_DA
             , NVL(MOV.OUT_DP,0) * PRICE AS OUT_DP
             , NVL(MOV.OUT_HMKA3,0) * PRICE AS OUT_HMKA3
             , NVL(MOV.OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(MOV.OUT_SIG,0) * PRICE AS OUT_SIG
             , NVL(MOV.OUT_MK,0) * PRICE AS OUT_MK
             , NVL(MOV.OUT_MOLD,0) * PRICE AS OUT_MOLD
             , NVL(MOV.OUT_WB9,0) * PRICE AS OUT_WB9
             , NVL(MOV.OUT_DA9,0) * PRICE AS OUT_DA9
             , NVL(MOV.OUT_WB8,0) * PRICE AS OUT_WB8
             , NVL(MOV.OUT_DA8,0) * PRICE AS OUT_DA8
             , NVL(MOV.OUT_WB7,0) * PRICE AS OUT_WB7
             , NVL(MOV.OUT_DA7,0) * PRICE AS OUT_DA7
             , NVL(MOV.OUT_WB6,0) * PRICE AS OUT_WB6
             , NVL(MOV.OUT_DA6,0) * PRICE AS OUT_DA6
             , NVL(MOV.OUT_WB5,0) * PRICE AS OUT_WB5
             , NVL(MOV.OUT_DA5,0) * PRICE AS OUT_DA5
             , NVL(MOV.OUT_WB4,0) * PRICE AS OUT_WB4
             , NVL(MOV.OUT_DA4,0) * PRICE AS OUT_DA4
             , NVL(MOV.OUT_WB3,0) * PRICE AS OUT_WB3
             , NVL(MOV.OUT_DA3,0) * PRICE AS OUT_DA3
             , NVL(MOV.OUT_WB2,0) * PRICE AS OUT_WB2
             , NVL(MOV.OUT_DA2,0) * PRICE AS OUT_DA2
             , NVL(MOV.OUT_WB1,0) * PRICE AS OUT_WB1
             , NVL(MOV.OUT_DA1,0) * PRICE AS OUT_DA1
             , NVL(MOV.OUT_DDS,0) * PRICE AS OUT_DDS
             , NVL(MOV.OUT_SAW,0) * PRICE AS OUT_SAW
             , NVL(MOV.OUT_BG,0) * PRICE AS OUT_BG
             , NVL(MOV.OUT_STEALTH,0) * PRICE AS OUT_STEALTH
             , NVL(MOV.OUT_PRI,0) * PRICE AS OUT_PRI
             , NVL(MOV.OUT_LAMI,0) * PRICE AS OUT_LAMI
             , NVL(MOV.OUT_STOCK,0) * PRICE AS OUT_STOCK
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 <> 'PW' 
               ) MAT
             , (
                SELECT MAT_ID 
                     , SUM(ORI_PLN) AS ORI_PLN 
                     , SUM(REV_PLN) AS REV_PLN 
                     , SUM(D0_PLAN) AS D0_PLAN 
                     , SUM(D1_PLAN) AS D1_PLAN 
                  FROM ( 
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS ORI_PLN, SUM(RESV_FIELD1) AS REV_PLN, 0 AS D0_PLAN, 0 AS D1_PLAN
                          FROM (
                                SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                                  FROM CWIPPLNMON 
                                 WHERE 1=1 
                                   AND FACTORY = 'HMVA2'
                                   AND PLAN_MONTH = '202006'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID
                        HAVING SUM(PLAN_QTY_ASSY + RESV_FIELD1) > 0
                         UNION ALL
                        SELECT MAT_ID, 0, 0
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY + D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY + D6_QTY 
                                        ELSE 0 
                                   END) AS D0_PLAN 
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200603', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                        ELSE 0 
                                   END) AS D1_PLAN 
                          FROM (
                                SELECT FACTORY, MAT_ID 
                                     , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D0_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D2_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D3_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D4_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D5_QTY, 0)) AS D5_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', D6_QTY, 0)) AS D6_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D0_QTY, 0)) AS D7_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D1_QTY, 0)) AS D8_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D2_QTY, 0)) AS D9_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D3_QTY, 0)) AS D10_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D4_QTY, 0)) AS D11_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D5_QTY, 0)) AS D12_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', D6_QTY, 0)) AS D13_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2_QTY  
                                  FROM RWIPPLNWEK  
                                 WHERE 1=1  
                                   AND FACTORY = 'HMVA2'  
                                   AND GUBUN = '3'  
                                   AND PLAN_WEEK IN ('202023','202024') 
                                 GROUP BY FACTORY, MAT_ID  
                               )  
                         GROUP BY MAT_ID  
                       ) 
                 GROUP BY MAT_ID  
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200603', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200530' AND '20200602' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200530' AND '20200603' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200601' AND '20200603' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200603', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200530' AND '20200602' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200530' AND '20200603' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID 
               ) SHP
             , (
                SELECT MAT_ID, SUM(RCV_QTY_1) AS RCV_QTY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE = '20200603'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)) AS STOCK
                     , SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)) AS BG
                     , SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)) AS SAW
                     , SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)) AS SP 
                     , SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)) AS SMT 
                     , SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)) AS DA
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0305', 'A0306', 'A0310', 'A0333', 'A0340', 'A0400', 'A0401', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS S_DA1
                     , SUM(CASE WHEN OPER IN ('A0402', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS S_DA2
                     , SUM(CASE WHEN OPER IN ('A0403', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS S_DA3
                     , SUM(CASE WHEN OPER IN ('A0404', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS S_DA4
                     , SUM(CASE WHEN OPER IN ('A0405', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS S_DA5
                     , SUM(CASE WHEN OPER IN ('A0406', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS S_DA6
                     , SUM(CASE WHEN OPER IN ('A0407', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS S_DA7
                     , SUM(CASE WHEN OPER IN ('A0408', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS S_DA8
                     , SUM(CASE WHEN OPER IN ('A0409', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS S_DA9
                     , SUM(CASE WHEN OPER IN ('A0250','A0333','A0340','A0400', 'A0401') THEN QTY ELSE 0 END) AS F_DA1
                     , SUM(CASE WHEN OPER IN ('A0402') THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA2 
                     , SUM(CASE WHEN OPER IN ('A0403') THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA3 
                     , SUM(CASE WHEN OPER IN ('A0404') THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA4 
                     , SUM(CASE WHEN OPER IN ('A0405') THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA5 
                     , SUM(CASE WHEN OPER IN ('A0406') THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA6 
                     , SUM(CASE WHEN OPER IN ('A0407') THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA7 
                     , SUM(CASE WHEN OPER IN ('A0408') THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA8 
                     , SUM(CASE WHEN OPER IN ('A0409') THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA9 
                     , SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)) AS WB
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0800', 'A0801') THEN QTY ELSE 0 END) AS S_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0802') THEN QTY ELSE 0 END) AS S_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0803') THEN QTY ELSE 0 END) AS S_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0804') THEN QTY ELSE 0 END) AS S_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0805') THEN QTY ELSE 0 END) AS S_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0806') THEN QTY ELSE 0 END) AS S_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0807') THEN QTY ELSE 0 END) AS S_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0808') THEN QTY ELSE 0 END) AS S_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0809') THEN QTY ELSE 0 END) AS S_WB9
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS F_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS F_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS F_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS F_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS F_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS F_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS F_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS F_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS F_WB9
                     , SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)) AS GATE
                     , SUM(CASE WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_5 = '-' THEN QTY 
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN QTY
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN QTY  
                                ELSE 0 END) AS F_GATE 
                     , SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)) AS MOLD
                     , SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)) AS CURE
                     , SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)) AS MK
                     , SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)) AS TRIM
                     , SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)) AS TIN
                     , SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)) AS SBA
                     , SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)) AS SIG
                     , SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)) AS AVI
                     , SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)) AS VI
                     , SUM(CASE WHEN OPER IN ('A2030', 'A2050') THEN QTY ELSE 0 END) AS PVI
                     , SUM(DECODE(OPER, 'A2100', QTY, 0)) AS QC_GATE
                     , SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)) AS HMK3A
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' ' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54')
                               )
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                 ELSE 0
                           END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A0000' THEN QTY ELSE 0 END) AS OUT_STOCK
                     , SUM(CASE WHEN OPER = 'A0020' THEN QTY ELSE 0 END) AS OUT_LAMI
                     , SUM(CASE WHEN OPER = 'A0030' THEN QTY ELSE 0 END) AS OUT_PRI
                     , SUM(CASE WHEN OPER = 'A0033' THEN QTY ELSE 0 END) AS OUT_STEALTH
                     , SUM(CASE WHEN OPER = 'A0040' THEN QTY ELSE 0 END) AS OUT_BG
                     , SUM(CASE WHEN OPER = 'A0200' THEN QTY ELSE 0 END) AS OUT_SAW
                     , SUM(CASE WHEN OPER = 'A0230' THEN QTY ELSE 0 END) AS OUT_DDS
                     , SUM(CASE WHEN OPER IN ('A0400', 'A0401', 'A0333') THEN QTY ELSE 0 END) AS OUT_DA1
                     , SUM(CASE WHEN OPER IN ('A0600', 'A0601') THEN QTY ELSE 0 END) AS OUT_WB1
                     , SUM(CASE WHEN OPER = 'A0402' THEN QTY ELSE 0 END) AS OUT_DA2
                     , SUM(CASE WHEN OPER = 'A0602' THEN QTY ELSE 0 END) AS OUT_WB2
                     , SUM(CASE WHEN OPER = 'A0403' THEN QTY ELSE 0 END) AS OUT_DA3
                     , SUM(CASE WHEN OPER = 'A0603' THEN QTY ELSE 0 END) AS OUT_WB3
                     , SUM(CASE WHEN OPER = 'A0404' THEN QTY ELSE 0 END) AS OUT_DA4
                     , SUM(CASE WHEN OPER = 'A0604' THEN QTY ELSE 0 END) AS OUT_WB4
                     , SUM(CASE WHEN OPER = 'A0405' THEN QTY ELSE 0 END) AS OUT_DA5
                     , SUM(CASE WHEN OPER = 'A0605' THEN QTY ELSE 0 END) AS OUT_WB5
                     , SUM(CASE WHEN OPER = 'A0406' THEN QTY ELSE 0 END) AS OUT_DA6
                     , SUM(CASE WHEN OPER = 'A0606' THEN QTY ELSE 0 END) AS OUT_WB6
                     , SUM(CASE WHEN OPER = 'A0407' THEN QTY ELSE 0 END) AS OUT_DA7
                     , SUM(CASE WHEN OPER = 'A0607' THEN QTY ELSE 0 END) AS OUT_WB7
                     , SUM(CASE WHEN OPER = 'A0408' THEN QTY ELSE 0 END) AS OUT_DA8
                     , SUM(CASE WHEN OPER = 'A0608' THEN QTY ELSE 0 END) AS OUT_WB8
                     , SUM(CASE WHEN OPER = 'A0409' THEN QTY ELSE 0 END) AS OUT_DA9
                     , SUM(CASE WHEN OPER = 'A0609' THEN QTY ELSE 0 END) AS OUT_WB9
                     , SUM(CASE WHEN OPER = 'A1000' THEN QTY ELSE 0 END) AS OUT_MOLD 
                     , SUM(CASE WHEN OPER IN ('A1150', 'A1500') THEN QTY ELSE 0 END) AS OUT_MK
                     , SUM(CASE WHEN OPER IN ('A1750', 'A1800', 'A1900') THEN QTY ELSE 0 END) AS OUT_SIG
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                     , SUM(CASE WHEN OPER = 'AZ010' THEN QTY ELSE 0 END) AS OUT_HMKA3 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , CASE WHEN OPER = 'AZ010' THEN S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1
                                                    ELSE S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1
                                               END END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200603'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%'   
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0000|A0200|A0230|A0333|A040*|A060*|A1000|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
           AND NVL(ORI_PLN,0)+NVL(REV_PLN,0)+NVL(SHP_TTL,0)+NVL(RCV_QTY,0)+NVL(WIP_TTL,0)+NVL(D0_PLAN,0)+NVL(D1_PLAN,0)+NVL(SHP_WEEK,0) <> 0
       ) A
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
 ORDER BY DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5,6), CUSTOMER, MAT_GRP_9, MAT_GRP_10

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200603')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200603', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH CUT_OFF AS
(
 SELECT SAP_CODE, WORK_DATE, SYS_DATE, W1_CUTOFF
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 24
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 0
             ELSE ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS THIS_WEEK_TIME
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 0
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 24
             ELSE 24 - ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS NEXT_WEEK_TIME
      , TO_CHAR(W1_CUTOFF,'D') AS CKD_DAY
   FROM RSUMCUTOFF A
      , (
         SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, SYS_DATE AS WORK_DATE, TO_DATE(SYS_DATE, 'YYYYMMDD') AS SYS_DATE
           FROM MWIPCALDEF
          WHERE CALENDAR_ID = 'OTD'
            AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200603') 
        ) B
  WHERE 1=1
    AND A.WORK_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2'
    AND A.OPER IN ('A0020', 'A0100')
), 
DT AS
(
SELECT STD.VENDOR_ID
     , STD.WORK_DATE
     , DECODE(RNK, 1, W1_QTY) AS W1_QTY
     , DECODE(RNK, 1, TTL_WIP) AS TTL_WIP
     , DECODE(RNK, 1, WF_DEF) AS WF_DEF
     , TTL_WEEK_NEED
     , SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_TTL_WEEK_NEED
     , RCV_QTY
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_RCV_QTY 
     , PLN_QTY
     , SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_PLN_QTY 
     , SHP_QTY
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHP_QTY
     , NVL(RCV_QTY,0) - NVL(TTL_WEEK_NEED,0) AS SHORT_WF
     , NVL(SHP_QTY,0) - NVL(PLN_QTY,0) AS SHORT_SHP
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_WF
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_SHP
     , CKD_DAY
  FROM (
        SELECT A.VENDOR_ID
             , B.WORK_DATE
             , A.W1_QTY
             , A.TTL_WIP
             , A.WF_DEF
             , A.W2_QTY
             , A.THIS_WEEK_TIME_IN
             , A.NEXT_WEEK_TIME_IN 
             , ROUND(B.THIS_WEEK_TIME) AS THIS_WEEK_TIME
             , ROUND(B.NEXT_WEEK_TIME) AS NEXT_WEEK_TIME
             , ROUND(A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME, 2) AS THIS_WEEK_NEED
             , ROUND(A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME, 2) AS NEXT_WEEK_NEED
             , ROUND((A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME) + (A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME), 2) AS TTL_WEEK_NEED
             , CASE WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 7 THEN D0_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 1 THEN D1_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 2 THEN D2_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 3 THEN D3_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 4 THEN D4_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 5 THEN D5_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 6 THEN D6_QTY
                    ELSE 0
               END PLN_QTY 
             , ROW_NUMBER() OVER(PARTITION BY A.VENDOR_ID ORDER BY B.WORK_DATE) AS RNK
             , CKD_DAY
          FROM (
                SELECT A.*
                     , ROUND(DECODE(THIS_TIME_SUM, 0, 0, WF_DEF / THIS_TIME_SUM), 2) AS THIS_WEEK_TIME_IN
                  FROM (
                        SELECT VENDOR_ID
                             , W1_QTY
                             , TTL_WIP
                             , NVL(W1_QTY,0) - NVL(TTL_WIP,0) AS WF_DEF
                             , W2_QTY
                             , D0_QTY, D1_QTY, D2_QTY, D3_QTY, D4_QTY, D5_QTY, D6_QTY
                             , ROUND(W2_QTY / 168,2) AS NEXT_WEEK_TIME_IN
                             , NVL((       
                                    SELECT SUM(THIS_WEEK_TIME) AS THIS_WEEK_TIME
                                      FROM CUT_OFF
                                     WHERE SAP_CODE = VENDOR_ID
                                     GROUP BY SAP_CODE 
                                   ),0) AS THIS_TIME_SUM
                          FROM (
                                SELECT VENDOR_ID
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W1_QTY END) AS W1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W2_QTY END) AS W2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D0_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D0_QTY END) AS D0_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D1_QTY END) AS D1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D2_QTY END) AS D2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D3_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D3_QTY END) AS D3_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D4_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D4_QTY END) AS D4_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D5_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D5_QTY END) AS D5_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D6_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D6_QTY END) AS D6_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN TTL_WIP/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE TTL_WIP END) AS TTL_WIP
                                  FROM (
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D5_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D6_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMVA2' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202023', '202024')
                                           AND MAT_ID NOT LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                         UNION ALL
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202022', D5_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202022', D6_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D0_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D1_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D2_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D3_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202023', D4_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMVA2' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202022', '202023', '202024')
                                           AND MAT_ID LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                       ) PLN
                                     , (
                                        SELECT A.MAT_ID
                                             , HALF_WIP / NVL(DATA_1,1) AS HALF_WIP
                                             , STD_WIP
                                             , NVL(HALF_WIP / NVL(DATA_1,1),0) + NVL(STD_WIP, 0) AS TTL_WIP
                                          FROM (
                                                SELECT MAT_ID
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) HALF_WIP
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER > 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER > 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) STD_WIP
                                                  FROM (
                                                        SELECT OPER
                                                             , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                                         THEN DECODE(B.MAT_GRP_5, '1st', 0, QTY_1)
                                                                    WHEN (B.MAT_GRP_5 IN ('-', '1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN QTY_1
                                                               END QTY_1
                                                             , B.*
                                                          FROM RWIPLOTSTS_BOH A
                                                             , MWIPMATDEF B
                                                         WHERE 1=1
                                                           AND A.FACTORY = B.FACTORY 
                                                           AND A.MAT_ID = B.MAT_ID    
                                                           AND A.FACTORY = 'HMVA2'
                                                           AND A.CUTOFF_DT = '2020052922'
                                                           AND A.LOT_TYPE = 'W'
                                                           AND A.LOT_DEL_FLAG = ' '  
                                                           AND B.DELETE_FLAG = ' ' 
                                                           AND A.LOT_CMF_5 LIKE 'P%'
                                                           AND B.MAT_GRP_2 <> '-'
                                                           AND (B.MAT_GRP_5 IN ('-', '1st', '2nd', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%')
                                                       )
                                                 GROUP BY MAT_ID
                                               ) A
                                             , (
                                                SELECT KEY_1 AS MAT_ID, DATA_1
                                                  FROM MGCMTBLDAT 
                                                 WHERE FACTORY = 'HMVA2' 
                                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                                               ) B
                                         WHERE A.MAT_ID = B.MAT_ID(+) 
                                       ) WIP
                                     , MWIPMATDEF MAT
                                 WHERE 1=1
                                   AND MAT.MAT_ID = PLN.MAT_ID(+)
                                   AND MAT.MAT_ID = WIP.MAT_ID(+)
                                   AND MAT.FACTORY = 'HMVA2'
                                   AND MAT.DELETE_FLAG = ' '
                                   AND MAT.MAT_TYPE = 'FG'
                                 GROUP BY VENDOR_ID
                               )
                         WHERE W1_QTY > 0
                       ) A                 
               ) A
             , CUT_OFF B
         WHERE 1=1
           AND A.VENDOR_ID = B.SAP_CODE
       ) STD
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(RCV_QTY) AS RCV_QTY
          FROM (
                SELECT WORK_DATE, A.MAT_ID
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , RCV_QTY_1 / NVL(DATA_1,1) AS RCV_QTY    
                  FROM (
                        SELECT WORK_DATE, MAT_ID
                             , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN RCV_QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))                              
                                              ELSE RCV_QTY_1
                                         END),0) AS RCV_QTY_1             
                          FROM (
                                SELECT WORK_DATE
                                     , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                 THEN DECODE(B.MAT_GRP_5, '1st', 0, RCV_QTY_1)
                                            WHEN B.MAT_GRP_5 IN ('-', '1st') THEN RCV_QTY_1
                                       END RCV_QTY_1
                                     , B.* 
                                  FROM VSUMWIPRCV A
                                     , MWIPMATDEF B
                                 WHERE 1=1
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.MAT_ID = B.MAT_ID    
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.WORK_DATE BETWEEN '20200530' AND '20200603'
                                   AND A.LOT_TYPE = 'W' 
                                   AND B.DELETE_FLAG = ' ' 
                                   AND A.CM_KEY_3 LIKE 'P%'
                                   AND B.MAT_GRP_2 <> '-'
                                   AND B.MAT_GRP_5 IN ('-', '1st', '2nd')
                               )
                         GROUP BY WORK_DATE, MAT_ID
                       ) A
                     , (
                        SELECT KEY_1 AS MAT_ID, DATA_1
                          FROM MGCMTBLDAT 
                         WHERE FACTORY = 'HMVA2' 
                           AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                       ) B
                 WHERE A.MAT_ID = B.MAT_ID(+)
               )
         GROUP BY VENDOR_ID, WORK_DATE
       ) RCV
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(SHP_QTY_1) AS SHP_QTY
          FROM (
                SELECT WORK_DATE
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , A.MAT_ID 
                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1)/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                            ELSE S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 
                       END AS SHP_QTY_1 
                  FROM RSUMFACMOV A
                     , MWIPMATDEF B
                 WHERE 1 = 1 
                   AND A.MAT_ID = B.MAT_ID
                   AND A.CM_KEY_1 = B.FACTORY
                   AND A.WORK_DATE BETWEEN '20200530' AND '20200603'
                   AND A.LOT_TYPE = 'W'
                   AND A.CM_KEY_1 = 'HMVA2' 
                   AND A.CM_KEY_2 = 'PROD'
                   AND A.CM_KEY_3 LIKE 'P%'
                   AND A.FACTORY NOT IN ('RETURN')
                   AND S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 > 0
               )
         GROUP BY VENDOR_ID, WORK_DATE 
       ) SHP
 WHERE 1=1   
   AND STD.WORK_DATE  = RCV.WORK_DATE(+)
   AND STD.WORK_DATE = SHP.WORK_DATE(+)   
   AND STD.VENDOR_ID = RCV.VENDOR_ID(+)
   AND STD.VENDOR_ID = SHP.VENDOR_ID(+)   
)
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(NVL(SUM(W1_QTY), 0) / 1, 0) AS W1_QTY
     , ROUND(NVL(SUM(TTL_WIP), 0) / 1, 0) AS TTL_WIP
     , ROUND(NVL(SUM(WF_DEF), 0) / 1, 0) AS WF_DEF
     , GUBUN_1
     , GUBUN_2
     , ROUND(SUM(D0) / 1, 0) AS D0
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 7 THEN 0 ELSE ROUND(SUM(D1), 0) END / 1, 0) AS D1
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') IN (7,1) THEN 0 ELSE ROUND(SUM(D2), 0) END / 1, 0) AS D2
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') IN (7,1,2) THEN 0 ELSE ROUND(SUM(D3), 0) END / 1, 0) AS D3
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') IN (7,1,2,3) THEN 0 ELSE ROUND(SUM(D4), 0) END / 1, 0) AS D4
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') IN (7,1,2,3,4) THEN 0 ELSE ROUND(SUM(D5), 0) END / 1, 0) AS D5
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') IN (7,1,2,3,4,5) THEN 0 ELSE ROUND(SUM(D6), 0) END / 1, 0) AS D6
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 7 THEN ROUND(SUM(D0), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 1 THEN ROUND(SUM(D1), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 2 THEN ROUND(SUM(D2), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 3 THEN ROUND(SUM(D3), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 4 THEN ROUND(SUM(D4), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 5 THEN ROUND(SUM(D5), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200603','YYYYMMDD'),'D') = 6 THEN ROUND(SUM(D6), 0)
            ELSE ROUND(NVL(SUM(D0),0) + NVL(SUM(D1),0) + NVL(SUM(D2),0) + NVL(SUM(D3),0) + NVL(SUM(D4),0) + NVL(SUM(D5),0) + NVL(SUM(D6),0), 0)
       END / 1, 0) AS TTL
     , MAX(CKD_DAY) AS CKD_DAY
  FROM (
        SELECT VENDOR_ID, SUM(W1_QTY) AS W1_QTY, SUM(TTL_WIP) AS TTL_WIP, SUM(WF_DEF) AS WF_DEF, MAX(CKD_DAY) AS CKD_DAY
          FROM DT
         GROUP BY VENDOR_ID
       ) STD
     , (
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', TTL_WEEK_NEED)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', TTL_WEEK_NEED)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', TTL_WEEK_NEED)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', TTL_WEEK_NEED)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', TTL_WEEK_NEED)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', TTL_WEEK_NEED)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', TTL_WEEK_NEED)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', RCV_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', RCV_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', RCV_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', RCV_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', RCV_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', RCV_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', RCV_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', SUM_SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', SUM_SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', SUM_SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', SUM_SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', SUM_SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', SUM_SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', SUM_SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', PLN_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', PLN_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', PLN_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', PLN_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', PLN_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', PLN_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', PLN_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', SHP_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', SHP_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', SHP_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', SHP_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', SHP_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', SHP_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', SHP_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200530', SUM_SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200531', SUM_SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200601', SUM_SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200602', SUM_SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200603', SUM_SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200604', SUM_SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200605', SUM_SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
       ) DAT
     , (
        SELECT DISTINCT MAT_GRP_1,  ' ', MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', VENDOR_ID 
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND MAT_TYPE = 'FG'
           AND DELETE_FLAG = ' '
           AND VENDOR_ID <> ' '
           AND SUBSTR(VENDOR_ID, 5, 4) <> '0000'
           AND MAT_ID LIKE '%'
       ) MAT
 WHERE 1=1
   AND MAT.VENDOR_ID = STD.VENDOR_ID 
   AND MAT.VENDOR_ID = DAT.VENDOR_ID(+) 
 GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, GUBUN_2 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, DECODE(GUBUN_2, '계획', 1, '실적', 2, '과부족', 3, 4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010911'
-------------------------------------------------------------
