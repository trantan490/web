SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , ROUND(SUM(TOTAL)/41, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200317', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200318', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200319', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200320', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200321', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200322', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200323', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200324', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200325', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200326', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200327', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200328', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200329', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200330', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200331', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE 'SEK%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200317' AND '20200426' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , ROUND(SUM(TOTAL)/41, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200317', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200318', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200319', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200320', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200321', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200322', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200323', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200324', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200325', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200326', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200327', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200328', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200329', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200330', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200331', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE 'FP%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200317' AND '20200426' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011011'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010305'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , ROUND(SUM(TOTAL)/9, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200504', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200505', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200506', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200507', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200508', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200509', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200510', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200511', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200504' AND '20200512' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010304'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010306'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = MAT.FACTORY AND TABLE_NAME = 'H_CUSTOMER' AND ROWNUM=1 AND KEY_1 = MAT.MAT_GRP_1), '-') AS CUSTOMER,  ' ', MAT.MAT_GRP_3 as Package,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , ' ' GUBUN 
     , (TOT_0 + TOT_1 + TOT_2 + TOT_3 + TOT_4 + TOT_5 + TOT_6 + TOT_7 + TOT_8 + TOT_9 + TOT_10 + TOT_11 + TOT_12 + TOT_13 + TOT_14 + TOT_15 + TOT_16 + TOT_17 + TOT_18) AS TOTAL1
     , TOT_0, TOT_1, TOT_2, TOT_3, TOT_4, TOT_5, TOT_6, TOT_7, TOT_8, TOT_9, TOT_10, TOT_11, TOT_12, TOT_13, TOT_14, TOT_15, TOT_16, TOT_17, TOT_18
     , (HOLD_0 + HOLD_1 + HOLD_2 + HOLD_3 + HOLD_4 + HOLD_5 + HOLD_6 + HOLD_7 + HOLD_8 + HOLD_9 + HOLD_10 + HOLD_11 + HOLD_12 + HOLD_13 + HOLD_14 + HOLD_15 + HOLD_16 + HOLD_17 + HOLD_18) AS TOTAL2 
     , HOLD_0, HOLD_1, HOLD_2, HOLD_3, HOLD_4, HOLD_5, HOLD_6, HOLD_7, HOLD_8, HOLD_9, HOLD_10, HOLD_11, HOLD_12, HOLD_13, HOLD_14, HOLD_15, HOLD_16, HOLD_17, HOLD_18
     , (BOYU_0 + BOYU_1 + BOYU_2 + BOYU_3 + BOYU_4 + BOYU_5 + BOYU_6 + BOYU_7 + BOYU_8 + BOYU_9 + BOYU_10 + BOYU_11 + BOYU_12 + BOYU_13 + BOYU_14 + BOYU_15 + BOYU_16 + BOYU_17 + BOYU_18) AS TOTAL3
     , BOYU_0, BOYU_1, BOYU_2, BOYU_3, BOYU_4, BOYU_5, BOYU_6, BOYU_7, BOYU_8, BOYU_9, BOYU_10, BOYU_11, BOYU_12, BOYU_13, BOYU_14, BOYU_15, BOYU_16, BOYU_17, BOYU_18
         FROM (     
                SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
     , SUM(DECODE(LOT.OPER, 'A0000', LOT.QTY, 0)) TOT_0
     , SUM(DECODE(LOT.OPER, 'A0005', LOT.QTY, 0)) TOT_1
     , SUM(DECODE(LOT.OPER, 'A000N', LOT.QTY, 0)) TOT_2
     , SUM(DECODE(LOT.OPER, 'A0010', LOT.QTY, 0)) TOT_3
     , SUM(DECODE(LOT.OPER, 'A0012', LOT.QTY, 0)) TOT_4
     , SUM(DECODE(LOT.OPER, 'A0013', LOT.QTY, 0)) TOT_5
     , SUM(DECODE(LOT.OPER, 'A0015', LOT.QTY, 0)) TOT_6
     , SUM(DECODE(LOT.OPER, 'A0020', LOT.QTY, 0)) TOT_7
     , SUM(DECODE(LOT.OPER, 'A0055', LOT.QTY, 0)) TOT_8
     , SUM(DECODE(LOT.OPER, 'A0023', LOT.QTY, 0)) TOT_9
     , SUM(DECODE(LOT.OPER, 'A0025', LOT.QTY, 0)) TOT_10
     , SUM(DECODE(LOT.OPER, 'A0030', LOT.QTY, 0)) TOT_11
     , SUM(DECODE(LOT.OPER, 'A0190', LOT.QTY, 0)) TOT_12
     , SUM(DECODE(LOT.OPER, 'A0033', LOT.QTY, 0)) TOT_13
     , SUM(DECODE(LOT.OPER, 'A0040', LOT.QTY, 0)) TOT_14
     , SUM(DECODE(LOT.OPER, 'A0041', LOT.QTY, 0)) TOT_15
     , SUM(DECODE(LOT.OPER, 'A0042', LOT.QTY, 0)) TOT_16
     , SUM(DECODE(LOT.OPER, 'A0045', LOT.QTY, 0)) TOT_17
     , SUM(DECODE(LOT.OPER, 'A0050', LOT.QTY, 0)) TOT_18
     , SUM(CASE WHEN LOT.OPER = 'A0000' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_0
     , SUM(CASE WHEN LOT.OPER = 'A0005' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_1
     , SUM(CASE WHEN LOT.OPER = 'A000N' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_2
     , SUM(CASE WHEN LOT.OPER = 'A0010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_3
     , SUM(CASE WHEN LOT.OPER = 'A0012' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_4
     , SUM(CASE WHEN LOT.OPER = 'A0013' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_5
     , SUM(CASE WHEN LOT.OPER = 'A0015' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_6
     , SUM(CASE WHEN LOT.OPER = 'A0020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_7
     , SUM(CASE WHEN LOT.OPER = 'A0055' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_8
     , SUM(CASE WHEN LOT.OPER = 'A0023' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_9
     , SUM(CASE WHEN LOT.OPER = 'A0025' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_10
     , SUM(CASE WHEN LOT.OPER = 'A0030' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_11
     , SUM(CASE WHEN LOT.OPER = 'A0190' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_12
     , SUM(CASE WHEN LOT.OPER = 'A0033' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_13
     , SUM(CASE WHEN LOT.OPER = 'A0040' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_14
     , SUM(CASE WHEN LOT.OPER = 'A0041' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_15
     , SUM(CASE WHEN LOT.OPER = 'A0042' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_16
     , SUM(CASE WHEN LOT.OPER = 'A0045' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_17
     , SUM(CASE WHEN LOT.OPER = 'A0050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_18
     , 0 BOYU_0
     , 0 BOYU_1
     , 0 BOYU_2
     , 0 BOYU_3
     , 0 BOYU_4
     , 0 BOYU_5
     , 0 BOYU_6
     , 0 BOYU_7
     , 0 BOYU_8
     , 0 BOYU_9
     , 0 BOYU_10
     , 0 BOYU_11
     , 0 BOYU_12
     , 0 BOYU_13
     , 0 BOYU_14
     , 0 BOYU_15
     , 0 BOYU_16
     , 0 BOYU_17
     , 0 BOYU_18
  FROM (  
        SELECT LOT.FACTORY 
             , LOT.MAT_ID 
             , OPR.OPER_GRP_1 OPER  
             , LOT.LOT_ID 
             , LOT.QTY_1 QTY 
             , TO_DATE('20200512181641', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14, 'YYYYMMDDHH24MISS') HOLD_DATE 
          FROM RWIPLOTSTS LOT,  
               MWIPOPRDEF OPR  
         WHERE 1=1  
           AND OPR.OPER_GRP_1 IN ('A0000', 'A0005', 'A000N', 'A0010', 'A0012', 'A0013', 'A0015', 'A0020', 'A0055', 'A0023', 'A0025', 'A0030', 'A0190', 'A0033', 'A0040', 'A0041', 'A0042', 'A0045', 'A0050')
           AND LOT.FACTORY = OPR.FACTORY  
           AND LOT.OPER = OPR.OPER  
           AND LOT.FACTORY  = 'HMVA2' 
           AND LOT.OPER NOT IN ('00001','00002')  
           AND LOT.LOT_DEL_FLAG = ' '  
           AND LOT.MAT_VER = 1  
           AND LOT.LOT_TYPE = 'W'  
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND MAT.FACTORY = LOT.FACTORY 
   AND MAT.MAT_ID = LOT.MAT_ID 
   AND MAT.MAT_VER = 1 
 GROUP BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
 ORDER BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
              ) MAT 

-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , ROUND(SUM(TOTAL)/30, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200430', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200401' AND '20200430' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , SUM(ASSY_END_QTY59 ) VAL59
             , SUM(ASSY_END_QTY60 ) VAL60
             , ROUND(SUM(TOTAL)/61, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200301', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200302', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200303', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200304', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200305', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200306', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200307', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200308', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200309', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200310', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200311', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200312', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200313', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200314', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200315', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200316', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200317', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200318', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200319', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200320', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200321', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200322', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200323', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200324', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200325', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200326', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200327', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200328', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200329', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200330', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200331', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY59
                    , DECODE(WORK_DATE, '20200430', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY60
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200301' AND '20200430' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010305'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER AS STEP, A.MAT_CMF_10 AS PIN_TYPE, A.MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , A.LOT_ID 
     , A.LOT_CMF_5 
     , A.STATUS 
     , A.HOLD_CODE 
     , A.HOLD_DESC 
     , A.CREATE_DAYDIFF 
     , A.ISSUE_DAYDIFF 
     , A.OPER_IN_DAYDIFF 
     , A.QTY_1 
     , A.LOT_CMF_14 
     , A.ISSUE_TIME 
     , A.OPER_IN_TIME 
     , A.LAST_COMMENT 
     , A.LOT_CMF_7 
     , CASE WHEN A.S_TIME IS NOT NULL AND A.S_TIME <= A.E_TIME THEN TRUNC(TO_DATE(A.E_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.S_TIME, 'YYYYMMDDHH24MISS'), 2) END AS DA_DAYDIFF
  FROM ( 
        SELECT C.* 
             , A.OPER  
             , A.LOT_ID  
             , A.LOT_CMF_5  
             , CASE WHEN HOLD_FLAG = 'Y' THEN 'HOLD'
                    ELSE DECODE(A.LOT_STATUS, 'PROC', 'RUN', A.LOT_STATUS)   
               END AS STATUS 
             , A.HOLD_CODE 
             , DECODE(A.HOLD_CODE, ' ', ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY=A.FACTORY AND TABLE_NAME = 'HOLD_CODE' AND KEY_1 = A.HOLD_CODE AND ROWNUM=1)) HOLD_DESC 
             , TRUNC(TO_DATE('20200512183130','YYYYMMDDHH24MISS') - DECODE(A.LOT_CMF_14, ' ', TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS')), 2) AS CREATE_DAYDIFF 
             , TRUNC(TO_DATE('20200512183130','YYYYMMDDHH24MISS') - DECODE(A.RESV_FIELD_1, ' ', SYSDATE, TO_DATE(A.RESV_FIELD_1,'YYYYMMDDHH24MISS')), 2) AS ISSUE_DAYDIFF 
             , TRUNC(TO_DATE('20200512183130','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_IN_DAYDIFF 
             , A.QTY_1  
             , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS') AS LOT_CMF_14 
             , DECODE(A.RESV_FIELD_1, ' ', ' ', TO_CHAR(TO_DATE(A.RESV_FIELD_1, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS ISSUE_TIME 
             , DECODE(A.OPER_IN_TIME, ' ', ' ', TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS OPER_IN_TIME 
             , A.LAST_COMMENT
             , A.LOT_CMF_7
             , (SELECT TRAN_TIME FROM RWIPLOTHIS WHERE FACTORY = 'HMVA2' AND HIST_DEL_FLAG = ' ' AND TRAN_CODE = 'END' AND OLD_OPER = 'A0250' AND LOT_ID = DECODE(D.FROM_TO_LOT_ID, NULL, A.LOT_ID, D.FROM_TO_LOT_ID)) AS S_TIME 
             , A.CREATE_TIME AS E_TIME 
          FROM RWIPLOTSTS A, MWIPMATDEF C 
             , (SELECT * FROM RWIPLOTSPL WHERE FACTORY = 'HMVA2' AND (OPER LIKE 'A04%' OR OPER = 'A0333') AND FROM_TO_FLAG = 'T') D
         WHERE 1=1
           AND A.FACTORY = C.FACTORY 
           AND A.MAT_ID = C.MAT_ID 
           AND A.LOT_ID = D.LOT_ID(+) 
           AND A.FACTORY  = 'HMVA2'  
           AND A.OPER NOT IN ('00001','00002') 
           AND A.MAT_VER = 1
           AND A.LOT_DEL_FLAG = ' ' 
           AND A.LOT_TYPE = 'W' 
           AND TRUNC(TO_DATE('20200512183130','YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) > 2
       ) A 
ORDER BY A.OPER, A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.LOT_ID, A.LOT_CMF_5, A.STATUS, A.HOLD_CODE, A.LOT_CMF_14, A.OPER_IN_TIME, A.LAST_COMMENT, A.LOT_CMF_7 

-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = MAT.FACTORY AND TABLE_NAME = 'H_CUSTOMER' AND ROWNUM=1 AND KEY_1 = MAT.MAT_GRP_1), '-') AS CUSTOMER,  ' ', MAT.MAT_GRP_3 as Package,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , ' ' GUBUN 
     , (TOT_0 + TOT_1 + TOT_2 + TOT_3 + TOT_4 + TOT_5 + TOT_6 + TOT_7 + TOT_8 + TOT_9 + TOT_10 + TOT_11 + TOT_12 + TOT_13 + TOT_14 + TOT_15 + TOT_16 + TOT_17 + TOT_18 + TOT_19 + TOT_20 + TOT_21 + TOT_22 + TOT_23 + TOT_24 + TOT_25 + TOT_26 + TOT_27 + TOT_28 + TOT_29 + TOT_30 + TOT_31 + TOT_32 + TOT_33 + TOT_34 + TOT_35 + TOT_36 + TOT_37 + TOT_38 + TOT_39 + TOT_40 + TOT_41 + TOT_42 + TOT_43 + TOT_44 + TOT_45 + TOT_46 + TOT_47 + TOT_48 + TOT_49 + TOT_50 + TOT_51 + TOT_52 + TOT_53 + TOT_54 + TOT_55 + TOT_56 + TOT_57 + TOT_58 + TOT_59 + TOT_60 + TOT_61 + TOT_62 + TOT_63 + TOT_64 + TOT_65 + TOT_66 + TOT_67 + TOT_68 + TOT_69 + TOT_70 + TOT_71 + TOT_72 + TOT_73 + TOT_74 + TOT_75 + TOT_76 + TOT_77 + TOT_78 + TOT_79 + TOT_80 + TOT_81 + TOT_82 + TOT_83 + TOT_84 + TOT_85 + TOT_86 + TOT_87 + TOT_88 + TOT_89 + TOT_90 + TOT_91 + TOT_92 + TOT_93 + TOT_94 + TOT_95 + TOT_96 + TOT_97 + TOT_98 + TOT_99 + TOT_100 + TOT_101 + TOT_102 + TOT_103 + TOT_104 + TOT_105 + TOT_106 + TOT_107) AS TOTAL1
     , TOT_0, TOT_1, TOT_2, TOT_3, TOT_4, TOT_5, TOT_6, TOT_7, TOT_8, TOT_9, TOT_10, TOT_11, TOT_12, TOT_13, TOT_14, TOT_15, TOT_16, TOT_17, TOT_18, TOT_19, TOT_20, TOT_21, TOT_22, TOT_23, TOT_24, TOT_25, TOT_26, TOT_27, TOT_28, TOT_29, TOT_30, TOT_31, TOT_32, TOT_33, TOT_34, TOT_35, TOT_36, TOT_37, TOT_38, TOT_39, TOT_40, TOT_41, TOT_42, TOT_43, TOT_44, TOT_45, TOT_46, TOT_47, TOT_48, TOT_49, TOT_50, TOT_51, TOT_52, TOT_53, TOT_54, TOT_55, TOT_56, TOT_57, TOT_58, TOT_59, TOT_60, TOT_61, TOT_62, TOT_63, TOT_64, TOT_65, TOT_66, TOT_67, TOT_68, TOT_69, TOT_70, TOT_71, TOT_72, TOT_73, TOT_74, TOT_75, TOT_76, TOT_77, TOT_78, TOT_79, TOT_80, TOT_81, TOT_82, TOT_83, TOT_84, TOT_85, TOT_86, TOT_87, TOT_88, TOT_89, TOT_90, TOT_91, TOT_92, TOT_93, TOT_94, TOT_95, TOT_96, TOT_97, TOT_98, TOT_99, TOT_100, TOT_101, TOT_102, TOT_103, TOT_104, TOT_105, TOT_106, TOT_107
     , (HOLD_0 + HOLD_1 + HOLD_2 + HOLD_3 + HOLD_4 + HOLD_5 + HOLD_6 + HOLD_7 + HOLD_8 + HOLD_9 + HOLD_10 + HOLD_11 + HOLD_12 + HOLD_13 + HOLD_14 + HOLD_15 + HOLD_16 + HOLD_17 + HOLD_18 + HOLD_19 + HOLD_20 + HOLD_21 + HOLD_22 + HOLD_23 + HOLD_24 + HOLD_25 + HOLD_26 + HOLD_27 + HOLD_28 + HOLD_29 + HOLD_30 + HOLD_31 + HOLD_32 + HOLD_33 + HOLD_34 + HOLD_35 + HOLD_36 + HOLD_37 + HOLD_38 + HOLD_39 + HOLD_40 + HOLD_41 + HOLD_42 + HOLD_43 + HOLD_44 + HOLD_45 + HOLD_46 + HOLD_47 + HOLD_48 + HOLD_49 + HOLD_50 + HOLD_51 + HOLD_52 + HOLD_53 + HOLD_54 + HOLD_55 + HOLD_56 + HOLD_57 + HOLD_58 + HOLD_59 + HOLD_60 + HOLD_61 + HOLD_62 + HOLD_63 + HOLD_64 + HOLD_65 + HOLD_66 + HOLD_67 + HOLD_68 + HOLD_69 + HOLD_70 + HOLD_71 + HOLD_72 + HOLD_73 + HOLD_74 + HOLD_75 + HOLD_76 + HOLD_77 + HOLD_78 + HOLD_79 + HOLD_80 + HOLD_81 + HOLD_82 + HOLD_83 + HOLD_84 + HOLD_85 + HOLD_86 + HOLD_87 + HOLD_88 + HOLD_89 + HOLD_90 + HOLD_91 + HOLD_92 + HOLD_93 + HOLD_94 + HOLD_95 + HOLD_96 + HOLD_97 + HOLD_98 + HOLD_99 + HOLD_100 + HOLD_101 + HOLD_102 + HOLD_103 + HOLD_104 + HOLD_105 + HOLD_106 + HOLD_107) AS TOTAL2 
     , HOLD_0, HOLD_1, HOLD_2, HOLD_3, HOLD_4, HOLD_5, HOLD_6, HOLD_7, HOLD_8, HOLD_9, HOLD_10, HOLD_11, HOLD_12, HOLD_13, HOLD_14, HOLD_15, HOLD_16, HOLD_17, HOLD_18, HOLD_19, HOLD_20, HOLD_21, HOLD_22, HOLD_23, HOLD_24, HOLD_25, HOLD_26, HOLD_27, HOLD_28, HOLD_29, HOLD_30, HOLD_31, HOLD_32, HOLD_33, HOLD_34, HOLD_35, HOLD_36, HOLD_37, HOLD_38, HOLD_39, HOLD_40, HOLD_41, HOLD_42, HOLD_43, HOLD_44, HOLD_45, HOLD_46, HOLD_47, HOLD_48, HOLD_49, HOLD_50, HOLD_51, HOLD_52, HOLD_53, HOLD_54, HOLD_55, HOLD_56, HOLD_57, HOLD_58, HOLD_59, HOLD_60, HOLD_61, HOLD_62, HOLD_63, HOLD_64, HOLD_65, HOLD_66, HOLD_67, HOLD_68, HOLD_69, HOLD_70, HOLD_71, HOLD_72, HOLD_73, HOLD_74, HOLD_75, HOLD_76, HOLD_77, HOLD_78, HOLD_79, HOLD_80, HOLD_81, HOLD_82, HOLD_83, HOLD_84, HOLD_85, HOLD_86, HOLD_87, HOLD_88, HOLD_89, HOLD_90, HOLD_91, HOLD_92, HOLD_93, HOLD_94, HOLD_95, HOLD_96, HOLD_97, HOLD_98, HOLD_99, HOLD_100, HOLD_101, HOLD_102, HOLD_103, HOLD_104, HOLD_105, HOLD_106, HOLD_107
     , (BOYU_0 + BOYU_1 + BOYU_2 + BOYU_3 + BOYU_4 + BOYU_5 + BOYU_6 + BOYU_7 + BOYU_8 + BOYU_9 + BOYU_10 + BOYU_11 + BOYU_12 + BOYU_13 + BOYU_14 + BOYU_15 + BOYU_16 + BOYU_17 + BOYU_18 + BOYU_19 + BOYU_20 + BOYU_21 + BOYU_22 + BOYU_23 + BOYU_24 + BOYU_25 + BOYU_26 + BOYU_27 + BOYU_28 + BOYU_29 + BOYU_30 + BOYU_31 + BOYU_32 + BOYU_33 + BOYU_34 + BOYU_35 + BOYU_36 + BOYU_37 + BOYU_38 + BOYU_39 + BOYU_40 + BOYU_41 + BOYU_42 + BOYU_43 + BOYU_44 + BOYU_45 + BOYU_46 + BOYU_47 + BOYU_48 + BOYU_49 + BOYU_50 + BOYU_51 + BOYU_52 + BOYU_53 + BOYU_54 + BOYU_55 + BOYU_56 + BOYU_57 + BOYU_58 + BOYU_59 + BOYU_60 + BOYU_61 + BOYU_62 + BOYU_63 + BOYU_64 + BOYU_65 + BOYU_66 + BOYU_67 + BOYU_68 + BOYU_69 + BOYU_70 + BOYU_71 + BOYU_72 + BOYU_73 + BOYU_74 + BOYU_75 + BOYU_76 + BOYU_77 + BOYU_78 + BOYU_79 + BOYU_80 + BOYU_81 + BOYU_82 + BOYU_83 + BOYU_84 + BOYU_85 + BOYU_86 + BOYU_87 + BOYU_88 + BOYU_89 + BOYU_90 + BOYU_91 + BOYU_92 + BOYU_93 + BOYU_94 + BOYU_95 + BOYU_96 + BOYU_97 + BOYU_98 + BOYU_99 + BOYU_100 + BOYU_101 + BOYU_102 + BOYU_103 + BOYU_104 + BOYU_105 + BOYU_106 + BOYU_107) AS TOTAL3
     , BOYU_0, BOYU_1, BOYU_2, BOYU_3, BOYU_4, BOYU_5, BOYU_6, BOYU_7, BOYU_8, BOYU_9, BOYU_10, BOYU_11, BOYU_12, BOYU_13, BOYU_14, BOYU_15, BOYU_16, BOYU_17, BOYU_18, BOYU_19, BOYU_20, BOYU_21, BOYU_22, BOYU_23, BOYU_24, BOYU_25, BOYU_26, BOYU_27, BOYU_28, BOYU_29, BOYU_30, BOYU_31, BOYU_32, BOYU_33, BOYU_34, BOYU_35, BOYU_36, BOYU_37, BOYU_38, BOYU_39, BOYU_40, BOYU_41, BOYU_42, BOYU_43, BOYU_44, BOYU_45, BOYU_46, BOYU_47, BOYU_48, BOYU_49, BOYU_50, BOYU_51, BOYU_52, BOYU_53, BOYU_54, BOYU_55, BOYU_56, BOYU_57, BOYU_58, BOYU_59, BOYU_60, BOYU_61, BOYU_62, BOYU_63, BOYU_64, BOYU_65, BOYU_66, BOYU_67, BOYU_68, BOYU_69, BOYU_70, BOYU_71, BOYU_72, BOYU_73, BOYU_74, BOYU_75, BOYU_76, BOYU_77, BOYU_78, BOYU_79, BOYU_80, BOYU_81, BOYU_82, BOYU_83, BOYU_84, BOYU_85, BOYU_86, BOYU_87, BOYU_88, BOYU_89, BOYU_90, BOYU_91, BOYU_92, BOYU_93, BOYU_94, BOYU_95, BOYU_96, BOYU_97, BOYU_98, BOYU_99, BOYU_100, BOYU_101, BOYU_102, BOYU_103, BOYU_104, BOYU_105, BOYU_106, BOYU_107
         FROM (     
                SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
     , SUM(DECODE(LOT.OPER, 'A1020', LOT.QTY, 0)) TOT_0
     , SUM(DECODE(LOT.OPER, 'A1100', LOT.QTY, 0)) TOT_1
     , SUM(DECODE(LOT.OPER, 'A1110', LOT.QTY, 0)) TOT_2
     , SUM(DECODE(LOT.OPER, 'A1120', LOT.QTY, 0)) TOT_3
     , SUM(DECODE(LOT.OPER, 'A1130', LOT.QTY, 0)) TOT_4
     , SUM(DECODE(LOT.OPER, 'A1140', LOT.QTY, 0)) TOT_5
     , SUM(DECODE(LOT.OPER, 'A1150', LOT.QTY, 0)) TOT_6
     , SUM(DECODE(LOT.OPER, 'A1600', LOT.QTY, 0)) TOT_7
     , SUM(DECODE(LOT.OPER, 'A1650', LOT.QTY, 0)) TOT_8
     , SUM(DECODE(LOT.OPER, 'A1170', LOT.QTY, 0)) TOT_9
     , SUM(DECODE(LOT.OPER, 'A1180', LOT.QTY, 0)) TOT_10
     , SUM(DECODE(LOT.OPER, 'A1200', LOT.QTY, 0)) TOT_11
     , SUM(DECODE(LOT.OPER, 'A1230', LOT.QTY, 0)) TOT_12
     , SUM(DECODE(LOT.OPER, 'A1240', LOT.QTY, 0)) TOT_13
     , SUM(DECODE(LOT.OPER, 'A1250', LOT.QTY, 0)) TOT_14
     , SUM(DECODE(LOT.OPER, 'A1260', LOT.QTY, 0)) TOT_15
     , SUM(DECODE(LOT.OPER, 'A1270', LOT.QTY, 0)) TOT_16
     , SUM(DECODE(LOT.OPER, 'A1300', LOT.QTY, 0)) TOT_17
     , SUM(DECODE(LOT.OPER, 'A1350', LOT.QTY, 0)) TOT_18
     , SUM(DECODE(LOT.OPER, 'A1370', LOT.QTY, 0)) TOT_19
     , SUM(DECODE(LOT.OPER, 'A1380', LOT.QTY, 0)) TOT_20
     , SUM(DECODE(LOT.OPER, 'A1050', LOT.QTY, 0)) TOT_21
     , SUM(DECODE(LOT.OPER, 'A1420', LOT.QTY, 0)) TOT_22
     , SUM(DECODE(LOT.OPER, 'A1440', LOT.QTY, 0)) TOT_23
     , SUM(DECODE(LOT.OPER, 'A1450', LOT.QTY, 0)) TOT_24
     , SUM(DECODE(LOT.OPER, 'A1821', LOT.QTY, 0)) TOT_25
     , SUM(DECODE(LOT.OPER, 'A1460', LOT.QTY, 0)) TOT_26
     , SUM(DECODE(LOT.OPER, 'A1470', LOT.QTY, 0)) TOT_27
     , SUM(DECODE(LOT.OPER, 'A1500', LOT.QTY, 0)) TOT_28
     , SUM(DECODE(LOT.OPER, 'A1550', LOT.QTY, 0)) TOT_29
     , SUM(DECODE(LOT.OPER, 'A1610', LOT.QTY, 0)) TOT_30
     , SUM(DECODE(LOT.OPER, 'A1560', LOT.QTY, 0)) TOT_31
     , SUM(DECODE(LOT.OPER, 'A1720', LOT.QTY, 0)) TOT_32
     , SUM(DECODE(LOT.OPER, 'A1730', LOT.QTY, 0)) TOT_33
     , SUM(DECODE(LOT.OPER, 'A1740', LOT.QTY, 0)) TOT_34
     , SUM(DECODE(LOT.OPER, 'A1750', LOT.QTY, 0)) TOT_35
     , SUM(DECODE(LOT.OPER, 'A1755', LOT.QTY, 0)) TOT_36
     , SUM(DECODE(LOT.OPER, 'A1760', LOT.QTY, 0)) TOT_37
     , SUM(DECODE(LOT.OPER, 'A1765', LOT.QTY, 0)) TOT_38
     , SUM(DECODE(LOT.OPER, 'A1766', LOT.QTY, 0)) TOT_39
     , SUM(DECODE(LOT.OPER, 'A1763', LOT.QTY, 0)) TOT_40
     , SUM(DECODE(LOT.OPER, 'A1770', LOT.QTY, 0)) TOT_41
     , SUM(DECODE(LOT.OPER, 'A1780', LOT.QTY, 0)) TOT_42
     , SUM(DECODE(LOT.OPER, 'A1790', LOT.QTY, 0)) TOT_43
     , SUM(DECODE(LOT.OPER, 'A1795', LOT.QTY, 0)) TOT_44
     , SUM(DECODE(LOT.OPER, 'A1860', LOT.QTY, 0)) TOT_45
     , SUM(DECODE(LOT.OPER, 'A1850', LOT.QTY, 0)) TOT_46
     , SUM(DECODE(LOT.OPER, 'A1390', LOT.QTY, 0)) TOT_47
     , SUM(DECODE(LOT.OPER, 'A1800', LOT.QTY, 0)) TOT_48
     , SUM(DECODE(LOT.OPER, 'A1805', LOT.QTY, 0)) TOT_49
     , SUM(DECODE(LOT.OPER, 'A1810', LOT.QTY, 0)) TOT_50
     , SUM(DECODE(LOT.OPER, 'A1811', LOT.QTY, 0)) TOT_51
     , SUM(DECODE(LOT.OPER, 'A1812', LOT.QTY, 0)) TOT_52
     , SUM(DECODE(LOT.OPER, 'A1816', LOT.QTY, 0)) TOT_53
     , SUM(DECODE(LOT.OPER, 'A1820', LOT.QTY, 0)) TOT_54
     , SUM(DECODE(LOT.OPER, 'A1825', LOT.QTY, 0)) TOT_55
     , SUM(DECODE(LOT.OPER, 'A1826', LOT.QTY, 0)) TOT_56
     , SUM(DECODE(LOT.OPER, 'A1920', LOT.QTY, 0)) TOT_57
     , SUM(DECODE(LOT.OPER, 'A1960', LOT.QTY, 0)) TOT_58
     , SUM(DECODE(LOT.OPER, 'A1815', LOT.QTY, 0)) TOT_59
     , SUM(DECODE(LOT.OPER, 'A1830', LOT.QTY, 0)) TOT_60
     , SUM(DECODE(LOT.OPER, 'A1710', LOT.QTY, 0)) TOT_61
     , SUM(DECODE(LOT.OPER, 'A1840', LOT.QTY, 0)) TOT_62
     , SUM(DECODE(LOT.OPER, 'A1900', LOT.QTY, 0)) TOT_63
     , SUM(DECODE(LOT.OPER, 'A1910', LOT.QTY, 0)) TOT_64
     , SUM(DECODE(LOT.OPER, 'A1950', LOT.QTY, 0)) TOT_65
     , SUM(DECODE(LOT.OPER, 'A2000', LOT.QTY, 0)) TOT_66
     , SUM(DECODE(LOT.OPER, 'A2010', LOT.QTY, 0)) TOT_67
     , SUM(DECODE(LOT.OPER, 'A2020', LOT.QTY, 0)) TOT_68
     , SUM(DECODE(LOT.OPER, 'A2025', LOT.QTY, 0)) TOT_69
     , SUM(DECODE(LOT.OPER, 'A1819', LOT.QTY, 0)) TOT_70
     , SUM(DECODE(LOT.OPER, 'A2030', LOT.QTY, 0)) TOT_71
     , SUM(DECODE(LOT.OPER, 'A2040', LOT.QTY, 0)) TOT_72
     , SUM(DECODE(LOT.OPER, 'A2041', LOT.QTY, 0)) TOT_73
     , SUM(DECODE(LOT.OPER, 'A2042', LOT.QTY, 0)) TOT_74
     , SUM(DECODE(LOT.OPER, 'A2070', LOT.QTY, 0)) TOT_75
     , SUM(DECODE(LOT.OPER, 'A2050', LOT.QTY, 0)) TOT_76
     , SUM(DECODE(LOT.OPER, 'A2150', LOT.QTY, 0)) TOT_77
     , SUM(DECODE(LOT.OPER, 'A2200', LOT.QTY, 0)) TOT_78
     , SUM(DECODE(LOT.OPER, 'A2100', LOT.QTY, 0)) TOT_79
     , SUM(DECODE(LOT.OPER, 'A2300', LOT.QTY, 0)) TOT_80
     , SUM(DECODE(LOT.OPER, 'A2350', LOT.QTY, 0)) TOT_81
     , SUM(DECODE(LOT.OPER, 'AZ009', LOT.QTY, 0)) TOT_82
     , SUM(DECODE(LOT.OPER, 'AZ010', LOT.QTY, 0)) TOT_83
     , SUM(DECODE(LOT.OPER, 'M0300', LOT.QTY, 0)) TOT_84
     , SUM(DECODE(LOT.OPER, 'M0315', LOT.QTY, 0)) TOT_85
     , SUM(DECODE(LOT.OPER, 'M0320', LOT.QTY, 0)) TOT_86
     , SUM(DECODE(LOT.OPER, 'M0339', LOT.QTY, 0)) TOT_87
     , SUM(DECODE(LOT.OPER, 'M0345', LOT.QTY, 0)) TOT_88
     , SUM(DECODE(LOT.OPER, 'M0323', LOT.QTY, 0)) TOT_89
     , SUM(DECODE(LOT.OPER, 'M0329', LOT.QTY, 0)) TOT_90
     , SUM(DECODE(LOT.OPER, 'Q0001', LOT.QTY, 0)) TOT_91
     , SUM(DECODE(LOT.OPER, 'Q0002', LOT.QTY, 0)) TOT_92
     , SUM(DECODE(LOT.OPER, 'M0325', LOT.QTY, 0)) TOT_93
     , SUM(DECODE(LOT.OPER, 'M0330', LOT.QTY, 0)) TOT_94
     , SUM(DECODE(LOT.OPER, 'M0337', LOT.QTY, 0)) TOT_95
     , SUM(DECODE(LOT.OPER, 'M0391', LOT.QTY, 0)) TOT_96
     , SUM(DECODE(LOT.OPER, 'M0336', LOT.QTY, 0)) TOT_97
     , SUM(DECODE(LOT.OPER, 'M0340', LOT.QTY, 0)) TOT_98
     , SUM(DECODE(LOT.OPER, 'M0400', LOT.QTY, 0)) TOT_99
     , SUM(DECODE(LOT.OPER, 'M0500', LOT.QTY, 0)) TOT_100
     , SUM(DECODE(LOT.OPER, 'M0550', LOT.QTY, 0)) TOT_101
     , SUM(DECODE(LOT.OPER, 'M0110', LOT.QTY, 0)) TOT_102
     , SUM(DECODE(LOT.OPER, 'M0120', LOT.QTY, 0)) TOT_103
     , SUM(DECODE(LOT.OPER, 'M0160', LOT.QTY, 0)) TOT_104
     , SUM(DECODE(LOT.OPER, 'M0161', LOT.QTY, 0)) TOT_105
     , SUM(DECODE(LOT.OPER, 'M0401', LOT.QTY, 0)) TOT_106
     , SUM(DECODE(LOT.OPER, 'M1750', LOT.QTY, 0)) TOT_107
     , SUM(CASE WHEN LOT.OPER = 'A1020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_0
     , SUM(CASE WHEN LOT.OPER = 'A1100' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_1
     , SUM(CASE WHEN LOT.OPER = 'A1110' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_2
     , SUM(CASE WHEN LOT.OPER = 'A1120' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_3
     , SUM(CASE WHEN LOT.OPER = 'A1130' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_4
     , SUM(CASE WHEN LOT.OPER = 'A1140' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_5
     , SUM(CASE WHEN LOT.OPER = 'A1150' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_6
     , SUM(CASE WHEN LOT.OPER = 'A1600' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_7
     , SUM(CASE WHEN LOT.OPER = 'A1650' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_8
     , SUM(CASE WHEN LOT.OPER = 'A1170' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_9
     , SUM(CASE WHEN LOT.OPER = 'A1180' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_10
     , SUM(CASE WHEN LOT.OPER = 'A1200' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_11
     , SUM(CASE WHEN LOT.OPER = 'A1230' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_12
     , SUM(CASE WHEN LOT.OPER = 'A1240' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_13
     , SUM(CASE WHEN LOT.OPER = 'A1250' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_14
     , SUM(CASE WHEN LOT.OPER = 'A1260' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_15
     , SUM(CASE WHEN LOT.OPER = 'A1270' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_16
     , SUM(CASE WHEN LOT.OPER = 'A1300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_17
     , SUM(CASE WHEN LOT.OPER = 'A1350' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_18
     , SUM(CASE WHEN LOT.OPER = 'A1370' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_19
     , SUM(CASE WHEN LOT.OPER = 'A1380' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_20
     , SUM(CASE WHEN LOT.OPER = 'A1050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_21
     , SUM(CASE WHEN LOT.OPER = 'A1420' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_22
     , SUM(CASE WHEN LOT.OPER = 'A1440' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_23
     , SUM(CASE WHEN LOT.OPER = 'A1450' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_24
     , SUM(CASE WHEN LOT.OPER = 'A1821' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_25
     , SUM(CASE WHEN LOT.OPER = 'A1460' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_26
     , SUM(CASE WHEN LOT.OPER = 'A1470' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_27
     , SUM(CASE WHEN LOT.OPER = 'A1500' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_28
     , SUM(CASE WHEN LOT.OPER = 'A1550' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_29
     , SUM(CASE WHEN LOT.OPER = 'A1610' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_30
     , SUM(CASE WHEN LOT.OPER = 'A1560' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_31
     , SUM(CASE WHEN LOT.OPER = 'A1720' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_32
     , SUM(CASE WHEN LOT.OPER = 'A1730' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_33
     , SUM(CASE WHEN LOT.OPER = 'A1740' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_34
     , SUM(CASE WHEN LOT.OPER = 'A1750' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_35
     , SUM(CASE WHEN LOT.OPER = 'A1755' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_36
     , SUM(CASE WHEN LOT.OPER = 'A1760' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_37
     , SUM(CASE WHEN LOT.OPER = 'A1765' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_38
     , SUM(CASE WHEN LOT.OPER = 'A1766' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_39
     , SUM(CASE WHEN LOT.OPER = 'A1763' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_40
     , SUM(CASE WHEN LOT.OPER = 'A1770' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_41
     , SUM(CASE WHEN LOT.OPER = 'A1780' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_42
     , SUM(CASE WHEN LOT.OPER = 'A1790' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_43
     , SUM(CASE WHEN LOT.OPER = 'A1795' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_44
     , SUM(CASE WHEN LOT.OPER = 'A1860' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_45
     , SUM(CASE WHEN LOT.OPER = 'A1850' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_46
     , SUM(CASE WHEN LOT.OPER = 'A1390' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_47
     , SUM(CASE WHEN LOT.OPER = 'A1800' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_48
     , SUM(CASE WHEN LOT.OPER = 'A1805' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_49
     , SUM(CASE WHEN LOT.OPER = 'A1810' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_50
     , SUM(CASE WHEN LOT.OPER = 'A1811' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_51
     , SUM(CASE WHEN LOT.OPER = 'A1812' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_52
     , SUM(CASE WHEN LOT.OPER = 'A1816' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_53
     , SUM(CASE WHEN LOT.OPER = 'A1820' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_54
     , SUM(CASE WHEN LOT.OPER = 'A1825' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_55
     , SUM(CASE WHEN LOT.OPER = 'A1826' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_56
     , SUM(CASE WHEN LOT.OPER = 'A1920' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_57
     , SUM(CASE WHEN LOT.OPER = 'A1960' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_58
     , SUM(CASE WHEN LOT.OPER = 'A1815' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_59
     , SUM(CASE WHEN LOT.OPER = 'A1830' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_60
     , SUM(CASE WHEN LOT.OPER = 'A1710' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_61
     , SUM(CASE WHEN LOT.OPER = 'A1840' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_62
     , SUM(CASE WHEN LOT.OPER = 'A1900' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_63
     , SUM(CASE WHEN LOT.OPER = 'A1910' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_64
     , SUM(CASE WHEN LOT.OPER = 'A1950' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_65
     , SUM(CASE WHEN LOT.OPER = 'A2000' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_66
     , SUM(CASE WHEN LOT.OPER = 'A2010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_67
     , SUM(CASE WHEN LOT.OPER = 'A2020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_68
     , SUM(CASE WHEN LOT.OPER = 'A2025' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_69
     , SUM(CASE WHEN LOT.OPER = 'A1819' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_70
     , SUM(CASE WHEN LOT.OPER = 'A2030' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_71
     , SUM(CASE WHEN LOT.OPER = 'A2040' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_72
     , SUM(CASE WHEN LOT.OPER = 'A2041' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_73
     , SUM(CASE WHEN LOT.OPER = 'A2042' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_74
     , SUM(CASE WHEN LOT.OPER = 'A2070' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_75
     , SUM(CASE WHEN LOT.OPER = 'A2050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_76
     , SUM(CASE WHEN LOT.OPER = 'A2150' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_77
     , SUM(CASE WHEN LOT.OPER = 'A2200' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_78
     , SUM(CASE WHEN LOT.OPER = 'A2100' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_79
     , SUM(CASE WHEN LOT.OPER = 'A2300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_80
     , SUM(CASE WHEN LOT.OPER = 'A2350' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_81
     , SUM(CASE WHEN LOT.OPER = 'AZ009' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_82
     , SUM(CASE WHEN LOT.OPER = 'AZ010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_83
     , SUM(CASE WHEN LOT.OPER = 'M0300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_84
     , SUM(CASE WHEN LOT.OPER = 'M0315' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_85
     , SUM(CASE WHEN LOT.OPER = 'M0320' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_86
     , SUM(CASE WHEN LOT.OPER = 'M0339' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_87
     , SUM(CASE WHEN LOT.OPER = 'M0345' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_88
     , SUM(CASE WHEN LOT.OPER = 'M0323' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_89
     , SUM(CASE WHEN LOT.OPER = 'M0329' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_90
     , SUM(CASE WHEN LOT.OPER = 'Q0001' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_91
     , SUM(CASE WHEN LOT.OPER = 'Q0002' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_92
     , SUM(CASE WHEN LOT.OPER = 'M0325' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_93
     , SUM(CASE WHEN LOT.OPER = 'M0330' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_94
     , SUM(CASE WHEN LOT.OPER = 'M0337' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_95
     , SUM(CASE WHEN LOT.OPER = 'M0391' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_96
     , SUM(CASE WHEN LOT.OPER = 'M0336' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_97
     , SUM(CASE WHEN LOT.OPER = 'M0340' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_98
     , SUM(CASE WHEN LOT.OPER = 'M0400' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_99
     , SUM(CASE WHEN LOT.OPER = 'M0500' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_100
     , SUM(CASE WHEN LOT.OPER = 'M0550' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_101
     , SUM(CASE WHEN LOT.OPER = 'M0110' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_102
     , SUM(CASE WHEN LOT.OPER = 'M0120' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_103
     , SUM(CASE WHEN LOT.OPER = 'M0160' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_104
     , SUM(CASE WHEN LOT.OPER = 'M0161' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_105
     , SUM(CASE WHEN LOT.OPER = 'M0401' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_106
     , SUM(CASE WHEN LOT.OPER = 'M1750' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_107
     , 0 BOYU_0
     , 0 BOYU_1
     , 0 BOYU_2
     , 0 BOYU_3
     , 0 BOYU_4
     , 0 BOYU_5
     , 0 BOYU_6
     , 0 BOYU_7
     , 0 BOYU_8
     , 0 BOYU_9
     , 0 BOYU_10
     , 0 BOYU_11
     , 0 BOYU_12
     , 0 BOYU_13
     , 0 BOYU_14
     , 0 BOYU_15
     , 0 BOYU_16
     , 0 BOYU_17
     , 0 BOYU_18
     , 0 BOYU_19
     , 0 BOYU_20
     , 0 BOYU_21
     , 0 BOYU_22
     , 0 BOYU_23
     , 0 BOYU_24
     , 0 BOYU_25
     , 0 BOYU_26
     , 0 BOYU_27
     , 0 BOYU_28
     , 0 BOYU_29
     , 0 BOYU_30
     , 0 BOYU_31
     , 0 BOYU_32
     , 0 BOYU_33
     , 0 BOYU_34
     , 0 BOYU_35
     , 0 BOYU_36
     , 0 BOYU_37
     , 0 BOYU_38
     , 0 BOYU_39
     , 0 BOYU_40
     , 0 BOYU_41
     , 0 BOYU_42
     , 0 BOYU_43
     , 0 BOYU_44
     , 0 BOYU_45
     , 0 BOYU_46
     , 0 BOYU_47
     , 0 BOYU_48
     , 0 BOYU_49
     , 0 BOYU_50
     , 0 BOYU_51
     , 0 BOYU_52
     , 0 BOYU_53
     , 0 BOYU_54
     , 0 BOYU_55
     , 0 BOYU_56
     , 0 BOYU_57
     , 0 BOYU_58
     , 0 BOYU_59
     , 0 BOYU_60
     , 0 BOYU_61
     , 0 BOYU_62
     , 0 BOYU_63
     , 0 BOYU_64
     , 0 BOYU_65
     , 0 BOYU_66
     , 0 BOYU_67
     , 0 BOYU_68
     , 0 BOYU_69
     , 0 BOYU_70
     , 0 BOYU_71
     , 0 BOYU_72
     , 0 BOYU_73
     , 0 BOYU_74
     , 0 BOYU_75
     , 0 BOYU_76
     , 0 BOYU_77
     , 0 BOYU_78
     , 0 BOYU_79
     , 0 BOYU_80
     , 0 BOYU_81
     , 0 BOYU_82
     , 0 BOYU_83
     , 0 BOYU_84
     , 0 BOYU_85
     , 0 BOYU_86
     , 0 BOYU_87
     , 0 BOYU_88
     , 0 BOYU_89
     , 0 BOYU_90
     , 0 BOYU_91
     , 0 BOYU_92
     , 0 BOYU_93
     , 0 BOYU_94
     , 0 BOYU_95
     , 0 BOYU_96
     , 0 BOYU_97
     , 0 BOYU_98
     , 0 BOYU_99
     , 0 BOYU_100
     , 0 BOYU_101
     , 0 BOYU_102
     , 0 BOYU_103
     , 0 BOYU_104
     , 0 BOYU_105
     , 0 BOYU_106
     , 0 BOYU_107
  FROM (  
        SELECT LOT.FACTORY 
             , LOT.MAT_ID 
             , OPR.OPER_GRP_1 OPER  
             , LOT.LOT_ID 
             , LOT.QTY_1 QTY 
             , TO_DATE('20200512183206', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14, 'YYYYMMDDHH24MISS') HOLD_DATE 
          FROM RWIPLOTSTS LOT,  
               MWIPOPRDEF OPR  
         WHERE 1=1  
           AND OPR.OPER_GRP_1 IN ('A1020', 'A1100', 'A1110', 'A1120', 'A1130', 'A1140', 'A1150', 'A1600', 'A1650', 'A1170', 'A1180', 'A1200', 'A1230', 'A1240', 'A1250', 'A1260', 'A1270', 'A1300', 'A1350', 'A1370', 'A1380', 'A1050', 'A1420', 'A1440', 'A1450', 'A1821', 'A1460', 'A1470', 'A1500', 'A1550', 'A1610', 'A1560', 'A1720', 'A1730', 'A1740', 'A1750', 'A1755', 'A1760', 'A1765', 'A1766', 'A1763', 'A1770', 'A1780', 'A1790', 'A1795', 'A1860', 'A1850', 'A1390', 'A1800', 'A1805', 'A1810', 'A1811', 'A1812', 'A1816', 'A1820', 'A1825', 'A1826', 'A1920', 'A1960', 'A1815', 'A1830', 'A1710', 'A1840', 'A1900', 'A1910', 'A1950', 'A2000', 'A2010', 'A2020', 'A2025', 'A1819', 'A2030', 'A2040', 'A2041', 'A2042', 'A2070', 'A2050', 'A2150', 'A2200', 'A2100', 'A2300', 'A2350', 'AZ009', 'AZ010', 'M0300', 'M0315', 'M0320', 'M0339', 'M0345', 'M0323', 'M0329', 'Q0001', 'Q0002', 'M0325', 'M0330', 'M0337', 'M0391', 'M0336', 'M0340', 'M0400', 'M0500', 'M0550', 'M0110', 'M0120', 'M0160', 'M0161', 'M0401', 'M1750')
           AND LOT.FACTORY = OPR.FACTORY  
           AND LOT.OPER = OPR.OPER  
           AND LOT.FACTORY  = 'HMVA2' 
           AND LOT.OPER NOT IN ('00001','00002')  
           AND LOT.LOT_DEL_FLAG = ' '  
           AND LOT.MAT_VER = 1  
           AND LOT.LOT_TYPE = 'W'  
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND MAT.FACTORY = LOT.FACTORY 
   AND MAT.MAT_ID = LOT.MAT_ID 
   AND MAT.MAT_VER = 1 
 GROUP BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
 ORDER BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
              ) MAT 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200512' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200512' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200512')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200512', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200512') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202005','202006','202007')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1,0) AS W4
     , ROUND(SUM(W5 * CONVERT_QTY) /1,0) AS W5
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1,0) AS SHP_W2
     , ROUND(SUM(M1 * CONVERT_QTY) /1,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W5 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W5 END AS W5
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_MONTH = '202005'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202018', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202019', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202020', SHP_QTY, 0)) AS SHP_W2 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202005%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202020'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202020'
                           AND PLAN_MONTH = '202005'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202018' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202019' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202020' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202021' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202022' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_MONTH = '202005' AND PLAN_WEEK = '202023' THEN REV_QTY ELSE 0 END) AS W5 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202006', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202007', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMVA2'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(W5,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200512')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200512', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200512')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200512', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200512')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200512', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200512')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200512', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH CUT_OFF AS
(
 SELECT SAP_CODE, WORK_DATE, SYS_DATE, W1_CUTOFF
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 24
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 0
             ELSE ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS THIS_WEEK_TIME
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 0
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 24
             ELSE 24 - ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS NEXT_WEEK_TIME
      , TO_CHAR(W1_CUTOFF,'D') AS CKD_DAY
   FROM RSUMCUTOFF A
      , (
         SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, SYS_DATE AS WORK_DATE, TO_DATE(SYS_DATE, 'YYYYMMDD') AS SYS_DATE
           FROM MWIPCALDEF
          WHERE CALENDAR_ID = 'OTD'
            AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200512') 
        ) B
  WHERE 1=1
    AND A.WORK_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2'
    AND A.OPER IN ('A0020', 'A0100')
), 
DT AS
(
SELECT STD.VENDOR_ID
     , STD.WORK_DATE
     , DECODE(RNK, 1, W1_QTY) AS W1_QTY
     , DECODE(RNK, 1, TTL_WIP) AS TTL_WIP
     , DECODE(RNK, 1, WF_DEF) AS WF_DEF
     , TTL_WEEK_NEED
     , SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_TTL_WEEK_NEED
     , RCV_QTY
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_RCV_QTY 
     , PLN_QTY
     , SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_PLN_QTY 
     , SHP_QTY
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHP_QTY
     , NVL(RCV_QTY,0) - NVL(TTL_WEEK_NEED,0) AS SHORT_WF
     , NVL(SHP_QTY,0) - NVL(PLN_QTY,0) AS SHORT_SHP
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_WF
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_SHP
     , CKD_DAY
  FROM (
        SELECT A.VENDOR_ID
             , B.WORK_DATE
             , A.W1_QTY
             , A.TTL_WIP
             , A.WF_DEF
             , A.W2_QTY
             , A.THIS_WEEK_TIME_IN
             , A.NEXT_WEEK_TIME_IN 
             , ROUND(B.THIS_WEEK_TIME) AS THIS_WEEK_TIME
             , ROUND(B.NEXT_WEEK_TIME) AS NEXT_WEEK_TIME
             , ROUND(A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME, 2) AS THIS_WEEK_NEED
             , ROUND(A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME, 2) AS NEXT_WEEK_NEED
             , ROUND((A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME) + (A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME), 2) AS TTL_WEEK_NEED
             , CASE WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 7 THEN D0_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 1 THEN D1_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 2 THEN D2_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 3 THEN D3_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 4 THEN D4_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 5 THEN D5_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 6 THEN D6_QTY
                    ELSE 0
               END PLN_QTY 
             , ROW_NUMBER() OVER(PARTITION BY A.VENDOR_ID ORDER BY B.WORK_DATE) AS RNK
             , CKD_DAY
          FROM (
                SELECT A.*
                     , ROUND(DECODE(THIS_TIME_SUM, 0, 0, WF_DEF / THIS_TIME_SUM), 2) AS THIS_WEEK_TIME_IN
                  FROM (
                        SELECT VENDOR_ID
                             , W1_QTY
                             , TTL_WIP
                             , NVL(W1_QTY,0) - NVL(TTL_WIP,0) AS WF_DEF
                             , W2_QTY
                             , D0_QTY, D1_QTY, D2_QTY, D3_QTY, D4_QTY, D5_QTY, D6_QTY
                             , ROUND(W2_QTY / 168,2) AS NEXT_WEEK_TIME_IN
                             , NVL((       
                                    SELECT SUM(THIS_WEEK_TIME) AS THIS_WEEK_TIME
                                      FROM CUT_OFF
                                     WHERE SAP_CODE = VENDOR_ID
                                     GROUP BY SAP_CODE 
                                   ),0) AS THIS_TIME_SUM
                          FROM (
                                SELECT VENDOR_ID
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W1_QTY END) AS W1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W2_QTY END) AS W2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D0_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D0_QTY END) AS D0_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D1_QTY END) AS D1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D2_QTY END) AS D2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D3_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D3_QTY END) AS D3_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D4_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D4_QTY END) AS D4_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D5_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D5_QTY END) AS D5_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D6_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D6_QTY END) AS D6_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN TTL_WIP/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE TTL_WIP END) AS TTL_WIP
                                  FROM (
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202021', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D0_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D1_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D2_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D3_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D4_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D5_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D6_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMVA2' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202020', '202021')
                                           AND MAT_ID NOT LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                         UNION ALL
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202021', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202019', D5_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202019', D6_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D0_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D1_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D2_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D3_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202020', D4_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMVA2' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202019', '202020', '202021')
                                           AND MAT_ID LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                       ) PLN
                                     , (
                                        SELECT A.MAT_ID
                                             , HALF_WIP / NVL(DATA_1,1) AS HALF_WIP
                                             , STD_WIP
                                             , NVL(HALF_WIP / NVL(DATA_1,1),0) + NVL(STD_WIP, 0) AS TTL_WIP
                                          FROM (
                                                SELECT MAT_ID
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) HALF_WIP
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER > 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER > 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) STD_WIP
                                                  FROM (
                                                        SELECT OPER
                                                             , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                                         THEN DECODE(B.MAT_GRP_5, '1st', 0, QTY_1)
                                                                    WHEN (B.MAT_GRP_5 IN ('-', '1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN QTY_1
                                                               END QTY_1
                                                             , B.*
                                                          FROM RWIPLOTSTS_BOH A
                                                             , MWIPMATDEF B
                                                         WHERE 1=1
                                                           AND A.FACTORY = B.FACTORY 
                                                           AND A.MAT_ID = B.MAT_ID    
                                                           AND A.FACTORY = 'HMVA2'
                                                           AND A.CUTOFF_DT = '2020050822'
                                                           AND A.LOT_TYPE = 'W'
                                                           AND A.LOT_DEL_FLAG = ' '  
                                                           AND B.DELETE_FLAG = ' ' 
                                                           AND A.LOT_CMF_5 LIKE 'P%'
                                                           AND B.MAT_GRP_2 <> '-'
                                                           AND (B.MAT_GRP_5 IN ('-', '1st', '2nd', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%')
                                                       )
                                                 GROUP BY MAT_ID
                                               ) A
                                             , (
                                                SELECT KEY_1 AS MAT_ID, DATA_1
                                                  FROM MGCMTBLDAT 
                                                 WHERE FACTORY = 'HMVA2' 
                                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                                               ) B
                                         WHERE A.MAT_ID = B.MAT_ID(+) 
                                       ) WIP
                                     , MWIPMATDEF MAT
                                 WHERE 1=1
                                   AND MAT.MAT_ID = PLN.MAT_ID(+)
                                   AND MAT.MAT_ID = WIP.MAT_ID(+)
                                   AND MAT.FACTORY = 'HMVA2'
                                   AND MAT.DELETE_FLAG = ' '
                                   AND MAT.MAT_TYPE = 'FG'
                                 GROUP BY VENDOR_ID
                               )
                         WHERE W1_QTY > 0
                       ) A                 
               ) A
             , CUT_OFF B
         WHERE 1=1
           AND A.VENDOR_ID = B.SAP_CODE
       ) STD
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(RCV_QTY) AS RCV_QTY
          FROM (
                SELECT WORK_DATE, A.MAT_ID
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , RCV_QTY_1 / NVL(DATA_1,1) AS RCV_QTY    
                  FROM (
                        SELECT WORK_DATE, MAT_ID
                             , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN RCV_QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))                              
                                              ELSE RCV_QTY_1
                                         END),0) AS RCV_QTY_1             
                          FROM (
                                SELECT WORK_DATE
                                     , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                 THEN DECODE(B.MAT_GRP_5, '1st', 0, RCV_QTY_1)
                                            WHEN B.MAT_GRP_5 IN ('-', '1st') THEN RCV_QTY_1
                                       END RCV_QTY_1
                                     , B.* 
                                  FROM VSUMWIPRCV A
                                     , MWIPMATDEF B
                                 WHERE 1=1
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.MAT_ID = B.MAT_ID    
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.WORK_DATE BETWEEN '20200509' AND '20200512'
                                   AND A.LOT_TYPE = 'W' 
                                   AND B.DELETE_FLAG = ' ' 
                                   AND A.CM_KEY_3 LIKE 'P%'
                                   AND B.MAT_GRP_2 <> '-'
                                   AND B.MAT_GRP_5 IN ('-', '1st', '2nd')
                               )
                         GROUP BY WORK_DATE, MAT_ID
                       ) A
                     , (
                        SELECT KEY_1 AS MAT_ID, DATA_1
                          FROM MGCMTBLDAT 
                         WHERE FACTORY = 'HMVA2' 
                           AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                       ) B
                 WHERE A.MAT_ID = B.MAT_ID(+)
               )
         GROUP BY VENDOR_ID, WORK_DATE
       ) RCV
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(SHP_QTY_1) AS SHP_QTY
          FROM (
                SELECT WORK_DATE
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , A.MAT_ID 
                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1)/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                            ELSE S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 
                       END AS SHP_QTY_1 
                  FROM RSUMFACMOV A
                     , MWIPMATDEF B
                 WHERE 1 = 1 
                   AND A.MAT_ID = B.MAT_ID
                   AND A.CM_KEY_1 = B.FACTORY
                   AND A.WORK_DATE BETWEEN '20200509' AND '20200512'
                   AND A.LOT_TYPE = 'W'
                   AND A.CM_KEY_1 = 'HMVA2' 
                   AND A.CM_KEY_2 = 'PROD'
                   AND A.CM_KEY_3 LIKE 'P%'
                   AND A.FACTORY NOT IN ('RETURN')
                   AND S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 > 0
               )
         GROUP BY VENDOR_ID, WORK_DATE 
       ) SHP
 WHERE 1=1   
   AND STD.WORK_DATE  = RCV.WORK_DATE(+)
   AND STD.WORK_DATE = SHP.WORK_DATE(+)   
   AND STD.VENDOR_ID = RCV.VENDOR_ID(+)
   AND STD.VENDOR_ID = SHP.VENDOR_ID(+)   
)
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(NVL(SUM(W1_QTY), 0) / 1, 0) AS W1_QTY
     , ROUND(NVL(SUM(TTL_WIP), 0) / 1, 0) AS TTL_WIP
     , ROUND(NVL(SUM(WF_DEF), 0) / 1, 0) AS WF_DEF
     , GUBUN_1
     , GUBUN_2
     , ROUND(SUM(D0) / 1, 0) AS D0
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 7 THEN 0 ELSE ROUND(SUM(D1), 0) END / 1, 0) AS D1
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') IN (7,1) THEN 0 ELSE ROUND(SUM(D2), 0) END / 1, 0) AS D2
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') IN (7,1,2) THEN 0 ELSE ROUND(SUM(D3), 0) END / 1, 0) AS D3
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') IN (7,1,2,3) THEN 0 ELSE ROUND(SUM(D4), 0) END / 1, 0) AS D4
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') IN (7,1,2,3,4) THEN 0 ELSE ROUND(SUM(D5), 0) END / 1, 0) AS D5
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') IN (7,1,2,3,4,5) THEN 0 ELSE ROUND(SUM(D6), 0) END / 1, 0) AS D6
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 7 THEN ROUND(SUM(D0), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 1 THEN ROUND(SUM(D1), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 2 THEN ROUND(SUM(D2), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 3 THEN ROUND(SUM(D3), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 4 THEN ROUND(SUM(D4), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 5 THEN ROUND(SUM(D5), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200512','YYYYMMDD'),'D') = 6 THEN ROUND(SUM(D6), 0)
            ELSE ROUND(NVL(SUM(D0),0) + NVL(SUM(D1),0) + NVL(SUM(D2),0) + NVL(SUM(D3),0) + NVL(SUM(D4),0) + NVL(SUM(D5),0) + NVL(SUM(D6),0), 0)
       END / 1, 0) AS TTL
     , MAX(CKD_DAY) AS CKD_DAY
  FROM (
        SELECT VENDOR_ID, SUM(W1_QTY) AS W1_QTY, SUM(TTL_WIP) AS TTL_WIP, SUM(WF_DEF) AS WF_DEF, MAX(CKD_DAY) AS CKD_DAY
          FROM DT
         GROUP BY VENDOR_ID
       ) STD
     , (
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', TTL_WEEK_NEED)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', TTL_WEEK_NEED)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', TTL_WEEK_NEED)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', TTL_WEEK_NEED)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', TTL_WEEK_NEED)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', TTL_WEEK_NEED)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', TTL_WEEK_NEED)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', RCV_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', RCV_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', RCV_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', RCV_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', RCV_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', RCV_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', RCV_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', SUM_SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', SUM_SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', SUM_SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', SUM_SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', SUM_SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', SUM_SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', SUM_SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', PLN_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', PLN_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', PLN_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', PLN_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', PLN_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', PLN_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', PLN_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', SHP_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', SHP_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', SHP_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', SHP_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', SHP_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', SHP_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', SHP_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200509', SUM_SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200510', SUM_SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200511', SUM_SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200512', SUM_SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200513', SUM_SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200514', SUM_SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200515', SUM_SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
       ) DAT
     , (
        SELECT DISTINCT MAT_GRP_1,  ' ', MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', VENDOR_ID 
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND MAT_TYPE = 'FG'
           AND DELETE_FLAG = ' '
           AND VENDOR_ID <> ' '
           AND SUBSTR(VENDOR_ID, 5, 4) <> '0000'
           AND MAT_ID LIKE '%'
       ) MAT
 WHERE 1=1
   AND MAT.VENDOR_ID = STD.VENDOR_ID 
   AND MAT.VENDOR_ID = DAT.VENDOR_ID(+) 
 GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, GUBUN_2 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, DECODE(GUBUN_2, '계획', 1, '실적', 2, '과부족', 3, 4) 

-------------------------------------------------------------
