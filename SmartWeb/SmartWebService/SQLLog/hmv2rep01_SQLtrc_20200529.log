SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200529' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200529' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'SEC1103'
-------------------------------------------------------------
SELECT * FROM RWEBFUNDEF ORDER BY FUNC_NAME
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200529' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'SEC1104'
-------------------------------------------------------------
SELECT * FROM RWEBFUNDEF ORDER BY FUNC_NAME
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TST1107'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'SEC1101'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY= :FACTORY ORDER BY USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBGRPDEF WHERE FACTORY = :FACTORY ORDER BY SEC_GRP_ID
-------------------------------------------------------------
SELECT * FROM RWEBGRPDEF WHERE FACTORY = :FACTORY ORDER BY SEC_GRP_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBGRPDEF WHERE FACTORY = :FACTORY ORDER BY SEC_GRP_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010910'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202005' 
   AND SYS_DATE <= '20200529' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010911'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT VERSION AS Code, '' AS Data
  FROM SCHMGR.SOUTOPRMOV@RPTTOMES 
 WHERE 1=1 
   AND VERSION_HR BETWEEN '2020033122' AND '2020040121'
 ORDER BY VERSION DESC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200529')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200529', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010204'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200529')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200529', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200529','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , A.ORI_PLAN AS "월계획"
     , A.MON_PLAN AS "월계획Rev"
     , A.MON_PLAN -A.ORI_PLAN AS "월계획 차이"
     , A.TARGET_MON, A.ASSY_MON
     , DECODE(A.MON_PLAN, 0, 0, ROUND((A.ASSY_MON/A.MON_PLAN)*100, 1)) JINDO, A.DEF, WEEK_PLAN, ASSY_WEEK, WEEK_PLAN-ASSY_WEEK AS "주계획 차이"
     , A.HMK3A, A.FINISH, A.MOLD, A.WB, A.DA, A.SAW, A.STOCK, A.HMK3A+A.FINISH+A.MOLD+A.WB+A.DA+A.SAW+A.STOCK AS TTL, A.TARGET_DAY AS "일목표", A.AO0, A.AO1, A.AO2 
     , A.RCV0, A.RCV1, A.RCV2, A.SW0, A.SW1, A.SW2, A.DA0, A.DA1, A.DA2, A.WB0, A.WB1, A.WB2, A.MD0, A.MD1, A.MD2, A.TF0, A.TF1, A.TF2 
     , ROUND(B.TAT1*24,2)
     , CASE WHEN HIST_AO > 0 THEN '●' END AS HIST_AO
  FROM ( 
        SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS MAJOR, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
             , SUM(NVL(A.MON_PLAN,0)) AS MON_PLAN 
             , SUM(NVL(A.ORI_PLAN,0)) AS ORI_PLAN 
             , SUM(NVL(A.WEEK_PLAN,0)) AS WEEK_PLAN 
             , SUM(NVL(A.ASSY_WEEK,0)) AS ASSY_WEEK 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) * 93.5) / 100),0) AS TARGET_MON 
             , SUM(NVL(A.ASSY_MON,0)) AS ASSY_MON 
             , SUM(NVL(A.ASSY_MON,0)) - ROUND(((SUM(NVL(A.MON_PLAN,0)) * 93.5) / 100),1) AS DEF   
             , SUM(NVL(A.AO0,0)) AS AO0 
             , SUM(NVL(A.AO1,0)) AS AO1 
             , SUM(NVL(A.AO2,0)) AS AO2 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) - SUM(NVL(A.ASSY_MON,0))) /3), 1) AS TARGET_DAY 
             , SUM(NVL(A.RCV0,0)) AS RCV0
             , SUM(NVL(A.RCV1,0)) AS RCV1
             , SUM(NVL(A.RCV2,0)) AS RCV2
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW0 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW0 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT) ELSE 0 END 
                                   ELSE D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT)
                              END),0)
                    ),0) AS SW0
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW1 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW1 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW1
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW2 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW2 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA02,0) + NVL(D.DA03,0) + NVL(D.DA04,0) + NVL(D.DA05,0) + NVL(D.DA06,0) + NVL(D.DA07,0) + NVL(D.DA08,0) + NVL(D.DA09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA02, '3', D.DA03, '4', D.DA04, '5', D.DA05, '6', D.DA06, '7', D.DA07, '8', D.DA08, '9', D.DA09, 0)
                             ELSE D.DA0
                        END),0)
                   ) AS DA0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA12,0) + NVL(D.DA13,0) + NVL(D.DA14,0) + NVL(D.DA15,0) + NVL(D.DA16,0) + NVL(D.DA17,0) + NVL(D.DA18,0) + NVL(D.DA19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA12, '3', D.DA13, '4', D.DA14, '5', D.DA15, '6', D.DA16, '7', D.DA17, '8', D.DA18, '9', D.DA19, 0)
                             ELSE D.DA1
                        END),0)
                   ) AS DA1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA22,0) + NVL(D.DA23,0) + NVL(D.DA24,0) + NVL(D.DA25,0) + NVL(D.DA26,0) + NVL(D.DA27,0) + NVL(D.DA28,0) + NVL(D.DA29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA22, '3', D.DA23, '4', D.DA24, '5', D.DA25, '6', D.DA26, '7', D.DA27, '8', D.DA28, '9', D.DA29, 0)
                             ELSE D.DA2
                        END),0)
                   ) AS DA2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB02,0) + NVL(D.WB03,0) + NVL(D.WB04,0) + NVL(D.WB05,0) + NVL(D.WB06,0) + NVL(D.WB07,0) + NVL(D.WB08,0) + NVL(D.WB09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB02, '3', D.WB03, '4', D.WB04, '5', D.WB05, '6', D.WB06, '7', D.WB07, '8', D.WB08, '9', D.WB09, 0)
                             ELSE D.WB0
                        END),0)
                   ) AS WB0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB12,0) + NVL(D.WB13,0) + NVL(D.WB14,0) + NVL(D.WB15,0) + NVL(D.WB16,0) + NVL(D.WB17,0) + NVL(D.WB18,0) + NVL(D.WB19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB12, '3', D.WB13, '4', D.WB14, '5', D.WB15, '6', D.WB16, '7', D.WB17, '8', D.WB18, '9', D.WB19, 0)
                             ELSE D.WB1
                        END),0)
                   ) AS WB1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB22,0) + NVL(D.WB23,0) + NVL(D.WB24,0) + NVL(D.WB25,0) + NVL(D.WB26,0) + NVL(D.WB27,0) + NVL(D.WB28,0) + NVL(D.WB29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB22, '3', D.WB23, '4', D.WB24, '5', D.WB25, '6', D.WB26, '7', D.WB27, '8', D.WB28, '9', D.WB29, 0)
                             ELSE D.WB2
                        END),0)
                   ) AS WB2
             , SUM(NVL(D.MD0,0)) AS MD0, SUM(NVL(D.MD1,0)) AS MD1, SUM(NVL(D.MD2,0)) AS MD2 
             , SUM(NVL(D.TF0,0)) AS TF0, SUM(NVL(D.TF1,0)) AS TF1, SUM(NVL(D.TF2,0)) AS TF2 
             , SUM(NVL(F.V0,0)) AS STOCK
             , SUM(NVL(F.V1,0)+NVL(F.V2,0)) AS SAW
             , SUM(NVL(F.V3,0)+NVL(F.V4,0)+NVL(F.V17,0)) AS DA
             , SUM(NVL(F.V5+F.V16,0)) AS WB
             , SUM(NVL(F.V6,0)+NVL(F.V7,0)) AS MOLD
             , SUM(NVL(F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14,0)) AS FINISH
             , SUM(NVL(F.V15,0)) AS HMK3A
             , SUM(NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17,0)) AS TTL
             , SUM(HIST_AO) AS HIST_AO 
          FROM ( 
                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8 
                     , DECODE(MAT.MAT_GRP_1,'SE',MAT.MAT_GRP_9,' ') AS MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT  
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.RESV_FIELD1 / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.RESV_FIELD1)
                       END MON_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.PLAN_QTY_ASSY / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.PLAN_QTY_ASSY)
                       END ORI_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(WEEK_PLAN.WEEK_PLAN / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_PLAN.WEEK_PLAN)
                            END WEEK_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(WEEK_AO.WEEK_AO / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_AO.WEEK_AO)
                            END ASSY_WEEK
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.ASSY_MON / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.ASSY_MON)
                       END ASSY_MON
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO0 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO0)
                       END AO0
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO1 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO1)
                       END AO1
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO2 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO2)
                       END AO2
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV0 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV0 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV0 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV0 / MAT.COMP_CNT)
                             END, 0) AS RCV0
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV1 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV1 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV1 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV1 / MAT.COMP_CNT)
                             END, 0) AS RCV1
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV2 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV2 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV2 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV2 / MAT.COMP_CNT)
                             END, 0) AS RCV2
                     , SUM(HIST_AO.HIST_AO) AS HIST_AO 
                  FROM VWIPMATDEF MAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                          FROM ( 
                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                  FROM ( 
                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                          FROM CWIPPLNMON 
                                         WHERE 1=1 
                                           AND FACTORY = 'HMVA2' 
                                         GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                       ) 
                                 GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                               ) 
                       ) PLAN 
                     , ( 
                        SELECT FACTORY,MAT_ID, SUM(WW_QTY) AS WEEK_PLAN 
                          FROM RWIPPLNWEK 
                         WHERE FACTORY = 'HMVA2' 
                           AND PLAN_WEEK = '202022'
                           AND GUBUN = '3' 
                        GROUP BY FACTORY,MAT_ID 
                       ) WEEK_PLAN 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(AO0) AS AO0 
                             , SUM(AO1) AS AO1 
                             , SUM(AO2) AS AO2 
                             , SUM(ASSY_MON) AS ASSY_MON 
                          FROM (
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200527', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO0 
                                     , SUM(DECODE(WORK_DATE,'20200528', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO1
                                     , SUM(DECODE(WORK_DATE,'20200529', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO2
                                     , 0 AS ASSY_MON  
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200527' AND '20200529'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                                 UNION ALL 
                                SELECT MAT_ID 
                                     , 0, 0, 0 
                                     , SUM(SHP_QTY_1) AS ASSY_MON 
                                  FROM VSUMWIPOUT 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200501' AND '20200529'
                                   AND FACTORY = 'HMVA2' 
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID 
                       ) MON_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200523' AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) WEEK_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(DECODE(WORK_DATE,'20200527', NVL(RCV_QTY_1,0), 0)) AS RCV0
                             , SUM(DECODE(WORK_DATE,'20200528', NVL(RCV_QTY_1,0), 0)) AS RCV1
                             , SUM(DECODE(WORK_DATE,'20200529', NVL(RCV_QTY_1,0), 0)) AS RCV2
                          FROM VSUMWIPRCV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200527' AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND FACTORY = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                         GROUP BY MAT_ID 
                       ) DAY_RCV  
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS HIST_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN TO_CHAR(ADD_MONTHS('20200529', -6), 'YYYYMMDD') AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) HIST_AO 
                 WHERE 1 = 1 
                   AND MAT.FACTORY =PLAN.FACTORY(+) 
                   AND MAT.FACTORY =WEEK_PLAN.FACTORY(+) 
                   AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = MON_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = DAY_RCV.MAT_ID(+) 
                   AND MAT.MAT_ID = HIST_AO.MAT_ID(+) 
                   AND MAT.FACTORY = 'HMVA2' 
                   AND PLAN.PLAN_MONTH(+) = '202005' 
                   AND MAT.MAT_TYPE= 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT
               ) A  
             , ( 
                SELECT MAT_ID 
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200527', QTY,0))) AS SW0
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200528', QTY,0))) AS SW1
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200529', QTY,0))) AS SW2
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA0
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA1
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA2
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB0
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB1
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB2
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200527', QTY,0))) AS MD0
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200528', QTY,0))) AS MD1
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200529', QTY,0))) AS MD2
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200527', QTY,0))) AS TF0
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200528', QTY,0))) AS TF1
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200529', QTY,0))) AS TF2
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA02
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA12
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA22
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA03
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA13
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA23
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA04
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA14
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA24
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA05
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA15
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA25
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA06
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA16
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA26
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA07
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA17
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA27
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA08
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA18
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA28
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA09
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA19
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA29
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB02
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB12
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB22
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB03
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB13
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB23
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB04
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB14
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB24
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB05
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB15
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB25 
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB06
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB16
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB26 
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB07
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB17
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB27 
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB08
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB18
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB28 
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB09
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB19
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB29 
                  FROM ( 
                        SELECT A.MAT_ID,A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                             , SUM(A.S1_END_QTY_1 + A.S2_END_QTY_1 + A.S3_END_QTY_1 + A.S1_END_RWK_QTY_1 + A.S2_END_RWK_QTY_1 + A.S3_END_RWK_QTY_1 ) AS QTY 
                          FROM RSUMWIPMOV A 
                             , MWIPOPRDEF B 
                         WHERE 1=1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.OPER = B.OPER 
                           AND A.FACTORY = 'HMVA2' 
                           AND B.OPER_GRP_7 IN ('SAW','D/A','W/B','MOLD','SIG','V/I') 
                           AND A.MAT_VER = 1 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND A.WORK_DATE BETWEEN '20200527' AND '20200529'
                           AND A.LOT_TYPE = 'W'
                           AND A.OPER <> 'A1760'
                         GROUP BY A.MAT_ID, A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                       ) 
                 GROUP BY MAT_ID 
               ) D  
             , ( 
                SELECT MAT_ID 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)), 0) AS V0 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)), 0) AS V1 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)), 0) AS V2 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)), 0) AS V3 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)), 0) AS V4 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)), 0) AS V5 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)), 0) AS V6 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)), 0) AS V7 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)), 0) AS V8 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)), 0) AS V9 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)), 0) AS V10 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)), 0) AS V11 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)), 0) AS V12 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)), 0) AS V13 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)), 0) AS V14 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)), 0) AS V15 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)), 0) AS V16 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)), 0) AS V17 
                  FROM (  
                        SELECT MAT_ID, OPER, OPER_GRP_1 
                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM ( 
                                SELECT A.MAT_ID, B.OPER, C.MAT_GRP_1  
                                     , CASE WHEN C.MAT_GRP_3 IN ('FCBGA', 'FCFBGA') AND B.OPER = 'A0800' THEN 'D/A' ELSE B.OPER_GRP_1 END OPER_GRP_1  
                                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN QTY_1/NET_DIE ELSE QTY_1 END AS QTY_1
                                     , COMP_CNT  
                                     , HX_COMP_MIN, HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C 
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.FACTORY = C.FACTORY 
                                   AND A.OPER = B.OPER 
                                   AND A.MAT_ID = C.MAT_ID 
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.DELETE_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                                   AND REGEXP_LIKE(C.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                                   AND A.LOT_CMF_5 LIKE 'P%'
                               ) 
                       )  
                 GROUP BY MAT_ID 
               ) F 
         WHERE 1 = 1 
           AND A.MAT_ID = D.MAT_ID(+)
           AND A.MAT_ID = F.MAT_ID(+)
           AND A.MAT_ID LIKE '%' 
         GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
        HAVING (
                NVL(SUM(A.MON_PLAN), 0)+ 
                NVL(SUM(A.ORI_PLAN), 0)+ 
                NVL(SUM(A.ASSY_MON), 0)+ 
                NVL(SUM(A.WEEK_PLAN), 0)+ 
                NVL(SUM(A.AO0), 0)+ NVL(SUM(A.AO1), 0)+ NVL(SUM(A.AO2), 0)+ 
                NVL(SUM(A.RCV0), 0)+ NVL(SUM(A.RCV1), 0)+ NVL(SUM(A.RCV2), 0)+ 
                NVL(SUM(D.SW0), 0)+ NVL(SUM(D.SW1), 0)+ NVL(SUM(D.SW2), 0)+ 
                NVL(SUM(D.DA0), 0)+ NVL(SUM(D.DA1), 0)+ NVL(SUM(D.DA2), 0)+ 
                NVL(SUM(D.WB0), 0)+ NVL(SUM(D.WB1), 0)+ NVL(SUM(D.WB2), 0)+ 
                NVL(SUM(D.MD0), 0)+ NVL(SUM(D.MD1), 0)+ NVL(SUM(D.MD2), 0)+  
                NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ 
                NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17), 0)  
               ) <> 0
       ) A 
     , ( 
        SELECT MAT_GRP_1 AS CUSTOMER
             , MAT_GRP_10 AS PKG 
             , SUM(DECODE(SHIP_DATE,'20200527', TAT, 0)) AS TAT0 
             , SUM(DECODE(SHIP_DATE,'20200528', TAT, 0)) AS TAT1 
             , SUM(DECODE(SHIP_DATE,'20200529', TAT, 0)) AS TAT2 
          FROM ( 
                SELECT MAT.MAT_GRP_1,MAT.MAT_GRP_10,TAT.SHIP_DATE,SUM(TAT.TOTAL_TAT_QTY),SUM(SHIP.SHIP_QTY),ROUND(DECODE(SUM(SHIP.SHIP_QTY),0,0,(SUM(TAT.TOTAL_TAT_QTY)/SUM(SHIP.SHIP_QTY))),4) AS TAT 
                  FROM ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE 
                             , ROUND(SUM(TOTAL_TAT_QTY),4) AS TOTAL_TAT_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER <> 'A0000' 
                           AND SHIP_DATE BETWEEN '20200527' AND '20200529'
                         GROUP BY FACTORY,MAT_ID,SHIP_DATE 
                       ) TAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE,SHIP_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER = 'AZ010' 
                           AND SHIP_DATE BETWEEN '20200527' AND '20200529'
                       ) SHIP 
                     , MWIPMATDEF MAT 
                 WHERE 1=1 
                   AND TAT.FACTORY = SHIP.FACTORY 
                   AND TAT.MAT_ID = SHIP.MAT_ID 
                   AND TAT.SHIP_DATE = SHIP.SHIP_DATE 
                   AND TAT.MAT_ID = MAT.MAT_ID 
                   AND MAT.MAT_TYPE = 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                   AND MAT.FACTORY = 'HMVA2' 
                 GROUP BY MAT_GRP_1,MAT_GRP_10,TAT.SHIP_DATE
               ) 
         GROUP BY MAT_GRP_1, MAT_GRP_10 
       ) B  
 WHERE 1=1 
   AND A.CUSTOMER = B.CUSTOMER(+) 
   AND A.PKG = B.PKG(+) 
   AND A.PKG <> '-' 
   AND NVL(ORI_PLAN,0) + NVL(MON_PLAN,0) + NVL(TARGET_MON,0) + NVL(ASSY_MON,0) + NVL(WEEK_PLAN,0) + NVL(DEF,0) + NVL(AO0,0) + NVL(AO1,0) + NVL(AO2,0) + NVL(A.RCV0,0) + NVL(A.RCV1,0) + NVL(A.RCV2,0) + NVL(A.SW0,0) 
     + NVL(A.SW1,0) + NVL(A.SW2,0) + NVL(A.DA0,0) + NVL(A.DA1,0) + NVL(A.DA2,0) + NVL(A.WB0,0) + NVL(A.WB1,0) + NVL(A.WB2,0) + NVL(A.MD0,0) + NVL(A.MD1,0) + NVL(A.MD2,0) + NVL(A.TF0,0) 
     + NVL(A.TF1,0) + NVL(A.TF2,0) + NVL(TTL,0) <> 0 
 ORDER BY DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200529')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200529', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200529','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , A.MON_PLAN AS "월계획"
     , 0 AS "월계획Rev"
     , 0 AS "월계획 차이"
     , A.TARGET_MON, A.ASSY_MON
     , DECODE(A.MON_PLAN, 0, 0, ROUND((A.ASSY_MON/A.MON_PLAN)*100, 1)) JINDO, A.DEF, WEEK_PLAN, ASSY_WEEK, WEEK_PLAN-ASSY_WEEK AS "주계획 차이"
     , A.HMK3A, A.FINISH, A.MOLD, A.WB_AFTER, A.DA + A.WB_BEFORE, A.SAW, A.STOCK, A.HMK3A+A.FINISH+A.MOLD+A.WB_AFTER+A.WB_BEFORE+A.DA+A.SAW+A.STOCK AS TTL, A.TARGET_DAY AS "일목표", A.AO0, A.AO1, A.AO2
     , A.RCV0, A.RCV1, A.RCV2, A.SW0, A.SW1, A.SW2, A.DA0, A.DA1, A.DA2, A.WB0, A.WB1, A.WB2, A.MD0, A.MD1, A.MD2, A.TF0, A.TF1, A.TF2 
     , ROUND(B.TAT1*24,2)
     , CASE WHEN HIST_AO > 0 THEN '●' END AS HIST_AO
  FROM ( 
        SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS MAJOR, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
             , SUM(NVL(A.MON_PLAN,0)) AS MON_PLAN 
             , SUM(NVL(A.ORI_PLAN,0)) AS ORI_PLAN 
             , SUM(NVL(A.WEEK_PLAN,0)) AS WEEK_PLAN 
             , SUM(NVL(A.ASSY_WEEK,0)) AS ASSY_WEEK 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) * 93.5) / 100),0) AS TARGET_MON 
             , SUM(NVL(A.ASSY_MON,0)) AS ASSY_MON 
             , SUM(NVL(A.ASSY_MON,0)) - ROUND(((SUM(NVL(A.MON_PLAN,0)) * 93.5) / 100),1) AS DEF   
             , SUM(NVL(A.AO0,0)) AS AO0 
             , SUM(NVL(A.AO1,0)) AS AO1 
             , SUM(NVL(A.AO2,0)) AS AO2 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) - SUM(NVL(A.ASSY_MON,0))) /3), 1) AS TARGET_DAY 
             , SUM(NVL(A.RCV0,0)) AS RCV0
             , SUM(NVL(A.RCV1,0)) AS RCV1
             , SUM(NVL(A.RCV2,0)) AS RCV2
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW0 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW0 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT) ELSE 0 END 
                                   ELSE D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT)
                              END),0)
                    ),0) AS SW0
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW1 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW1 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW1
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW2 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW2 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA02,0) + NVL(D.DA03,0) + NVL(D.DA04,0) + NVL(D.DA05,0) + NVL(D.DA06,0) + NVL(D.DA07,0) + NVL(D.DA08,0) + NVL(D.DA09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA02, '3', D.DA03, '4', D.DA04, '5', D.DA05, '6', D.DA06, '7', D.DA07, '8', D.DA08, '9', D.DA09, 0)
                             ELSE D.DA0
                        END),0)
                   ) AS DA0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA12,0) + NVL(D.DA13,0) + NVL(D.DA14,0) + NVL(D.DA15,0) + NVL(D.DA16,0) + NVL(D.DA17,0) + NVL(D.DA18,0) + NVL(D.DA19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA12, '3', D.DA13, '4', D.DA14, '5', D.DA15, '6', D.DA16, '7', D.DA17, '8', D.DA18, '9', D.DA19, 0)
                             ELSE D.DA1
                        END),0)
                   ) AS DA1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA22,0) + NVL(D.DA23,0) + NVL(D.DA24,0) + NVL(D.DA25,0) + NVL(D.DA26,0) + NVL(D.DA27,0) + NVL(D.DA28,0) + NVL(D.DA29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA22, '3', D.DA23, '4', D.DA24, '5', D.DA25, '6', D.DA26, '7', D.DA27, '8', D.DA28, '9', D.DA29, 0)
                             ELSE D.DA2
                        END),0)
                   ) AS DA2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB02,0) + NVL(D.WB03,0) + NVL(D.WB04,0) + NVL(D.WB05,0) + NVL(D.WB06,0) + NVL(D.WB07,0) + NVL(D.WB08,0) + NVL(D.WB09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB02, '3', D.WB03, '4', D.WB04, '5', D.WB05, '6', D.WB06, '7', D.WB07, '8', D.WB08, '9', D.WB09, 0)
                             ELSE D.WB0
                        END),0)
                   ) AS WB0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB12,0) + NVL(D.WB13,0) + NVL(D.WB14,0) + NVL(D.WB15,0) + NVL(D.WB16,0) + NVL(D.WB17,0) + NVL(D.WB18,0) + NVL(D.WB19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB12, '3', D.WB13, '4', D.WB14, '5', D.WB15, '6', D.WB16, '7', D.WB17, '8', D.WB18, '9', D.WB19, 0)
                             ELSE D.WB1
                        END),0)
                   ) AS WB1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB22,0) + NVL(D.WB23,0) + NVL(D.WB24,0) + NVL(D.WB25,0) + NVL(D.WB26,0) + NVL(D.WB27,0) + NVL(D.WB28,0) + NVL(D.WB29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB22, '3', D.WB23, '4', D.WB24, '5', D.WB25, '6', D.WB26, '7', D.WB27, '8', D.WB28, '9', D.WB29, 0)
                             ELSE D.WB2
                        END),0)
                   ) AS WB2
             , SUM(NVL(D.MD0,0)) AS MD0, SUM(NVL(D.MD1,0)) AS MD1, SUM(NVL(D.MD2,0)) AS MD2 
             , SUM(NVL(D.TF0,0)) AS TF0, SUM(NVL(D.TF1,0)) AS TF1, SUM(NVL(D.TF2,0)) AS TF2 
             , SUM(NVL(F.V0,0)) AS STOCK
             , SUM(NVL(F.V1,0)+NVL(F.V2,0)) AS SAW
             , SUM(NVL(F.V3,0)+NVL(F.V4,0)+NVL(F.V17,0)) AS DA
             , SUM(NVL((CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 = '1st' OR MAT_GRP_5 LIKE 'Middle%' THEN NVL(F.V5+F.V16,0) ELSE 0 END
                             ELSE 0
                        END),0)
                    ) AS WB_BEFORE
             , SUM(NVL((CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(F.V5+F.V16,0) ELSE 0 END
                             ELSE NVL(F.V5+F.V16,0)
                        END),0)
                    ) AS WB_AFTER
             , SUM(NVL(F.V6,0)+NVL(F.V7,0)) AS MOLD
             , SUM(NVL(F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14,0)) AS FINISH
             , SUM(NVL(F.V15,0)) AS HMK3A
             , SUM(NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17,0)) AS TTL
             , SUM(HIST_AO) AS HIST_AO 
          FROM ( 
                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8 
                     , DECODE(MAT.MAT_GRP_1,'SE',MAT.MAT_GRP_9,' ') AS MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT  
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.PLAN_QTY_ASSY / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.PLAN_QTY_ASSY)
                       END MON_PLAN
                     , 0 AS ORI_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(WEEK_PLAN.WEEK_PLAN / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_PLAN.WEEK_PLAN)
                            END WEEK_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(WEEK_AO.WEEK_AO / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_AO.WEEK_AO)
                            END ASSY_WEEK
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.ASSY_MON / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.ASSY_MON)
                       END ASSY_MON
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO0 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO0)
                       END AO0
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO1 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO1)
                       END AO1
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO2 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO2)
                       END AO2
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV0 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV0 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV0 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV0 / MAT.COMP_CNT)
                             END, 0) AS RCV0
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV1 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV1 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV1 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV1 / MAT.COMP_CNT)
                             END, 0) AS RCV1
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV2 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV2 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV2 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV2 / MAT.COMP_CNT)
                             END, 0) AS RCV2
                     , SUM(HIST_AO.HIST_AO) AS HIST_AO 
                  FROM VWIPMATDEF MAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                          FROM ( 
                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                  FROM ( 
                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                          FROM CWIPPLNMON 
                                         WHERE 1=1 
                                           AND FACTORY = 'HMVA2' 
                                         GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                       ) 
                                 GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                               ) 
                       ) PLAN 
                     , ( 
                        SELECT FACTORY,MAT_ID, SUM(WW_QTY) AS WEEK_PLAN 
                          FROM RWIPPLNWEK 
                         WHERE FACTORY = 'HMVA2' 
                           AND PLAN_WEEK = '202022'
                           AND GUBUN = '3' 
                        GROUP BY FACTORY,MAT_ID 
                       ) WEEK_PLAN 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(AO0) AS AO0 
                             , SUM(AO1) AS AO1 
                             , SUM(AO2) AS AO2 
                             , SUM(ASSY_MON) AS ASSY_MON 
                          FROM (
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200527', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO0 
                                     , SUM(DECODE(WORK_DATE,'20200528', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO1
                                     , SUM(DECODE(WORK_DATE,'20200529', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO2
                                     , 0 AS ASSY_MON  
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200527' AND '20200529'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                                 UNION ALL 
                                SELECT MAT_ID 
                                     , 0, 0, 0 
                                     , SUM(SHP_QTY_1) AS ASSY_MON 
                                  FROM VSUMWIPOUT 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200501' AND '20200529'
                                   AND FACTORY = 'HMVA2' 
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID 
                       ) MON_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200523' AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) WEEK_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(DECODE(WORK_DATE,'20200527', NVL(RCV_QTY_1,0), 0)) AS RCV0
                             , SUM(DECODE(WORK_DATE,'20200528', NVL(RCV_QTY_1,0), 0)) AS RCV1
                             , SUM(DECODE(WORK_DATE,'20200529', NVL(RCV_QTY_1,0), 0)) AS RCV2
                          FROM VSUMWIPRCV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200527' AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND FACTORY = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                         GROUP BY MAT_ID 
                       ) DAY_RCV  
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS HIST_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN TO_CHAR(ADD_MONTHS('20200529', -6), 'YYYYMMDD') AND '20200529'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) HIST_AO 
                 WHERE 1 = 1 
                   AND MAT.FACTORY =PLAN.FACTORY(+) 
                   AND MAT.FACTORY =WEEK_PLAN.FACTORY(+) 
                   AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = MON_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = DAY_RCV.MAT_ID(+) 
                   AND MAT.MAT_ID = HIST_AO.MAT_ID(+) 
                   AND MAT.FACTORY = 'HMVA2' 
                   AND PLAN.PLAN_MONTH(+) = '202005' 
                   AND MAT.MAT_TYPE= 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT
               ) A  
             , ( 
                SELECT MAT_ID 
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200527', QTY,0))) AS SW0
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200528', QTY,0))) AS SW1
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200529', QTY,0))) AS SW2
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA0
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA1
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA2
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB0
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB1
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB2
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200527', QTY,0))) AS MD0
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200528', QTY,0))) AS MD1
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200529', QTY,0))) AS MD2
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200527', QTY,0))) AS TF0
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200528', QTY,0))) AS TF1
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200529', QTY,0))) AS TF2
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA02
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA12
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA22
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA03
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA13
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA23
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA04
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA14
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA24
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA05
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA15
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA25
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA06
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA16
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA26
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA07
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA17
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA27
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA08
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA18
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA28
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200527', QTY,0))) AS DA09
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200528', QTY,0))) AS DA19
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200529', QTY,0))) AS DA29
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB02
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB12
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB22
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB03
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB13
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB23
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB04
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB14
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB24
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB05
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB15
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB25 
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB06
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB16
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB26 
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB07
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB17
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB27 
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB08
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB18
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB28 
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200527', QTY,0))) AS WB09
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200528', QTY,0))) AS WB19
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200529', QTY,0))) AS WB29 
                  FROM ( 
                        SELECT A.MAT_ID,A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                             , SUM(A.S1_END_QTY_1 + A.S2_END_QTY_1 + A.S3_END_QTY_1 + A.S1_END_RWK_QTY_1 + A.S2_END_RWK_QTY_1 + A.S3_END_RWK_QTY_1 ) AS QTY 
                          FROM RSUMWIPMOV A 
                             , MWIPOPRDEF B 
                         WHERE 1=1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.OPER = B.OPER 
                           AND A.FACTORY = 'HMVA2' 
                           AND B.OPER_GRP_7 IN ('SAW','D/A','W/B','MOLD','SIG','V/I') 
                           AND A.MAT_VER = 1 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND A.WORK_DATE BETWEEN '20200527' AND '20200529'
                           AND A.LOT_TYPE = 'W'
                           AND A.OPER <> 'A1760'
                         GROUP BY A.MAT_ID, A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                       ) 
                 GROUP BY MAT_ID 
               ) D  
             , ( 
                SELECT MAT_ID 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)), 0) AS V0 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)), 0) AS V1 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)), 0) AS V2 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)), 0) AS V3 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)), 0) AS V4 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)), 0) AS V5 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)), 0) AS V6 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)), 0) AS V7 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)), 0) AS V8 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)), 0) AS V9 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)), 0) AS V10 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)), 0) AS V11 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)), 0) AS V12 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)), 0) AS V13 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)), 0) AS V14 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)), 0) AS V15 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)), 0) AS V16 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)), 0) AS V17 
                  FROM (  
                        SELECT MAT_ID, OPER, OPER_GRP_1 
                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM ( 
                                SELECT A.MAT_ID, B.OPER, C.MAT_GRP_1  
                                     , CASE WHEN C.MAT_GRP_3 IN ('FCBGA', 'FCFBGA') AND B.OPER = 'A0800' THEN 'D/A' ELSE B.OPER_GRP_1 END OPER_GRP_1  
                                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN QTY_1/NET_DIE ELSE QTY_1 END AS QTY_1
                                     , COMP_CNT  
                                     , HX_COMP_MIN, HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C 
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.FACTORY = C.FACTORY 
                                   AND A.OPER = B.OPER 
                                   AND A.MAT_ID = C.MAT_ID 
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.DELETE_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                                   AND REGEXP_LIKE(C.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                                   AND A.LOT_CMF_5 LIKE 'P%'
                               ) 
                       )  
                 GROUP BY MAT_ID 
               ) F 
         WHERE 1 = 1 
           AND A.MAT_ID = D.MAT_ID(+)
           AND A.MAT_ID = F.MAT_ID(+)
           AND A.MAT_ID LIKE '%' 
         GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
        HAVING (
                NVL(SUM(A.MON_PLAN), 0)+ 
                NVL(SUM(A.ORI_PLAN), 0)+ 
                NVL(SUM(A.ASSY_MON), 0)+ 
                NVL(SUM(A.WEEK_PLAN), 0)+ 
                NVL(SUM(A.AO0), 0)+ NVL(SUM(A.AO1), 0)+ NVL(SUM(A.AO2), 0)+ 
                NVL(SUM(A.RCV0), 0)+ NVL(SUM(A.RCV1), 0)+ NVL(SUM(A.RCV2), 0)+ 
                NVL(SUM(D.SW0), 0)+ NVL(SUM(D.SW1), 0)+ NVL(SUM(D.SW2), 0)+ 
                NVL(SUM(D.DA0), 0)+ NVL(SUM(D.DA1), 0)+ NVL(SUM(D.DA2), 0)+ 
                NVL(SUM(D.WB0), 0)+ NVL(SUM(D.WB1), 0)+ NVL(SUM(D.WB2), 0)+ 
                NVL(SUM(D.MD0), 0)+ NVL(SUM(D.MD1), 0)+ NVL(SUM(D.MD2), 0)+  
                NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ 
                NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17), 0)  
               ) <> 0
       ) A 
     , ( 
        SELECT MAT_GRP_1 AS CUSTOMER
             , MAT_GRP_10 AS PKG 
             , SUM(DECODE(SHIP_DATE,'20200527', TAT, 0)) AS TAT0 
             , SUM(DECODE(SHIP_DATE,'20200528', TAT, 0)) AS TAT1 
             , SUM(DECODE(SHIP_DATE,'20200529', TAT, 0)) AS TAT2 
          FROM ( 
                SELECT MAT.MAT_GRP_1,MAT.MAT_GRP_10,TAT.SHIP_DATE,SUM(TAT.TOTAL_TAT_QTY),SUM(SHIP.SHIP_QTY),ROUND(DECODE(SUM(SHIP.SHIP_QTY),0,0,(SUM(TAT.TOTAL_TAT_QTY)/SUM(SHIP.SHIP_QTY))),4) AS TAT 
                  FROM ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE 
                             , ROUND(SUM(TOTAL_TAT_QTY),4) AS TOTAL_TAT_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER <> 'A0000' 
                           AND SHIP_DATE BETWEEN '20200527' AND '20200529'
                         GROUP BY FACTORY,MAT_ID,SHIP_DATE 
                       ) TAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE,SHIP_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER = 'AZ010' 
                           AND SHIP_DATE BETWEEN '20200527' AND '20200529'
                       ) SHIP 
                     , MWIPMATDEF MAT 
                 WHERE 1=1 
                   AND TAT.FACTORY = SHIP.FACTORY 
                   AND TAT.MAT_ID = SHIP.MAT_ID 
                   AND TAT.SHIP_DATE = SHIP.SHIP_DATE 
                   AND TAT.MAT_ID = MAT.MAT_ID 
                   AND MAT.MAT_TYPE = 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                   AND MAT.FACTORY = 'HMVA2' 
                 GROUP BY MAT_GRP_1,MAT_GRP_10,TAT.SHIP_DATE
               ) 
         GROUP BY MAT_GRP_1, MAT_GRP_10 
       ) B  
 WHERE 1=1 
   AND A.CUSTOMER = B.CUSTOMER(+) 
   AND A.PKG = B.PKG(+) 
   AND A.PKG <> '-' 
   AND NVL(ORI_PLAN,0) + NVL(MON_PLAN,0) + NVL(TARGET_MON,0) + NVL(ASSY_MON,0) + NVL(WEEK_PLAN,0) + NVL(DEF,0) + NVL(AO0,0) + NVL(AO1,0) + NVL(AO2,0) + NVL(A.RCV0,0) + NVL(A.RCV1,0) + NVL(A.RCV2,0) + NVL(A.SW0,0) 
     + NVL(A.SW1,0) + NVL(A.SW2,0) + NVL(A.DA0,0) + NVL(A.DA1,0) + NVL(A.DA2,0) + NVL(A.WB0,0) + NVL(A.WB1,0) + NVL(A.WB2,0) + NVL(A.MD0,0) + NVL(A.MD1,0) + NVL(A.MD2,0) + NVL(A.TF0,0) 
     + NVL(A.TF1,0) + NVL(A.TF2,0) + NVL(TTL,0) <> 0 
 ORDER BY DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVT2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200229220000' AND '20200529215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKT1' 
   AND OPER <> 'T0540' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, TO_NUMBER(OPER_CMF_4) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMVA2' 
   AND OPER LIKE 'A%'  
   AND OPER NOT IN ('A1120', 'A1130')  
   AND OPER_GRP_1 <> '-'  
   AND OPER_CMF_5 <> 'Y' 
 GROUP BY OPER_GRP_1, OPER_CMF_4 
 ORDER BY TO_NUMBER(OPER_CMF_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKE1' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_DESC 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'FGS' 
   AND OPER <> 'F000N' 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKB1' 
   AND OPER LIKE 'B%' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 
      , WF_QTY 
      , B0
      , B1
      , B2
      , B3
      , B4
      , B5
      , B6
      , B7
      , B8
      , B9
      , B10
      , B11
      , B12
      , B13
      , B14
      , B15
      , B16
      , B17
      , B18
      , B19
      , B20
      , B21
      , B22
      , B23
      , B24
      , B25
      , B26
      , B27
      , B28
      , B29
      , B30
      , B31
      , B32
      , B33
      , S0
      , P0
      , P1
      , P2
      , P3
      , P4
      , P5
      , S1
      , A0
      , A1
      , A2
      , A3
      , A4
      , A5
      , A6
      , A7
      , A8
      , A9
      , A10
      , A11
      , A12
      , A13
      , A14
      , A15
      , A16
      , S2
      , S3
      , F0
      , S4
      , TOTAL
   FROM (  
    SELECT B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_2 
                ELSE 0 END) WF_QTY 
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK2B'  
                THEN QTY_1 
                ELSE 0 END) B0
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'IQC'  
                THEN QTY_1 
                ELSE 0 END) B1
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'I-STOCK'  
                THEN QTY_1 
                ELSE 0 END) B2
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RCF_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B3
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B4
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B5
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B6
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B7
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B8
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B9
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B10
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B11
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B12
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B13
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B14
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B15
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B16
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B17
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B18
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B19
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B20
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_CU_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B21
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SNAG_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B22
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B23
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_BALL_MOUNT'  
                THEN QTY_1 
                ELSE 0 END) B24
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_REFLOW'  
                THEN QTY_1 
                ELSE 0 END) B25
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'FINAL_INSP'  
                THEN QTY_1 
                ELSE 0 END) B26
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'SORT'  
                THEN QTY_1 
                ELSE 0 END) B27
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) B28
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MERGE'  
                THEN QTY_1 
                ELSE 0 END) B29
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MAP_MERGE'  
                THEN QTY_1 
                ELSE 0 END) B30
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'OGI'  
                THEN QTY_1 
                ELSE 0 END) B31
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PACKING'  
                THEN QTY_1 
                ELSE 0 END) B32
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK3B'  
                THEN QTY_1 
                ELSE 0 END) B33
         , SUM(CASE WHEN A.FACTORY = 'HMKB1'  
                THEN QTY_1 
                ELSE 0 END) S0 
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) P0
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'TEST'  
                THEN QTY_1 
                ELSE 0 END) P1
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) P2
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'QA'  
                THEN QTY_1 
                ELSE 0 END) P3
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'P/K'  
                THEN QTY_1 
                ELSE 0 END) P4
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE2'  
                THEN QTY_1 
                ELSE 0 END) P5
         , SUM(CASE WHEN A.FACTORY = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) S1 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_1 
                ELSE 0 END) A0
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'B/G'  
                THEN QTY_1 
                ELSE 0 END) A1
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SAW'  
                THEN QTY_1 
                ELSE 0 END) A2
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'D/A'  
                THEN QTY_1 
                ELSE 0 END) A3
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'W/B'  
                THEN QTY_1 
                ELSE 0 END) A4
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'GATE'  
                THEN QTY_1 
                ELSE 0 END) A5
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'MOLD'  
                THEN QTY_1 
                ELSE 0 END) A6
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'CURE'  
                THEN QTY_1 
                ELSE 0 END) A7
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'M/K'  
                THEN QTY_1 
                ELSE 0 END) A8
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TRIM'  
                THEN QTY_1 
                ELSE 0 END) A9
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TIN'  
                THEN QTY_1 
                ELSE 0 END) A10
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'S/B/A'  
                THEN QTY_1 
                ELSE 0 END) A11
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SIG'  
                THEN QTY_1 
                ELSE 0 END) A12
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) A13
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'V/I'  
                THEN QTY_1 
                ELSE 0 END) A14
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'QC GATE'  
                THEN QTY_1 
                ELSE 0 END) A15
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK3A'  
                THEN QTY_1 
                ELSE 0 END) A16
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) S2 
         , SUM(CASE WHEN A.FACTORY = 'HMKT1'  
                THEN QTY_1 
                ELSE 0 END) S3 
         , SUM(CASE WHEN A.FACTORY = 'FGS' AND C.OPER = 'WAREHOUSE'  
                THEN QTY_1 
                ELSE 0 END) F0
         , SUM(CASE WHEN A.FACTORY = 'FGS'  
                THEN QTY_1 
                ELSE 0 END) S4 
         , SUM(CASE WHEN A.FACTORY LIKE '%' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) TOTAL 
      FROM RWIPLOTSTS_BOH A  
         , MWIPMATDEF B  
         , MWIPOPRDEF C  
     WHERE A.FACTORY LIKE '%'
       AND A.FACTORY = B.FACTORY  
       AND A.FACTORY = C.FACTORY 
       AND A.OPER = C.OPER    
       AND A.MAT_ID = B.MAT_ID  
       AND A.MAT_VER = 1 
       AND A.MAT_VER = B.MAT_VER 
       AND A.LOT_DEL_FLAG = ' '  
       AND A.LOT_TYPE = 'W'  
       AND A.CUTOFF_DT = '2020020122'
  GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
   )  
WHERE 1=1
  AND NVL(TOTAL,0) > 0
  AND NVL(TOTAL,0) > 0
  ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010405'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.RES_ID Code, ' ' Data
  FROM MRASRESDEF A
 WHERE 1 = 1 
   AND DELETE_FLAG = ' ' 
   AND RES_ID NOT LIKE '%$%' 
   AND A.FACTORY  = 'HMVA2'  
 ORDER BY 1,2
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' '
     , SUMMERY.MAT_ID 
     , SUMMERY.LOT_ID 
     , SUMMERY.LOT_CMF_5 
     , SUMMERY.END_RES_ID 
     , SUMMERY.QTY_1 + SUMMERY.LOSS_QTY AS OPER_IN_QTY_1 
     , SUMMERY.QTY_1 
     , ROUND(SUMMERY.QTY_1/(SUMMERY.QTY_1 + SUMMERY.LOSS_QTY)*100,3) AS YIELD 
     , TO_CHAR(TO_DATE(SUMMERY.OPER_IN_TIME,'yyyymmddhh24miss')) AS OPER_IN_TIME 
     , TO_CHAR(TO_DATE(SUMMERY.TRAN_TIME,'yyyymmddhh24miss')) AS TRAN_TIME 
     , DECODE(SUMMERY.TRAN_CMF_18, ' ', ' ', SUMMERY.IN_USER_DESC || '(' || SUMMERY.TRAN_CMF_18 || ')') AS IN_USER_ID 
     , SUMMERY.END_USER_DESC || '(' || SUMMERY.TRAN_USER_ID || ')' AS END_USER_ID 
     , SUMMERY.LOT_CMF_10 
     , SUMMERY.TRAN_CMF_2 AS HD 
     , SUMMERY.TRAN_CMF_3 AS PGM 
     , SUMMERY.CRR_ID 
     , '' EPOXY 
     , '' LF 
     , '' GW 
     , '' MATAL_CARD 
     , '' EMC_LOT 
     , '' EMC_CAN 
     , '' EMC_TYPE 
     , SUMMERY.TRAN_COMMENT 
     , SUMMERY.QTY_2 
     , SUMMERY.TRAN_CMF_17 AS CV 
     , SUMMERY.LOT_CMF_7 AS ASSY_SITE 
     , SUMMERY.LOT_CMF_11 AS SHIP_SITE 
     , SUMMERY.TRAN_CMF_7 AS REWORK_BALL 
     , SUMMERY.TRAN_CMF_8 AS REWORK_CLEAN 
     , SUMMERY.TRAN_CMF_9 AS REWORK_PRINT 
     , LOT_CMF_3 
  FROM (  
        SELECT MAT_ID 
             , LOT_ID 
             , LOT_CMF_5 
             , LOT_CMF_10 
             , OLD_OPER AS OPER 
             , END_RES_ID 
             , TRAN_CMF_2 
             , TRAN_CMF_3 
             , NVL(( 
                    SELECT SUM(LOSS_QTY) AS LOSS_QTY 
                      FROM RWIPLOTLSM 
                     WHERE LOT_ID = A.LOT_ID 
                       AND OPER = A.OLD_OPER 
                     GROUP BY LOT_ID 
                  ), 0) AS LOSS_QTY 
             , CASE WHEN TRAN_CODE = 'SHIP' AND FACTORY = OLD_FACTORY THEN OLD_QTY_1 - QTY_1 
                    ELSE QTY_1 
               END QTY_1 
             , DECODE(START_TIME, ' ', OLD_OPER_IN_TIME, START_TIME) AS OPER_IN_TIME 
             , TRAN_TIME 
             , TRAN_USER_ID 
             , CRR_ID 
             , TRAN_COMMENT 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_USER_ID 
               ) AS END_USER_DESC 
             , QTY_2 
             , CASE WHEN A.OLD_OPER LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND (SELECT CASE WHEN (TRAN_CMF_4 = 'RFID TAG WRITE : SUCCESS') 
                                                                                            OR (RESV_FLAG_5 = 'Y' AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS') THEN 'RFID' 
                                                                                          ELSE ' ' 
                                                                                     END  
                                                                                FROM RWIPLOTHIS 
                                                                               WHERE FACTORY = A.OLD_FACTORY 
                                                                                 AND LOT_TYPE = A.OLD_LOT_TYPE 
                                                                                 AND LOT_ID = A.LOT_ID 
                                                                                 AND OPER = A.OLD_OPER 
                                                                                 AND TRAN_TIME < A.TRAN_TIME 
                                                                                 AND FACTORY = 'HMVA2' 
                                                                                 AND LOT_TYPE = 'W' 
                                                                                 AND RESV_FLAG_5 = 'Y' 
                                                                                 AND TRAN_CODE = 'START' 
                                                                                 AND HIST_DEL_FLAG = ' ') = 'RFID' THEN TRAN_CMF_18 || '[RFID]' 
                     WHEN A.OLD_OPER NOT LIKE 'A040%' AND A.RESV_FLAG_5 = 'Y' AND A.TRAN_CMF_19 = 'RFID' AND A.TRAN_USER_ID = 'EIS' THEN TRAN_CMF_18 || '[' || TRIM(TRAN_CMF_19) || ']' 
                     ELSE TRAN_CMF_18 
               END AS TRAN_CMF_18 
             , ( 
                SELECT USER_DESC FROM RWEBUSRDEF WHERE FACTORY = 'SYSTEM' AND USER_ID = A.TRAN_CMF_18 
               ) AS IN_USER_DESC 
             , LOT_CMF_7 
             , TRAN_CMF_17 
             , LOT_CMF_11 
             , TRAN_CMF_7 
             , TRAN_CMF_8 
             , TRAN_CMF_9 
             , LOT_CMF_3 
          FROM RWIPLOTHIS A 
         WHERE 1=1 
           AND TRAN_TIME BETWEEN '20200401220000' AND '20200529215959' 
           AND OLD_FACTORY = 'HMVA2' 
           AND TRAN_CODE IN ('END','SHIP') 
           AND LOT_TYPE = 'W' 
           AND HIST_DEL_FLAG = ' ' 
           AND OLD_OPER LIKE '%'
           AND END_RES_ID LIKE '%'
           AND LOT_CMF_5 LIKE '%'
       ) SUMMERY 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND SUMMERY.MAT_ID = MAT.MAT_ID 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_TYPE = 'FG' 
 ORDER BY  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SUMMERY.OPER,  ' ',  ' ',SUMMERY.END_RES_ID,LOT_ID,MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070601'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE
     , A.MAT_ID
     , B.MAT_DESC
     , A.OPER
     , SUM(END_QTY) AS TOTAL_QTY
     , SUM(DECODE(WORK_DATE, '20200401', END_QTY)) AS END_QTY_0
     , SUM(DECODE(WORK_DATE, '20200402', END_QTY)) AS END_QTY_1
     , SUM(DECODE(WORK_DATE, '20200403', END_QTY)) AS END_QTY_2
     , SUM(DECODE(WORK_DATE, '20200404', END_QTY)) AS END_QTY_3
     , SUM(DECODE(WORK_DATE, '20200405', END_QTY)) AS END_QTY_4
     , SUM(DECODE(WORK_DATE, '20200406', END_QTY)) AS END_QTY_5
     , SUM(DECODE(WORK_DATE, '20200407', END_QTY)) AS END_QTY_6
     , SUM(DECODE(WORK_DATE, '20200408', END_QTY)) AS END_QTY_7
     , SUM(DECODE(WORK_DATE, '20200409', END_QTY)) AS END_QTY_8
     , SUM(DECODE(WORK_DATE, '20200410', END_QTY)) AS END_QTY_9
     , SUM(DECODE(WORK_DATE, '20200411', END_QTY)) AS END_QTY_10
     , SUM(DECODE(WORK_DATE, '20200412', END_QTY)) AS END_QTY_11
     , SUM(DECODE(WORK_DATE, '20200413', END_QTY)) AS END_QTY_12
     , SUM(DECODE(WORK_DATE, '20200414', END_QTY)) AS END_QTY_13
     , SUM(DECODE(WORK_DATE, '20200415', END_QTY)) AS END_QTY_14
     , SUM(DECODE(WORK_DATE, '20200416', END_QTY)) AS END_QTY_15
     , SUM(DECODE(WORK_DATE, '20200417', END_QTY)) AS END_QTY_16
     , SUM(DECODE(WORK_DATE, '20200418', END_QTY)) AS END_QTY_17
     , SUM(DECODE(WORK_DATE, '20200419', END_QTY)) AS END_QTY_18
     , SUM(DECODE(WORK_DATE, '20200420', END_QTY)) AS END_QTY_19
     , SUM(DECODE(WORK_DATE, '20200421', END_QTY)) AS END_QTY_20
     , SUM(DECODE(WORK_DATE, '20200422', END_QTY)) AS END_QTY_21
     , SUM(DECODE(WORK_DATE, '20200423', END_QTY)) AS END_QTY_22
     , SUM(DECODE(WORK_DATE, '20200424', END_QTY)) AS END_QTY_23
     , SUM(DECODE(WORK_DATE, '20200425', END_QTY)) AS END_QTY_24
     , SUM(DECODE(WORK_DATE, '20200426', END_QTY)) AS END_QTY_25
     , SUM(DECODE(WORK_DATE, '20200427', END_QTY)) AS END_QTY_26
     , SUM(DECODE(WORK_DATE, '20200428', END_QTY)) AS END_QTY_27
     , SUM(DECODE(WORK_DATE, '20200429', END_QTY)) AS END_QTY_28
     , SUM(DECODE(WORK_DATE, '20200430', END_QTY)) AS END_QTY_29
     , SUM(DECODE(WORK_DATE, '20200501', END_QTY)) AS END_QTY_30
     , SUM(DECODE(WORK_DATE, '20200502', END_QTY)) AS END_QTY_31
     , SUM(DECODE(WORK_DATE, '20200503', END_QTY)) AS END_QTY_32
     , SUM(DECODE(WORK_DATE, '20200504', END_QTY)) AS END_QTY_33
     , SUM(DECODE(WORK_DATE, '20200505', END_QTY)) AS END_QTY_34
     , SUM(DECODE(WORK_DATE, '20200506', END_QTY)) AS END_QTY_35
     , SUM(DECODE(WORK_DATE, '20200507', END_QTY)) AS END_QTY_36
     , SUM(DECODE(WORK_DATE, '20200508', END_QTY)) AS END_QTY_37
     , SUM(DECODE(WORK_DATE, '20200509', END_QTY)) AS END_QTY_38
     , SUM(DECODE(WORK_DATE, '20200510', END_QTY)) AS END_QTY_39
     , SUM(DECODE(WORK_DATE, '20200511', END_QTY)) AS END_QTY_40
     , SUM(DECODE(WORK_DATE, '20200512', END_QTY)) AS END_QTY_41
     , SUM(DECODE(WORK_DATE, '20200513', END_QTY)) AS END_QTY_42
     , SUM(DECODE(WORK_DATE, '20200514', END_QTY)) AS END_QTY_43
     , SUM(DECODE(WORK_DATE, '20200515', END_QTY)) AS END_QTY_44
     , SUM(DECODE(WORK_DATE, '20200516', END_QTY)) AS END_QTY_45
     , SUM(DECODE(WORK_DATE, '20200517', END_QTY)) AS END_QTY_46
     , SUM(DECODE(WORK_DATE, '20200518', END_QTY)) AS END_QTY_47
     , SUM(DECODE(WORK_DATE, '20200519', END_QTY)) AS END_QTY_48
     , SUM(DECODE(WORK_DATE, '20200520', END_QTY)) AS END_QTY_49
     , SUM(DECODE(WORK_DATE, '20200521', END_QTY)) AS END_QTY_50
     , SUM(DECODE(WORK_DATE, '20200522', END_QTY)) AS END_QTY_51
     , SUM(DECODE(WORK_DATE, '20200523', END_QTY)) AS END_QTY_52
     , SUM(DECODE(WORK_DATE, '20200524', END_QTY)) AS END_QTY_53
     , SUM(DECODE(WORK_DATE, '20200525', END_QTY)) AS END_QTY_54
     , SUM(DECODE(WORK_DATE, '20200526', END_QTY)) AS END_QTY_55
     , SUM(DECODE(WORK_DATE, '20200527', END_QTY)) AS END_QTY_56
     , SUM(DECODE(WORK_DATE, '20200528', END_QTY)) AS END_QTY_57
     , SUM(DECODE(WORK_DATE, '20200529', END_QTY)) AS END_QTY_58
     , ROUND(SUM(END_QTY)/59, 1) AS AVG
  FROM (
        SELECT FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3
             , SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
          FROM RSUMWIPMOV
         WHERE 1=1
           AND FACTORY = 'HMVA2'
           AND WORK_DATE BETWEEN '20200401' AND '20200529'
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%')
         GROUP BY FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3 
       ) A
     , MWIPMATDEF B
 WHERE 1=1
   AND A.FACTORY = B.FACTORY
   AND A.MAT_ID = B.MAT_ID
   AND A.END_QTY > 0
   AND A.OPER LIKE '%'
   AND A.MAT_ID LIKE '%'  
 GROUP BY B.MAT_TYPE, B.MAT_DESC, A.MAT_ID, A.OPER
 ORDER BY B.MAT_TYPE, B.MAT_DESC, A.MAT_ID, A.OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.KEY_1 AS CODE, A.DATA_1 AS DATA
  FROM MGCMTBLDAT A
 WHERE A.TABLE_NAME = 'H_DEST_AREA'
   AND A.FACTORY  = 'HMVA2'  
 ORDER BY A.KEY_1 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200528220000' AND '20200529215959' 
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200528220000' AND '20200529215959' 
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200301220000' AND '20200529215959' 
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200301220000' AND '20200529215959' 
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LSM.LOT_ID, 
       LSM.LOSS_CODE, 
       DEF.DATA_1, 
       SUM(LSM.LOSS_QTY) AS LOSS_QTY 
  FROM RWIPLOTLSM LSM, 
       MGCMTBLDAT@RPTTOMES DEF 
 WHERE LSM.HIST_DEL_FLAG = ' ' 
   AND LSM.FACTORY = 'HMVA2'
   AND DEF.TABLE_NAME = 'LOSS_CODE' 
   AND LSM.LOT_ID = 'Total' 
   AND LSM.FACTORY = DEF.FACTORY 
   AND LSM.LOSS_CODE = DEF.KEY_1 
GROUP BY LSM.LOT_ID,LSM.LOSS_CODE,DEF.DATA_1 
ORDER BY LOSS_QTY DESC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200529')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200529', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010201'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200401')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200401', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT  
            LAST_DAY('20200401')-2 AS "SYSLSI", 
            LAST_DAY('20200401') AS "MEMO",  
            LAST_DAY('20200401')- 2 - TO_DATE('20200401') +1  AS REMAIN1,  
            LAST_DAY('20200401') - TO_DATE('20200401')+1  AS REMAIN2,  
            SYSDATE AS TODAY  
        FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , ROUND(SUM(TOTAL)/59, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200430', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200501', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200502', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200503', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200504', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200505', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200506', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200507', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200508', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200509', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200510', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200511', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200513', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200514', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200515', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200516', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200517', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200518', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200519', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200520', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200521', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200522', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200523', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200524', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200525', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200526', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200527', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200528', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200529', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200401' AND '20200529' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010312'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011011'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11,  ' ', OPER, GUBUN 
     , "20200401" 
     , "20200402" 
     , "20200403" 
     , "20200404" 
     , "20200405" 
     , "20200406" 
     , "20200407" 
     , "20200408" 
     , "20200409" 
     , "20200410" 
     , "20200411" 
     , "20200412" 
     , "20200413" 
     , "20200414" 
     , "20200415" 
     , "20200416" 
     , "20200417" 
     , "20200418" 
     , "20200419" 
     , "20200420" 
     , "20200421" 
     , "20200422" 
     , "20200423" 
     , "20200424" 
     , "20200425" 
     , "20200426" 
     , "20200427" 
     , "20200428" 
     , "20200429" 
     , "20200430" 
     , "20200501" 
     , "20200502" 
     , "20200503" 
     , "20200504" 
     , "20200505" 
     , "20200506" 
     , "20200507" 
     , "20200508" 
     , "20200509" 
     , "20200510" 
     , "20200511" 
     , "20200512" 
     , "20200513" 
     , "20200514" 
     , "20200515" 
     , "20200516" 
     , "20200517" 
     , "20200518" 
     , "20200519" 
     , "20200520" 
     , "20200521" 
     , "20200522" 
     , "20200523" 
     , "20200524" 
     , "20200525" 
     , "20200526" 
     , "20200527" 
     , "20200528" 
     , "20200529" 
     , TOTAL 
  FROM ( 
        SELECT MAT_GRP_1,  ' ',  ' ', MAT_GRP_10,  ' ',  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11,  ' ', OPER 
             , GUBUN 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200401), 'START', TO_CHAR(START_20200401), 'END', TO_CHAR(END_20200401), 'START_RATE', TO_CHAR(START_RATE_20200401)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200401)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200401)||'%') "20200401" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200402), 'START', TO_CHAR(START_20200402), 'END', TO_CHAR(END_20200402), 'START_RATE', TO_CHAR(START_RATE_20200402)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200402)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200402)||'%') "20200402" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200403), 'START', TO_CHAR(START_20200403), 'END', TO_CHAR(END_20200403), 'START_RATE', TO_CHAR(START_RATE_20200403)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200403)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200403)||'%') "20200403" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200404), 'START', TO_CHAR(START_20200404), 'END', TO_CHAR(END_20200404), 'START_RATE', TO_CHAR(START_RATE_20200404)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200404)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200404)||'%') "20200404" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200405), 'START', TO_CHAR(START_20200405), 'END', TO_CHAR(END_20200405), 'START_RATE', TO_CHAR(START_RATE_20200405)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200405)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200405)||'%') "20200405" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200406), 'START', TO_CHAR(START_20200406), 'END', TO_CHAR(END_20200406), 'START_RATE', TO_CHAR(START_RATE_20200406)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200406)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200406)||'%') "20200406" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200407), 'START', TO_CHAR(START_20200407), 'END', TO_CHAR(END_20200407), 'START_RATE', TO_CHAR(START_RATE_20200407)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200407)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200407)||'%') "20200407" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200408), 'START', TO_CHAR(START_20200408), 'END', TO_CHAR(END_20200408), 'START_RATE', TO_CHAR(START_RATE_20200408)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200408)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200408)||'%') "20200408" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200409), 'START', TO_CHAR(START_20200409), 'END', TO_CHAR(END_20200409), 'START_RATE', TO_CHAR(START_RATE_20200409)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200409)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200409)||'%') "20200409" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200410), 'START', TO_CHAR(START_20200410), 'END', TO_CHAR(END_20200410), 'START_RATE', TO_CHAR(START_RATE_20200410)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200410)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200410)||'%') "20200410" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200411), 'START', TO_CHAR(START_20200411), 'END', TO_CHAR(END_20200411), 'START_RATE', TO_CHAR(START_RATE_20200411)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200411)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200411)||'%') "20200411" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200412), 'START', TO_CHAR(START_20200412), 'END', TO_CHAR(END_20200412), 'START_RATE', TO_CHAR(START_RATE_20200412)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200412)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200412)||'%') "20200412" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200413), 'START', TO_CHAR(START_20200413), 'END', TO_CHAR(END_20200413), 'START_RATE', TO_CHAR(START_RATE_20200413)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200413)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200413)||'%') "20200413" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200414), 'START', TO_CHAR(START_20200414), 'END', TO_CHAR(END_20200414), 'START_RATE', TO_CHAR(START_RATE_20200414)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200414)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200414)||'%') "20200414" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200415), 'START', TO_CHAR(START_20200415), 'END', TO_CHAR(END_20200415), 'START_RATE', TO_CHAR(START_RATE_20200415)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200415)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200415)||'%') "20200415" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200416), 'START', TO_CHAR(START_20200416), 'END', TO_CHAR(END_20200416), 'START_RATE', TO_CHAR(START_RATE_20200416)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200416)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200416)||'%') "20200416" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200417), 'START', TO_CHAR(START_20200417), 'END', TO_CHAR(END_20200417), 'START_RATE', TO_CHAR(START_RATE_20200417)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200417)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200417)||'%') "20200417" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200418), 'START', TO_CHAR(START_20200418), 'END', TO_CHAR(END_20200418), 'START_RATE', TO_CHAR(START_RATE_20200418)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200418)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200418)||'%') "20200418" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200419), 'START', TO_CHAR(START_20200419), 'END', TO_CHAR(END_20200419), 'START_RATE', TO_CHAR(START_RATE_20200419)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200419)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200419)||'%') "20200419" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200420), 'START', TO_CHAR(START_20200420), 'END', TO_CHAR(END_20200420), 'START_RATE', TO_CHAR(START_RATE_20200420)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200420)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200420)||'%') "20200420" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200421), 'START', TO_CHAR(START_20200421), 'END', TO_CHAR(END_20200421), 'START_RATE', TO_CHAR(START_RATE_20200421)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200421)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200421)||'%') "20200421" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200422), 'START', TO_CHAR(START_20200422), 'END', TO_CHAR(END_20200422), 'START_RATE', TO_CHAR(START_RATE_20200422)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200422)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200422)||'%') "20200422" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200423), 'START', TO_CHAR(START_20200423), 'END', TO_CHAR(END_20200423), 'START_RATE', TO_CHAR(START_RATE_20200423)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200423)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200423)||'%') "20200423" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200424), 'START', TO_CHAR(START_20200424), 'END', TO_CHAR(END_20200424), 'START_RATE', TO_CHAR(START_RATE_20200424)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200424)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200424)||'%') "20200424" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200425), 'START', TO_CHAR(START_20200425), 'END', TO_CHAR(END_20200425), 'START_RATE', TO_CHAR(START_RATE_20200425)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200425)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200425)||'%') "20200425" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200426), 'START', TO_CHAR(START_20200426), 'END', TO_CHAR(END_20200426), 'START_RATE', TO_CHAR(START_RATE_20200426)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200426)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200426)||'%') "20200426" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200427), 'START', TO_CHAR(START_20200427), 'END', TO_CHAR(END_20200427), 'START_RATE', TO_CHAR(START_RATE_20200427)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200427)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200427)||'%') "20200427" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200428), 'START', TO_CHAR(START_20200428), 'END', TO_CHAR(END_20200428), 'START_RATE', TO_CHAR(START_RATE_20200428)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200428)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200428)||'%') "20200428" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200429), 'START', TO_CHAR(START_20200429), 'END', TO_CHAR(END_20200429), 'START_RATE', TO_CHAR(START_RATE_20200429)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200429)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200429)||'%') "20200429" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200430), 'START', TO_CHAR(START_20200430), 'END', TO_CHAR(END_20200430), 'START_RATE', TO_CHAR(START_RATE_20200430)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200430)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200430)||'%') "20200430" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200501), 'START', TO_CHAR(START_20200501), 'END', TO_CHAR(END_20200501), 'START_RATE', TO_CHAR(START_RATE_20200501)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200501)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200501)||'%') "20200501" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200502), 'START', TO_CHAR(START_20200502), 'END', TO_CHAR(END_20200502), 'START_RATE', TO_CHAR(START_RATE_20200502)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200502)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200502)||'%') "20200502" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200503), 'START', TO_CHAR(START_20200503), 'END', TO_CHAR(END_20200503), 'START_RATE', TO_CHAR(START_RATE_20200503)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200503)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200503)||'%') "20200503" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200504), 'START', TO_CHAR(START_20200504), 'END', TO_CHAR(END_20200504), 'START_RATE', TO_CHAR(START_RATE_20200504)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200504)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200504)||'%') "20200504" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200505), 'START', TO_CHAR(START_20200505), 'END', TO_CHAR(END_20200505), 'START_RATE', TO_CHAR(START_RATE_20200505)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200505)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200505)||'%') "20200505" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200506), 'START', TO_CHAR(START_20200506), 'END', TO_CHAR(END_20200506), 'START_RATE', TO_CHAR(START_RATE_20200506)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200506)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200506)||'%') "20200506" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200507), 'START', TO_CHAR(START_20200507), 'END', TO_CHAR(END_20200507), 'START_RATE', TO_CHAR(START_RATE_20200507)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200507)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200507)||'%') "20200507" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200508), 'START', TO_CHAR(START_20200508), 'END', TO_CHAR(END_20200508), 'START_RATE', TO_CHAR(START_RATE_20200508)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200508)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200508)||'%') "20200508" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200509), 'START', TO_CHAR(START_20200509), 'END', TO_CHAR(END_20200509), 'START_RATE', TO_CHAR(START_RATE_20200509)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200509)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200509)||'%') "20200509" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200510), 'START', TO_CHAR(START_20200510), 'END', TO_CHAR(END_20200510), 'START_RATE', TO_CHAR(START_RATE_20200510)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200510)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200510)||'%') "20200510" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200511), 'START', TO_CHAR(START_20200511), 'END', TO_CHAR(END_20200511), 'START_RATE', TO_CHAR(START_RATE_20200511)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200511)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200511)||'%') "20200511" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200512), 'START', TO_CHAR(START_20200512), 'END', TO_CHAR(END_20200512), 'START_RATE', TO_CHAR(START_RATE_20200512)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200512)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200512)||'%') "20200512" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200513), 'START', TO_CHAR(START_20200513), 'END', TO_CHAR(END_20200513), 'START_RATE', TO_CHAR(START_RATE_20200513)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200513)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200513)||'%') "20200513" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200514), 'START', TO_CHAR(START_20200514), 'END', TO_CHAR(END_20200514), 'START_RATE', TO_CHAR(START_RATE_20200514)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200514)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200514)||'%') "20200514" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200515), 'START', TO_CHAR(START_20200515), 'END', TO_CHAR(END_20200515), 'START_RATE', TO_CHAR(START_RATE_20200515)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200515)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200515)||'%') "20200515" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200516), 'START', TO_CHAR(START_20200516), 'END', TO_CHAR(END_20200516), 'START_RATE', TO_CHAR(START_RATE_20200516)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200516)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200516)||'%') "20200516" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200517), 'START', TO_CHAR(START_20200517), 'END', TO_CHAR(END_20200517), 'START_RATE', TO_CHAR(START_RATE_20200517)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200517)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200517)||'%') "20200517" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200518), 'START', TO_CHAR(START_20200518), 'END', TO_CHAR(END_20200518), 'START_RATE', TO_CHAR(START_RATE_20200518)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200518)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200518)||'%') "20200518" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200519), 'START', TO_CHAR(START_20200519), 'END', TO_CHAR(END_20200519), 'START_RATE', TO_CHAR(START_RATE_20200519)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200519)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200519)||'%') "20200519" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200520), 'START', TO_CHAR(START_20200520), 'END', TO_CHAR(END_20200520), 'START_RATE', TO_CHAR(START_RATE_20200520)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200520)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200520)||'%') "20200520" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200521), 'START', TO_CHAR(START_20200521), 'END', TO_CHAR(END_20200521), 'START_RATE', TO_CHAR(START_RATE_20200521)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200521)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200521)||'%') "20200521" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200522), 'START', TO_CHAR(START_20200522), 'END', TO_CHAR(END_20200522), 'START_RATE', TO_CHAR(START_RATE_20200522)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200522)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200522)||'%') "20200522" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200523), 'START', TO_CHAR(START_20200523), 'END', TO_CHAR(END_20200523), 'START_RATE', TO_CHAR(START_RATE_20200523)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200523)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200523)||'%') "20200523" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200524), 'START', TO_CHAR(START_20200524), 'END', TO_CHAR(END_20200524), 'START_RATE', TO_CHAR(START_RATE_20200524)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200524)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200524)||'%') "20200524" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200525), 'START', TO_CHAR(START_20200525), 'END', TO_CHAR(END_20200525), 'START_RATE', TO_CHAR(START_RATE_20200525)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200525)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200525)||'%') "20200525" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200526), 'START', TO_CHAR(START_20200526), 'END', TO_CHAR(END_20200526), 'START_RATE', TO_CHAR(START_RATE_20200526)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200526)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200526)||'%') "20200526" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200527), 'START', TO_CHAR(START_20200527), 'END', TO_CHAR(END_20200527), 'START_RATE', TO_CHAR(START_RATE_20200527)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200527)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200527)||'%') "20200527" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200528), 'START', TO_CHAR(START_20200528), 'END', TO_CHAR(END_20200528), 'START_RATE', TO_CHAR(START_RATE_20200528)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200528)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200528)||'%') "20200528" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_20200529), 'START', TO_CHAR(START_20200529), 'END', TO_CHAR(END_20200529), 'START_RATE', TO_CHAR(START_RATE_20200529)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_20200529)||'%', 'CV_RATE', TO_CHAR(CV_RATE_20200529)||'%') "20200529" 
             , DECODE(GUBUN,'LOT QTY',TO_CHAR(LOT_CNT_TOTAL), 'START', TO_CHAR(START_TOTAL), 'END', TO_CHAR(END_TOTAL), 'START_RATE', TO_CHAR(START_RATE_TOTAL)||'%', 'FAIL_RATE', TO_CHAR(FAIL_RATE_TOTAL)||'%', 'CV_RATE', TO_CHAR(CV_RATE_TOTAL)||'%') "TOTAL" 
          FROM ( 
                SELECT DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'HH', 9, 3), MAT_GRP_1,  ' ',  ' ', MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.MAT_CMF_11,  ' ', OPER 
                     , SUM(DECODE(DAY, '20200401', LOT_CNT,0)) AS "LOT_CNT_20200401" 
                     , SUM(DECODE(DAY, '20200402', LOT_CNT,0)) AS "LOT_CNT_20200402" 
                     , SUM(DECODE(DAY, '20200403', LOT_CNT,0)) AS "LOT_CNT_20200403" 
                     , SUM(DECODE(DAY, '20200404', LOT_CNT,0)) AS "LOT_CNT_20200404" 
                     , SUM(DECODE(DAY, '20200405', LOT_CNT,0)) AS "LOT_CNT_20200405" 
                     , SUM(DECODE(DAY, '20200406', LOT_CNT,0)) AS "LOT_CNT_20200406" 
                     , SUM(DECODE(DAY, '20200407', LOT_CNT,0)) AS "LOT_CNT_20200407" 
                     , SUM(DECODE(DAY, '20200408', LOT_CNT,0)) AS "LOT_CNT_20200408" 
                     , SUM(DECODE(DAY, '20200409', LOT_CNT,0)) AS "LOT_CNT_20200409" 
                     , SUM(DECODE(DAY, '20200410', LOT_CNT,0)) AS "LOT_CNT_20200410" 
                     , SUM(DECODE(DAY, '20200411', LOT_CNT,0)) AS "LOT_CNT_20200411" 
                     , SUM(DECODE(DAY, '20200412', LOT_CNT,0)) AS "LOT_CNT_20200412" 
                     , SUM(DECODE(DAY, '20200413', LOT_CNT,0)) AS "LOT_CNT_20200413" 
                     , SUM(DECODE(DAY, '20200414', LOT_CNT,0)) AS "LOT_CNT_20200414" 
                     , SUM(DECODE(DAY, '20200415', LOT_CNT,0)) AS "LOT_CNT_20200415" 
                     , SUM(DECODE(DAY, '20200416', LOT_CNT,0)) AS "LOT_CNT_20200416" 
                     , SUM(DECODE(DAY, '20200417', LOT_CNT,0)) AS "LOT_CNT_20200417" 
                     , SUM(DECODE(DAY, '20200418', LOT_CNT,0)) AS "LOT_CNT_20200418" 
                     , SUM(DECODE(DAY, '20200419', LOT_CNT,0)) AS "LOT_CNT_20200419" 
                     , SUM(DECODE(DAY, '20200420', LOT_CNT,0)) AS "LOT_CNT_20200420" 
                     , SUM(DECODE(DAY, '20200421', LOT_CNT,0)) AS "LOT_CNT_20200421" 
                     , SUM(DECODE(DAY, '20200422', LOT_CNT,0)) AS "LOT_CNT_20200422" 
                     , SUM(DECODE(DAY, '20200423', LOT_CNT,0)) AS "LOT_CNT_20200423" 
                     , SUM(DECODE(DAY, '20200424', LOT_CNT,0)) AS "LOT_CNT_20200424" 
                     , SUM(DECODE(DAY, '20200425', LOT_CNT,0)) AS "LOT_CNT_20200425" 
                     , SUM(DECODE(DAY, '20200426', LOT_CNT,0)) AS "LOT_CNT_20200426" 
                     , SUM(DECODE(DAY, '20200427', LOT_CNT,0)) AS "LOT_CNT_20200427" 
                     , SUM(DECODE(DAY, '20200428', LOT_CNT,0)) AS "LOT_CNT_20200428" 
                     , SUM(DECODE(DAY, '20200429', LOT_CNT,0)) AS "LOT_CNT_20200429" 
                     , SUM(DECODE(DAY, '20200430', LOT_CNT,0)) AS "LOT_CNT_20200430" 
                     , SUM(DECODE(DAY, '20200501', LOT_CNT,0)) AS "LOT_CNT_20200501" 
                     , SUM(DECODE(DAY, '20200502', LOT_CNT,0)) AS "LOT_CNT_20200502" 
                     , SUM(DECODE(DAY, '20200503', LOT_CNT,0)) AS "LOT_CNT_20200503" 
                     , SUM(DECODE(DAY, '20200504', LOT_CNT,0)) AS "LOT_CNT_20200504" 
                     , SUM(DECODE(DAY, '20200505', LOT_CNT,0)) AS "LOT_CNT_20200505" 
                     , SUM(DECODE(DAY, '20200506', LOT_CNT,0)) AS "LOT_CNT_20200506" 
                     , SUM(DECODE(DAY, '20200507', LOT_CNT,0)) AS "LOT_CNT_20200507" 
                     , SUM(DECODE(DAY, '20200508', LOT_CNT,0)) AS "LOT_CNT_20200508" 
                     , SUM(DECODE(DAY, '20200509', LOT_CNT,0)) AS "LOT_CNT_20200509" 
                     , SUM(DECODE(DAY, '20200510', LOT_CNT,0)) AS "LOT_CNT_20200510" 
                     , SUM(DECODE(DAY, '20200511', LOT_CNT,0)) AS "LOT_CNT_20200511" 
                     , SUM(DECODE(DAY, '20200512', LOT_CNT,0)) AS "LOT_CNT_20200512" 
                     , SUM(DECODE(DAY, '20200513', LOT_CNT,0)) AS "LOT_CNT_20200513" 
                     , SUM(DECODE(DAY, '20200514', LOT_CNT,0)) AS "LOT_CNT_20200514" 
                     , SUM(DECODE(DAY, '20200515', LOT_CNT,0)) AS "LOT_CNT_20200515" 
                     , SUM(DECODE(DAY, '20200516', LOT_CNT,0)) AS "LOT_CNT_20200516" 
                     , SUM(DECODE(DAY, '20200517', LOT_CNT,0)) AS "LOT_CNT_20200517" 
                     , SUM(DECODE(DAY, '20200518', LOT_CNT,0)) AS "LOT_CNT_20200518" 
                     , SUM(DECODE(DAY, '20200519', LOT_CNT,0)) AS "LOT_CNT_20200519" 
                     , SUM(DECODE(DAY, '20200520', LOT_CNT,0)) AS "LOT_CNT_20200520" 
                     , SUM(DECODE(DAY, '20200521', LOT_CNT,0)) AS "LOT_CNT_20200521" 
                     , SUM(DECODE(DAY, '20200522', LOT_CNT,0)) AS "LOT_CNT_20200522" 
                     , SUM(DECODE(DAY, '20200523', LOT_CNT,0)) AS "LOT_CNT_20200523" 
                     , SUM(DECODE(DAY, '20200524', LOT_CNT,0)) AS "LOT_CNT_20200524" 
                     , SUM(DECODE(DAY, '20200525', LOT_CNT,0)) AS "LOT_CNT_20200525" 
                     , SUM(DECODE(DAY, '20200526', LOT_CNT,0)) AS "LOT_CNT_20200526" 
                     , SUM(DECODE(DAY, '20200527', LOT_CNT,0)) AS "LOT_CNT_20200527" 
                     , SUM(DECODE(DAY, '20200528', LOT_CNT,0)) AS "LOT_CNT_20200528" 
                     , SUM(DECODE(DAY, '20200529', LOT_CNT,0)) AS "LOT_CNT_20200529" 
                     , SUM(DECODE(DAY, '20200401', START_,0)) AS "START_20200401" 
                     , SUM(DECODE(DAY, '20200402', START_,0)) AS "START_20200402" 
                     , SUM(DECODE(DAY, '20200403', START_,0)) AS "START_20200403" 
                     , SUM(DECODE(DAY, '20200404', START_,0)) AS "START_20200404" 
                     , SUM(DECODE(DAY, '20200405', START_,0)) AS "START_20200405" 
                     , SUM(DECODE(DAY, '20200406', START_,0)) AS "START_20200406" 
                     , SUM(DECODE(DAY, '20200407', START_,0)) AS "START_20200407" 
                     , SUM(DECODE(DAY, '20200408', START_,0)) AS "START_20200408" 
                     , SUM(DECODE(DAY, '20200409', START_,0)) AS "START_20200409" 
                     , SUM(DECODE(DAY, '20200410', START_,0)) AS "START_20200410" 
                     , SUM(DECODE(DAY, '20200411', START_,0)) AS "START_20200411" 
                     , SUM(DECODE(DAY, '20200412', START_,0)) AS "START_20200412" 
                     , SUM(DECODE(DAY, '20200413', START_,0)) AS "START_20200413" 
                     , SUM(DECODE(DAY, '20200414', START_,0)) AS "START_20200414" 
                     , SUM(DECODE(DAY, '20200415', START_,0)) AS "START_20200415" 
                     , SUM(DECODE(DAY, '20200416', START_,0)) AS "START_20200416" 
                     , SUM(DECODE(DAY, '20200417', START_,0)) AS "START_20200417" 
                     , SUM(DECODE(DAY, '20200418', START_,0)) AS "START_20200418" 
                     , SUM(DECODE(DAY, '20200419', START_,0)) AS "START_20200419" 
                     , SUM(DECODE(DAY, '20200420', START_,0)) AS "START_20200420" 
                     , SUM(DECODE(DAY, '20200421', START_,0)) AS "START_20200421" 
                     , SUM(DECODE(DAY, '20200422', START_,0)) AS "START_20200422" 
                     , SUM(DECODE(DAY, '20200423', START_,0)) AS "START_20200423" 
                     , SUM(DECODE(DAY, '20200424', START_,0)) AS "START_20200424" 
                     , SUM(DECODE(DAY, '20200425', START_,0)) AS "START_20200425" 
                     , SUM(DECODE(DAY, '20200426', START_,0)) AS "START_20200426" 
                     , SUM(DECODE(DAY, '20200427', START_,0)) AS "START_20200427" 
                     , SUM(DECODE(DAY, '20200428', START_,0)) AS "START_20200428" 
                     , SUM(DECODE(DAY, '20200429', START_,0)) AS "START_20200429" 
                     , SUM(DECODE(DAY, '20200430', START_,0)) AS "START_20200430" 
                     , SUM(DECODE(DAY, '20200501', START_,0)) AS "START_20200501" 
                     , SUM(DECODE(DAY, '20200502', START_,0)) AS "START_20200502" 
                     , SUM(DECODE(DAY, '20200503', START_,0)) AS "START_20200503" 
                     , SUM(DECODE(DAY, '20200504', START_,0)) AS "START_20200504" 
                     , SUM(DECODE(DAY, '20200505', START_,0)) AS "START_20200505" 
                     , SUM(DECODE(DAY, '20200506', START_,0)) AS "START_20200506" 
                     , SUM(DECODE(DAY, '20200507', START_,0)) AS "START_20200507" 
                     , SUM(DECODE(DAY, '20200508', START_,0)) AS "START_20200508" 
                     , SUM(DECODE(DAY, '20200509', START_,0)) AS "START_20200509" 
                     , SUM(DECODE(DAY, '20200510', START_,0)) AS "START_20200510" 
                     , SUM(DECODE(DAY, '20200511', START_,0)) AS "START_20200511" 
                     , SUM(DECODE(DAY, '20200512', START_,0)) AS "START_20200512" 
                     , SUM(DECODE(DAY, '20200513', START_,0)) AS "START_20200513" 
                     , SUM(DECODE(DAY, '20200514', START_,0)) AS "START_20200514" 
                     , SUM(DECODE(DAY, '20200515', START_,0)) AS "START_20200515" 
                     , SUM(DECODE(DAY, '20200516', START_,0)) AS "START_20200516" 
                     , SUM(DECODE(DAY, '20200517', START_,0)) AS "START_20200517" 
                     , SUM(DECODE(DAY, '20200518', START_,0)) AS "START_20200518" 
                     , SUM(DECODE(DAY, '20200519', START_,0)) AS "START_20200519" 
                     , SUM(DECODE(DAY, '20200520', START_,0)) AS "START_20200520" 
                     , SUM(DECODE(DAY, '20200521', START_,0)) AS "START_20200521" 
                     , SUM(DECODE(DAY, '20200522', START_,0)) AS "START_20200522" 
                     , SUM(DECODE(DAY, '20200523', START_,0)) AS "START_20200523" 
                     , SUM(DECODE(DAY, '20200524', START_,0)) AS "START_20200524" 
                     , SUM(DECODE(DAY, '20200525', START_,0)) AS "START_20200525" 
                     , SUM(DECODE(DAY, '20200526', START_,0)) AS "START_20200526" 
                     , SUM(DECODE(DAY, '20200527', START_,0)) AS "START_20200527" 
                     , SUM(DECODE(DAY, '20200528', START_,0)) AS "START_20200528" 
                     , SUM(DECODE(DAY, '20200529', START_,0)) AS "START_20200529" 
                     , SUM(DECODE(DAY, '20200401', END_,0)) AS "END_20200401" 
                     , SUM(DECODE(DAY, '20200402', END_,0)) AS "END_20200402" 
                     , SUM(DECODE(DAY, '20200403', END_,0)) AS "END_20200403" 
                     , SUM(DECODE(DAY, '20200404', END_,0)) AS "END_20200404" 
                     , SUM(DECODE(DAY, '20200405', END_,0)) AS "END_20200405" 
                     , SUM(DECODE(DAY, '20200406', END_,0)) AS "END_20200406" 
                     , SUM(DECODE(DAY, '20200407', END_,0)) AS "END_20200407" 
                     , SUM(DECODE(DAY, '20200408', END_,0)) AS "END_20200408" 
                     , SUM(DECODE(DAY, '20200409', END_,0)) AS "END_20200409" 
                     , SUM(DECODE(DAY, '20200410', END_,0)) AS "END_20200410" 
                     , SUM(DECODE(DAY, '20200411', END_,0)) AS "END_20200411" 
                     , SUM(DECODE(DAY, '20200412', END_,0)) AS "END_20200412" 
                     , SUM(DECODE(DAY, '20200413', END_,0)) AS "END_20200413" 
                     , SUM(DECODE(DAY, '20200414', END_,0)) AS "END_20200414" 
                     , SUM(DECODE(DAY, '20200415', END_,0)) AS "END_20200415" 
                     , SUM(DECODE(DAY, '20200416', END_,0)) AS "END_20200416" 
                     , SUM(DECODE(DAY, '20200417', END_,0)) AS "END_20200417" 
                     , SUM(DECODE(DAY, '20200418', END_,0)) AS "END_20200418" 
                     , SUM(DECODE(DAY, '20200419', END_,0)) AS "END_20200419" 
                     , SUM(DECODE(DAY, '20200420', END_,0)) AS "END_20200420" 
                     , SUM(DECODE(DAY, '20200421', END_,0)) AS "END_20200421" 
                     , SUM(DECODE(DAY, '20200422', END_,0)) AS "END_20200422" 
                     , SUM(DECODE(DAY, '20200423', END_,0)) AS "END_20200423" 
                     , SUM(DECODE(DAY, '20200424', END_,0)) AS "END_20200424" 
                     , SUM(DECODE(DAY, '20200425', END_,0)) AS "END_20200425" 
                     , SUM(DECODE(DAY, '20200426', END_,0)) AS "END_20200426" 
                     , SUM(DECODE(DAY, '20200427', END_,0)) AS "END_20200427" 
                     , SUM(DECODE(DAY, '20200428', END_,0)) AS "END_20200428" 
                     , SUM(DECODE(DAY, '20200429', END_,0)) AS "END_20200429" 
                     , SUM(DECODE(DAY, '20200430', END_,0)) AS "END_20200430" 
                     , SUM(DECODE(DAY, '20200501', END_,0)) AS "END_20200501" 
                     , SUM(DECODE(DAY, '20200502', END_,0)) AS "END_20200502" 
                     , SUM(DECODE(DAY, '20200503', END_,0)) AS "END_20200503" 
                     , SUM(DECODE(DAY, '20200504', END_,0)) AS "END_20200504" 
                     , SUM(DECODE(DAY, '20200505', END_,0)) AS "END_20200505" 
                     , SUM(DECODE(DAY, '20200506', END_,0)) AS "END_20200506" 
                     , SUM(DECODE(DAY, '20200507', END_,0)) AS "END_20200507" 
                     , SUM(DECODE(DAY, '20200508', END_,0)) AS "END_20200508" 
                     , SUM(DECODE(DAY, '20200509', END_,0)) AS "END_20200509" 
                     , SUM(DECODE(DAY, '20200510', END_,0)) AS "END_20200510" 
                     , SUM(DECODE(DAY, '20200511', END_,0)) AS "END_20200511" 
                     , SUM(DECODE(DAY, '20200512', END_,0)) AS "END_20200512" 
                     , SUM(DECODE(DAY, '20200513', END_,0)) AS "END_20200513" 
                     , SUM(DECODE(DAY, '20200514', END_,0)) AS "END_20200514" 
                     , SUM(DECODE(DAY, '20200515', END_,0)) AS "END_20200515" 
                     , SUM(DECODE(DAY, '20200516', END_,0)) AS "END_20200516" 
                     , SUM(DECODE(DAY, '20200517', END_,0)) AS "END_20200517" 
                     , SUM(DECODE(DAY, '20200518', END_,0)) AS "END_20200518" 
                     , SUM(DECODE(DAY, '20200519', END_,0)) AS "END_20200519" 
                     , SUM(DECODE(DAY, '20200520', END_,0)) AS "END_20200520" 
                     , SUM(DECODE(DAY, '20200521', END_,0)) AS "END_20200521" 
                     , SUM(DECODE(DAY, '20200522', END_,0)) AS "END_20200522" 
                     , SUM(DECODE(DAY, '20200523', END_,0)) AS "END_20200523" 
                     , SUM(DECODE(DAY, '20200524', END_,0)) AS "END_20200524" 
                     , SUM(DECODE(DAY, '20200525', END_,0)) AS "END_20200525" 
                     , SUM(DECODE(DAY, '20200526', END_,0)) AS "END_20200526" 
                     , SUM(DECODE(DAY, '20200527', END_,0)) AS "END_20200527" 
                     , SUM(DECODE(DAY, '20200528', END_,0)) AS "END_20200528" 
                     , SUM(DECODE(DAY, '20200529', END_,0)) AS "END_20200529" 
                     , SUM(DECODE(DAY, '20200401', CV_,0)) AS "CV_20200401" 
                     , SUM(DECODE(DAY, '20200402', CV_,0)) AS "CV_20200402" 
                     , SUM(DECODE(DAY, '20200403', CV_,0)) AS "CV_20200403" 
                     , SUM(DECODE(DAY, '20200404', CV_,0)) AS "CV_20200404" 
                     , SUM(DECODE(DAY, '20200405', CV_,0)) AS "CV_20200405" 
                     , SUM(DECODE(DAY, '20200406', CV_,0)) AS "CV_20200406" 
                     , SUM(DECODE(DAY, '20200407', CV_,0)) AS "CV_20200407" 
                     , SUM(DECODE(DAY, '20200408', CV_,0)) AS "CV_20200408" 
                     , SUM(DECODE(DAY, '20200409', CV_,0)) AS "CV_20200409" 
                     , SUM(DECODE(DAY, '20200410', CV_,0)) AS "CV_20200410" 
                     , SUM(DECODE(DAY, '20200411', CV_,0)) AS "CV_20200411" 
                     , SUM(DECODE(DAY, '20200412', CV_,0)) AS "CV_20200412" 
                     , SUM(DECODE(DAY, '20200413', CV_,0)) AS "CV_20200413" 
                     , SUM(DECODE(DAY, '20200414', CV_,0)) AS "CV_20200414" 
                     , SUM(DECODE(DAY, '20200415', CV_,0)) AS "CV_20200415" 
                     , SUM(DECODE(DAY, '20200416', CV_,0)) AS "CV_20200416" 
                     , SUM(DECODE(DAY, '20200417', CV_,0)) AS "CV_20200417" 
                     , SUM(DECODE(DAY, '20200418', CV_,0)) AS "CV_20200418" 
                     , SUM(DECODE(DAY, '20200419', CV_,0)) AS "CV_20200419" 
                     , SUM(DECODE(DAY, '20200420', CV_,0)) AS "CV_20200420" 
                     , SUM(DECODE(DAY, '20200421', CV_,0)) AS "CV_20200421" 
                     , SUM(DECODE(DAY, '20200422', CV_,0)) AS "CV_20200422" 
                     , SUM(DECODE(DAY, '20200423', CV_,0)) AS "CV_20200423" 
                     , SUM(DECODE(DAY, '20200424', CV_,0)) AS "CV_20200424" 
                     , SUM(DECODE(DAY, '20200425', CV_,0)) AS "CV_20200425" 
                     , SUM(DECODE(DAY, '20200426', CV_,0)) AS "CV_20200426" 
                     , SUM(DECODE(DAY, '20200427', CV_,0)) AS "CV_20200427" 
                     , SUM(DECODE(DAY, '20200428', CV_,0)) AS "CV_20200428" 
                     , SUM(DECODE(DAY, '20200429', CV_,0)) AS "CV_20200429" 
                     , SUM(DECODE(DAY, '20200430', CV_,0)) AS "CV_20200430" 
                     , SUM(DECODE(DAY, '20200501', CV_,0)) AS "CV_20200501" 
                     , SUM(DECODE(DAY, '20200502', CV_,0)) AS "CV_20200502" 
                     , SUM(DECODE(DAY, '20200503', CV_,0)) AS "CV_20200503" 
                     , SUM(DECODE(DAY, '20200504', CV_,0)) AS "CV_20200504" 
                     , SUM(DECODE(DAY, '20200505', CV_,0)) AS "CV_20200505" 
                     , SUM(DECODE(DAY, '20200506', CV_,0)) AS "CV_20200506" 
                     , SUM(DECODE(DAY, '20200507', CV_,0)) AS "CV_20200507" 
                     , SUM(DECODE(DAY, '20200508', CV_,0)) AS "CV_20200508" 
                     , SUM(DECODE(DAY, '20200509', CV_,0)) AS "CV_20200509" 
                     , SUM(DECODE(DAY, '20200510', CV_,0)) AS "CV_20200510" 
                     , SUM(DECODE(DAY, '20200511', CV_,0)) AS "CV_20200511" 
                     , SUM(DECODE(DAY, '20200512', CV_,0)) AS "CV_20200512" 
                     , SUM(DECODE(DAY, '20200513', CV_,0)) AS "CV_20200513" 
                     , SUM(DECODE(DAY, '20200514', CV_,0)) AS "CV_20200514" 
                     , SUM(DECODE(DAY, '20200515', CV_,0)) AS "CV_20200515" 
                     , SUM(DECODE(DAY, '20200516', CV_,0)) AS "CV_20200516" 
                     , SUM(DECODE(DAY, '20200517', CV_,0)) AS "CV_20200517" 
                     , SUM(DECODE(DAY, '20200518', CV_,0)) AS "CV_20200518" 
                     , SUM(DECODE(DAY, '20200519', CV_,0)) AS "CV_20200519" 
                     , SUM(DECODE(DAY, '20200520', CV_,0)) AS "CV_20200520" 
                     , SUM(DECODE(DAY, '20200521', CV_,0)) AS "CV_20200521" 
                     , SUM(DECODE(DAY, '20200522', CV_,0)) AS "CV_20200522" 
                     , SUM(DECODE(DAY, '20200523', CV_,0)) AS "CV_20200523" 
                     , SUM(DECODE(DAY, '20200524', CV_,0)) AS "CV_20200524" 
                     , SUM(DECODE(DAY, '20200525', CV_,0)) AS "CV_20200525" 
                     , SUM(DECODE(DAY, '20200526', CV_,0)) AS "CV_20200526" 
                     , SUM(DECODE(DAY, '20200527', CV_,0)) AS "CV_20200527" 
                     , SUM(DECODE(DAY, '20200528', CV_,0)) AS "CV_20200528" 
                     , SUM(DECODE(DAY, '20200529', CV_,0)) AS "CV_20200529" 
                     , CASE WHEN SUM(DECODE(DAY, '20200401', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200401', START_,0)) / SUM(DECODE(DAY, '20200401', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200401" 
                     , CASE WHEN SUM(DECODE(DAY, '20200402', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200402', START_,0)) / SUM(DECODE(DAY, '20200402', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200402" 
                     , CASE WHEN SUM(DECODE(DAY, '20200403', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200403', START_,0)) / SUM(DECODE(DAY, '20200403', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200403" 
                     , CASE WHEN SUM(DECODE(DAY, '20200404', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200404', START_,0)) / SUM(DECODE(DAY, '20200404', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200404" 
                     , CASE WHEN SUM(DECODE(DAY, '20200405', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200405', START_,0)) / SUM(DECODE(DAY, '20200405', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200405" 
                     , CASE WHEN SUM(DECODE(DAY, '20200406', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200406', START_,0)) / SUM(DECODE(DAY, '20200406', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200406" 
                     , CASE WHEN SUM(DECODE(DAY, '20200407', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200407', START_,0)) / SUM(DECODE(DAY, '20200407', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200407" 
                     , CASE WHEN SUM(DECODE(DAY, '20200408', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200408', START_,0)) / SUM(DECODE(DAY, '20200408', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200408" 
                     , CASE WHEN SUM(DECODE(DAY, '20200409', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200409', START_,0)) / SUM(DECODE(DAY, '20200409', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200409" 
                     , CASE WHEN SUM(DECODE(DAY, '20200410', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200410', START_,0)) / SUM(DECODE(DAY, '20200410', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200410" 
                     , CASE WHEN SUM(DECODE(DAY, '20200411', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200411', START_,0)) / SUM(DECODE(DAY, '20200411', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200411" 
                     , CASE WHEN SUM(DECODE(DAY, '20200412', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200412', START_,0)) / SUM(DECODE(DAY, '20200412', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200412" 
                     , CASE WHEN SUM(DECODE(DAY, '20200413', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200413', START_,0)) / SUM(DECODE(DAY, '20200413', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200413" 
                     , CASE WHEN SUM(DECODE(DAY, '20200414', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200414', START_,0)) / SUM(DECODE(DAY, '20200414', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200414" 
                     , CASE WHEN SUM(DECODE(DAY, '20200415', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200415', START_,0)) / SUM(DECODE(DAY, '20200415', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200415" 
                     , CASE WHEN SUM(DECODE(DAY, '20200416', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200416', START_,0)) / SUM(DECODE(DAY, '20200416', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200416" 
                     , CASE WHEN SUM(DECODE(DAY, '20200417', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200417', START_,0)) / SUM(DECODE(DAY, '20200417', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200417" 
                     , CASE WHEN SUM(DECODE(DAY, '20200418', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200418', START_,0)) / SUM(DECODE(DAY, '20200418', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200418" 
                     , CASE WHEN SUM(DECODE(DAY, '20200419', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200419', START_,0)) / SUM(DECODE(DAY, '20200419', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200419" 
                     , CASE WHEN SUM(DECODE(DAY, '20200420', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200420', START_,0)) / SUM(DECODE(DAY, '20200420', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200420" 
                     , CASE WHEN SUM(DECODE(DAY, '20200421', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200421', START_,0)) / SUM(DECODE(DAY, '20200421', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200421" 
                     , CASE WHEN SUM(DECODE(DAY, '20200422', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200422', START_,0)) / SUM(DECODE(DAY, '20200422', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200422" 
                     , CASE WHEN SUM(DECODE(DAY, '20200423', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200423', START_,0)) / SUM(DECODE(DAY, '20200423', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200423" 
                     , CASE WHEN SUM(DECODE(DAY, '20200424', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200424', START_,0)) / SUM(DECODE(DAY, '20200424', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200424" 
                     , CASE WHEN SUM(DECODE(DAY, '20200425', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200425', START_,0)) / SUM(DECODE(DAY, '20200425', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200425" 
                     , CASE WHEN SUM(DECODE(DAY, '20200426', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200426', START_,0)) / SUM(DECODE(DAY, '20200426', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200426" 
                     , CASE WHEN SUM(DECODE(DAY, '20200427', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200427', START_,0)) / SUM(DECODE(DAY, '20200427', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200427" 
                     , CASE WHEN SUM(DECODE(DAY, '20200428', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200428', START_,0)) / SUM(DECODE(DAY, '20200428', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200428" 
                     , CASE WHEN SUM(DECODE(DAY, '20200429', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200429', START_,0)) / SUM(DECODE(DAY, '20200429', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200429" 
                     , CASE WHEN SUM(DECODE(DAY, '20200430', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200430', START_,0)) / SUM(DECODE(DAY, '20200430', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200430" 
                     , CASE WHEN SUM(DECODE(DAY, '20200501', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200501', START_,0)) / SUM(DECODE(DAY, '20200501', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200501" 
                     , CASE WHEN SUM(DECODE(DAY, '20200502', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200502', START_,0)) / SUM(DECODE(DAY, '20200502', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200502" 
                     , CASE WHEN SUM(DECODE(DAY, '20200503', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200503', START_,0)) / SUM(DECODE(DAY, '20200503', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200503" 
                     , CASE WHEN SUM(DECODE(DAY, '20200504', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200504', START_,0)) / SUM(DECODE(DAY, '20200504', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200504" 
                     , CASE WHEN SUM(DECODE(DAY, '20200505', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200505', START_,0)) / SUM(DECODE(DAY, '20200505', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200505" 
                     , CASE WHEN SUM(DECODE(DAY, '20200506', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200506', START_,0)) / SUM(DECODE(DAY, '20200506', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200506" 
                     , CASE WHEN SUM(DECODE(DAY, '20200507', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200507', START_,0)) / SUM(DECODE(DAY, '20200507', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200507" 
                     , CASE WHEN SUM(DECODE(DAY, '20200508', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200508', START_,0)) / SUM(DECODE(DAY, '20200508', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200508" 
                     , CASE WHEN SUM(DECODE(DAY, '20200509', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200509', START_,0)) / SUM(DECODE(DAY, '20200509', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200509" 
                     , CASE WHEN SUM(DECODE(DAY, '20200510', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200510', START_,0)) / SUM(DECODE(DAY, '20200510', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200510" 
                     , CASE WHEN SUM(DECODE(DAY, '20200511', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200511', START_,0)) / SUM(DECODE(DAY, '20200511', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200511" 
                     , CASE WHEN SUM(DECODE(DAY, '20200512', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200512', START_,0)) / SUM(DECODE(DAY, '20200512', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200512" 
                     , CASE WHEN SUM(DECODE(DAY, '20200513', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200513', START_,0)) / SUM(DECODE(DAY, '20200513', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200513" 
                     , CASE WHEN SUM(DECODE(DAY, '20200514', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200514', START_,0)) / SUM(DECODE(DAY, '20200514', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200514" 
                     , CASE WHEN SUM(DECODE(DAY, '20200515', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200515', START_,0)) / SUM(DECODE(DAY, '20200515', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200515" 
                     , CASE WHEN SUM(DECODE(DAY, '20200516', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200516', START_,0)) / SUM(DECODE(DAY, '20200516', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200516" 
                     , CASE WHEN SUM(DECODE(DAY, '20200517', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200517', START_,0)) / SUM(DECODE(DAY, '20200517', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200517" 
                     , CASE WHEN SUM(DECODE(DAY, '20200518', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200518', START_,0)) / SUM(DECODE(DAY, '20200518', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200518" 
                     , CASE WHEN SUM(DECODE(DAY, '20200519', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200519', START_,0)) / SUM(DECODE(DAY, '20200519', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200519" 
                     , CASE WHEN SUM(DECODE(DAY, '20200520', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200520', START_,0)) / SUM(DECODE(DAY, '20200520', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200520" 
                     , CASE WHEN SUM(DECODE(DAY, '20200521', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200521', START_,0)) / SUM(DECODE(DAY, '20200521', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200521" 
                     , CASE WHEN SUM(DECODE(DAY, '20200522', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200522', START_,0)) / SUM(DECODE(DAY, '20200522', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200522" 
                     , CASE WHEN SUM(DECODE(DAY, '20200523', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200523', START_,0)) / SUM(DECODE(DAY, '20200523', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200523" 
                     , CASE WHEN SUM(DECODE(DAY, '20200524', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200524', START_,0)) / SUM(DECODE(DAY, '20200524', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200524" 
                     , CASE WHEN SUM(DECODE(DAY, '20200525', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200525', START_,0)) / SUM(DECODE(DAY, '20200525', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200525" 
                     , CASE WHEN SUM(DECODE(DAY, '20200526', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200526', START_,0)) / SUM(DECODE(DAY, '20200526', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200526" 
                     , CASE WHEN SUM(DECODE(DAY, '20200527', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200527', START_,0)) / SUM(DECODE(DAY, '20200527', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200527" 
                     , CASE WHEN SUM(DECODE(DAY, '20200528', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200528', START_,0)) / SUM(DECODE(DAY, '20200528', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200528" 
                     , CASE WHEN SUM(DECODE(DAY, '20200529', LOT_CNT,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200529', START_,0)) / SUM(DECODE(DAY, '20200529', LOT_CNT,0)) * 100,0) 
                       END AS "START_RATE_20200529" 
                     , CASE WHEN SUM(DECODE(DAY, '20200401', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200401', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200401', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200401" 
                     , CASE WHEN SUM(DECODE(DAY, '20200402', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200402', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200402', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200402" 
                     , CASE WHEN SUM(DECODE(DAY, '20200403', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200403', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200403', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200403" 
                     , CASE WHEN SUM(DECODE(DAY, '20200404', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200404', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200404', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200404" 
                     , CASE WHEN SUM(DECODE(DAY, '20200405', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200405', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200405', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200405" 
                     , CASE WHEN SUM(DECODE(DAY, '20200406', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200406', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200406', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200406" 
                     , CASE WHEN SUM(DECODE(DAY, '20200407', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200407', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200407', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200407" 
                     , CASE WHEN SUM(DECODE(DAY, '20200408', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200408', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200408', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200408" 
                     , CASE WHEN SUM(DECODE(DAY, '20200409', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200409', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200409', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200409" 
                     , CASE WHEN SUM(DECODE(DAY, '20200410', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200410', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200410', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200410" 
                     , CASE WHEN SUM(DECODE(DAY, '20200411', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200411', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200411', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200411" 
                     , CASE WHEN SUM(DECODE(DAY, '20200412', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200412', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200412', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200412" 
                     , CASE WHEN SUM(DECODE(DAY, '20200413', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200413', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200413', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200413" 
                     , CASE WHEN SUM(DECODE(DAY, '20200414', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200414', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200414', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200414" 
                     , CASE WHEN SUM(DECODE(DAY, '20200415', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200415', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200415', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200415" 
                     , CASE WHEN SUM(DECODE(DAY, '20200416', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200416', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200416', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200416" 
                     , CASE WHEN SUM(DECODE(DAY, '20200417', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200417', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200417', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200417" 
                     , CASE WHEN SUM(DECODE(DAY, '20200418', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200418', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200418', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200418" 
                     , CASE WHEN SUM(DECODE(DAY, '20200419', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200419', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200419', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200419" 
                     , CASE WHEN SUM(DECODE(DAY, '20200420', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200420', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200420', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200420" 
                     , CASE WHEN SUM(DECODE(DAY, '20200421', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200421', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200421', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200421" 
                     , CASE WHEN SUM(DECODE(DAY, '20200422', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200422', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200422', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200422" 
                     , CASE WHEN SUM(DECODE(DAY, '20200423', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200423', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200423', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200423" 
                     , CASE WHEN SUM(DECODE(DAY, '20200424', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200424', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200424', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200424" 
                     , CASE WHEN SUM(DECODE(DAY, '20200425', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200425', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200425', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200425" 
                     , CASE WHEN SUM(DECODE(DAY, '20200426', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200426', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200426', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200426" 
                     , CASE WHEN SUM(DECODE(DAY, '20200427', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200427', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200427', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200427" 
                     , CASE WHEN SUM(DECODE(DAY, '20200428', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200428', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200428', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200428" 
                     , CASE WHEN SUM(DECODE(DAY, '20200429', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200429', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200429', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200429" 
                     , CASE WHEN SUM(DECODE(DAY, '20200430', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200430', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200430', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200430" 
                     , CASE WHEN SUM(DECODE(DAY, '20200501', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200501', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200501', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200501" 
                     , CASE WHEN SUM(DECODE(DAY, '20200502', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200502', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200502', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200502" 
                     , CASE WHEN SUM(DECODE(DAY, '20200503', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200503', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200503', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200503" 
                     , CASE WHEN SUM(DECODE(DAY, '20200504', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200504', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200504', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200504" 
                     , CASE WHEN SUM(DECODE(DAY, '20200505', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200505', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200505', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200505" 
                     , CASE WHEN SUM(DECODE(DAY, '20200506', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200506', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200506', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200506" 
                     , CASE WHEN SUM(DECODE(DAY, '20200507', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200507', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200507', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200507" 
                     , CASE WHEN SUM(DECODE(DAY, '20200508', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200508', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200508', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200508" 
                     , CASE WHEN SUM(DECODE(DAY, '20200509', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200509', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200509', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200509" 
                     , CASE WHEN SUM(DECODE(DAY, '20200510', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200510', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200510', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200510" 
                     , CASE WHEN SUM(DECODE(DAY, '20200511', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200511', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200511', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200511" 
                     , CASE WHEN SUM(DECODE(DAY, '20200512', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200512', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200512', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200512" 
                     , CASE WHEN SUM(DECODE(DAY, '20200513', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200513', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200513', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200513" 
                     , CASE WHEN SUM(DECODE(DAY, '20200514', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200514', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200514', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200514" 
                     , CASE WHEN SUM(DECODE(DAY, '20200515', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200515', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200515', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200515" 
                     , CASE WHEN SUM(DECODE(DAY, '20200516', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200516', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200516', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200516" 
                     , CASE WHEN SUM(DECODE(DAY, '20200517', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200517', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200517', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200517" 
                     , CASE WHEN SUM(DECODE(DAY, '20200518', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200518', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200518', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200518" 
                     , CASE WHEN SUM(DECODE(DAY, '20200519', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200519', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200519', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200519" 
                     , CASE WHEN SUM(DECODE(DAY, '20200520', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200520', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200520', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200520" 
                     , CASE WHEN SUM(DECODE(DAY, '20200521', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200521', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200521', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200521" 
                     , CASE WHEN SUM(DECODE(DAY, '20200522', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200522', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200522', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200522" 
                     , CASE WHEN SUM(DECODE(DAY, '20200523', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200523', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200523', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200523" 
                     , CASE WHEN SUM(DECODE(DAY, '20200524', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200524', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200524', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200524" 
                     , CASE WHEN SUM(DECODE(DAY, '20200525', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200525', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200525', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200525" 
                     , CASE WHEN SUM(DECODE(DAY, '20200526', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200526', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200526', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200526" 
                     , CASE WHEN SUM(DECODE(DAY, '20200527', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200527', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200527', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200527" 
                     , CASE WHEN SUM(DECODE(DAY, '20200528', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200528', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200528', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200528" 
                     , CASE WHEN SUM(DECODE(DAY, '20200529', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200529', (START_- END_-CV_))) / SUM(DECODE(DAY, '20200529', START_,0)) * 100,0) 
                       END AS "FAIL_RATE_20200529" 
                     , CASE WHEN SUM(DECODE(DAY, '20200401', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200401', (CV_))) / SUM(DECODE(DAY, '20200401', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200401" 
                     , CASE WHEN SUM(DECODE(DAY, '20200402', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200402', (CV_))) / SUM(DECODE(DAY, '20200402', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200402" 
                     , CASE WHEN SUM(DECODE(DAY, '20200403', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200403', (CV_))) / SUM(DECODE(DAY, '20200403', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200403" 
                     , CASE WHEN SUM(DECODE(DAY, '20200404', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200404', (CV_))) / SUM(DECODE(DAY, '20200404', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200404" 
                     , CASE WHEN SUM(DECODE(DAY, '20200405', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200405', (CV_))) / SUM(DECODE(DAY, '20200405', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200405" 
                     , CASE WHEN SUM(DECODE(DAY, '20200406', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200406', (CV_))) / SUM(DECODE(DAY, '20200406', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200406" 
                     , CASE WHEN SUM(DECODE(DAY, '20200407', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200407', (CV_))) / SUM(DECODE(DAY, '20200407', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200407" 
                     , CASE WHEN SUM(DECODE(DAY, '20200408', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200408', (CV_))) / SUM(DECODE(DAY, '20200408', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200408" 
                     , CASE WHEN SUM(DECODE(DAY, '20200409', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200409', (CV_))) / SUM(DECODE(DAY, '20200409', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200409" 
                     , CASE WHEN SUM(DECODE(DAY, '20200410', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200410', (CV_))) / SUM(DECODE(DAY, '20200410', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200410" 
                     , CASE WHEN SUM(DECODE(DAY, '20200411', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200411', (CV_))) / SUM(DECODE(DAY, '20200411', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200411" 
                     , CASE WHEN SUM(DECODE(DAY, '20200412', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200412', (CV_))) / SUM(DECODE(DAY, '20200412', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200412" 
                     , CASE WHEN SUM(DECODE(DAY, '20200413', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200413', (CV_))) / SUM(DECODE(DAY, '20200413', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200413" 
                     , CASE WHEN SUM(DECODE(DAY, '20200414', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200414', (CV_))) / SUM(DECODE(DAY, '20200414', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200414" 
                     , CASE WHEN SUM(DECODE(DAY, '20200415', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200415', (CV_))) / SUM(DECODE(DAY, '20200415', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200415" 
                     , CASE WHEN SUM(DECODE(DAY, '20200416', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200416', (CV_))) / SUM(DECODE(DAY, '20200416', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200416" 
                     , CASE WHEN SUM(DECODE(DAY, '20200417', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200417', (CV_))) / SUM(DECODE(DAY, '20200417', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200417" 
                     , CASE WHEN SUM(DECODE(DAY, '20200418', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200418', (CV_))) / SUM(DECODE(DAY, '20200418', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200418" 
                     , CASE WHEN SUM(DECODE(DAY, '20200419', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200419', (CV_))) / SUM(DECODE(DAY, '20200419', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200419" 
                     , CASE WHEN SUM(DECODE(DAY, '20200420', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200420', (CV_))) / SUM(DECODE(DAY, '20200420', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200420" 
                     , CASE WHEN SUM(DECODE(DAY, '20200421', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200421', (CV_))) / SUM(DECODE(DAY, '20200421', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200421" 
                     , CASE WHEN SUM(DECODE(DAY, '20200422', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200422', (CV_))) / SUM(DECODE(DAY, '20200422', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200422" 
                     , CASE WHEN SUM(DECODE(DAY, '20200423', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200423', (CV_))) / SUM(DECODE(DAY, '20200423', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200423" 
                     , CASE WHEN SUM(DECODE(DAY, '20200424', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200424', (CV_))) / SUM(DECODE(DAY, '20200424', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200424" 
                     , CASE WHEN SUM(DECODE(DAY, '20200425', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200425', (CV_))) / SUM(DECODE(DAY, '20200425', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200425" 
                     , CASE WHEN SUM(DECODE(DAY, '20200426', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200426', (CV_))) / SUM(DECODE(DAY, '20200426', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200426" 
                     , CASE WHEN SUM(DECODE(DAY, '20200427', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200427', (CV_))) / SUM(DECODE(DAY, '20200427', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200427" 
                     , CASE WHEN SUM(DECODE(DAY, '20200428', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200428', (CV_))) / SUM(DECODE(DAY, '20200428', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200428" 
                     , CASE WHEN SUM(DECODE(DAY, '20200429', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200429', (CV_))) / SUM(DECODE(DAY, '20200429', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200429" 
                     , CASE WHEN SUM(DECODE(DAY, '20200430', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200430', (CV_))) / SUM(DECODE(DAY, '20200430', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200430" 
                     , CASE WHEN SUM(DECODE(DAY, '20200501', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200501', (CV_))) / SUM(DECODE(DAY, '20200501', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200501" 
                     , CASE WHEN SUM(DECODE(DAY, '20200502', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200502', (CV_))) / SUM(DECODE(DAY, '20200502', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200502" 
                     , CASE WHEN SUM(DECODE(DAY, '20200503', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200503', (CV_))) / SUM(DECODE(DAY, '20200503', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200503" 
                     , CASE WHEN SUM(DECODE(DAY, '20200504', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200504', (CV_))) / SUM(DECODE(DAY, '20200504', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200504" 
                     , CASE WHEN SUM(DECODE(DAY, '20200505', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200505', (CV_))) / SUM(DECODE(DAY, '20200505', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200505" 
                     , CASE WHEN SUM(DECODE(DAY, '20200506', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200506', (CV_))) / SUM(DECODE(DAY, '20200506', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200506" 
                     , CASE WHEN SUM(DECODE(DAY, '20200507', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200507', (CV_))) / SUM(DECODE(DAY, '20200507', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200507" 
                     , CASE WHEN SUM(DECODE(DAY, '20200508', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200508', (CV_))) / SUM(DECODE(DAY, '20200508', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200508" 
                     , CASE WHEN SUM(DECODE(DAY, '20200509', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200509', (CV_))) / SUM(DECODE(DAY, '20200509', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200509" 
                     , CASE WHEN SUM(DECODE(DAY, '20200510', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200510', (CV_))) / SUM(DECODE(DAY, '20200510', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200510" 
                     , CASE WHEN SUM(DECODE(DAY, '20200511', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200511', (CV_))) / SUM(DECODE(DAY, '20200511', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200511" 
                     , CASE WHEN SUM(DECODE(DAY, '20200512', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200512', (CV_))) / SUM(DECODE(DAY, '20200512', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200512" 
                     , CASE WHEN SUM(DECODE(DAY, '20200513', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200513', (CV_))) / SUM(DECODE(DAY, '20200513', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200513" 
                     , CASE WHEN SUM(DECODE(DAY, '20200514', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200514', (CV_))) / SUM(DECODE(DAY, '20200514', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200514" 
                     , CASE WHEN SUM(DECODE(DAY, '20200515', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200515', (CV_))) / SUM(DECODE(DAY, '20200515', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200515" 
                     , CASE WHEN SUM(DECODE(DAY, '20200516', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200516', (CV_))) / SUM(DECODE(DAY, '20200516', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200516" 
                     , CASE WHEN SUM(DECODE(DAY, '20200517', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200517', (CV_))) / SUM(DECODE(DAY, '20200517', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200517" 
                     , CASE WHEN SUM(DECODE(DAY, '20200518', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200518', (CV_))) / SUM(DECODE(DAY, '20200518', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200518" 
                     , CASE WHEN SUM(DECODE(DAY, '20200519', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200519', (CV_))) / SUM(DECODE(DAY, '20200519', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200519" 
                     , CASE WHEN SUM(DECODE(DAY, '20200520', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200520', (CV_))) / SUM(DECODE(DAY, '20200520', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200520" 
                     , CASE WHEN SUM(DECODE(DAY, '20200521', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200521', (CV_))) / SUM(DECODE(DAY, '20200521', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200521" 
                     , CASE WHEN SUM(DECODE(DAY, '20200522', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200522', (CV_))) / SUM(DECODE(DAY, '20200522', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200522" 
                     , CASE WHEN SUM(DECODE(DAY, '20200523', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200523', (CV_))) / SUM(DECODE(DAY, '20200523', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200523" 
                     , CASE WHEN SUM(DECODE(DAY, '20200524', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200524', (CV_))) / SUM(DECODE(DAY, '20200524', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200524" 
                     , CASE WHEN SUM(DECODE(DAY, '20200525', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200525', (CV_))) / SUM(DECODE(DAY, '20200525', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200525" 
                     , CASE WHEN SUM(DECODE(DAY, '20200526', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200526', (CV_))) / SUM(DECODE(DAY, '20200526', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200526" 
                     , CASE WHEN SUM(DECODE(DAY, '20200527', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200527', (CV_))) / SUM(DECODE(DAY, '20200527', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200527" 
                     , CASE WHEN SUM(DECODE(DAY, '20200528', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200528', (CV_))) / SUM(DECODE(DAY, '20200528', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200528" 
                     , CASE WHEN SUM(DECODE(DAY, '20200529', START_,0)) = 0 THEN 0 
                            ELSE ROUND(SUM(DECODE(DAY, '20200529', (CV_))) / SUM(DECODE(DAY, '20200529', START_,0)) * 100,0) 
                       END AS "CV_RATE_20200529" 
                     , SUM(LOT_CNT) AS LOT_CNT_TOTAL 
                     , SUM(START_) AS START_TOTAL 
                     , SUM(END_) AS END_TOTAL 
                     , SUM(CV_) AS CV_TOTAL 
                     , ROUND(SUM(START_)/SUM(LOT_CNT)*100,0) AS START_RATE_TOTAL 
                     , ROUND(NVL((SUM(START_)-SUM(END_)-SUM(CV_))/DECODE(SUM(START_),0,NULL,SUM(START_))*100,0),0) AS FAIL_RATE_TOTAL 
                     , ROUND(NVL(SUM(CV_)/DECODE(SUM(START_),0,NULL,SUM(START_))*100,0),0) AS CV_RATE_TOTAL 
                  FROM ( 
                        SELECT LOTHIS.MAT_ID 
                             , LOTHIS.OPER 
                             , DAY 
                             , SUM(LOT_CNT) AS LOT_CNT 
                             , SUM(CASE WHEN LOTHIS.OPER LIKE 'A040%' THEN (CASE WHEN (START_LOT.TRAN_CMF_4 = 'RFID TAG WRITE : SUCCESS') 
                                                                                   OR (START_LOT.RESV_FLAG_5 = 'Y' AND START_LOT.TRAN_USER_ID = 'EIS' AND START_LOT.TRAN_CMF_19 = 'RFID') 
                                                                                 THEN 1 
                                                                                 ELSE 0 
                                                                            END) 
                                         ELSE (CASE WHEN START_LOT.TRAN_CMF_19 = 'RFID' AND START_LOT.TRAN_USER_ID = 'EIS' THEN 1 ELSE 0 END) 
                               END) AS START_ 
                             , SUM(END_) AS END_ 
                             , SUM(CASE WHEN CV_ >= 1 THEN (CASE WHEN START_LOT.TRAN_CMF_19 = 'RFID' AND START_LOT.TRAN_USER_ID = 'EIS' THEN 1 ELSE 0 END) 
                                        ELSE 0 
                               END) AS CV_ 
                          FROM ( 
                                SELECT A.MAT_ID 
                                     , A.LOT_ID 
                                     , OLD_OPER AS OPER 
                                     , GET_WORK_DATE(TRAN_TIME, 'D') AS DAY 
                                     , SUM(CASE WHEN TRAN_CODE IN ('END','SHIP') THEN 1 ELSE 0 END) AS LOT_CNT 
                                     , SUM(CASE WHEN TRAN_CODE IN ('END', 'SHIP') AND RESV_FLAG_5 = 'Y' THEN CASE WHEN OLD_OPER LIKE 'A040%'AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS' THEN 1 
                                                                                                                  WHEN OLD_OPER LIKE 'A060%' AND TRAN_CMF_18 = 'EIS' AND TRAN_CMF_19 = 'RFID' AND TRAN_USER_ID = 'EIS' THEN 1 
                                                                                                                  ELSE 0 
                                                                                                             END 
                                                ELSE 0 
                                           END) AS END_ 
                                     , SUM(CASE WHEN RESV_FLAG_5 = 'Y' AND TRAN_CMF_17 NOT IN (' ', 'CV Different: 0 (Single)', 'CV Different: 0 (Multi)') THEN 1 ELSE 0 END) AS CV_ 
                                     , MIN(START_TIME) MIN_START 
                                  FROM RWIPLOTHIS A 
                                 WHERE 1=1 
                                   AND TRAN_TIME BETWEEN '20200331220000' AND '20200529215959' 
                                   AND OLD_FACTORY = 'HMVA2' 
                                   AND MAT_ID LIKE '%%' 
                                   AND TRAN_CODE IN ('END','SHIP') 
                                   AND LOT_TYPE = 'W' 
                                   AND HIST_DEL_FLAG = ' ' 
                                   AND REGEXP_LIKE(OLD_OPER, 'A040*|A060*|A1000') 
                                   AND END_RES_ID LIKE '%' 
                                 GROUP BY A.MAT_ID,A.LOT_ID, OLD_OPER, GET_WORK_DATE(TRAN_TIME, 'D') 
                                 ORDER BY A.MAT_ID, OLD_OPER 
                               ) LOTHIS 
                             , ( 
                                SELECT LOT_ID, TRAN_TIME, TRAN_CMF_4, TRAN_CMF_19, TRAN_USER_ID, RESV_FLAG_5 
                                  FROM RWIPLOTHIS 
                                 WHERE 1 = 1 
                                   AND MAT_ID LIKE '%%' 
                                   AND OLD_FACTORY = 'HMVA2' 
                                   AND LOT_TYPE = 'W' 
                                   AND HIST_DEL_FLAG = ' ' 
                                   AND TRAN_CODE = 'START' 
                               ) START_LOT 
                         WHERE LOTHIS.LOT_ID = START_LOT.LOT_ID 
                           AND LOTHIS.MIN_START = START_LOT.TRAN_TIME 
                         GROUP BY LOTHIS.MAT_ID, DAY,  LOTHIS.OPER 
                       ) A 
                     , ( 
                        SELECT MAT.* 
                          FROM MWIPMATDEF MAT 
                             , MGCMTBLDAT GCM 
                         WHERE 1 = 1 
                             AND GCM.TABLE_NAME = 'H_RFID_MAT' 
                             AND GCM.DATA_1 = 'Y' 
                             AND MAT.MAT_CMF_11 = GCM.KEY_1 
                       ) MAT 
                 WHERE 1=1 
                   AND A.MAT_ID = MAT.MAT_ID 
                   AND MAT.FACTORY = 'HMVA2' 
                   AND MAT.MAT_TYPE = 'FG' 
                 GROUP BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'HH', 9, 3), MAT_GRP_1,  ' ',  ' ', MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.MAT_CMF_11,  ' ', OPER 
                 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'HH', 9, 3), MAT_GRP_1,  ' ',  ' ', MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.MAT_CMF_11,  ' ', OPER 
               ) LOTHIS 
             , ( 
                SELECT 'LOT QTY' AS GUBUN FROM DUAL 
                 UNION ALL 
                SELECT 'START' FROM DUAL 
                 UNION ALL 
                SELECT 'END' FROM DUAL 
                 UNION ALL 
                SELECT 'START_RATE' FROM DUAL 
                 UNION ALL 
                SELECT 'FAIL_RATE' FROM DUAL 
                 UNION ALL 
                SELECT 'CV_RATE' FROM DUAL 
               ) DUMMY 
       ) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200527000000' AND '20200529235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200529' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%')  
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%')  
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE, A.MAT_ID, B.MAT_DESC, ' ' 
     , SUM(DECODE(OPER, 'M0110', BOH_QTY,0)) BOH_QTY0
     , SUM(DECODE(OPER, 'M0120', BOH_QTY,0)) BOH_QTY1
     , SUM(DECODE(OPER, 'M0160', BOH_QTY,0)) BOH_QTY2
     , SUM(DECODE(OPER, 'M0161', BOH_QTY,0)) BOH_QTY3
     , SUM(DECODE(OPER, 'M0300', BOH_QTY,0)) BOH_QTY4
     , SUM(DECODE(OPER, 'M0315', BOH_QTY,0)) BOH_QTY5
     , SUM(DECODE(OPER, 'M0320', BOH_QTY,0)) BOH_QTY6
     , SUM(DECODE(OPER, 'M0323', BOH_QTY,0)) BOH_QTY7
     , SUM(DECODE(OPER, 'M0325', BOH_QTY,0)) BOH_QTY8
     , SUM(DECODE(OPER, 'M0329', BOH_QTY,0)) BOH_QTY9
     , SUM(DECODE(OPER, 'M0330', BOH_QTY,0)) BOH_QTY10
     , SUM(DECODE(OPER, 'M0336', BOH_QTY,0)) BOH_QTY11
     , SUM(DECODE(OPER, 'M0337', BOH_QTY,0)) BOH_QTY12
     , SUM(DECODE(OPER, 'M0339', BOH_QTY,0)) BOH_QTY13
     , SUM(DECODE(OPER, 'M0340', BOH_QTY,0)) BOH_QTY14
     , SUM(DECODE(OPER, 'M0345', BOH_QTY,0)) BOH_QTY15
     , SUM(DECODE(OPER, 'M0391', BOH_QTY,0)) BOH_QTY16
     , SUM(DECODE(OPER, 'M0400', BOH_QTY,0)) BOH_QTY17
     , SUM(DECODE(OPER, 'M0401', BOH_QTY,0)) BOH_QTY18
     , SUM(DECODE(OPER, 'M0500', BOH_QTY,0)) BOH_QTY19
     , SUM(DECODE(OPER, 'M0550', BOH_QTY,0)) BOH_QTY20
     , SUM(DECODE(OPER, 'M1750', BOH_QTY,0)) BOH_QTY21
     , SUM(DECODE(OPER, 'V0000', BOH_QTY,0)) BOH_QTY22
     , SUM(DECODE(OPER, 'V0013', BOH_QTY,0)) BOH_QTY23
     , SUM(DECODE(OPER, 'V0020', BOH_QTY,0)) BOH_QTY24
     , SUM(DECODE(OPER, 'V0040', BOH_QTY,0)) BOH_QTY25
     , SUM(DECODE(OPER, 'V0055', BOH_QTY,0)) BOH_QTY26
     , SUM(DECODE(OPER, 'V0065', BOH_QTY,0)) BOH_QTY27
     , SUM(DECODE(OPER, 'V0090', BOH_QTY,0)) BOH_QTY28
     , SUM(DECODE(OPER, 'V0100', BOH_QTY,0)) BOH_QTY29
     , SUM(DECODE(OPER, 'V0110', BOH_QTY,0)) BOH_QTY30
     , SUM(DECODE(OPER, 'V0120', BOH_QTY,0)) BOH_QTY31
     , SUM(DECODE(OPER, 'V0130', BOH_QTY,0)) BOH_QTY32
     , SUM(DECODE(OPER, 'V0160', BOH_QTY,0)) BOH_QTY33
     , SUM(DECODE(OPER, 'V0161', BOH_QTY,0)) BOH_QTY34
     , SUM(DECODE(OPER, 'V0165', BOH_QTY,0)) BOH_QTY35
     , SUM(DECODE(OPER, 'V0175', BOH_QTY,0)) BOH_QTY36
     , SUM(DECODE(OPER, 'V0200', BOH_QTY,0)) BOH_QTY37
     , SUM(DECODE(OPER, 'V0300', BOH_QTY,0)) BOH_QTY38
     , SUM(DECODE(OPER, 'V0305', BOH_QTY,0)) BOH_QTY39
     , SUM(DECODE(OPER, 'V0310', BOH_QTY,0)) BOH_QTY40
     , SUM(DECODE(OPER, 'V0311', BOH_QTY,0)) BOH_QTY41
     , SUM(DECODE(OPER, 'V0315', BOH_QTY,0)) BOH_QTY42
     , SUM(DECODE(OPER, 'V0319', BOH_QTY,0)) BOH_QTY43
     , SUM(DECODE(OPER, 'V0320', BOH_QTY,0)) BOH_QTY44
     , SUM(DECODE(OPER, 'V0323', BOH_QTY,0)) BOH_QTY45
     , SUM(DECODE(OPER, 'V0327', BOH_QTY,0)) BOH_QTY46
     , SUM(DECODE(OPER, 'V0330', BOH_QTY,0)) BOH_QTY47
     , SUM(DECODE(OPER, 'V0331', BOH_QTY,0)) BOH_QTY48
     , SUM(DECODE(OPER, 'V0333', BOH_QTY,0)) BOH_QTY49
     , SUM(DECODE(OPER, 'V0334', BOH_QTY,0)) BOH_QTY50
     , SUM(DECODE(OPER, 'V0340', BOH_QTY,0)) BOH_QTY51
     , SUM(DECODE(OPER, 'V0350', BOH_QTY,0)) BOH_QTY52
     , SUM(DECODE(OPER, 'V0360', BOH_QTY,0)) BOH_QTY53
     , SUM(DECODE(OPER, 'V0370', BOH_QTY,0)) BOH_QTY54
     , SUM(DECODE(OPER, 'V0380', BOH_QTY,0)) BOH_QTY55
     , SUM(DECODE(OPER, 'V0390', BOH_QTY,0)) BOH_QTY56
     , SUM(DECODE(OPER, 'V0391', BOH_QTY,0)) BOH_QTY57
     , SUM(DECODE(OPER, 'V0400', BOH_QTY,0)) BOH_QTY58
     , SUM(DECODE(OPER, 'V0530', BOH_QTY,0)) BOH_QTY59
     , SUM(DECODE(OPER, 'V0600', BOH_QTY,0)) BOH_QTY60
     , SUM(DECODE(OPER, 'V0601', BOH_QTY,0)) BOH_QTY61
     , SUM(DECODE(OPER, 'V0660', BOH_QTY,0)) BOH_QTY62
     , SUM(DECODE(OPER, 'V0910', BOH_QTY,0)) BOH_QTY63
     , SUM(DECODE(OPER, 'V0930', BOH_QTY,0)) BOH_QTY64
     , SUM(DECODE(OPER, 'V1000', BOH_QTY,0)) BOH_QTY65
     , SUM(DECODE(OPER, 'V1001', BOH_QTY,0)) BOH_QTY66
     , SUM(DECODE(OPER, 'V1300', BOH_QTY,0)) BOH_QTY67
     , SUM(DECODE(OPER, 'V1301', BOH_QTY,0)) BOH_QTY68
     , SUM(DECODE(OPER, 'V1750', BOH_QTY,0)) BOH_QTY69
     , SUM(DECODE(OPER, 'V1800', BOH_QTY,0)) BOH_QTY70
     , SUM(DECODE(OPER, 'M0110', IN_QTY,0)) IN_QTY0
     , SUM(DECODE(OPER, 'M0120', IN_QTY,0)) IN_QTY1
     , SUM(DECODE(OPER, 'M0160', IN_QTY,0)) IN_QTY2
     , SUM(DECODE(OPER, 'M0161', IN_QTY,0)) IN_QTY3
     , SUM(DECODE(OPER, 'M0300', IN_QTY,0)) IN_QTY4
     , SUM(DECODE(OPER, 'M0315', IN_QTY,0)) IN_QTY5
     , SUM(DECODE(OPER, 'M0320', IN_QTY,0)) IN_QTY6
     , SUM(DECODE(OPER, 'M0323', IN_QTY,0)) IN_QTY7
     , SUM(DECODE(OPER, 'M0325', IN_QTY,0)) IN_QTY8
     , SUM(DECODE(OPER, 'M0329', IN_QTY,0)) IN_QTY9
     , SUM(DECODE(OPER, 'M0330', IN_QTY,0)) IN_QTY10
     , SUM(DECODE(OPER, 'M0336', IN_QTY,0)) IN_QTY11
     , SUM(DECODE(OPER, 'M0337', IN_QTY,0)) IN_QTY12
     , SUM(DECODE(OPER, 'M0339', IN_QTY,0)) IN_QTY13
     , SUM(DECODE(OPER, 'M0340', IN_QTY,0)) IN_QTY14
     , SUM(DECODE(OPER, 'M0345', IN_QTY,0)) IN_QTY15
     , SUM(DECODE(OPER, 'M0391', IN_QTY,0)) IN_QTY16
     , SUM(DECODE(OPER, 'M0400', IN_QTY,0)) IN_QTY17
     , SUM(DECODE(OPER, 'M0401', IN_QTY,0)) IN_QTY18
     , SUM(DECODE(OPER, 'M0500', IN_QTY,0)) IN_QTY19
     , SUM(DECODE(OPER, 'M0550', IN_QTY,0)) IN_QTY20
     , SUM(DECODE(OPER, 'M1750', IN_QTY,0)) IN_QTY21
     , SUM(DECODE(OPER, 'V0000', IN_QTY,0)) IN_QTY22
     , SUM(DECODE(OPER, 'V0013', IN_QTY,0)) IN_QTY23
     , SUM(DECODE(OPER, 'V0020', IN_QTY,0)) IN_QTY24
     , SUM(DECODE(OPER, 'V0040', IN_QTY,0)) IN_QTY25
     , SUM(DECODE(OPER, 'V0055', IN_QTY,0)) IN_QTY26
     , SUM(DECODE(OPER, 'V0065', IN_QTY,0)) IN_QTY27
     , SUM(DECODE(OPER, 'V0090', IN_QTY,0)) IN_QTY28
     , SUM(DECODE(OPER, 'V0100', IN_QTY,0)) IN_QTY29
     , SUM(DECODE(OPER, 'V0110', IN_QTY,0)) IN_QTY30
     , SUM(DECODE(OPER, 'V0120', IN_QTY,0)) IN_QTY31
     , SUM(DECODE(OPER, 'V0130', IN_QTY,0)) IN_QTY32
     , SUM(DECODE(OPER, 'V0160', IN_QTY,0)) IN_QTY33
     , SUM(DECODE(OPER, 'V0161', IN_QTY,0)) IN_QTY34
     , SUM(DECODE(OPER, 'V0165', IN_QTY,0)) IN_QTY35
     , SUM(DECODE(OPER, 'V0175', IN_QTY,0)) IN_QTY36
     , SUM(DECODE(OPER, 'V0200', IN_QTY,0)) IN_QTY37
     , SUM(DECODE(OPER, 'V0300', IN_QTY,0)) IN_QTY38
     , SUM(DECODE(OPER, 'V0305', IN_QTY,0)) IN_QTY39
     , SUM(DECODE(OPER, 'V0310', IN_QTY,0)) IN_QTY40
     , SUM(DECODE(OPER, 'V0311', IN_QTY,0)) IN_QTY41
     , SUM(DECODE(OPER, 'V0315', IN_QTY,0)) IN_QTY42
     , SUM(DECODE(OPER, 'V0319', IN_QTY,0)) IN_QTY43
     , SUM(DECODE(OPER, 'V0320', IN_QTY,0)) IN_QTY44
     , SUM(DECODE(OPER, 'V0323', IN_QTY,0)) IN_QTY45
     , SUM(DECODE(OPER, 'V0327', IN_QTY,0)) IN_QTY46
     , SUM(DECODE(OPER, 'V0330', IN_QTY,0)) IN_QTY47
     , SUM(DECODE(OPER, 'V0331', IN_QTY,0)) IN_QTY48
     , SUM(DECODE(OPER, 'V0333', IN_QTY,0)) IN_QTY49
     , SUM(DECODE(OPER, 'V0334', IN_QTY,0)) IN_QTY50
     , SUM(DECODE(OPER, 'V0340', IN_QTY,0)) IN_QTY51
     , SUM(DECODE(OPER, 'V0350', IN_QTY,0)) IN_QTY52
     , SUM(DECODE(OPER, 'V0360', IN_QTY,0)) IN_QTY53
     , SUM(DECODE(OPER, 'V0370', IN_QTY,0)) IN_QTY54
     , SUM(DECODE(OPER, 'V0380', IN_QTY,0)) IN_QTY55
     , SUM(DECODE(OPER, 'V0390', IN_QTY,0)) IN_QTY56
     , SUM(DECODE(OPER, 'V0391', IN_QTY,0)) IN_QTY57
     , SUM(DECODE(OPER, 'V0400', IN_QTY,0)) IN_QTY58
     , SUM(DECODE(OPER, 'V0530', IN_QTY,0)) IN_QTY59
     , SUM(DECODE(OPER, 'V0600', IN_QTY,0)) IN_QTY60
     , SUM(DECODE(OPER, 'V0601', IN_QTY,0)) IN_QTY61
     , SUM(DECODE(OPER, 'V0660', IN_QTY,0)) IN_QTY62
     , SUM(DECODE(OPER, 'V0910', IN_QTY,0)) IN_QTY63
     , SUM(DECODE(OPER, 'V0930', IN_QTY,0)) IN_QTY64
     , SUM(DECODE(OPER, 'V1000', IN_QTY,0)) IN_QTY65
     , SUM(DECODE(OPER, 'V1001', IN_QTY,0)) IN_QTY66
     , SUM(DECODE(OPER, 'V1300', IN_QTY,0)) IN_QTY67
     , SUM(DECODE(OPER, 'V1301', IN_QTY,0)) IN_QTY68
     , SUM(DECODE(OPER, 'V1750', IN_QTY,0)) IN_QTY69
     , SUM(DECODE(OPER, 'V1800', IN_QTY,0)) IN_QTY70
     , SUM(DECODE(OPER, 'M0110', END_QTY,0)) END_QTY0
     , SUM(DECODE(OPER, 'M0120', END_QTY,0)) END_QTY1
     , SUM(DECODE(OPER, 'M0160', END_QTY,0)) END_QTY2
     , SUM(DECODE(OPER, 'M0161', END_QTY,0)) END_QTY3
     , SUM(DECODE(OPER, 'M0300', END_QTY,0)) END_QTY4
     , SUM(DECODE(OPER, 'M0315', END_QTY,0)) END_QTY5
     , SUM(DECODE(OPER, 'M0320', END_QTY,0)) END_QTY6
     , SUM(DECODE(OPER, 'M0323', END_QTY,0)) END_QTY7
     , SUM(DECODE(OPER, 'M0325', END_QTY,0)) END_QTY8
     , SUM(DECODE(OPER, 'M0329', END_QTY,0)) END_QTY9
     , SUM(DECODE(OPER, 'M0330', END_QTY,0)) END_QTY10
     , SUM(DECODE(OPER, 'M0336', END_QTY,0)) END_QTY11
     , SUM(DECODE(OPER, 'M0337', END_QTY,0)) END_QTY12
     , SUM(DECODE(OPER, 'M0339', END_QTY,0)) END_QTY13
     , SUM(DECODE(OPER, 'M0340', END_QTY,0)) END_QTY14
     , SUM(DECODE(OPER, 'M0345', END_QTY,0)) END_QTY15
     , SUM(DECODE(OPER, 'M0391', END_QTY,0)) END_QTY16
     , SUM(DECODE(OPER, 'M0400', END_QTY,0)) END_QTY17
     , SUM(DECODE(OPER, 'M0401', END_QTY,0)) END_QTY18
     , SUM(DECODE(OPER, 'M0500', END_QTY,0)) END_QTY19
     , SUM(DECODE(OPER, 'M0550', END_QTY,0)) END_QTY20
     , SUM(DECODE(OPER, 'M1750', END_QTY,0)) END_QTY21
     , SUM(DECODE(OPER, 'V0000', END_QTY,0)) END_QTY22
     , SUM(DECODE(OPER, 'V0013', END_QTY,0)) END_QTY23
     , SUM(DECODE(OPER, 'V0020', END_QTY,0)) END_QTY24
     , SUM(DECODE(OPER, 'V0040', END_QTY,0)) END_QTY25
     , SUM(DECODE(OPER, 'V0055', END_QTY,0)) END_QTY26
     , SUM(DECODE(OPER, 'V0065', END_QTY,0)) END_QTY27
     , SUM(DECODE(OPER, 'V0090', END_QTY,0)) END_QTY28
     , SUM(DECODE(OPER, 'V0100', END_QTY,0)) END_QTY29
     , SUM(DECODE(OPER, 'V0110', END_QTY,0)) END_QTY30
     , SUM(DECODE(OPER, 'V0120', END_QTY,0)) END_QTY31
     , SUM(DECODE(OPER, 'V0130', END_QTY,0)) END_QTY32
     , SUM(DECODE(OPER, 'V0160', END_QTY,0)) END_QTY33
     , SUM(DECODE(OPER, 'V0161', END_QTY,0)) END_QTY34
     , SUM(DECODE(OPER, 'V0165', END_QTY,0)) END_QTY35
     , SUM(DECODE(OPER, 'V0175', END_QTY,0)) END_QTY36
     , SUM(DECODE(OPER, 'V0200', END_QTY,0)) END_QTY37
     , SUM(DECODE(OPER, 'V0300', END_QTY,0)) END_QTY38
     , SUM(DECODE(OPER, 'V0305', END_QTY,0)) END_QTY39
     , SUM(DECODE(OPER, 'V0310', END_QTY,0)) END_QTY40
     , SUM(DECODE(OPER, 'V0311', END_QTY,0)) END_QTY41
     , SUM(DECODE(OPER, 'V0315', END_QTY,0)) END_QTY42
     , SUM(DECODE(OPER, 'V0319', END_QTY,0)) END_QTY43
     , SUM(DECODE(OPER, 'V0320', END_QTY,0)) END_QTY44
     , SUM(DECODE(OPER, 'V0323', END_QTY,0)) END_QTY45
     , SUM(DECODE(OPER, 'V0327', END_QTY,0)) END_QTY46
     , SUM(DECODE(OPER, 'V0330', END_QTY,0)) END_QTY47
     , SUM(DECODE(OPER, 'V0331', END_QTY,0)) END_QTY48
     , SUM(DECODE(OPER, 'V0333', END_QTY,0)) END_QTY49
     , SUM(DECODE(OPER, 'V0334', END_QTY,0)) END_QTY50
     , SUM(DECODE(OPER, 'V0340', END_QTY,0)) END_QTY51
     , SUM(DECODE(OPER, 'V0350', END_QTY,0)) END_QTY52
     , SUM(DECODE(OPER, 'V0360', END_QTY,0)) END_QTY53
     , SUM(DECODE(OPER, 'V0370', END_QTY,0)) END_QTY54
     , SUM(DECODE(OPER, 'V0380', END_QTY,0)) END_QTY55
     , SUM(DECODE(OPER, 'V0390', END_QTY,0)) END_QTY56
     , SUM(DECODE(OPER, 'V0391', END_QTY,0)) END_QTY57
     , SUM(DECODE(OPER, 'V0400', END_QTY,0)) END_QTY58
     , SUM(DECODE(OPER, 'V0530', END_QTY,0)) END_QTY59
     , SUM(DECODE(OPER, 'V0600', END_QTY,0)) END_QTY60
     , SUM(DECODE(OPER, 'V0601', END_QTY,0)) END_QTY61
     , SUM(DECODE(OPER, 'V0660', END_QTY,0)) END_QTY62
     , SUM(DECODE(OPER, 'V0910', END_QTY,0)) END_QTY63
     , SUM(DECODE(OPER, 'V0930', END_QTY,0)) END_QTY64
     , SUM(DECODE(OPER, 'V1000', END_QTY,0)) END_QTY65
     , SUM(DECODE(OPER, 'V1001', END_QTY,0)) END_QTY66
     , SUM(DECODE(OPER, 'V1300', END_QTY,0)) END_QTY67
     , SUM(DECODE(OPER, 'V1301', END_QTY,0)) END_QTY68
     , SUM(DECODE(OPER, 'V1750', END_QTY,0)) END_QTY69
     , SUM(DECODE(OPER, 'V1800', END_QTY,0)) END_QTY70
     , SUM(DECODE(OPER, 'M0110', EOH_QTY,0)) EOH_QTY0
     , SUM(DECODE(OPER, 'M0120', EOH_QTY,0)) EOH_QTY1
     , SUM(DECODE(OPER, 'M0160', EOH_QTY,0)) EOH_QTY2
     , SUM(DECODE(OPER, 'M0161', EOH_QTY,0)) EOH_QTY3
     , SUM(DECODE(OPER, 'M0300', EOH_QTY,0)) EOH_QTY4
     , SUM(DECODE(OPER, 'M0315', EOH_QTY,0)) EOH_QTY5
     , SUM(DECODE(OPER, 'M0320', EOH_QTY,0)) EOH_QTY6
     , SUM(DECODE(OPER, 'M0323', EOH_QTY,0)) EOH_QTY7
     , SUM(DECODE(OPER, 'M0325', EOH_QTY,0)) EOH_QTY8
     , SUM(DECODE(OPER, 'M0329', EOH_QTY,0)) EOH_QTY9
     , SUM(DECODE(OPER, 'M0330', EOH_QTY,0)) EOH_QTY10
     , SUM(DECODE(OPER, 'M0336', EOH_QTY,0)) EOH_QTY11
     , SUM(DECODE(OPER, 'M0337', EOH_QTY,0)) EOH_QTY12
     , SUM(DECODE(OPER, 'M0339', EOH_QTY,0)) EOH_QTY13
     , SUM(DECODE(OPER, 'M0340', EOH_QTY,0)) EOH_QTY14
     , SUM(DECODE(OPER, 'M0345', EOH_QTY,0)) EOH_QTY15
     , SUM(DECODE(OPER, 'M0391', EOH_QTY,0)) EOH_QTY16
     , SUM(DECODE(OPER, 'M0400', EOH_QTY,0)) EOH_QTY17
     , SUM(DECODE(OPER, 'M0401', EOH_QTY,0)) EOH_QTY18
     , SUM(DECODE(OPER, 'M0500', EOH_QTY,0)) EOH_QTY19
     , SUM(DECODE(OPER, 'M0550', EOH_QTY,0)) EOH_QTY20
     , SUM(DECODE(OPER, 'M1750', EOH_QTY,0)) EOH_QTY21
     , SUM(DECODE(OPER, 'V0000', EOH_QTY,0)) EOH_QTY22
     , SUM(DECODE(OPER, 'V0013', EOH_QTY,0)) EOH_QTY23
     , SUM(DECODE(OPER, 'V0020', EOH_QTY,0)) EOH_QTY24
     , SUM(DECODE(OPER, 'V0040', EOH_QTY,0)) EOH_QTY25
     , SUM(DECODE(OPER, 'V0055', EOH_QTY,0)) EOH_QTY26
     , SUM(DECODE(OPER, 'V0065', EOH_QTY,0)) EOH_QTY27
     , SUM(DECODE(OPER, 'V0090', EOH_QTY,0)) EOH_QTY28
     , SUM(DECODE(OPER, 'V0100', EOH_QTY,0)) EOH_QTY29
     , SUM(DECODE(OPER, 'V0110', EOH_QTY,0)) EOH_QTY30
     , SUM(DECODE(OPER, 'V0120', EOH_QTY,0)) EOH_QTY31
     , SUM(DECODE(OPER, 'V0130', EOH_QTY,0)) EOH_QTY32
     , SUM(DECODE(OPER, 'V0160', EOH_QTY,0)) EOH_QTY33
     , SUM(DECODE(OPER, 'V0161', EOH_QTY,0)) EOH_QTY34
     , SUM(DECODE(OPER, 'V0165', EOH_QTY,0)) EOH_QTY35
     , SUM(DECODE(OPER, 'V0175', EOH_QTY,0)) EOH_QTY36
     , SUM(DECODE(OPER, 'V0200', EOH_QTY,0)) EOH_QTY37
     , SUM(DECODE(OPER, 'V0300', EOH_QTY,0)) EOH_QTY38
     , SUM(DECODE(OPER, 'V0305', EOH_QTY,0)) EOH_QTY39
     , SUM(DECODE(OPER, 'V0310', EOH_QTY,0)) EOH_QTY40
     , SUM(DECODE(OPER, 'V0311', EOH_QTY,0)) EOH_QTY41
     , SUM(DECODE(OPER, 'V0315', EOH_QTY,0)) EOH_QTY42
     , SUM(DECODE(OPER, 'V0319', EOH_QTY,0)) EOH_QTY43
     , SUM(DECODE(OPER, 'V0320', EOH_QTY,0)) EOH_QTY44
     , SUM(DECODE(OPER, 'V0323', EOH_QTY,0)) EOH_QTY45
     , SUM(DECODE(OPER, 'V0327', EOH_QTY,0)) EOH_QTY46
     , SUM(DECODE(OPER, 'V0330', EOH_QTY,0)) EOH_QTY47
     , SUM(DECODE(OPER, 'V0331', EOH_QTY,0)) EOH_QTY48
     , SUM(DECODE(OPER, 'V0333', EOH_QTY,0)) EOH_QTY49
     , SUM(DECODE(OPER, 'V0334', EOH_QTY,0)) EOH_QTY50
     , SUM(DECODE(OPER, 'V0340', EOH_QTY,0)) EOH_QTY51
     , SUM(DECODE(OPER, 'V0350', EOH_QTY,0)) EOH_QTY52
     , SUM(DECODE(OPER, 'V0360', EOH_QTY,0)) EOH_QTY53
     , SUM(DECODE(OPER, 'V0370', EOH_QTY,0)) EOH_QTY54
     , SUM(DECODE(OPER, 'V0380', EOH_QTY,0)) EOH_QTY55
     , SUM(DECODE(OPER, 'V0390', EOH_QTY,0)) EOH_QTY56
     , SUM(DECODE(OPER, 'V0391', EOH_QTY,0)) EOH_QTY57
     , SUM(DECODE(OPER, 'V0400', EOH_QTY,0)) EOH_QTY58
     , SUM(DECODE(OPER, 'V0530', EOH_QTY,0)) EOH_QTY59
     , SUM(DECODE(OPER, 'V0600', EOH_QTY,0)) EOH_QTY60
     , SUM(DECODE(OPER, 'V0601', EOH_QTY,0)) EOH_QTY61
     , SUM(DECODE(OPER, 'V0660', EOH_QTY,0)) EOH_QTY62
     , SUM(DECODE(OPER, 'V0910', EOH_QTY,0)) EOH_QTY63
     , SUM(DECODE(OPER, 'V0930', EOH_QTY,0)) EOH_QTY64
     , SUM(DECODE(OPER, 'V1000', EOH_QTY,0)) EOH_QTY65
     , SUM(DECODE(OPER, 'V1001', EOH_QTY,0)) EOH_QTY66
     , SUM(DECODE(OPER, 'V1300', EOH_QTY,0)) EOH_QTY67
     , SUM(DECODE(OPER, 'V1301', EOH_QTY,0)) EOH_QTY68
     , SUM(DECODE(OPER, 'V1750', EOH_QTY,0)) EOH_QTY69
     , SUM(DECODE(OPER, 'V1800', EOH_QTY,0)) EOH_QTY70
     , SUM(DECODE(OPER, 'M0110', LOSS_QTY,0)) LOSS_QTY0
     , SUM(DECODE(OPER, 'M0120', LOSS_QTY,0)) LOSS_QTY1
     , SUM(DECODE(OPER, 'M0160', LOSS_QTY,0)) LOSS_QTY2
     , SUM(DECODE(OPER, 'M0161', LOSS_QTY,0)) LOSS_QTY3
     , SUM(DECODE(OPER, 'M0300', LOSS_QTY,0)) LOSS_QTY4
     , SUM(DECODE(OPER, 'M0315', LOSS_QTY,0)) LOSS_QTY5
     , SUM(DECODE(OPER, 'M0320', LOSS_QTY,0)) LOSS_QTY6
     , SUM(DECODE(OPER, 'M0323', LOSS_QTY,0)) LOSS_QTY7
     , SUM(DECODE(OPER, 'M0325', LOSS_QTY,0)) LOSS_QTY8
     , SUM(DECODE(OPER, 'M0329', LOSS_QTY,0)) LOSS_QTY9
     , SUM(DECODE(OPER, 'M0330', LOSS_QTY,0)) LOSS_QTY10
     , SUM(DECODE(OPER, 'M0336', LOSS_QTY,0)) LOSS_QTY11
     , SUM(DECODE(OPER, 'M0337', LOSS_QTY,0)) LOSS_QTY12
     , SUM(DECODE(OPER, 'M0339', LOSS_QTY,0)) LOSS_QTY13
     , SUM(DECODE(OPER, 'M0340', LOSS_QTY,0)) LOSS_QTY14
     , SUM(DECODE(OPER, 'M0345', LOSS_QTY,0)) LOSS_QTY15
     , SUM(DECODE(OPER, 'M0391', LOSS_QTY,0)) LOSS_QTY16
     , SUM(DECODE(OPER, 'M0400', LOSS_QTY,0)) LOSS_QTY17
     , SUM(DECODE(OPER, 'M0401', LOSS_QTY,0)) LOSS_QTY18
     , SUM(DECODE(OPER, 'M0500', LOSS_QTY,0)) LOSS_QTY19
     , SUM(DECODE(OPER, 'M0550', LOSS_QTY,0)) LOSS_QTY20
     , SUM(DECODE(OPER, 'M1750', LOSS_QTY,0)) LOSS_QTY21
     , SUM(DECODE(OPER, 'V0000', LOSS_QTY,0)) LOSS_QTY22
     , SUM(DECODE(OPER, 'V0013', LOSS_QTY,0)) LOSS_QTY23
     , SUM(DECODE(OPER, 'V0020', LOSS_QTY,0)) LOSS_QTY24
     , SUM(DECODE(OPER, 'V0040', LOSS_QTY,0)) LOSS_QTY25
     , SUM(DECODE(OPER, 'V0055', LOSS_QTY,0)) LOSS_QTY26
     , SUM(DECODE(OPER, 'V0065', LOSS_QTY,0)) LOSS_QTY27
     , SUM(DECODE(OPER, 'V0090', LOSS_QTY,0)) LOSS_QTY28
     , SUM(DECODE(OPER, 'V0100', LOSS_QTY,0)) LOSS_QTY29
     , SUM(DECODE(OPER, 'V0110', LOSS_QTY,0)) LOSS_QTY30
     , SUM(DECODE(OPER, 'V0120', LOSS_QTY,0)) LOSS_QTY31
     , SUM(DECODE(OPER, 'V0130', LOSS_QTY,0)) LOSS_QTY32
     , SUM(DECODE(OPER, 'V0160', LOSS_QTY,0)) LOSS_QTY33
     , SUM(DECODE(OPER, 'V0161', LOSS_QTY,0)) LOSS_QTY34
     , SUM(DECODE(OPER, 'V0165', LOSS_QTY,0)) LOSS_QTY35
     , SUM(DECODE(OPER, 'V0175', LOSS_QTY,0)) LOSS_QTY36
     , SUM(DECODE(OPER, 'V0200', LOSS_QTY,0)) LOSS_QTY37
     , SUM(DECODE(OPER, 'V0300', LOSS_QTY,0)) LOSS_QTY38
     , SUM(DECODE(OPER, 'V0305', LOSS_QTY,0)) LOSS_QTY39
     , SUM(DECODE(OPER, 'V0310', LOSS_QTY,0)) LOSS_QTY40
     , SUM(DECODE(OPER, 'V0311', LOSS_QTY,0)) LOSS_QTY41
     , SUM(DECODE(OPER, 'V0315', LOSS_QTY,0)) LOSS_QTY42
     , SUM(DECODE(OPER, 'V0319', LOSS_QTY,0)) LOSS_QTY43
     , SUM(DECODE(OPER, 'V0320', LOSS_QTY,0)) LOSS_QTY44
     , SUM(DECODE(OPER, 'V0323', LOSS_QTY,0)) LOSS_QTY45
     , SUM(DECODE(OPER, 'V0327', LOSS_QTY,0)) LOSS_QTY46
     , SUM(DECODE(OPER, 'V0330', LOSS_QTY,0)) LOSS_QTY47
     , SUM(DECODE(OPER, 'V0331', LOSS_QTY,0)) LOSS_QTY48
     , SUM(DECODE(OPER, 'V0333', LOSS_QTY,0)) LOSS_QTY49
     , SUM(DECODE(OPER, 'V0334', LOSS_QTY,0)) LOSS_QTY50
     , SUM(DECODE(OPER, 'V0340', LOSS_QTY,0)) LOSS_QTY51
     , SUM(DECODE(OPER, 'V0350', LOSS_QTY,0)) LOSS_QTY52
     , SUM(DECODE(OPER, 'V0360', LOSS_QTY,0)) LOSS_QTY53
     , SUM(DECODE(OPER, 'V0370', LOSS_QTY,0)) LOSS_QTY54
     , SUM(DECODE(OPER, 'V0380', LOSS_QTY,0)) LOSS_QTY55
     , SUM(DECODE(OPER, 'V0390', LOSS_QTY,0)) LOSS_QTY56
     , SUM(DECODE(OPER, 'V0391', LOSS_QTY,0)) LOSS_QTY57
     , SUM(DECODE(OPER, 'V0400', LOSS_QTY,0)) LOSS_QTY58
     , SUM(DECODE(OPER, 'V0530', LOSS_QTY,0)) LOSS_QTY59
     , SUM(DECODE(OPER, 'V0600', LOSS_QTY,0)) LOSS_QTY60
     , SUM(DECODE(OPER, 'V0601', LOSS_QTY,0)) LOSS_QTY61
     , SUM(DECODE(OPER, 'V0660', LOSS_QTY,0)) LOSS_QTY62
     , SUM(DECODE(OPER, 'V0910', LOSS_QTY,0)) LOSS_QTY63
     , SUM(DECODE(OPER, 'V0930', LOSS_QTY,0)) LOSS_QTY64
     , SUM(DECODE(OPER, 'V1000', LOSS_QTY,0)) LOSS_QTY65
     , SUM(DECODE(OPER, 'V1001', LOSS_QTY,0)) LOSS_QTY66
     , SUM(DECODE(OPER, 'V1300', LOSS_QTY,0)) LOSS_QTY67
     , SUM(DECODE(OPER, 'V1301', LOSS_QTY,0)) LOSS_QTY68
     , SUM(DECODE(OPER, 'V1750', LOSS_QTY,0)) LOSS_QTY69
     , SUM(DECODE(OPER, 'V1800', LOSS_QTY,0)) LOSS_QTY70
  FROM ( 
        SELECT MAT_ID, OPER 
             , SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS IN_QTY  
             , SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY 
             , 0 AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY
          FROM RSUMWIPMOV 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE BETWEEN '20200528' AND '20200529' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         HAVING SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) + SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) > 0 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, SUM(EOH_QTY_1) AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RSUMWIPEOH 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE = '20200527' 
           AND LOT_TYPE <> 'W' 
           AND SHIFT = '3' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, SUM(QTY_1) AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RWIPLOTSTS 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND LOT_DEL_FLAG = ' ' 
           AND LOT_TYPE <> 'W' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
           AND QTY_1 > 0 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, 0 AS EOH_QTY, SUM(LOSS_QTY) AS LOSS
          FROM RWIPLOTLSM 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200527220000' AND '20200529215959' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
       ) A 
     , MWIPMATDEF B 
 WHERE 1=1 
   AND A.MAT_ID = B.MAT_ID 
   AND A.MAT_ID LIKE '%'  
   AND A.OPER LIKE '%'
   AND B.FACTORY = 'HMVA2'
   AND B.DELETE_FLAG = ' ' 
 GROUP BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 
 ORDER BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070202'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY='HMVA2' AND TABLE_NAME='MATERIAL_TYPE' AND KEY_1 IN ('AE','LF','PB','GW','MC','SB','BD')
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', A.MATCODE, A.MAT_DESC,  ' ', A.A_COUNT, A.B_COUNT, A.C_COUNT, A.D_COUNT, A.E_COUNT, A.TOTAL_COUNT, A.TOTAL_QTY, A.USAGE, ROUND(B.TOTAL/(DECODE(A.BASE_QTY, 0, 1, 0) + A.BASE_QTY) * A.USAGE) AS E_QTY, ' ', A.UNIT_1 
     , B.MAT_ID
     , B.HMK2A 
     , B.BG 
     , B.SAW 
     , B.DA 
     , B.TOTAL 
 FROM( 
       SELECT A.PARTNUMBER 
            , A.MATCODE 
            , A.MAT_TYPE 
            , A.MAT_DESC 
            , A.BASE_QTY AS BASE_QTY 
            , A.USAGE AS USAGE 
            , A.UNIT_1 
            , NVL(B.A_COUNT,0) AS A_COUNT 
            , NVL(B.A_QTY,0) AS A_QTY 
            , NVL(B.B_COUNT,0) AS B_COUNT 
            , NVL(B.B_QTY,0) AS B_QTY 
            , NVL(B.C_COUNT,0) AS C_COUNT 
            , NVL(B.C_QTY,0) AS C_QTY 
            , NVL(B.D_COUNT,0) AS D_COUNT 
            , NVL(B.D_QTY,0) AS D_QTY 
            , NVL(B.E_COUNT,0) AS E_COUNT 
            , NVL(B.E_QTY,0) AS E_QTY 
            , NVL(B.TOTAL_COUNT,0) AS TOTAL_COUNT 
            , NVL(B.TOTAL_QTY,0) AS TOTAL_QTY 
        FROM( 
              SELECT DISTINCT A.PARTNUMBER 
                   , A.MATCODE 
                   , B.MAT_TYPE 
                   , B.MAT_DESC 
                   , A.PAR_BASE_QTY AS BASE_QTY 
                   , A.UNIT_QTY AS USAGE 
                   , B.UNIT_1 
                FROM CWIPBOMDEF A, 
                     MWIPMATDEF B 
               WHERE A.MATCODE=B.MAT_ID 
              GROUP BY A.PARTNUMBER,A.MATCODE,B.MAT_TYPE,B.MAT_DESC,A.PAR_BASE_QTY,A.UNIT_QTY,B.UNIT_1 
            )A, 
            ( 
              SELECT MAT_ID 
                   , SUM(DECODE(RES_COUNT,0,DECODE(AG_COUNT,0,DECODE(RE_COUNT,0,A_COUNT,0),0),0)) AS A_COUNT 
                   , SUM(DECODE(RES_QTY,0,DECODE(AG_QTY,0,DECODE(RE_COUNT,0,A_QTY,0),0),0)) AS A_QTY 
                   , SUM(DECODE(RES_COUNT,0,DECODE(AG_COUNT,0,DECODE(RE_COUNT,0,B_COUNT,0),0),0)) AS B_COUNT 
                   , SUM(DECODE(RES_QTY,0,DECODE(AG_QTY,0,DECODE(RE_COUNT,0,B_QTY,0),0),0)) AS B_QTY 
                   , SUM(RES_COUNT) AS C_COUNT 
                   , SUM(RES_QTY) C_QTY 
                   , SUM(AG_COUNT) AS D_COUNT 
                   , SUM(AG_QTY) D_QTY 
                   , SUM(RE_COUNT) AS E_COUNT 
                   , SUM(RE_QTY) E_QTY 
                   , SUM(DECODE(RES_COUNT,0,A_COUNT,0)+DECODE(RES_COUNT,0,B_COUNT,0)+RES_COUNT) AS TOTAL_COUNT 
                   , SUM(DECODE(RES_QTY,0,A_QTY,0)+DECODE(RES_QTY,0,B_QTY,0)+RES_QTY) AS TOTAL_QTY 
               FROM( 
                     SELECT LOT_ID, 
                            MAT_ID, 
                            GRADE, 
                            SUM(DECODE(GRADE,'A',LOT_COUNT,0)) AS A_COUNT, 
                            SUM(DECODE(GRADE,'A',LOT_QTY,0)) AS A_QTY, 
                            SUM(DECODE(GRADE,'B',LOT_COUNT,0)) AS B_COUNT, 
                            SUM(DECODE(GRADE,'B',LOT_QTY,0)) AS B_QTY, 
                            SUM(RES_COUNT) AS RES_COUNT, 
                            SUM(RES_QTY) RES_QTY, 
                            SUM(AG_COUNT) AS AG_COUNT, 
                            SUM(AG_QTY) AG_QTY, 
                            SUM(RE_COUNT) AS RE_COUNT, 
                            SUM(RE_QTY) RE_QTY 
                      FROM( 
                            ( 
                              SELECT LOT_ID 
                                   , MAT_ID 
                                   , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                   , COUNT(LOT_ID) AS LOT_COUNT 
                                   , QTY_1 AS LOT_QTY 
                                   , 0 AS RES_COUNT 
                                   , 0 AS RES_QTY 
                                   , 0 AS AG_COUNT 
                                   , 0 AS AG_QTY 
                                   , 0 AS RE_COUNT 
                                   , 0 AS RE_QTY 
                                FROM RWIPLOTSTS 
                               WHERE 1=1 
                                     AND FACTORY = 'HMVA2' 
                                     AND OPER IN ( 
                                                   SELECT ATTR_KEY 
                                                     FROM MATRNAMSTS 
                                                    WHERE 1=1 
                                                          AND FACTORY = 'HMVA2' 
                                                          AND ATTR_TYPE = 'OPER' 
                                                          AND ATTR_NAME = 'MATERIAL_OPER' 
                                                          AND ATTR_VALUE = 'Y' 
                                                          AND ATTR_KEY <> 'V0000' 
                                                 ) 
                                     AND LOT_DEL_FLAG = ' ' 
                                     AND LOT_TYPE <> 'W' 
                                     AND QTY_1 > 0 
                               GROUP BY LOT_ID,MAT_ID,LOT_CMF_9,QTY_1 
                            ) 
                            UNION ALL 
                            ( 
                              SELECT A.LOT_ID 
                                   , A.MAT_ID 
                                   , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                   , 0 AS LOT_COUNT 
                                   , 0 AS LOT_QTY 
                                   , COUNT(A.LOT_ID) AS RES_COUNT 
                                   , A.QTY_1 AS RES_QTY 
                                   , 0 AS AG_COUNT 
                                   , 0 AS AG_QTY 
                                   , 0 AS RE_COUNT 
                                   , 0 AS RE_QTY 
                                FROM RWIPLOTSTS A, 
                                     CRASRESMAT B 
                               WHERE A.LOT_ID=B.LOT_ID 
                               GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1
                           ) 
                           UNION ALL 
                           ( 
                             SELECT A.LOT_ID 
                                  , A.MAT_ID 
                                  , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                  , 0 AS LOT_COUNT 
                                  , 0 AS LOT_QTY 
                                  , 0 AS RES_COUNT 
                                  , 0 AS RES_QTY 
                                  , COUNT(A.LOT_ID) AS AG_COUNT 
                                  , A.QTY_1 AS AG_QTY 
                                  , 0 AS RE_COUNT 
                                  , 0 AS RE_QTY 
                               FROM RWIPLOTSTS A, 
                                    CWIPMATAGI B 
                              WHERE A.LOT_ID=B.LOT_ID 
                                AND A.QTY_1 > 0 
                                AND A.LOT_ID NOT LIKE '%-$%' 
                                AND TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') BETWEEN B.AGING_TIME AND B.LIFE_END_TIME 
                                AND A.LOT_DEL_FLAG = ' ' 
                                AND B.LOT_ID NOT IN ( SELECT LOT_ID FROM CRASRESMAT WHERE FACTORY = 'HMVA2' ) 
                              GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1 
                           ) 
                           UNION ALL 
                           ( 
                             SELECT A.LOT_ID 
                                  , A.MAT_ID 
                                  , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                  , 0 AS LOT_COUNT 
                                  , 0 AS LOT_QTY 
                                  , 0 AS RES_COUNT 
                                  , 0 AS RES_QTY 
                                  , 0 AS AG_COUNT 
                                  , 0 AS AG_QTY 
                                  , COUNT(A.LOT_ID) AS RE_COUNT 
                                  , A.QTY_1 AS RE_QTY 
                               FROM RWIPLOTSTS A, 
                                    CWIPMATAGI B 
                              WHERE A.LOT_ID=B.LOT_ID 
                                AND A.QTY_1 > 0 
                                AND A.LOT_ID NOT LIKE '%-$%' 
                                AND B.RESET_FLAG = 'Y' 
                                AND B.AGING_TIME = ' ' 
                                AND A.LOT_DEL_FLAG = ' ' 
                                AND B.LOT_ID NOT IN ( SELECT LOT_ID FROM CRASRESMAT WHERE FACTORY = 'HMVA2' ) 
                              GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1 
                           ) 
                     ) 
                     GROUP BY LOT_ID,MAT_ID,GRADE 
                   ) 
              GROUP BY MAT_ID 
            )B 
        WHERE A.MATCODE=B.MAT_ID(+) 
     ) A, 
     ( 
       SELECT A.MAT_ID 
            , SUM(DECODE(C.OPER_GRP_1, 'HMK2A', A.QTY_1,0)) HMK2A 
            , SUM(DECODE(C.OPER_GRP_1,'B/G',A.QTY_1,0)) AS BG 
            , SUM(DECODE(C.OPER_GRP_1,'SAW',A.QTY_1,0)) AS SAW 
            , SUM(CASE C.OPER_GRP_1 WHEN 'SMT' THEN A.QTY_1 WHEN 'S/P' THEN A.QTY_1 WHEN 'D/A' THEN A.QTY_1 ELSE 0 END) AS DA 
            , SUM(DECODE(C.OPER_GRP_1,'W/B',A.QTY_1,0)) AS WB 
            , SUM(DECODE(C.OPER_GRP_1,'MOLD',A.QTY_1,0)) AS MOLD 
            , SUM(CASE C.OPER_GRP_1 WHEN 'CURE' THEN A.QTY_1 WHEN 'M/K' THEN A.QTY_1 WHEN 'V/I' THEN A.QTY_1 WHEN 'S/B/A' THEN A.QTY_1 ELSE 0 END) AS SBA 
            , SUM(CASE C.OPER_GRP_1 WHEN 'TIN' THEN A.QTY_1 WHEN 'SMT' THEN A.QTY_1 WHEN 'SIG' THEN A.QTY_1 ELSE 0 END) AS SIG 
            , SUM(A.QTY_1) AS TOTAL 
         FROM RWIPLOTSTS A, MWIPMATDEF B, MWIPOPRDEF C, MGCMTBLDAT D 
        WHERE A.FACTORY = 'HMVA2' 
              AND B.MAT_VER = 1 
              AND A.OWNER_CODE = 'PROD' 
              AND A.FACTORY = B.FACTORY 
              AND A.MAT_ID = B.MAT_ID 
              AND A.OPER=C.OPER 
              AND A.MAT_VER = 1 
              AND A.LOT_DEL_FLAG = ' ' 
              AND B.MAT_GRP_1 = D.KEY_1 
              AND B.FACTORY=D.FACTORY 
              AND D.TABLE_NAME='H_CUSTOMER' 
              AND C.OPER_GRP_1 IN ('HMK2A','B/G','SAW','SMT','S/P','D/A') 
       GROUP BY A.MAT_ID 
       HAVING SUM(A.QTY_1) > 0 
     ) B 
 WHERE A.PARTNUMBER(+)=B.MAT_ID
      AND A.MAT_TYPE='PB'
ORDER BY A.MATCODE, B.MAT_ID

-------------------------------------------------------------
