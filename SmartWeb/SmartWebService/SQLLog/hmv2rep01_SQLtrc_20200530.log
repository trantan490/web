SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070601'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE
     , A.MAT_ID
     , B.MAT_DESC
     , A.OPER
     , SUM(END_QTY) AS TOTAL_QTY
     , SUM(DECODE(WORK_DATE, '20200529', END_QTY)) AS END_QTY_0
     , SUM(DECODE(WORK_DATE, '20200530', END_QTY)) AS END_QTY_1
     , ROUND(SUM(END_QTY)/2, 1) AS AVG
  FROM (
        SELECT FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3
             , SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
          FROM RSUMWIPMOV
         WHERE 1=1
           AND FACTORY = 'HMVA2'
           AND WORK_DATE BETWEEN '20200529' AND '20200530'
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%')
         GROUP BY FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3 
       ) A
     , MWIPMATDEF B
 WHERE 1=1
   AND A.FACTORY = B.FACTORY
   AND A.MAT_ID = B.MAT_ID
   AND A.END_QTY > 0
   AND A.OPER LIKE '%'
   AND A.MAT_ID LIKE '%'  
 GROUP BY B.MAT_TYPE, B.MAT_DESC, A.MAT_ID, A.OPER
 ORDER BY B.MAT_TYPE, B.MAT_DESC, A.MAT_ID, A.OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200528000000' AND '20200530235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200530' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%')  
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE, A.MAT_ID, B.MAT_DESC, ' ' 
     , SUM(DECODE(OPER, 'M0110', BOH_QTY,0)) BOH_QTY0
     , SUM(DECODE(OPER, 'M0120', BOH_QTY,0)) BOH_QTY1
     , SUM(DECODE(OPER, 'M0160', BOH_QTY,0)) BOH_QTY2
     , SUM(DECODE(OPER, 'M0161', BOH_QTY,0)) BOH_QTY3
     , SUM(DECODE(OPER, 'M0300', BOH_QTY,0)) BOH_QTY4
     , SUM(DECODE(OPER, 'M0315', BOH_QTY,0)) BOH_QTY5
     , SUM(DECODE(OPER, 'M0320', BOH_QTY,0)) BOH_QTY6
     , SUM(DECODE(OPER, 'M0323', BOH_QTY,0)) BOH_QTY7
     , SUM(DECODE(OPER, 'M0325', BOH_QTY,0)) BOH_QTY8
     , SUM(DECODE(OPER, 'M0329', BOH_QTY,0)) BOH_QTY9
     , SUM(DECODE(OPER, 'M0330', BOH_QTY,0)) BOH_QTY10
     , SUM(DECODE(OPER, 'M0336', BOH_QTY,0)) BOH_QTY11
     , SUM(DECODE(OPER, 'M0337', BOH_QTY,0)) BOH_QTY12
     , SUM(DECODE(OPER, 'M0339', BOH_QTY,0)) BOH_QTY13
     , SUM(DECODE(OPER, 'M0340', BOH_QTY,0)) BOH_QTY14
     , SUM(DECODE(OPER, 'M0345', BOH_QTY,0)) BOH_QTY15
     , SUM(DECODE(OPER, 'M0391', BOH_QTY,0)) BOH_QTY16
     , SUM(DECODE(OPER, 'M0400', BOH_QTY,0)) BOH_QTY17
     , SUM(DECODE(OPER, 'M0401', BOH_QTY,0)) BOH_QTY18
     , SUM(DECODE(OPER, 'M0500', BOH_QTY,0)) BOH_QTY19
     , SUM(DECODE(OPER, 'M0550', BOH_QTY,0)) BOH_QTY20
     , SUM(DECODE(OPER, 'M1750', BOH_QTY,0)) BOH_QTY21
     , SUM(DECODE(OPER, 'V0000', BOH_QTY,0)) BOH_QTY22
     , SUM(DECODE(OPER, 'V0013', BOH_QTY,0)) BOH_QTY23
     , SUM(DECODE(OPER, 'V0020', BOH_QTY,0)) BOH_QTY24
     , SUM(DECODE(OPER, 'V0040', BOH_QTY,0)) BOH_QTY25
     , SUM(DECODE(OPER, 'V0055', BOH_QTY,0)) BOH_QTY26
     , SUM(DECODE(OPER, 'V0065', BOH_QTY,0)) BOH_QTY27
     , SUM(DECODE(OPER, 'V0090', BOH_QTY,0)) BOH_QTY28
     , SUM(DECODE(OPER, 'V0100', BOH_QTY,0)) BOH_QTY29
     , SUM(DECODE(OPER, 'V0110', BOH_QTY,0)) BOH_QTY30
     , SUM(DECODE(OPER, 'V0120', BOH_QTY,0)) BOH_QTY31
     , SUM(DECODE(OPER, 'V0130', BOH_QTY,0)) BOH_QTY32
     , SUM(DECODE(OPER, 'V0160', BOH_QTY,0)) BOH_QTY33
     , SUM(DECODE(OPER, 'V0161', BOH_QTY,0)) BOH_QTY34
     , SUM(DECODE(OPER, 'V0165', BOH_QTY,0)) BOH_QTY35
     , SUM(DECODE(OPER, 'V0175', BOH_QTY,0)) BOH_QTY36
     , SUM(DECODE(OPER, 'V0200', BOH_QTY,0)) BOH_QTY37
     , SUM(DECODE(OPER, 'V0300', BOH_QTY,0)) BOH_QTY38
     , SUM(DECODE(OPER, 'V0305', BOH_QTY,0)) BOH_QTY39
     , SUM(DECODE(OPER, 'V0310', BOH_QTY,0)) BOH_QTY40
     , SUM(DECODE(OPER, 'V0311', BOH_QTY,0)) BOH_QTY41
     , SUM(DECODE(OPER, 'V0315', BOH_QTY,0)) BOH_QTY42
     , SUM(DECODE(OPER, 'V0319', BOH_QTY,0)) BOH_QTY43
     , SUM(DECODE(OPER, 'V0320', BOH_QTY,0)) BOH_QTY44
     , SUM(DECODE(OPER, 'V0323', BOH_QTY,0)) BOH_QTY45
     , SUM(DECODE(OPER, 'V0327', BOH_QTY,0)) BOH_QTY46
     , SUM(DECODE(OPER, 'V0330', BOH_QTY,0)) BOH_QTY47
     , SUM(DECODE(OPER, 'V0331', BOH_QTY,0)) BOH_QTY48
     , SUM(DECODE(OPER, 'V0333', BOH_QTY,0)) BOH_QTY49
     , SUM(DECODE(OPER, 'V0334', BOH_QTY,0)) BOH_QTY50
     , SUM(DECODE(OPER, 'V0340', BOH_QTY,0)) BOH_QTY51
     , SUM(DECODE(OPER, 'V0350', BOH_QTY,0)) BOH_QTY52
     , SUM(DECODE(OPER, 'V0360', BOH_QTY,0)) BOH_QTY53
     , SUM(DECODE(OPER, 'V0370', BOH_QTY,0)) BOH_QTY54
     , SUM(DECODE(OPER, 'V0380', BOH_QTY,0)) BOH_QTY55
     , SUM(DECODE(OPER, 'V0390', BOH_QTY,0)) BOH_QTY56
     , SUM(DECODE(OPER, 'V0391', BOH_QTY,0)) BOH_QTY57
     , SUM(DECODE(OPER, 'V0400', BOH_QTY,0)) BOH_QTY58
     , SUM(DECODE(OPER, 'V0530', BOH_QTY,0)) BOH_QTY59
     , SUM(DECODE(OPER, 'V0600', BOH_QTY,0)) BOH_QTY60
     , SUM(DECODE(OPER, 'V0601', BOH_QTY,0)) BOH_QTY61
     , SUM(DECODE(OPER, 'V0660', BOH_QTY,0)) BOH_QTY62
     , SUM(DECODE(OPER, 'V0910', BOH_QTY,0)) BOH_QTY63
     , SUM(DECODE(OPER, 'V0930', BOH_QTY,0)) BOH_QTY64
     , SUM(DECODE(OPER, 'V1000', BOH_QTY,0)) BOH_QTY65
     , SUM(DECODE(OPER, 'V1001', BOH_QTY,0)) BOH_QTY66
     , SUM(DECODE(OPER, 'V1300', BOH_QTY,0)) BOH_QTY67
     , SUM(DECODE(OPER, 'V1301', BOH_QTY,0)) BOH_QTY68
     , SUM(DECODE(OPER, 'V1750', BOH_QTY,0)) BOH_QTY69
     , SUM(DECODE(OPER, 'V1800', BOH_QTY,0)) BOH_QTY70
     , SUM(DECODE(OPER, 'M0110', IN_QTY,0)) IN_QTY0
     , SUM(DECODE(OPER, 'M0120', IN_QTY,0)) IN_QTY1
     , SUM(DECODE(OPER, 'M0160', IN_QTY,0)) IN_QTY2
     , SUM(DECODE(OPER, 'M0161', IN_QTY,0)) IN_QTY3
     , SUM(DECODE(OPER, 'M0300', IN_QTY,0)) IN_QTY4
     , SUM(DECODE(OPER, 'M0315', IN_QTY,0)) IN_QTY5
     , SUM(DECODE(OPER, 'M0320', IN_QTY,0)) IN_QTY6
     , SUM(DECODE(OPER, 'M0323', IN_QTY,0)) IN_QTY7
     , SUM(DECODE(OPER, 'M0325', IN_QTY,0)) IN_QTY8
     , SUM(DECODE(OPER, 'M0329', IN_QTY,0)) IN_QTY9
     , SUM(DECODE(OPER, 'M0330', IN_QTY,0)) IN_QTY10
     , SUM(DECODE(OPER, 'M0336', IN_QTY,0)) IN_QTY11
     , SUM(DECODE(OPER, 'M0337', IN_QTY,0)) IN_QTY12
     , SUM(DECODE(OPER, 'M0339', IN_QTY,0)) IN_QTY13
     , SUM(DECODE(OPER, 'M0340', IN_QTY,0)) IN_QTY14
     , SUM(DECODE(OPER, 'M0345', IN_QTY,0)) IN_QTY15
     , SUM(DECODE(OPER, 'M0391', IN_QTY,0)) IN_QTY16
     , SUM(DECODE(OPER, 'M0400', IN_QTY,0)) IN_QTY17
     , SUM(DECODE(OPER, 'M0401', IN_QTY,0)) IN_QTY18
     , SUM(DECODE(OPER, 'M0500', IN_QTY,0)) IN_QTY19
     , SUM(DECODE(OPER, 'M0550', IN_QTY,0)) IN_QTY20
     , SUM(DECODE(OPER, 'M1750', IN_QTY,0)) IN_QTY21
     , SUM(DECODE(OPER, 'V0000', IN_QTY,0)) IN_QTY22
     , SUM(DECODE(OPER, 'V0013', IN_QTY,0)) IN_QTY23
     , SUM(DECODE(OPER, 'V0020', IN_QTY,0)) IN_QTY24
     , SUM(DECODE(OPER, 'V0040', IN_QTY,0)) IN_QTY25
     , SUM(DECODE(OPER, 'V0055', IN_QTY,0)) IN_QTY26
     , SUM(DECODE(OPER, 'V0065', IN_QTY,0)) IN_QTY27
     , SUM(DECODE(OPER, 'V0090', IN_QTY,0)) IN_QTY28
     , SUM(DECODE(OPER, 'V0100', IN_QTY,0)) IN_QTY29
     , SUM(DECODE(OPER, 'V0110', IN_QTY,0)) IN_QTY30
     , SUM(DECODE(OPER, 'V0120', IN_QTY,0)) IN_QTY31
     , SUM(DECODE(OPER, 'V0130', IN_QTY,0)) IN_QTY32
     , SUM(DECODE(OPER, 'V0160', IN_QTY,0)) IN_QTY33
     , SUM(DECODE(OPER, 'V0161', IN_QTY,0)) IN_QTY34
     , SUM(DECODE(OPER, 'V0165', IN_QTY,0)) IN_QTY35
     , SUM(DECODE(OPER, 'V0175', IN_QTY,0)) IN_QTY36
     , SUM(DECODE(OPER, 'V0200', IN_QTY,0)) IN_QTY37
     , SUM(DECODE(OPER, 'V0300', IN_QTY,0)) IN_QTY38
     , SUM(DECODE(OPER, 'V0305', IN_QTY,0)) IN_QTY39
     , SUM(DECODE(OPER, 'V0310', IN_QTY,0)) IN_QTY40
     , SUM(DECODE(OPER, 'V0311', IN_QTY,0)) IN_QTY41
     , SUM(DECODE(OPER, 'V0315', IN_QTY,0)) IN_QTY42
     , SUM(DECODE(OPER, 'V0319', IN_QTY,0)) IN_QTY43
     , SUM(DECODE(OPER, 'V0320', IN_QTY,0)) IN_QTY44
     , SUM(DECODE(OPER, 'V0323', IN_QTY,0)) IN_QTY45
     , SUM(DECODE(OPER, 'V0327', IN_QTY,0)) IN_QTY46
     , SUM(DECODE(OPER, 'V0330', IN_QTY,0)) IN_QTY47
     , SUM(DECODE(OPER, 'V0331', IN_QTY,0)) IN_QTY48
     , SUM(DECODE(OPER, 'V0333', IN_QTY,0)) IN_QTY49
     , SUM(DECODE(OPER, 'V0334', IN_QTY,0)) IN_QTY50
     , SUM(DECODE(OPER, 'V0340', IN_QTY,0)) IN_QTY51
     , SUM(DECODE(OPER, 'V0350', IN_QTY,0)) IN_QTY52
     , SUM(DECODE(OPER, 'V0360', IN_QTY,0)) IN_QTY53
     , SUM(DECODE(OPER, 'V0370', IN_QTY,0)) IN_QTY54
     , SUM(DECODE(OPER, 'V0380', IN_QTY,0)) IN_QTY55
     , SUM(DECODE(OPER, 'V0390', IN_QTY,0)) IN_QTY56
     , SUM(DECODE(OPER, 'V0391', IN_QTY,0)) IN_QTY57
     , SUM(DECODE(OPER, 'V0400', IN_QTY,0)) IN_QTY58
     , SUM(DECODE(OPER, 'V0530', IN_QTY,0)) IN_QTY59
     , SUM(DECODE(OPER, 'V0600', IN_QTY,0)) IN_QTY60
     , SUM(DECODE(OPER, 'V0601', IN_QTY,0)) IN_QTY61
     , SUM(DECODE(OPER, 'V0660', IN_QTY,0)) IN_QTY62
     , SUM(DECODE(OPER, 'V0910', IN_QTY,0)) IN_QTY63
     , SUM(DECODE(OPER, 'V0930', IN_QTY,0)) IN_QTY64
     , SUM(DECODE(OPER, 'V1000', IN_QTY,0)) IN_QTY65
     , SUM(DECODE(OPER, 'V1001', IN_QTY,0)) IN_QTY66
     , SUM(DECODE(OPER, 'V1300', IN_QTY,0)) IN_QTY67
     , SUM(DECODE(OPER, 'V1301', IN_QTY,0)) IN_QTY68
     , SUM(DECODE(OPER, 'V1750', IN_QTY,0)) IN_QTY69
     , SUM(DECODE(OPER, 'V1800', IN_QTY,0)) IN_QTY70
     , SUM(DECODE(OPER, 'M0110', END_QTY,0)) END_QTY0
     , SUM(DECODE(OPER, 'M0120', END_QTY,0)) END_QTY1
     , SUM(DECODE(OPER, 'M0160', END_QTY,0)) END_QTY2
     , SUM(DECODE(OPER, 'M0161', END_QTY,0)) END_QTY3
     , SUM(DECODE(OPER, 'M0300', END_QTY,0)) END_QTY4
     , SUM(DECODE(OPER, 'M0315', END_QTY,0)) END_QTY5
     , SUM(DECODE(OPER, 'M0320', END_QTY,0)) END_QTY6
     , SUM(DECODE(OPER, 'M0323', END_QTY,0)) END_QTY7
     , SUM(DECODE(OPER, 'M0325', END_QTY,0)) END_QTY8
     , SUM(DECODE(OPER, 'M0329', END_QTY,0)) END_QTY9
     , SUM(DECODE(OPER, 'M0330', END_QTY,0)) END_QTY10
     , SUM(DECODE(OPER, 'M0336', END_QTY,0)) END_QTY11
     , SUM(DECODE(OPER, 'M0337', END_QTY,0)) END_QTY12
     , SUM(DECODE(OPER, 'M0339', END_QTY,0)) END_QTY13
     , SUM(DECODE(OPER, 'M0340', END_QTY,0)) END_QTY14
     , SUM(DECODE(OPER, 'M0345', END_QTY,0)) END_QTY15
     , SUM(DECODE(OPER, 'M0391', END_QTY,0)) END_QTY16
     , SUM(DECODE(OPER, 'M0400', END_QTY,0)) END_QTY17
     , SUM(DECODE(OPER, 'M0401', END_QTY,0)) END_QTY18
     , SUM(DECODE(OPER, 'M0500', END_QTY,0)) END_QTY19
     , SUM(DECODE(OPER, 'M0550', END_QTY,0)) END_QTY20
     , SUM(DECODE(OPER, 'M1750', END_QTY,0)) END_QTY21
     , SUM(DECODE(OPER, 'V0000', END_QTY,0)) END_QTY22
     , SUM(DECODE(OPER, 'V0013', END_QTY,0)) END_QTY23
     , SUM(DECODE(OPER, 'V0020', END_QTY,0)) END_QTY24
     , SUM(DECODE(OPER, 'V0040', END_QTY,0)) END_QTY25
     , SUM(DECODE(OPER, 'V0055', END_QTY,0)) END_QTY26
     , SUM(DECODE(OPER, 'V0065', END_QTY,0)) END_QTY27
     , SUM(DECODE(OPER, 'V0090', END_QTY,0)) END_QTY28
     , SUM(DECODE(OPER, 'V0100', END_QTY,0)) END_QTY29
     , SUM(DECODE(OPER, 'V0110', END_QTY,0)) END_QTY30
     , SUM(DECODE(OPER, 'V0120', END_QTY,0)) END_QTY31
     , SUM(DECODE(OPER, 'V0130', END_QTY,0)) END_QTY32
     , SUM(DECODE(OPER, 'V0160', END_QTY,0)) END_QTY33
     , SUM(DECODE(OPER, 'V0161', END_QTY,0)) END_QTY34
     , SUM(DECODE(OPER, 'V0165', END_QTY,0)) END_QTY35
     , SUM(DECODE(OPER, 'V0175', END_QTY,0)) END_QTY36
     , SUM(DECODE(OPER, 'V0200', END_QTY,0)) END_QTY37
     , SUM(DECODE(OPER, 'V0300', END_QTY,0)) END_QTY38
     , SUM(DECODE(OPER, 'V0305', END_QTY,0)) END_QTY39
     , SUM(DECODE(OPER, 'V0310', END_QTY,0)) END_QTY40
     , SUM(DECODE(OPER, 'V0311', END_QTY,0)) END_QTY41
     , SUM(DECODE(OPER, 'V0315', END_QTY,0)) END_QTY42
     , SUM(DECODE(OPER, 'V0319', END_QTY,0)) END_QTY43
     , SUM(DECODE(OPER, 'V0320', END_QTY,0)) END_QTY44
     , SUM(DECODE(OPER, 'V0323', END_QTY,0)) END_QTY45
     , SUM(DECODE(OPER, 'V0327', END_QTY,0)) END_QTY46
     , SUM(DECODE(OPER, 'V0330', END_QTY,0)) END_QTY47
     , SUM(DECODE(OPER, 'V0331', END_QTY,0)) END_QTY48
     , SUM(DECODE(OPER, 'V0333', END_QTY,0)) END_QTY49
     , SUM(DECODE(OPER, 'V0334', END_QTY,0)) END_QTY50
     , SUM(DECODE(OPER, 'V0340', END_QTY,0)) END_QTY51
     , SUM(DECODE(OPER, 'V0350', END_QTY,0)) END_QTY52
     , SUM(DECODE(OPER, 'V0360', END_QTY,0)) END_QTY53
     , SUM(DECODE(OPER, 'V0370', END_QTY,0)) END_QTY54
     , SUM(DECODE(OPER, 'V0380', END_QTY,0)) END_QTY55
     , SUM(DECODE(OPER, 'V0390', END_QTY,0)) END_QTY56
     , SUM(DECODE(OPER, 'V0391', END_QTY,0)) END_QTY57
     , SUM(DECODE(OPER, 'V0400', END_QTY,0)) END_QTY58
     , SUM(DECODE(OPER, 'V0530', END_QTY,0)) END_QTY59
     , SUM(DECODE(OPER, 'V0600', END_QTY,0)) END_QTY60
     , SUM(DECODE(OPER, 'V0601', END_QTY,0)) END_QTY61
     , SUM(DECODE(OPER, 'V0660', END_QTY,0)) END_QTY62
     , SUM(DECODE(OPER, 'V0910', END_QTY,0)) END_QTY63
     , SUM(DECODE(OPER, 'V0930', END_QTY,0)) END_QTY64
     , SUM(DECODE(OPER, 'V1000', END_QTY,0)) END_QTY65
     , SUM(DECODE(OPER, 'V1001', END_QTY,0)) END_QTY66
     , SUM(DECODE(OPER, 'V1300', END_QTY,0)) END_QTY67
     , SUM(DECODE(OPER, 'V1301', END_QTY,0)) END_QTY68
     , SUM(DECODE(OPER, 'V1750', END_QTY,0)) END_QTY69
     , SUM(DECODE(OPER, 'V1800', END_QTY,0)) END_QTY70
     , SUM(DECODE(OPER, 'M0110', EOH_QTY,0)) EOH_QTY0
     , SUM(DECODE(OPER, 'M0120', EOH_QTY,0)) EOH_QTY1
     , SUM(DECODE(OPER, 'M0160', EOH_QTY,0)) EOH_QTY2
     , SUM(DECODE(OPER, 'M0161', EOH_QTY,0)) EOH_QTY3
     , SUM(DECODE(OPER, 'M0300', EOH_QTY,0)) EOH_QTY4
     , SUM(DECODE(OPER, 'M0315', EOH_QTY,0)) EOH_QTY5
     , SUM(DECODE(OPER, 'M0320', EOH_QTY,0)) EOH_QTY6
     , SUM(DECODE(OPER, 'M0323', EOH_QTY,0)) EOH_QTY7
     , SUM(DECODE(OPER, 'M0325', EOH_QTY,0)) EOH_QTY8
     , SUM(DECODE(OPER, 'M0329', EOH_QTY,0)) EOH_QTY9
     , SUM(DECODE(OPER, 'M0330', EOH_QTY,0)) EOH_QTY10
     , SUM(DECODE(OPER, 'M0336', EOH_QTY,0)) EOH_QTY11
     , SUM(DECODE(OPER, 'M0337', EOH_QTY,0)) EOH_QTY12
     , SUM(DECODE(OPER, 'M0339', EOH_QTY,0)) EOH_QTY13
     , SUM(DECODE(OPER, 'M0340', EOH_QTY,0)) EOH_QTY14
     , SUM(DECODE(OPER, 'M0345', EOH_QTY,0)) EOH_QTY15
     , SUM(DECODE(OPER, 'M0391', EOH_QTY,0)) EOH_QTY16
     , SUM(DECODE(OPER, 'M0400', EOH_QTY,0)) EOH_QTY17
     , SUM(DECODE(OPER, 'M0401', EOH_QTY,0)) EOH_QTY18
     , SUM(DECODE(OPER, 'M0500', EOH_QTY,0)) EOH_QTY19
     , SUM(DECODE(OPER, 'M0550', EOH_QTY,0)) EOH_QTY20
     , SUM(DECODE(OPER, 'M1750', EOH_QTY,0)) EOH_QTY21
     , SUM(DECODE(OPER, 'V0000', EOH_QTY,0)) EOH_QTY22
     , SUM(DECODE(OPER, 'V0013', EOH_QTY,0)) EOH_QTY23
     , SUM(DECODE(OPER, 'V0020', EOH_QTY,0)) EOH_QTY24
     , SUM(DECODE(OPER, 'V0040', EOH_QTY,0)) EOH_QTY25
     , SUM(DECODE(OPER, 'V0055', EOH_QTY,0)) EOH_QTY26
     , SUM(DECODE(OPER, 'V0065', EOH_QTY,0)) EOH_QTY27
     , SUM(DECODE(OPER, 'V0090', EOH_QTY,0)) EOH_QTY28
     , SUM(DECODE(OPER, 'V0100', EOH_QTY,0)) EOH_QTY29
     , SUM(DECODE(OPER, 'V0110', EOH_QTY,0)) EOH_QTY30
     , SUM(DECODE(OPER, 'V0120', EOH_QTY,0)) EOH_QTY31
     , SUM(DECODE(OPER, 'V0130', EOH_QTY,0)) EOH_QTY32
     , SUM(DECODE(OPER, 'V0160', EOH_QTY,0)) EOH_QTY33
     , SUM(DECODE(OPER, 'V0161', EOH_QTY,0)) EOH_QTY34
     , SUM(DECODE(OPER, 'V0165', EOH_QTY,0)) EOH_QTY35
     , SUM(DECODE(OPER, 'V0175', EOH_QTY,0)) EOH_QTY36
     , SUM(DECODE(OPER, 'V0200', EOH_QTY,0)) EOH_QTY37
     , SUM(DECODE(OPER, 'V0300', EOH_QTY,0)) EOH_QTY38
     , SUM(DECODE(OPER, 'V0305', EOH_QTY,0)) EOH_QTY39
     , SUM(DECODE(OPER, 'V0310', EOH_QTY,0)) EOH_QTY40
     , SUM(DECODE(OPER, 'V0311', EOH_QTY,0)) EOH_QTY41
     , SUM(DECODE(OPER, 'V0315', EOH_QTY,0)) EOH_QTY42
     , SUM(DECODE(OPER, 'V0319', EOH_QTY,0)) EOH_QTY43
     , SUM(DECODE(OPER, 'V0320', EOH_QTY,0)) EOH_QTY44
     , SUM(DECODE(OPER, 'V0323', EOH_QTY,0)) EOH_QTY45
     , SUM(DECODE(OPER, 'V0327', EOH_QTY,0)) EOH_QTY46
     , SUM(DECODE(OPER, 'V0330', EOH_QTY,0)) EOH_QTY47
     , SUM(DECODE(OPER, 'V0331', EOH_QTY,0)) EOH_QTY48
     , SUM(DECODE(OPER, 'V0333', EOH_QTY,0)) EOH_QTY49
     , SUM(DECODE(OPER, 'V0334', EOH_QTY,0)) EOH_QTY50
     , SUM(DECODE(OPER, 'V0340', EOH_QTY,0)) EOH_QTY51
     , SUM(DECODE(OPER, 'V0350', EOH_QTY,0)) EOH_QTY52
     , SUM(DECODE(OPER, 'V0360', EOH_QTY,0)) EOH_QTY53
     , SUM(DECODE(OPER, 'V0370', EOH_QTY,0)) EOH_QTY54
     , SUM(DECODE(OPER, 'V0380', EOH_QTY,0)) EOH_QTY55
     , SUM(DECODE(OPER, 'V0390', EOH_QTY,0)) EOH_QTY56
     , SUM(DECODE(OPER, 'V0391', EOH_QTY,0)) EOH_QTY57
     , SUM(DECODE(OPER, 'V0400', EOH_QTY,0)) EOH_QTY58
     , SUM(DECODE(OPER, 'V0530', EOH_QTY,0)) EOH_QTY59
     , SUM(DECODE(OPER, 'V0600', EOH_QTY,0)) EOH_QTY60
     , SUM(DECODE(OPER, 'V0601', EOH_QTY,0)) EOH_QTY61
     , SUM(DECODE(OPER, 'V0660', EOH_QTY,0)) EOH_QTY62
     , SUM(DECODE(OPER, 'V0910', EOH_QTY,0)) EOH_QTY63
     , SUM(DECODE(OPER, 'V0930', EOH_QTY,0)) EOH_QTY64
     , SUM(DECODE(OPER, 'V1000', EOH_QTY,0)) EOH_QTY65
     , SUM(DECODE(OPER, 'V1001', EOH_QTY,0)) EOH_QTY66
     , SUM(DECODE(OPER, 'V1300', EOH_QTY,0)) EOH_QTY67
     , SUM(DECODE(OPER, 'V1301', EOH_QTY,0)) EOH_QTY68
     , SUM(DECODE(OPER, 'V1750', EOH_QTY,0)) EOH_QTY69
     , SUM(DECODE(OPER, 'V1800', EOH_QTY,0)) EOH_QTY70
     , SUM(DECODE(OPER, 'M0110', LOSS_QTY,0)) LOSS_QTY0
     , SUM(DECODE(OPER, 'M0120', LOSS_QTY,0)) LOSS_QTY1
     , SUM(DECODE(OPER, 'M0160', LOSS_QTY,0)) LOSS_QTY2
     , SUM(DECODE(OPER, 'M0161', LOSS_QTY,0)) LOSS_QTY3
     , SUM(DECODE(OPER, 'M0300', LOSS_QTY,0)) LOSS_QTY4
     , SUM(DECODE(OPER, 'M0315', LOSS_QTY,0)) LOSS_QTY5
     , SUM(DECODE(OPER, 'M0320', LOSS_QTY,0)) LOSS_QTY6
     , SUM(DECODE(OPER, 'M0323', LOSS_QTY,0)) LOSS_QTY7
     , SUM(DECODE(OPER, 'M0325', LOSS_QTY,0)) LOSS_QTY8
     , SUM(DECODE(OPER, 'M0329', LOSS_QTY,0)) LOSS_QTY9
     , SUM(DECODE(OPER, 'M0330', LOSS_QTY,0)) LOSS_QTY10
     , SUM(DECODE(OPER, 'M0336', LOSS_QTY,0)) LOSS_QTY11
     , SUM(DECODE(OPER, 'M0337', LOSS_QTY,0)) LOSS_QTY12
     , SUM(DECODE(OPER, 'M0339', LOSS_QTY,0)) LOSS_QTY13
     , SUM(DECODE(OPER, 'M0340', LOSS_QTY,0)) LOSS_QTY14
     , SUM(DECODE(OPER, 'M0345', LOSS_QTY,0)) LOSS_QTY15
     , SUM(DECODE(OPER, 'M0391', LOSS_QTY,0)) LOSS_QTY16
     , SUM(DECODE(OPER, 'M0400', LOSS_QTY,0)) LOSS_QTY17
     , SUM(DECODE(OPER, 'M0401', LOSS_QTY,0)) LOSS_QTY18
     , SUM(DECODE(OPER, 'M0500', LOSS_QTY,0)) LOSS_QTY19
     , SUM(DECODE(OPER, 'M0550', LOSS_QTY,0)) LOSS_QTY20
     , SUM(DECODE(OPER, 'M1750', LOSS_QTY,0)) LOSS_QTY21
     , SUM(DECODE(OPER, 'V0000', LOSS_QTY,0)) LOSS_QTY22
     , SUM(DECODE(OPER, 'V0013', LOSS_QTY,0)) LOSS_QTY23
     , SUM(DECODE(OPER, 'V0020', LOSS_QTY,0)) LOSS_QTY24
     , SUM(DECODE(OPER, 'V0040', LOSS_QTY,0)) LOSS_QTY25
     , SUM(DECODE(OPER, 'V0055', LOSS_QTY,0)) LOSS_QTY26
     , SUM(DECODE(OPER, 'V0065', LOSS_QTY,0)) LOSS_QTY27
     , SUM(DECODE(OPER, 'V0090', LOSS_QTY,0)) LOSS_QTY28
     , SUM(DECODE(OPER, 'V0100', LOSS_QTY,0)) LOSS_QTY29
     , SUM(DECODE(OPER, 'V0110', LOSS_QTY,0)) LOSS_QTY30
     , SUM(DECODE(OPER, 'V0120', LOSS_QTY,0)) LOSS_QTY31
     , SUM(DECODE(OPER, 'V0130', LOSS_QTY,0)) LOSS_QTY32
     , SUM(DECODE(OPER, 'V0160', LOSS_QTY,0)) LOSS_QTY33
     , SUM(DECODE(OPER, 'V0161', LOSS_QTY,0)) LOSS_QTY34
     , SUM(DECODE(OPER, 'V0165', LOSS_QTY,0)) LOSS_QTY35
     , SUM(DECODE(OPER, 'V0175', LOSS_QTY,0)) LOSS_QTY36
     , SUM(DECODE(OPER, 'V0200', LOSS_QTY,0)) LOSS_QTY37
     , SUM(DECODE(OPER, 'V0300', LOSS_QTY,0)) LOSS_QTY38
     , SUM(DECODE(OPER, 'V0305', LOSS_QTY,0)) LOSS_QTY39
     , SUM(DECODE(OPER, 'V0310', LOSS_QTY,0)) LOSS_QTY40
     , SUM(DECODE(OPER, 'V0311', LOSS_QTY,0)) LOSS_QTY41
     , SUM(DECODE(OPER, 'V0315', LOSS_QTY,0)) LOSS_QTY42
     , SUM(DECODE(OPER, 'V0319', LOSS_QTY,0)) LOSS_QTY43
     , SUM(DECODE(OPER, 'V0320', LOSS_QTY,0)) LOSS_QTY44
     , SUM(DECODE(OPER, 'V0323', LOSS_QTY,0)) LOSS_QTY45
     , SUM(DECODE(OPER, 'V0327', LOSS_QTY,0)) LOSS_QTY46
     , SUM(DECODE(OPER, 'V0330', LOSS_QTY,0)) LOSS_QTY47
     , SUM(DECODE(OPER, 'V0331', LOSS_QTY,0)) LOSS_QTY48
     , SUM(DECODE(OPER, 'V0333', LOSS_QTY,0)) LOSS_QTY49
     , SUM(DECODE(OPER, 'V0334', LOSS_QTY,0)) LOSS_QTY50
     , SUM(DECODE(OPER, 'V0340', LOSS_QTY,0)) LOSS_QTY51
     , SUM(DECODE(OPER, 'V0350', LOSS_QTY,0)) LOSS_QTY52
     , SUM(DECODE(OPER, 'V0360', LOSS_QTY,0)) LOSS_QTY53
     , SUM(DECODE(OPER, 'V0370', LOSS_QTY,0)) LOSS_QTY54
     , SUM(DECODE(OPER, 'V0380', LOSS_QTY,0)) LOSS_QTY55
     , SUM(DECODE(OPER, 'V0390', LOSS_QTY,0)) LOSS_QTY56
     , SUM(DECODE(OPER, 'V0391', LOSS_QTY,0)) LOSS_QTY57
     , SUM(DECODE(OPER, 'V0400', LOSS_QTY,0)) LOSS_QTY58
     , SUM(DECODE(OPER, 'V0530', LOSS_QTY,0)) LOSS_QTY59
     , SUM(DECODE(OPER, 'V0600', LOSS_QTY,0)) LOSS_QTY60
     , SUM(DECODE(OPER, 'V0601', LOSS_QTY,0)) LOSS_QTY61
     , SUM(DECODE(OPER, 'V0660', LOSS_QTY,0)) LOSS_QTY62
     , SUM(DECODE(OPER, 'V0910', LOSS_QTY,0)) LOSS_QTY63
     , SUM(DECODE(OPER, 'V0930', LOSS_QTY,0)) LOSS_QTY64
     , SUM(DECODE(OPER, 'V1000', LOSS_QTY,0)) LOSS_QTY65
     , SUM(DECODE(OPER, 'V1001', LOSS_QTY,0)) LOSS_QTY66
     , SUM(DECODE(OPER, 'V1300', LOSS_QTY,0)) LOSS_QTY67
     , SUM(DECODE(OPER, 'V1301', LOSS_QTY,0)) LOSS_QTY68
     , SUM(DECODE(OPER, 'V1750', LOSS_QTY,0)) LOSS_QTY69
     , SUM(DECODE(OPER, 'V1800', LOSS_QTY,0)) LOSS_QTY70
  FROM ( 
        SELECT MAT_ID, OPER 
             , SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS IN_QTY  
             , SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY 
             , 0 AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY
          FROM RSUMWIPMOV 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE BETWEEN '20200529' AND '20200530' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         HAVING SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) + SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) > 0 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, SUM(EOH_QTY_1) AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RSUMWIPEOH 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE = '20200528' 
           AND LOT_TYPE <> 'W' 
           AND SHIFT = '3' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, SUM(QTY_1) AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RWIPLOTSTS 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND LOT_DEL_FLAG = ' ' 
           AND LOT_TYPE <> 'W' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
           AND QTY_1 > 0 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, 0 AS EOH_QTY, SUM(LOSS_QTY) AS LOSS
          FROM RWIPLOTLSM 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200528220000' AND '20200530215959' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
       ) A 
     , MWIPMATDEF B 
 WHERE 1=1 
   AND A.MAT_ID = B.MAT_ID 
   AND A.MAT_ID LIKE '%'  
   AND A.OPER LIKE '%'
   AND B.FACTORY = 'HMVA2'
   AND B.DELETE_FLAG = ' ' 
 GROUP BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 
 ORDER BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200530')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200530', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010201'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200401')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200401', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT  
            LAST_DAY('20200401')-2 AS "SYSLSI", 
            LAST_DAY('20200401') AS "MEMO",  
            LAST_DAY('20200401')- 2 - TO_DATE('20200401') +1  AS REMAIN1,  
            LAST_DAY('20200401') - TO_DATE('20200401')+1  AS REMAIN2,  
            SYSDATE AS TODAY  
        FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010303'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1
  FROM MWIPOPRDEF 
 WHERE FACTORY  = 'HMVA2' 
   AND OPER_CMF_4 <> ' '    
 GROUP BY OPER_GRP_1
 ORDER BY TO_NUMBER(MIN(OPER_CMF_4)) ASC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER 
  FROM MWIPOPRDEF A
 WHERE FACTORY  = 'HMVA2' 
   AND OPER NOT IN ('00001', '00002') 
   AND OPER LIKE SUBSTR(A.FACTORY, 4, 1) || '%' 
 ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS Customer,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 as PIN_TYPE, LOT.MAT_ID as Product,  ' '
     , LOT.LOT_CMF_4 RUN_ID 
     , LOT.LOT_ID 
     , TO_CHAR(TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS IN_TIME 
     , TO_CHAR(TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS MOVE_TIME 
     , LOT.CREATE_QTY_1 AS IN_QTY 
     , DECODE(LOT.OPER_GROUP, 'HMK2A', QTY_1, 0) QTY_0
     , DECODE(LOT.OPER_GROUP, '-', QTY_1, 0) QTY_1
     , DECODE(LOT.OPER_GROUP, 'B/G', QTY_1, 0) QTY_2
     , DECODE(LOT.OPER_GROUP, 'SAW', QTY_1, 0) QTY_3
     , DECODE(LOT.OPER_GROUP, 'D/A', QTY_1, 0) QTY_4
     , DECODE(LOT.OPER_GROUP, 'W/B', QTY_1, 0) QTY_5
     , DECODE(LOT.OPER_GROUP, 'GATE', QTY_1, 0) QTY_6
     , DECODE(LOT.OPER_GROUP, 'MOLD', QTY_1, 0) QTY_7
     , DECODE(LOT.OPER_GROUP, 'CURE', QTY_1, 0) QTY_8
     , DECODE(LOT.OPER_GROUP, 'M/K', QTY_1, 0) QTY_9
     , DECODE(LOT.OPER_GROUP, 'TRIM', QTY_1, 0) QTY_10
     , DECODE(LOT.OPER_GROUP, 'TIN', QTY_1, 0) QTY_11
     , DECODE(LOT.OPER_GROUP, 'S/B/A', QTY_1, 0) QTY_12
     , DECODE(LOT.OPER_GROUP, 'SIG', QTY_1, 0) QTY_13
     , DECODE(LOT.OPER_GROUP, 'AVI', QTY_1, 0) QTY_14
     , DECODE(LOT.OPER_GROUP, 'V/I', QTY_1, 0) QTY_15
     , DECODE(LOT.OPER_GROUP, 'QC GATE', QTY_1, 0) QTY_16
     , DECODE(LOT.OPER_GROUP, 'HMK3A', QTY_1, 0) QTY_17
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) AS TTL_TAT 
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_TAT 
  FROM (
        SELECT LOT.FACTORY, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14, LOT.OPER_IN_TIME, LOT.CREATE_QTY_1, OPR.OPER_GRP_1 AS OPER_GROUP, LOT.OPER, LOT.QTY_1 
          FROM RWIPLOTSTS_BOH LOT, 
               MWIPOPRDEF OPR 
         WHERE LOT.CUTOFF_DT = '2020040122'
           AND LOT.FACTORY = OPR.FACTORY 
           AND LOT.OPER = OPR.OPER 
           AND LOT.FACTORY = 'HMVA2' 
           AND LOT.LOT_DEL_FLAG = ' ' 
           AND LOT.MAT_VER = 1 
           AND LOT.LOT_TYPE = 'W' 
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE LOT.FACTORY = MAT.FACTORY 
   AND LOT.MAT_ID = MAT.MAT_ID 
ORDER BY Customer, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS Customer,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 as PIN_TYPE, LOT.MAT_ID as Product,  ' '
     , LOT.LOT_CMF_4 RUN_ID 
     , LOT.LOT_ID 
     , TO_CHAR(TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS IN_TIME 
     , TO_CHAR(TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS MOVE_TIME 
     , LOT.CREATE_QTY_1 AS IN_QTY 
     , DECODE(LOT.OPER, 'A0000', QTY_1, 0) QTY_0
     , DECODE(LOT.OPER, 'A0005', QTY_1, 0) QTY_1
     , DECODE(LOT.OPER, 'A000N', QTY_1, 0) QTY_2
     , DECODE(LOT.OPER, 'A0010', QTY_1, 0) QTY_3
     , DECODE(LOT.OPER, 'A0012', QTY_1, 0) QTY_4
     , DECODE(LOT.OPER, 'A0013', QTY_1, 0) QTY_5
     , DECODE(LOT.OPER, 'A0015', QTY_1, 0) QTY_6
     , DECODE(LOT.OPER, 'A0020', QTY_1, 0) QTY_7
     , DECODE(LOT.OPER, 'A0055', QTY_1, 0) QTY_8
     , DECODE(LOT.OPER, 'A0023', QTY_1, 0) QTY_9
     , DECODE(LOT.OPER, 'A0025', QTY_1, 0) QTY_10
     , DECODE(LOT.OPER, 'A0030', QTY_1, 0) QTY_11
     , DECODE(LOT.OPER, 'A0190', QTY_1, 0) QTY_12
     , DECODE(LOT.OPER, 'A0033', QTY_1, 0) QTY_13
     , DECODE(LOT.OPER, 'A0040', QTY_1, 0) QTY_14
     , DECODE(LOT.OPER, 'A0041', QTY_1, 0) QTY_15
     , DECODE(LOT.OPER, 'A0042', QTY_1, 0) QTY_16
     , DECODE(LOT.OPER, 'A0045', QTY_1, 0) QTY_17
     , DECODE(LOT.OPER, 'A0050', QTY_1, 0) QTY_18
     , DECODE(LOT.OPER, 'A0060', QTY_1, 0) QTY_19
     , DECODE(LOT.OPER, 'A0070', QTY_1, 0) QTY_20
     , DECODE(LOT.OPER, 'A0080', QTY_1, 0) QTY_21
     , DECODE(LOT.OPER, 'A0090', QTY_1, 0) QTY_22
     , DECODE(LOT.OPER, 'A0095', QTY_1, 0) QTY_23
     , DECODE(LOT.OPER, 'A0110', QTY_1, 0) QTY_24
     , DECODE(LOT.OPER, 'A0120', QTY_1, 0) QTY_25
     , DECODE(LOT.OPER, 'A0130', QTY_1, 0) QTY_26
     , DECODE(LOT.OPER, 'A0140', QTY_1, 0) QTY_27
     , DECODE(LOT.OPER, 'A0160', QTY_1, 0) QTY_28
     , DECODE(LOT.OPER, 'A0161', QTY_1, 0) QTY_29
     , DECODE(LOT.OPER, 'A0165', QTY_1, 0) QTY_30
     , DECODE(LOT.OPER, 'A0065', QTY_1, 0) QTY_31
     , DECODE(LOT.OPER, 'A0100', QTY_1, 0) QTY_32
     , DECODE(LOT.OPER, 'A0150', QTY_1, 0) QTY_33
     , DECODE(LOT.OPER, 'A0175', QTY_1, 0) QTY_34
     , DECODE(LOT.OPER, 'A0176', QTY_1, 0) QTY_35
     , DECODE(LOT.OPER, 'A0170', QTY_1, 0) QTY_36
     , DECODE(LOT.OPER, 'A0180', QTY_1, 0) QTY_37
     , DECODE(LOT.OPER, 'A0200', QTY_1, 0) QTY_38
     , DECODE(LOT.OPER, 'A0201', QTY_1, 0) QTY_39
     , DECODE(LOT.OPER, 'A0202', QTY_1, 0) QTY_40
     , DECODE(LOT.OPER, 'A0210', QTY_1, 0) QTY_41
     , DECODE(LOT.OPER, 'A0215', QTY_1, 0) QTY_42
     , DECODE(LOT.OPER, 'A0220', QTY_1, 0) QTY_43
     , DECODE(LOT.OPER, 'A0230', QTY_1, 0) QTY_44
     , DECODE(LOT.OPER, 'A0300', QTY_1, 0) QTY_45
     , DECODE(LOT.OPER, 'A0250', QTY_1, 0) QTY_46
     , DECODE(LOT.OPER, 'A0305', QTY_1, 0) QTY_47
     , DECODE(LOT.OPER, 'A0240', QTY_1, 0) QTY_48
     , DECODE(LOT.OPER, 'A0260', QTY_1, 0) QTY_49
     , DECODE(LOT.OPER, 'A0270', QTY_1, 0) QTY_50
     , DECODE(LOT.OPER, 'A0290', QTY_1, 0) QTY_51
     , DECODE(LOT.OPER, 'A0295', QTY_1, 0) QTY_52
     , DECODE(LOT.OPER, 'A0280', QTY_1, 0) QTY_53
     , DECODE(LOT.OPER, 'A0306', QTY_1, 0) QTY_54
     , DECODE(LOT.OPER, 'A0307', QTY_1, 0) QTY_55
     , DECODE(LOT.OPER, 'A0308', QTY_1, 0) QTY_56
     , DECODE(LOT.OPER, 'A0310', QTY_1, 0) QTY_57
     , DECODE(LOT.OPER, 'A0320', QTY_1, 0) QTY_58
     , DECODE(LOT.OPER, 'A0330', QTY_1, 0) QTY_59
     , DECODE(LOT.OPER, 'A1280', QTY_1, 0) QTY_60
     , DECODE(LOT.OPER, 'A0333', QTY_1, 0) QTY_61
     , DECODE(LOT.OPER, 'A0335', QTY_1, 0) QTY_62
     , DECODE(LOT.OPER, 'A0337', QTY_1, 0) QTY_63
     , DECODE(LOT.OPER, 'A0372', QTY_1, 0) QTY_64
     , DECODE(LOT.OPER, 'A0395', QTY_1, 0) QTY_65
     , DECODE(LOT.OPER, 'A0397', QTY_1, 0) QTY_66
     , DECODE(LOT.OPER, 'A0340', QTY_1, 0) QTY_67
     , DECODE(LOT.OPER, 'A0345', QTY_1, 0) QTY_68
     , DECODE(LOT.OPER, 'A0350', QTY_1, 0) QTY_69
     , DECODE(LOT.OPER, 'A0360', QTY_1, 0) QTY_70
     , DECODE(LOT.OPER, 'A0370', QTY_1, 0) QTY_71
     , DECODE(LOT.OPER, 'A0375', QTY_1, 0) QTY_72
     , DECODE(LOT.OPER, 'A0380', QTY_1, 0) QTY_73
     , DECODE(LOT.OPER, 'A0381', QTY_1, 0) QTY_74
     , DECODE(LOT.OPER, 'A0382', QTY_1, 0) QTY_75
     , DECODE(LOT.OPER, 'A0383', QTY_1, 0) QTY_76
     , DECODE(LOT.OPER, 'A0385', QTY_1, 0) QTY_77
     , DECODE(LOT.OPER, 'A0391', QTY_1, 0) QTY_78
     , DECODE(LOT.OPER, 'A0399', QTY_1, 0) QTY_79
     , DECODE(LOT.OPER, 'A0390', QTY_1, 0) QTY_80
     , DECODE(LOT.OPER, 'A0400', QTY_1, 0) QTY_81
     , DECODE(LOT.OPER, 'A0401', QTY_1, 0) QTY_82
     , DECODE(LOT.OPER, 'A0500', QTY_1, 0) QTY_83
     , DECODE(LOT.OPER, 'A0530', QTY_1, 0) QTY_84
     , DECODE(LOT.OPER, 'A0531', QTY_1, 0) QTY_85
     , DECODE(LOT.OPER, 'A0501', QTY_1, 0) QTY_86
     , DECODE(LOT.OPER, 'A0540', QTY_1, 0) QTY_87
     , DECODE(LOT.OPER, 'A0550', QTY_1, 0) QTY_88
     , DECODE(LOT.OPER, 'A0600', QTY_1, 0) QTY_89
     , DECODE(LOT.OPER, 'A0620', QTY_1, 0) QTY_90
     , DECODE(LOT.OPER, 'A0660', QTY_1, 0) QTY_91
     , DECODE(LOT.OPER, 'A0630', QTY_1, 0) QTY_92
     , DECODE(LOT.OPER, 'A0650', QTY_1, 0) QTY_93
     , DECODE(LOT.OPER, 'A0670', QTY_1, 0) QTY_94
     , DECODE(LOT.OPER, 'A0720', QTY_1, 0) QTY_95
     , DECODE(LOT.OPER, 'A0700', QTY_1, 0) QTY_96
     , DECODE(LOT.OPER, 'A0339', QTY_1, 0) QTY_97
     , DECODE(LOT.OPER, 'A0541', QTY_1, 0) QTY_98
     , DECODE(LOT.OPER, 'A0551', QTY_1, 0) QTY_99
     , DECODE(LOT.OPER, 'A0561', QTY_1, 0) QTY_100
     , DECODE(LOT.OPER, 'A0601', QTY_1, 0) QTY_101
     , DECODE(LOT.OPER, 'A0710', QTY_1, 0) QTY_102
     , DECODE(LOT.OPER, 'A0800', QTY_1, 0) QTY_103
     , DECODE(LOT.OPER, 'A0402', QTY_1, 0) QTY_104
     , DECODE(LOT.OPER, 'A0502', QTY_1, 0) QTY_105
     , DECODE(LOT.OPER, 'A0532', QTY_1, 0) QTY_106
     , DECODE(LOT.OPER, 'A0801', QTY_1, 0) QTY_107
     , DECODE(LOT.OPER, 'A0542', QTY_1, 0) QTY_108
     , DECODE(LOT.OPER, 'A0552', QTY_1, 0) QTY_109
     , DECODE(LOT.OPER, 'A0562', QTY_1, 0) QTY_110
     , DECODE(LOT.OPER, 'A0602', QTY_1, 0) QTY_111
     , DECODE(LOT.OPER, 'A0711', QTY_1, 0) QTY_112
     , DECODE(LOT.OPER, 'A0802', QTY_1, 0) QTY_113
     , DECODE(LOT.OPER, 'A0403', QTY_1, 0) QTY_114
     , DECODE(LOT.OPER, 'A0503', QTY_1, 0) QTY_115
     , DECODE(LOT.OPER, 'A0533', QTY_1, 0) QTY_116
     , DECODE(LOT.OPER, 'A0543', QTY_1, 0) QTY_117
     , DECODE(LOT.OPER, 'A0553', QTY_1, 0) QTY_118
     , DECODE(LOT.OPER, 'A0563', QTY_1, 0) QTY_119
     , DECODE(LOT.OPER, 'A0603', QTY_1, 0) QTY_120
     , DECODE(LOT.OPER, 'A0712', QTY_1, 0) QTY_121
     , DECODE(LOT.OPER, 'A0713', QTY_1, 0) QTY_122
     , DECODE(LOT.OPER, 'A0803', QTY_1, 0) QTY_123
     , DECODE(LOT.OPER, 'A0404', QTY_1, 0) QTY_124
     , DECODE(LOT.OPER, 'A0504', QTY_1, 0) QTY_125
     , DECODE(LOT.OPER, 'A0534', QTY_1, 0) QTY_126
     , DECODE(LOT.OPER, 'A0544', QTY_1, 0) QTY_127
     , DECODE(LOT.OPER, 'A0554', QTY_1, 0) QTY_128
     , DECODE(LOT.OPER, 'A0564', QTY_1, 0) QTY_129
     , DECODE(LOT.OPER, 'A0604', QTY_1, 0) QTY_130
     , DECODE(LOT.OPER, 'A0714', QTY_1, 0) QTY_131
     , DECODE(LOT.OPER, 'A0804', QTY_1, 0) QTY_132
     , DECODE(LOT.OPER, 'A0405', QTY_1, 0) QTY_133
     , DECODE(LOT.OPER, 'A0505', QTY_1, 0) QTY_134
     , DECODE(LOT.OPER, 'A0535', QTY_1, 0) QTY_135
     , DECODE(LOT.OPER, 'A0545', QTY_1, 0) QTY_136
     , DECODE(LOT.OPER, 'A0555', QTY_1, 0) QTY_137
     , DECODE(LOT.OPER, 'A0565', QTY_1, 0) QTY_138
     , DECODE(LOT.OPER, 'A0605', QTY_1, 0) QTY_139
     , DECODE(LOT.OPER, 'A0715', QTY_1, 0) QTY_140
     , DECODE(LOT.OPER, 'A0805', QTY_1, 0) QTY_141
     , DECODE(LOT.OPER, 'A0406', QTY_1, 0) QTY_142
     , DECODE(LOT.OPER, 'A0506', QTY_1, 0) QTY_143
     , DECODE(LOT.OPER, 'A0536', QTY_1, 0) QTY_144
     , DECODE(LOT.OPER, 'A0546', QTY_1, 0) QTY_145
     , DECODE(LOT.OPER, 'A0556', QTY_1, 0) QTY_146
     , DECODE(LOT.OPER, 'A0566', QTY_1, 0) QTY_147
     , DECODE(LOT.OPER, 'A0606', QTY_1, 0) QTY_148
     , DECODE(LOT.OPER, 'A0716', QTY_1, 0) QTY_149
     , DECODE(LOT.OPER, 'A0806', QTY_1, 0) QTY_150
     , DECODE(LOT.OPER, 'A0407', QTY_1, 0) QTY_151
     , DECODE(LOT.OPER, 'A0507', QTY_1, 0) QTY_152
     , DECODE(LOT.OPER, 'A0537', QTY_1, 0) QTY_153
     , DECODE(LOT.OPER, 'A0547', QTY_1, 0) QTY_154
     , DECODE(LOT.OPER, 'A0557', QTY_1, 0) QTY_155
     , DECODE(LOT.OPER, 'A0567', QTY_1, 0) QTY_156
     , DECODE(LOT.OPER, 'A0607', QTY_1, 0) QTY_157
     , DECODE(LOT.OPER, 'A0717', QTY_1, 0) QTY_158
     , DECODE(LOT.OPER, 'A0807', QTY_1, 0) QTY_159
     , DECODE(LOT.OPER, 'A0408', QTY_1, 0) QTY_160
     , DECODE(LOT.OPER, 'A0508', QTY_1, 0) QTY_161
     , DECODE(LOT.OPER, 'A0538', QTY_1, 0) QTY_162
     , DECODE(LOT.OPER, 'A0558', QTY_1, 0) QTY_163
     , DECODE(LOT.OPER, 'A0568', QTY_1, 0) QTY_164
     , DECODE(LOT.OPER, 'A0608', QTY_1, 0) QTY_165
     , DECODE(LOT.OPER, 'A0808', QTY_1, 0) QTY_166
     , DECODE(LOT.OPER, 'A0409', QTY_1, 0) QTY_167
     , DECODE(LOT.OPER, 'A0509', QTY_1, 0) QTY_168
     , DECODE(LOT.OPER, 'A0539', QTY_1, 0) QTY_169
     , DECODE(LOT.OPER, 'A0559', QTY_1, 0) QTY_170
     , DECODE(LOT.OPER, 'A0569', QTY_1, 0) QTY_171
     , DECODE(LOT.OPER, 'A0609', QTY_1, 0) QTY_172
     , DECODE(LOT.OPER, 'A0809', QTY_1, 0) QTY_173
     , DECODE(LOT.OPER, 'A080A', QTY_1, 0) QTY_174
     , DECODE(LOT.OPER, 'A0890', QTY_1, 0) QTY_175
     , DECODE(LOT.OPER, 'A0900', QTY_1, 0) QTY_176
     , DECODE(LOT.OPER, 'A0910', QTY_1, 0) QTY_177
     , DECODE(LOT.OPER, 'A0920', QTY_1, 0) QTY_178
     , DECODE(LOT.OPER, 'A0930', QTY_1, 0) QTY_179
     , DECODE(LOT.OPER, 'A0935', QTY_1, 0) QTY_180
     , DECODE(LOT.OPER, 'A040A', QTY_1, 0) QTY_181
     , DECODE(LOT.OPER, 'A0950', QTY_1, 0) QTY_182
     , DECODE(LOT.OPER, 'A053A', QTY_1, 0) QTY_183
     , DECODE(LOT.OPER, 'A0970', QTY_1, 0) QTY_184
     , DECODE(LOT.OPER, 'A0940', QTY_1, 0) QTY_185
     , DECODE(LOT.OPER, 'A0980', QTY_1, 0) QTY_186
     , DECODE(LOT.OPER, 'A1000', QTY_1, 0) QTY_187
     , DECODE(LOT.OPER, 'A055A', QTY_1, 0) QTY_188
     , DECODE(LOT.OPER, 'A060A', QTY_1, 0) QTY_189
     , DECODE(LOT.OPER, 'A1040', QTY_1, 0) QTY_190
     , DECODE(LOT.OPER, 'A1070', QTY_1, 0) QTY_191
     , DECODE(LOT.OPER, 'A1020', QTY_1, 0) QTY_192
     , DECODE(LOT.OPER, 'A1100', QTY_1, 0) QTY_193
     , DECODE(LOT.OPER, 'A1110', QTY_1, 0) QTY_194
     , DECODE(LOT.OPER, 'A1120', QTY_1, 0) QTY_195
     , DECODE(LOT.OPER, 'A1130', QTY_1, 0) QTY_196
     , DECODE(LOT.OPER, 'A1140', QTY_1, 0) QTY_197
     , DECODE(LOT.OPER, 'A1150', QTY_1, 0) QTY_198
     , DECODE(LOT.OPER, 'A1600', QTY_1, 0) QTY_199
     , DECODE(LOT.OPER, 'A1650', QTY_1, 0) QTY_200
     , DECODE(LOT.OPER, 'A1170', QTY_1, 0) QTY_201
     , DECODE(LOT.OPER, 'A1180', QTY_1, 0) QTY_202
     , DECODE(LOT.OPER, 'A1200', QTY_1, 0) QTY_203
     , DECODE(LOT.OPER, 'A1230', QTY_1, 0) QTY_204
     , DECODE(LOT.OPER, 'A1240', QTY_1, 0) QTY_205
     , DECODE(LOT.OPER, 'A1250', QTY_1, 0) QTY_206
     , DECODE(LOT.OPER, 'A1260', QTY_1, 0) QTY_207
     , DECODE(LOT.OPER, 'A1270', QTY_1, 0) QTY_208
     , DECODE(LOT.OPER, 'A1300', QTY_1, 0) QTY_209
     , DECODE(LOT.OPER, 'A1350', QTY_1, 0) QTY_210
     , DECODE(LOT.OPER, 'A1370', QTY_1, 0) QTY_211
     , DECODE(LOT.OPER, 'A1380', QTY_1, 0) QTY_212
     , DECODE(LOT.OPER, 'A1050', QTY_1, 0) QTY_213
     , DECODE(LOT.OPER, 'A1420', QTY_1, 0) QTY_214
     , DECODE(LOT.OPER, 'A1440', QTY_1, 0) QTY_215
     , DECODE(LOT.OPER, 'A1450', QTY_1, 0) QTY_216
     , DECODE(LOT.OPER, 'A1821', QTY_1, 0) QTY_217
     , DECODE(LOT.OPER, 'A1460', QTY_1, 0) QTY_218
     , DECODE(LOT.OPER, 'A1470', QTY_1, 0) QTY_219
     , DECODE(LOT.OPER, 'A1500', QTY_1, 0) QTY_220
     , DECODE(LOT.OPER, 'A1550', QTY_1, 0) QTY_221
     , DECODE(LOT.OPER, 'A1610', QTY_1, 0) QTY_222
     , DECODE(LOT.OPER, 'A1560', QTY_1, 0) QTY_223
     , DECODE(LOT.OPER, 'A1720', QTY_1, 0) QTY_224
     , DECODE(LOT.OPER, 'A1730', QTY_1, 0) QTY_225
     , DECODE(LOT.OPER, 'A1740', QTY_1, 0) QTY_226
     , DECODE(LOT.OPER, 'A1750', QTY_1, 0) QTY_227
     , DECODE(LOT.OPER, 'A1755', QTY_1, 0) QTY_228
     , DECODE(LOT.OPER, 'A1760', QTY_1, 0) QTY_229
     , DECODE(LOT.OPER, 'A1765', QTY_1, 0) QTY_230
     , DECODE(LOT.OPER, 'A1766', QTY_1, 0) QTY_231
     , DECODE(LOT.OPER, 'A1763', QTY_1, 0) QTY_232
     , DECODE(LOT.OPER, 'A1770', QTY_1, 0) QTY_233
     , DECODE(LOT.OPER, 'A1780', QTY_1, 0) QTY_234
     , DECODE(LOT.OPER, 'A1790', QTY_1, 0) QTY_235
     , DECODE(LOT.OPER, 'A1795', QTY_1, 0) QTY_236
     , DECODE(LOT.OPER, 'A1860', QTY_1, 0) QTY_237
     , DECODE(LOT.OPER, 'A1850', QTY_1, 0) QTY_238
     , DECODE(LOT.OPER, 'A1390', QTY_1, 0) QTY_239
     , DECODE(LOT.OPER, 'A1800', QTY_1, 0) QTY_240
     , DECODE(LOT.OPER, 'A1805', QTY_1, 0) QTY_241
     , DECODE(LOT.OPER, 'A1810', QTY_1, 0) QTY_242
     , DECODE(LOT.OPER, 'A1811', QTY_1, 0) QTY_243
     , DECODE(LOT.OPER, 'A1812', QTY_1, 0) QTY_244
     , DECODE(LOT.OPER, 'A1816', QTY_1, 0) QTY_245
     , DECODE(LOT.OPER, 'A1820', QTY_1, 0) QTY_246
     , DECODE(LOT.OPER, 'A1825', QTY_1, 0) QTY_247
     , DECODE(LOT.OPER, 'A1826', QTY_1, 0) QTY_248
     , DECODE(LOT.OPER, 'A1920', QTY_1, 0) QTY_249
     , DECODE(LOT.OPER, 'A1960', QTY_1, 0) QTY_250
     , DECODE(LOT.OPER, 'A1815', QTY_1, 0) QTY_251
     , DECODE(LOT.OPER, 'A1830', QTY_1, 0) QTY_252
     , DECODE(LOT.OPER, 'A1710', QTY_1, 0) QTY_253
     , DECODE(LOT.OPER, 'A1840', QTY_1, 0) QTY_254
     , DECODE(LOT.OPER, 'A1900', QTY_1, 0) QTY_255
     , DECODE(LOT.OPER, 'A1910', QTY_1, 0) QTY_256
     , DECODE(LOT.OPER, 'A1950', QTY_1, 0) QTY_257
     , DECODE(LOT.OPER, 'A2000', QTY_1, 0) QTY_258
     , DECODE(LOT.OPER, 'A2010', QTY_1, 0) QTY_259
     , DECODE(LOT.OPER, 'A2020', QTY_1, 0) QTY_260
     , DECODE(LOT.OPER, 'A2025', QTY_1, 0) QTY_261
     , DECODE(LOT.OPER, 'A1819', QTY_1, 0) QTY_262
     , DECODE(LOT.OPER, 'A2030', QTY_1, 0) QTY_263
     , DECODE(LOT.OPER, 'A2040', QTY_1, 0) QTY_264
     , DECODE(LOT.OPER, 'A2041', QTY_1, 0) QTY_265
     , DECODE(LOT.OPER, 'A2042', QTY_1, 0) QTY_266
     , DECODE(LOT.OPER, 'A2070', QTY_1, 0) QTY_267
     , DECODE(LOT.OPER, 'A2050', QTY_1, 0) QTY_268
     , DECODE(LOT.OPER, 'A2150', QTY_1, 0) QTY_269
     , DECODE(LOT.OPER, 'A2200', QTY_1, 0) QTY_270
     , DECODE(LOT.OPER, 'A2100', QTY_1, 0) QTY_271
     , DECODE(LOT.OPER, 'A2300', QTY_1, 0) QTY_272
     , DECODE(LOT.OPER, 'A2350', QTY_1, 0) QTY_273
     , DECODE(LOT.OPER, 'AZ009', QTY_1, 0) QTY_274
     , DECODE(LOT.OPER, 'AZ010', QTY_1, 0) QTY_275
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) AS TTL_TAT 
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_TAT 
  FROM (
        SELECT LOT.FACTORY, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14, LOT.OPER_IN_TIME, LOT.CREATE_QTY_1, OPR.OPER_GRP_1 AS OPER_GROUP, LOT.OPER, LOT.QTY_1 
          FROM RWIPLOTSTS_BOH LOT, 
               MWIPOPRDEF OPR 
         WHERE LOT.CUTOFF_DT = '2020040122'
           AND LOT.FACTORY = OPR.FACTORY 
           AND LOT.OPER = OPR.OPER 
           AND LOT.FACTORY = 'HMVA2' 
           AND LOT.LOT_DEL_FLAG = ' ' 
           AND LOT.MAT_VER = 1 
           AND LOT.LOT_TYPE = 'W' 
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE LOT.FACTORY = MAT.FACTORY 
   AND LOT.MAT_ID = MAT.MAT_ID 
ORDER BY Customer, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS Customer,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 as PIN_TYPE, LOT.MAT_ID as Product,  ' '
     , LOT.LOT_CMF_4 RUN_ID 
     , LOT.LOT_ID 
     , TO_CHAR(TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS IN_TIME 
     , TO_CHAR(TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS MOVE_TIME 
     , LOT.CREATE_QTY_1 AS IN_QTY 
     , DECODE(LOT.OPER, 'A0000', QTY_1, 0) QTY_0
     , DECODE(LOT.OPER, 'A0005', QTY_1, 0) QTY_1
     , DECODE(LOT.OPER, 'A000N', QTY_1, 0) QTY_2
     , DECODE(LOT.OPER, 'A0010', QTY_1, 0) QTY_3
     , DECODE(LOT.OPER, 'A0012', QTY_1, 0) QTY_4
     , DECODE(LOT.OPER, 'A0013', QTY_1, 0) QTY_5
     , DECODE(LOT.OPER, 'A0015', QTY_1, 0) QTY_6
     , DECODE(LOT.OPER, 'A0020', QTY_1, 0) QTY_7
     , DECODE(LOT.OPER, 'A0055', QTY_1, 0) QTY_8
     , DECODE(LOT.OPER, 'A0023', QTY_1, 0) QTY_9
     , DECODE(LOT.OPER, 'A0025', QTY_1, 0) QTY_10
     , DECODE(LOT.OPER, 'A0030', QTY_1, 0) QTY_11
     , DECODE(LOT.OPER, 'A0190', QTY_1, 0) QTY_12
     , DECODE(LOT.OPER, 'A0033', QTY_1, 0) QTY_13
     , DECODE(LOT.OPER, 'A0040', QTY_1, 0) QTY_14
     , DECODE(LOT.OPER, 'A0041', QTY_1, 0) QTY_15
     , DECODE(LOT.OPER, 'A0042', QTY_1, 0) QTY_16
     , DECODE(LOT.OPER, 'A0045', QTY_1, 0) QTY_17
     , DECODE(LOT.OPER, 'A0050', QTY_1, 0) QTY_18
     , DECODE(LOT.OPER, 'A0060', QTY_1, 0) QTY_19
     , DECODE(LOT.OPER, 'A0070', QTY_1, 0) QTY_20
     , DECODE(LOT.OPER, 'A0080', QTY_1, 0) QTY_21
     , DECODE(LOT.OPER, 'A0090', QTY_1, 0) QTY_22
     , DECODE(LOT.OPER, 'A0095', QTY_1, 0) QTY_23
     , DECODE(LOT.OPER, 'A0110', QTY_1, 0) QTY_24
     , DECODE(LOT.OPER, 'A0120', QTY_1, 0) QTY_25
     , DECODE(LOT.OPER, 'A0130', QTY_1, 0) QTY_26
     , DECODE(LOT.OPER, 'A0140', QTY_1, 0) QTY_27
     , DECODE(LOT.OPER, 'A0160', QTY_1, 0) QTY_28
     , DECODE(LOT.OPER, 'A0161', QTY_1, 0) QTY_29
     , DECODE(LOT.OPER, 'A0165', QTY_1, 0) QTY_30
     , DECODE(LOT.OPER, 'A0065', QTY_1, 0) QTY_31
     , DECODE(LOT.OPER, 'A0100', QTY_1, 0) QTY_32
     , DECODE(LOT.OPER, 'A0150', QTY_1, 0) QTY_33
     , DECODE(LOT.OPER, 'A0175', QTY_1, 0) QTY_34
     , DECODE(LOT.OPER, 'A0176', QTY_1, 0) QTY_35
     , DECODE(LOT.OPER, 'A0170', QTY_1, 0) QTY_36
     , DECODE(LOT.OPER, 'A0180', QTY_1, 0) QTY_37
     , DECODE(LOT.OPER, 'A0200', QTY_1, 0) QTY_38
     , DECODE(LOT.OPER, 'A0201', QTY_1, 0) QTY_39
     , DECODE(LOT.OPER, 'A0202', QTY_1, 0) QTY_40
     , DECODE(LOT.OPER, 'A0210', QTY_1, 0) QTY_41
     , DECODE(LOT.OPER, 'A0215', QTY_1, 0) QTY_42
     , DECODE(LOT.OPER, 'A0220', QTY_1, 0) QTY_43
     , DECODE(LOT.OPER, 'A0230', QTY_1, 0) QTY_44
     , DECODE(LOT.OPER, 'A0300', QTY_1, 0) QTY_45
     , DECODE(LOT.OPER, 'A0250', QTY_1, 0) QTY_46
     , DECODE(LOT.OPER, 'A0305', QTY_1, 0) QTY_47
     , DECODE(LOT.OPER, 'A0240', QTY_1, 0) QTY_48
     , DECODE(LOT.OPER, 'A0260', QTY_1, 0) QTY_49
     , DECODE(LOT.OPER, 'A0270', QTY_1, 0) QTY_50
     , DECODE(LOT.OPER, 'A0290', QTY_1, 0) QTY_51
     , DECODE(LOT.OPER, 'A0295', QTY_1, 0) QTY_52
     , DECODE(LOT.OPER, 'A0280', QTY_1, 0) QTY_53
     , DECODE(LOT.OPER, 'A0306', QTY_1, 0) QTY_54
     , DECODE(LOT.OPER, 'A0307', QTY_1, 0) QTY_55
     , DECODE(LOT.OPER, 'A0308', QTY_1, 0) QTY_56
     , DECODE(LOT.OPER, 'A0310', QTY_1, 0) QTY_57
     , DECODE(LOT.OPER, 'A0320', QTY_1, 0) QTY_58
     , DECODE(LOT.OPER, 'A0330', QTY_1, 0) QTY_59
     , DECODE(LOT.OPER, 'A1280', QTY_1, 0) QTY_60
     , DECODE(LOT.OPER, 'A0333', QTY_1, 0) QTY_61
     , DECODE(LOT.OPER, 'A0335', QTY_1, 0) QTY_62
     , DECODE(LOT.OPER, 'A0337', QTY_1, 0) QTY_63
     , DECODE(LOT.OPER, 'A0372', QTY_1, 0) QTY_64
     , DECODE(LOT.OPER, 'A0395', QTY_1, 0) QTY_65
     , DECODE(LOT.OPER, 'A0397', QTY_1, 0) QTY_66
     , DECODE(LOT.OPER, 'A0340', QTY_1, 0) QTY_67
     , DECODE(LOT.OPER, 'A0345', QTY_1, 0) QTY_68
     , DECODE(LOT.OPER, 'A0350', QTY_1, 0) QTY_69
     , DECODE(LOT.OPER, 'A0360', QTY_1, 0) QTY_70
     , DECODE(LOT.OPER, 'A0370', QTY_1, 0) QTY_71
     , DECODE(LOT.OPER, 'A0375', QTY_1, 0) QTY_72
     , DECODE(LOT.OPER, 'A0380', QTY_1, 0) QTY_73
     , DECODE(LOT.OPER, 'A0381', QTY_1, 0) QTY_74
     , DECODE(LOT.OPER, 'A0382', QTY_1, 0) QTY_75
     , DECODE(LOT.OPER, 'A0383', QTY_1, 0) QTY_76
     , DECODE(LOT.OPER, 'A0385', QTY_1, 0) QTY_77
     , DECODE(LOT.OPER, 'A0391', QTY_1, 0) QTY_78
     , DECODE(LOT.OPER, 'A0399', QTY_1, 0) QTY_79
     , DECODE(LOT.OPER, 'A0390', QTY_1, 0) QTY_80
     , DECODE(LOT.OPER, 'A0400', QTY_1, 0) QTY_81
     , DECODE(LOT.OPER, 'A0401', QTY_1, 0) QTY_82
     , DECODE(LOT.OPER, 'A0500', QTY_1, 0) QTY_83
     , DECODE(LOT.OPER, 'A0530', QTY_1, 0) QTY_84
     , DECODE(LOT.OPER, 'A0531', QTY_1, 0) QTY_85
     , DECODE(LOT.OPER, 'A0501', QTY_1, 0) QTY_86
     , DECODE(LOT.OPER, 'A0540', QTY_1, 0) QTY_87
     , DECODE(LOT.OPER, 'A0550', QTY_1, 0) QTY_88
     , DECODE(LOT.OPER, 'A0600', QTY_1, 0) QTY_89
     , DECODE(LOT.OPER, 'A0620', QTY_1, 0) QTY_90
     , DECODE(LOT.OPER, 'A0660', QTY_1, 0) QTY_91
     , DECODE(LOT.OPER, 'A0630', QTY_1, 0) QTY_92
     , DECODE(LOT.OPER, 'A0650', QTY_1, 0) QTY_93
     , DECODE(LOT.OPER, 'A0670', QTY_1, 0) QTY_94
     , DECODE(LOT.OPER, 'A0720', QTY_1, 0) QTY_95
     , DECODE(LOT.OPER, 'A0700', QTY_1, 0) QTY_96
     , DECODE(LOT.OPER, 'A0339', QTY_1, 0) QTY_97
     , DECODE(LOT.OPER, 'A0541', QTY_1, 0) QTY_98
     , DECODE(LOT.OPER, 'A0551', QTY_1, 0) QTY_99
     , DECODE(LOT.OPER, 'A0561', QTY_1, 0) QTY_100
     , DECODE(LOT.OPER, 'A0601', QTY_1, 0) QTY_101
     , DECODE(LOT.OPER, 'A0710', QTY_1, 0) QTY_102
     , DECODE(LOT.OPER, 'A0800', QTY_1, 0) QTY_103
     , DECODE(LOT.OPER, 'A0402', QTY_1, 0) QTY_104
     , DECODE(LOT.OPER, 'A0502', QTY_1, 0) QTY_105
     , DECODE(LOT.OPER, 'A0532', QTY_1, 0) QTY_106
     , DECODE(LOT.OPER, 'A0801', QTY_1, 0) QTY_107
     , DECODE(LOT.OPER, 'A0542', QTY_1, 0) QTY_108
     , DECODE(LOT.OPER, 'A0552', QTY_1, 0) QTY_109
     , DECODE(LOT.OPER, 'A0562', QTY_1, 0) QTY_110
     , DECODE(LOT.OPER, 'A0602', QTY_1, 0) QTY_111
     , DECODE(LOT.OPER, 'A0711', QTY_1, 0) QTY_112
     , DECODE(LOT.OPER, 'A0802', QTY_1, 0) QTY_113
     , DECODE(LOT.OPER, 'A0403', QTY_1, 0) QTY_114
     , DECODE(LOT.OPER, 'A0503', QTY_1, 0) QTY_115
     , DECODE(LOT.OPER, 'A0533', QTY_1, 0) QTY_116
     , DECODE(LOT.OPER, 'A0543', QTY_1, 0) QTY_117
     , DECODE(LOT.OPER, 'A0553', QTY_1, 0) QTY_118
     , DECODE(LOT.OPER, 'A0563', QTY_1, 0) QTY_119
     , DECODE(LOT.OPER, 'A0603', QTY_1, 0) QTY_120
     , DECODE(LOT.OPER, 'A0712', QTY_1, 0) QTY_121
     , DECODE(LOT.OPER, 'A0713', QTY_1, 0) QTY_122
     , DECODE(LOT.OPER, 'A0803', QTY_1, 0) QTY_123
     , DECODE(LOT.OPER, 'A0404', QTY_1, 0) QTY_124
     , DECODE(LOT.OPER, 'A0504', QTY_1, 0) QTY_125
     , DECODE(LOT.OPER, 'A0534', QTY_1, 0) QTY_126
     , DECODE(LOT.OPER, 'A0544', QTY_1, 0) QTY_127
     , DECODE(LOT.OPER, 'A0554', QTY_1, 0) QTY_128
     , DECODE(LOT.OPER, 'A0564', QTY_1, 0) QTY_129
     , DECODE(LOT.OPER, 'A0604', QTY_1, 0) QTY_130
     , DECODE(LOT.OPER, 'A0714', QTY_1, 0) QTY_131
     , DECODE(LOT.OPER, 'A0804', QTY_1, 0) QTY_132
     , DECODE(LOT.OPER, 'A0405', QTY_1, 0) QTY_133
     , DECODE(LOT.OPER, 'A0505', QTY_1, 0) QTY_134
     , DECODE(LOT.OPER, 'A0535', QTY_1, 0) QTY_135
     , DECODE(LOT.OPER, 'A0545', QTY_1, 0) QTY_136
     , DECODE(LOT.OPER, 'A0555', QTY_1, 0) QTY_137
     , DECODE(LOT.OPER, 'A0565', QTY_1, 0) QTY_138
     , DECODE(LOT.OPER, 'A0605', QTY_1, 0) QTY_139
     , DECODE(LOT.OPER, 'A0715', QTY_1, 0) QTY_140
     , DECODE(LOT.OPER, 'A0805', QTY_1, 0) QTY_141
     , DECODE(LOT.OPER, 'A0406', QTY_1, 0) QTY_142
     , DECODE(LOT.OPER, 'A0506', QTY_1, 0) QTY_143
     , DECODE(LOT.OPER, 'A0536', QTY_1, 0) QTY_144
     , DECODE(LOT.OPER, 'A0546', QTY_1, 0) QTY_145
     , DECODE(LOT.OPER, 'A0556', QTY_1, 0) QTY_146
     , DECODE(LOT.OPER, 'A0566', QTY_1, 0) QTY_147
     , DECODE(LOT.OPER, 'A0606', QTY_1, 0) QTY_148
     , DECODE(LOT.OPER, 'A0716', QTY_1, 0) QTY_149
     , DECODE(LOT.OPER, 'A0806', QTY_1, 0) QTY_150
     , DECODE(LOT.OPER, 'A0407', QTY_1, 0) QTY_151
     , DECODE(LOT.OPER, 'A0507', QTY_1, 0) QTY_152
     , DECODE(LOT.OPER, 'A0537', QTY_1, 0) QTY_153
     , DECODE(LOT.OPER, 'A0547', QTY_1, 0) QTY_154
     , DECODE(LOT.OPER, 'A0557', QTY_1, 0) QTY_155
     , DECODE(LOT.OPER, 'A0567', QTY_1, 0) QTY_156
     , DECODE(LOT.OPER, 'A0607', QTY_1, 0) QTY_157
     , DECODE(LOT.OPER, 'A0717', QTY_1, 0) QTY_158
     , DECODE(LOT.OPER, 'A0807', QTY_1, 0) QTY_159
     , DECODE(LOT.OPER, 'A0408', QTY_1, 0) QTY_160
     , DECODE(LOT.OPER, 'A0508', QTY_1, 0) QTY_161
     , DECODE(LOT.OPER, 'A0538', QTY_1, 0) QTY_162
     , DECODE(LOT.OPER, 'A0558', QTY_1, 0) QTY_163
     , DECODE(LOT.OPER, 'A0568', QTY_1, 0) QTY_164
     , DECODE(LOT.OPER, 'A0608', QTY_1, 0) QTY_165
     , DECODE(LOT.OPER, 'A0808', QTY_1, 0) QTY_166
     , DECODE(LOT.OPER, 'A0409', QTY_1, 0) QTY_167
     , DECODE(LOT.OPER, 'A0509', QTY_1, 0) QTY_168
     , DECODE(LOT.OPER, 'A0539', QTY_1, 0) QTY_169
     , DECODE(LOT.OPER, 'A0559', QTY_1, 0) QTY_170
     , DECODE(LOT.OPER, 'A0569', QTY_1, 0) QTY_171
     , DECODE(LOT.OPER, 'A0609', QTY_1, 0) QTY_172
     , DECODE(LOT.OPER, 'A0809', QTY_1, 0) QTY_173
     , DECODE(LOT.OPER, 'A080A', QTY_1, 0) QTY_174
     , DECODE(LOT.OPER, 'A0890', QTY_1, 0) QTY_175
     , DECODE(LOT.OPER, 'A0900', QTY_1, 0) QTY_176
     , DECODE(LOT.OPER, 'A0910', QTY_1, 0) QTY_177
     , DECODE(LOT.OPER, 'A0920', QTY_1, 0) QTY_178
     , DECODE(LOT.OPER, 'A0930', QTY_1, 0) QTY_179
     , DECODE(LOT.OPER, 'A0935', QTY_1, 0) QTY_180
     , DECODE(LOT.OPER, 'A040A', QTY_1, 0) QTY_181
     , DECODE(LOT.OPER, 'A0950', QTY_1, 0) QTY_182
     , DECODE(LOT.OPER, 'A053A', QTY_1, 0) QTY_183
     , DECODE(LOT.OPER, 'A0970', QTY_1, 0) QTY_184
     , DECODE(LOT.OPER, 'A0940', QTY_1, 0) QTY_185
     , DECODE(LOT.OPER, 'A0980', QTY_1, 0) QTY_186
     , DECODE(LOT.OPER, 'A1000', QTY_1, 0) QTY_187
     , DECODE(LOT.OPER, 'A055A', QTY_1, 0) QTY_188
     , DECODE(LOT.OPER, 'A060A', QTY_1, 0) QTY_189
     , DECODE(LOT.OPER, 'A1040', QTY_1, 0) QTY_190
     , DECODE(LOT.OPER, 'A1070', QTY_1, 0) QTY_191
     , DECODE(LOT.OPER, 'A1020', QTY_1, 0) QTY_192
     , DECODE(LOT.OPER, 'A1100', QTY_1, 0) QTY_193
     , DECODE(LOT.OPER, 'A1110', QTY_1, 0) QTY_194
     , DECODE(LOT.OPER, 'A1120', QTY_1, 0) QTY_195
     , DECODE(LOT.OPER, 'A1130', QTY_1, 0) QTY_196
     , DECODE(LOT.OPER, 'A1140', QTY_1, 0) QTY_197
     , DECODE(LOT.OPER, 'A1150', QTY_1, 0) QTY_198
     , DECODE(LOT.OPER, 'A1600', QTY_1, 0) QTY_199
     , DECODE(LOT.OPER, 'A1650', QTY_1, 0) QTY_200
     , DECODE(LOT.OPER, 'A1170', QTY_1, 0) QTY_201
     , DECODE(LOT.OPER, 'A1180', QTY_1, 0) QTY_202
     , DECODE(LOT.OPER, 'A1200', QTY_1, 0) QTY_203
     , DECODE(LOT.OPER, 'A1230', QTY_1, 0) QTY_204
     , DECODE(LOT.OPER, 'A1240', QTY_1, 0) QTY_205
     , DECODE(LOT.OPER, 'A1250', QTY_1, 0) QTY_206
     , DECODE(LOT.OPER, 'A1260', QTY_1, 0) QTY_207
     , DECODE(LOT.OPER, 'A1270', QTY_1, 0) QTY_208
     , DECODE(LOT.OPER, 'A1300', QTY_1, 0) QTY_209
     , DECODE(LOT.OPER, 'A1350', QTY_1, 0) QTY_210
     , DECODE(LOT.OPER, 'A1370', QTY_1, 0) QTY_211
     , DECODE(LOT.OPER, 'A1380', QTY_1, 0) QTY_212
     , DECODE(LOT.OPER, 'A1050', QTY_1, 0) QTY_213
     , DECODE(LOT.OPER, 'A1420', QTY_1, 0) QTY_214
     , DECODE(LOT.OPER, 'A1440', QTY_1, 0) QTY_215
     , DECODE(LOT.OPER, 'A1450', QTY_1, 0) QTY_216
     , DECODE(LOT.OPER, 'A1821', QTY_1, 0) QTY_217
     , DECODE(LOT.OPER, 'A1460', QTY_1, 0) QTY_218
     , DECODE(LOT.OPER, 'A1470', QTY_1, 0) QTY_219
     , DECODE(LOT.OPER, 'A1500', QTY_1, 0) QTY_220
     , DECODE(LOT.OPER, 'A1550', QTY_1, 0) QTY_221
     , DECODE(LOT.OPER, 'A1610', QTY_1, 0) QTY_222
     , DECODE(LOT.OPER, 'A1560', QTY_1, 0) QTY_223
     , DECODE(LOT.OPER, 'A1720', QTY_1, 0) QTY_224
     , DECODE(LOT.OPER, 'A1730', QTY_1, 0) QTY_225
     , DECODE(LOT.OPER, 'A1740', QTY_1, 0) QTY_226
     , DECODE(LOT.OPER, 'A1750', QTY_1, 0) QTY_227
     , DECODE(LOT.OPER, 'A1755', QTY_1, 0) QTY_228
     , DECODE(LOT.OPER, 'A1760', QTY_1, 0) QTY_229
     , DECODE(LOT.OPER, 'A1765', QTY_1, 0) QTY_230
     , DECODE(LOT.OPER, 'A1766', QTY_1, 0) QTY_231
     , DECODE(LOT.OPER, 'A1763', QTY_1, 0) QTY_232
     , DECODE(LOT.OPER, 'A1770', QTY_1, 0) QTY_233
     , DECODE(LOT.OPER, 'A1780', QTY_1, 0) QTY_234
     , DECODE(LOT.OPER, 'A1790', QTY_1, 0) QTY_235
     , DECODE(LOT.OPER, 'A1795', QTY_1, 0) QTY_236
     , DECODE(LOT.OPER, 'A1860', QTY_1, 0) QTY_237
     , DECODE(LOT.OPER, 'A1850', QTY_1, 0) QTY_238
     , DECODE(LOT.OPER, 'A1390', QTY_1, 0) QTY_239
     , DECODE(LOT.OPER, 'A1800', QTY_1, 0) QTY_240
     , DECODE(LOT.OPER, 'A1805', QTY_1, 0) QTY_241
     , DECODE(LOT.OPER, 'A1810', QTY_1, 0) QTY_242
     , DECODE(LOT.OPER, 'A1811', QTY_1, 0) QTY_243
     , DECODE(LOT.OPER, 'A1812', QTY_1, 0) QTY_244
     , DECODE(LOT.OPER, 'A1816', QTY_1, 0) QTY_245
     , DECODE(LOT.OPER, 'A1820', QTY_1, 0) QTY_246
     , DECODE(LOT.OPER, 'A1825', QTY_1, 0) QTY_247
     , DECODE(LOT.OPER, 'A1826', QTY_1, 0) QTY_248
     , DECODE(LOT.OPER, 'A1920', QTY_1, 0) QTY_249
     , DECODE(LOT.OPER, 'A1960', QTY_1, 0) QTY_250
     , DECODE(LOT.OPER, 'A1815', QTY_1, 0) QTY_251
     , DECODE(LOT.OPER, 'A1830', QTY_1, 0) QTY_252
     , DECODE(LOT.OPER, 'A1710', QTY_1, 0) QTY_253
     , DECODE(LOT.OPER, 'A1840', QTY_1, 0) QTY_254
     , DECODE(LOT.OPER, 'A1900', QTY_1, 0) QTY_255
     , DECODE(LOT.OPER, 'A1910', QTY_1, 0) QTY_256
     , DECODE(LOT.OPER, 'A1950', QTY_1, 0) QTY_257
     , DECODE(LOT.OPER, 'A2000', QTY_1, 0) QTY_258
     , DECODE(LOT.OPER, 'A2010', QTY_1, 0) QTY_259
     , DECODE(LOT.OPER, 'A2020', QTY_1, 0) QTY_260
     , DECODE(LOT.OPER, 'A2025', QTY_1, 0) QTY_261
     , DECODE(LOT.OPER, 'A1819', QTY_1, 0) QTY_262
     , DECODE(LOT.OPER, 'A2030', QTY_1, 0) QTY_263
     , DECODE(LOT.OPER, 'A2040', QTY_1, 0) QTY_264
     , DECODE(LOT.OPER, 'A2041', QTY_1, 0) QTY_265
     , DECODE(LOT.OPER, 'A2042', QTY_1, 0) QTY_266
     , DECODE(LOT.OPER, 'A2070', QTY_1, 0) QTY_267
     , DECODE(LOT.OPER, 'A2050', QTY_1, 0) QTY_268
     , DECODE(LOT.OPER, 'A2150', QTY_1, 0) QTY_269
     , DECODE(LOT.OPER, 'A2200', QTY_1, 0) QTY_270
     , DECODE(LOT.OPER, 'A2100', QTY_1, 0) QTY_271
     , DECODE(LOT.OPER, 'A2300', QTY_1, 0) QTY_272
     , DECODE(LOT.OPER, 'A2350', QTY_1, 0) QTY_273
     , DECODE(LOT.OPER, 'AZ009', QTY_1, 0) QTY_274
     , DECODE(LOT.OPER, 'AZ010', QTY_1, 0) QTY_275
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) AS TTL_TAT 
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_TAT 
     , NVL(TO_NUMBER((SELECT ATTR_VALUE FROM MATRNAMSTS@RPTTOMES WHERE ATTR_KEY = LOT.M_LOT_ID AND ATTR_TYPE = 'LOT' AND FACTORY = LOT.FACTORY AND ATTR_NAME = 'PCB_STRIP')),0) AS PCB_STRIP
     , NVL(TO_NUMBER((SELECT ATTR_VALUE FROM MATRNAMSTS@RPTTOMES WHERE ATTR_KEY = LOT.M_LOT_ID AND ATTR_TYPE = 'LOT' AND FACTORY = LOT.FACTORY AND ATTR_NAME = 'PCB_BAD_QTY')),0) AS PCB_BAD_QTY
  FROM (
        SELECT LOT.FACTORY, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14, LOT.OPER_IN_TIME, LOT.CREATE_QTY_1, OPR.OPER_GRP_1 AS OPER_GROUP, LOT.OPER, LOT.QTY_1 
             , CASE WHEN LOT.MAT_ID LIKE 'EI%' THEN (  
                                                     SELECT LOT_ID  
                                                       FROM CRESMATHIS@RPTTOMES  
                                                      WHERE FACTORY = 'HMVA2' 
                                                        AND START_LOT_ID = LOT.LOT_ID 
                                                        AND M_MAT_ID IN (SELECT MAT_ID FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_TYPE = 'PB' AND DELETE_FLAG = ' ') 
                                                    ) END AS M_LOT_ID 
          FROM RWIPLOTSTS_BOH LOT, 
               MWIPOPRDEF OPR 
         WHERE LOT.CUTOFF_DT = '2020040122'
           AND LOT.FACTORY = OPR.FACTORY 
           AND LOT.OPER = OPR.OPER 
           AND LOT.FACTORY = 'HMVA2' 
        AND LOT.MAT_ID LIKE 'EI%'
           AND LOT.LOT_DEL_FLAG = ' ' 
           AND LOT.MAT_VER = 1 
           AND LOT.LOT_TYPE = 'W' 
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE LOT.FACTORY = MAT.FACTORY 
   AND LOT.MAT_ID = MAT.MAT_ID 
ORDER BY Customer, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS Customer,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 as PIN_TYPE, LOT.MAT_ID as Product,  ' '
     , LOT.LOT_CMF_4 RUN_ID 
     , LOT.LOT_ID 
     , TO_CHAR(TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS IN_TIME 
     , TO_CHAR(TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS MOVE_TIME 
     , LOT.CREATE_QTY_1 AS IN_QTY 
     , DECODE(LOT.OPER, 'A0000', QTY_1, 0) QTY_0
     , DECODE(LOT.OPER, 'A0005', QTY_1, 0) QTY_1
     , DECODE(LOT.OPER, 'A000N', QTY_1, 0) QTY_2
     , DECODE(LOT.OPER, 'A0010', QTY_1, 0) QTY_3
     , DECODE(LOT.OPER, 'A0012', QTY_1, 0) QTY_4
     , DECODE(LOT.OPER, 'A0013', QTY_1, 0) QTY_5
     , DECODE(LOT.OPER, 'A0015', QTY_1, 0) QTY_6
     , DECODE(LOT.OPER, 'A0020', QTY_1, 0) QTY_7
     , DECODE(LOT.OPER, 'A0055', QTY_1, 0) QTY_8
     , DECODE(LOT.OPER, 'A0023', QTY_1, 0) QTY_9
     , DECODE(LOT.OPER, 'A0025', QTY_1, 0) QTY_10
     , DECODE(LOT.OPER, 'A0030', QTY_1, 0) QTY_11
     , DECODE(LOT.OPER, 'A0190', QTY_1, 0) QTY_12
     , DECODE(LOT.OPER, 'A0033', QTY_1, 0) QTY_13
     , DECODE(LOT.OPER, 'A0040', QTY_1, 0) QTY_14
     , DECODE(LOT.OPER, 'A0041', QTY_1, 0) QTY_15
     , DECODE(LOT.OPER, 'A0042', QTY_1, 0) QTY_16
     , DECODE(LOT.OPER, 'A0045', QTY_1, 0) QTY_17
     , DECODE(LOT.OPER, 'A0050', QTY_1, 0) QTY_18
     , DECODE(LOT.OPER, 'A0060', QTY_1, 0) QTY_19
     , DECODE(LOT.OPER, 'A0070', QTY_1, 0) QTY_20
     , DECODE(LOT.OPER, 'A0080', QTY_1, 0) QTY_21
     , DECODE(LOT.OPER, 'A0090', QTY_1, 0) QTY_22
     , DECODE(LOT.OPER, 'A0095', QTY_1, 0) QTY_23
     , DECODE(LOT.OPER, 'A0110', QTY_1, 0) QTY_24
     , DECODE(LOT.OPER, 'A0120', QTY_1, 0) QTY_25
     , DECODE(LOT.OPER, 'A0130', QTY_1, 0) QTY_26
     , DECODE(LOT.OPER, 'A0140', QTY_1, 0) QTY_27
     , DECODE(LOT.OPER, 'A0160', QTY_1, 0) QTY_28
     , DECODE(LOT.OPER, 'A0161', QTY_1, 0) QTY_29
     , DECODE(LOT.OPER, 'A0165', QTY_1, 0) QTY_30
     , DECODE(LOT.OPER, 'A0065', QTY_1, 0) QTY_31
     , DECODE(LOT.OPER, 'A0100', QTY_1, 0) QTY_32
     , DECODE(LOT.OPER, 'A0150', QTY_1, 0) QTY_33
     , DECODE(LOT.OPER, 'A0175', QTY_1, 0) QTY_34
     , DECODE(LOT.OPER, 'A0176', QTY_1, 0) QTY_35
     , DECODE(LOT.OPER, 'A0170', QTY_1, 0) QTY_36
     , DECODE(LOT.OPER, 'A0180', QTY_1, 0) QTY_37
     , DECODE(LOT.OPER, 'A0200', QTY_1, 0) QTY_38
     , DECODE(LOT.OPER, 'A0201', QTY_1, 0) QTY_39
     , DECODE(LOT.OPER, 'A0202', QTY_1, 0) QTY_40
     , DECODE(LOT.OPER, 'A0210', QTY_1, 0) QTY_41
     , DECODE(LOT.OPER, 'A0215', QTY_1, 0) QTY_42
     , DECODE(LOT.OPER, 'A0220', QTY_1, 0) QTY_43
     , DECODE(LOT.OPER, 'A0230', QTY_1, 0) QTY_44
     , DECODE(LOT.OPER, 'A0300', QTY_1, 0) QTY_45
     , DECODE(LOT.OPER, 'A0250', QTY_1, 0) QTY_46
     , DECODE(LOT.OPER, 'A0305', QTY_1, 0) QTY_47
     , DECODE(LOT.OPER, 'A0240', QTY_1, 0) QTY_48
     , DECODE(LOT.OPER, 'A0260', QTY_1, 0) QTY_49
     , DECODE(LOT.OPER, 'A0270', QTY_1, 0) QTY_50
     , DECODE(LOT.OPER, 'A0290', QTY_1, 0) QTY_51
     , DECODE(LOT.OPER, 'A0295', QTY_1, 0) QTY_52
     , DECODE(LOT.OPER, 'A0280', QTY_1, 0) QTY_53
     , DECODE(LOT.OPER, 'A0306', QTY_1, 0) QTY_54
     , DECODE(LOT.OPER, 'A0307', QTY_1, 0) QTY_55
     , DECODE(LOT.OPER, 'A0308', QTY_1, 0) QTY_56
     , DECODE(LOT.OPER, 'A0310', QTY_1, 0) QTY_57
     , DECODE(LOT.OPER, 'A0320', QTY_1, 0) QTY_58
     , DECODE(LOT.OPER, 'A0330', QTY_1, 0) QTY_59
     , DECODE(LOT.OPER, 'A1280', QTY_1, 0) QTY_60
     , DECODE(LOT.OPER, 'A0333', QTY_1, 0) QTY_61
     , DECODE(LOT.OPER, 'A0335', QTY_1, 0) QTY_62
     , DECODE(LOT.OPER, 'A0337', QTY_1, 0) QTY_63
     , DECODE(LOT.OPER, 'A0372', QTY_1, 0) QTY_64
     , DECODE(LOT.OPER, 'A0395', QTY_1, 0) QTY_65
     , DECODE(LOT.OPER, 'A0397', QTY_1, 0) QTY_66
     , DECODE(LOT.OPER, 'A0340', QTY_1, 0) QTY_67
     , DECODE(LOT.OPER, 'A0345', QTY_1, 0) QTY_68
     , DECODE(LOT.OPER, 'A0350', QTY_1, 0) QTY_69
     , DECODE(LOT.OPER, 'A0360', QTY_1, 0) QTY_70
     , DECODE(LOT.OPER, 'A0370', QTY_1, 0) QTY_71
     , DECODE(LOT.OPER, 'A0375', QTY_1, 0) QTY_72
     , DECODE(LOT.OPER, 'A0380', QTY_1, 0) QTY_73
     , DECODE(LOT.OPER, 'A0381', QTY_1, 0) QTY_74
     , DECODE(LOT.OPER, 'A0382', QTY_1, 0) QTY_75
     , DECODE(LOT.OPER, 'A0383', QTY_1, 0) QTY_76
     , DECODE(LOT.OPER, 'A0385', QTY_1, 0) QTY_77
     , DECODE(LOT.OPER, 'A0391', QTY_1, 0) QTY_78
     , DECODE(LOT.OPER, 'A0399', QTY_1, 0) QTY_79
     , DECODE(LOT.OPER, 'A0390', QTY_1, 0) QTY_80
     , DECODE(LOT.OPER, 'A0400', QTY_1, 0) QTY_81
     , DECODE(LOT.OPER, 'A0401', QTY_1, 0) QTY_82
     , DECODE(LOT.OPER, 'A0500', QTY_1, 0) QTY_83
     , DECODE(LOT.OPER, 'A0530', QTY_1, 0) QTY_84
     , DECODE(LOT.OPER, 'A0531', QTY_1, 0) QTY_85
     , DECODE(LOT.OPER, 'A0501', QTY_1, 0) QTY_86
     , DECODE(LOT.OPER, 'A0540', QTY_1, 0) QTY_87
     , DECODE(LOT.OPER, 'A0550', QTY_1, 0) QTY_88
     , DECODE(LOT.OPER, 'A0600', QTY_1, 0) QTY_89
     , DECODE(LOT.OPER, 'A0620', QTY_1, 0) QTY_90
     , DECODE(LOT.OPER, 'A0660', QTY_1, 0) QTY_91
     , DECODE(LOT.OPER, 'A0630', QTY_1, 0) QTY_92
     , DECODE(LOT.OPER, 'A0650', QTY_1, 0) QTY_93
     , DECODE(LOT.OPER, 'A0670', QTY_1, 0) QTY_94
     , DECODE(LOT.OPER, 'A0720', QTY_1, 0) QTY_95
     , DECODE(LOT.OPER, 'A0700', QTY_1, 0) QTY_96
     , DECODE(LOT.OPER, 'A0339', QTY_1, 0) QTY_97
     , DECODE(LOT.OPER, 'A0541', QTY_1, 0) QTY_98
     , DECODE(LOT.OPER, 'A0551', QTY_1, 0) QTY_99
     , DECODE(LOT.OPER, 'A0561', QTY_1, 0) QTY_100
     , DECODE(LOT.OPER, 'A0601', QTY_1, 0) QTY_101
     , DECODE(LOT.OPER, 'A0710', QTY_1, 0) QTY_102
     , DECODE(LOT.OPER, 'A0800', QTY_1, 0) QTY_103
     , DECODE(LOT.OPER, 'A0402', QTY_1, 0) QTY_104
     , DECODE(LOT.OPER, 'A0502', QTY_1, 0) QTY_105
     , DECODE(LOT.OPER, 'A0532', QTY_1, 0) QTY_106
     , DECODE(LOT.OPER, 'A0801', QTY_1, 0) QTY_107
     , DECODE(LOT.OPER, 'A0542', QTY_1, 0) QTY_108
     , DECODE(LOT.OPER, 'A0552', QTY_1, 0) QTY_109
     , DECODE(LOT.OPER, 'A0562', QTY_1, 0) QTY_110
     , DECODE(LOT.OPER, 'A0602', QTY_1, 0) QTY_111
     , DECODE(LOT.OPER, 'A0711', QTY_1, 0) QTY_112
     , DECODE(LOT.OPER, 'A0802', QTY_1, 0) QTY_113
     , DECODE(LOT.OPER, 'A0403', QTY_1, 0) QTY_114
     , DECODE(LOT.OPER, 'A0503', QTY_1, 0) QTY_115
     , DECODE(LOT.OPER, 'A0533', QTY_1, 0) QTY_116
     , DECODE(LOT.OPER, 'A0543', QTY_1, 0) QTY_117
     , DECODE(LOT.OPER, 'A0553', QTY_1, 0) QTY_118
     , DECODE(LOT.OPER, 'A0563', QTY_1, 0) QTY_119
     , DECODE(LOT.OPER, 'A0603', QTY_1, 0) QTY_120
     , DECODE(LOT.OPER, 'A0712', QTY_1, 0) QTY_121
     , DECODE(LOT.OPER, 'A0713', QTY_1, 0) QTY_122
     , DECODE(LOT.OPER, 'A0803', QTY_1, 0) QTY_123
     , DECODE(LOT.OPER, 'A0404', QTY_1, 0) QTY_124
     , DECODE(LOT.OPER, 'A0504', QTY_1, 0) QTY_125
     , DECODE(LOT.OPER, 'A0534', QTY_1, 0) QTY_126
     , DECODE(LOT.OPER, 'A0544', QTY_1, 0) QTY_127
     , DECODE(LOT.OPER, 'A0554', QTY_1, 0) QTY_128
     , DECODE(LOT.OPER, 'A0564', QTY_1, 0) QTY_129
     , DECODE(LOT.OPER, 'A0604', QTY_1, 0) QTY_130
     , DECODE(LOT.OPER, 'A0714', QTY_1, 0) QTY_131
     , DECODE(LOT.OPER, 'A0804', QTY_1, 0) QTY_132
     , DECODE(LOT.OPER, 'A0405', QTY_1, 0) QTY_133
     , DECODE(LOT.OPER, 'A0505', QTY_1, 0) QTY_134
     , DECODE(LOT.OPER, 'A0535', QTY_1, 0) QTY_135
     , DECODE(LOT.OPER, 'A0545', QTY_1, 0) QTY_136
     , DECODE(LOT.OPER, 'A0555', QTY_1, 0) QTY_137
     , DECODE(LOT.OPER, 'A0565', QTY_1, 0) QTY_138
     , DECODE(LOT.OPER, 'A0605', QTY_1, 0) QTY_139
     , DECODE(LOT.OPER, 'A0715', QTY_1, 0) QTY_140
     , DECODE(LOT.OPER, 'A0805', QTY_1, 0) QTY_141
     , DECODE(LOT.OPER, 'A0406', QTY_1, 0) QTY_142
     , DECODE(LOT.OPER, 'A0506', QTY_1, 0) QTY_143
     , DECODE(LOT.OPER, 'A0536', QTY_1, 0) QTY_144
     , DECODE(LOT.OPER, 'A0546', QTY_1, 0) QTY_145
     , DECODE(LOT.OPER, 'A0556', QTY_1, 0) QTY_146
     , DECODE(LOT.OPER, 'A0566', QTY_1, 0) QTY_147
     , DECODE(LOT.OPER, 'A0606', QTY_1, 0) QTY_148
     , DECODE(LOT.OPER, 'A0716', QTY_1, 0) QTY_149
     , DECODE(LOT.OPER, 'A0806', QTY_1, 0) QTY_150
     , DECODE(LOT.OPER, 'A0407', QTY_1, 0) QTY_151
     , DECODE(LOT.OPER, 'A0507', QTY_1, 0) QTY_152
     , DECODE(LOT.OPER, 'A0537', QTY_1, 0) QTY_153
     , DECODE(LOT.OPER, 'A0547', QTY_1, 0) QTY_154
     , DECODE(LOT.OPER, 'A0557', QTY_1, 0) QTY_155
     , DECODE(LOT.OPER, 'A0567', QTY_1, 0) QTY_156
     , DECODE(LOT.OPER, 'A0607', QTY_1, 0) QTY_157
     , DECODE(LOT.OPER, 'A0717', QTY_1, 0) QTY_158
     , DECODE(LOT.OPER, 'A0807', QTY_1, 0) QTY_159
     , DECODE(LOT.OPER, 'A0408', QTY_1, 0) QTY_160
     , DECODE(LOT.OPER, 'A0508', QTY_1, 0) QTY_161
     , DECODE(LOT.OPER, 'A0538', QTY_1, 0) QTY_162
     , DECODE(LOT.OPER, 'A0558', QTY_1, 0) QTY_163
     , DECODE(LOT.OPER, 'A0568', QTY_1, 0) QTY_164
     , DECODE(LOT.OPER, 'A0608', QTY_1, 0) QTY_165
     , DECODE(LOT.OPER, 'A0808', QTY_1, 0) QTY_166
     , DECODE(LOT.OPER, 'A0409', QTY_1, 0) QTY_167
     , DECODE(LOT.OPER, 'A0509', QTY_1, 0) QTY_168
     , DECODE(LOT.OPER, 'A0539', QTY_1, 0) QTY_169
     , DECODE(LOT.OPER, 'A0559', QTY_1, 0) QTY_170
     , DECODE(LOT.OPER, 'A0569', QTY_1, 0) QTY_171
     , DECODE(LOT.OPER, 'A0609', QTY_1, 0) QTY_172
     , DECODE(LOT.OPER, 'A0809', QTY_1, 0) QTY_173
     , DECODE(LOT.OPER, 'A080A', QTY_1, 0) QTY_174
     , DECODE(LOT.OPER, 'A0890', QTY_1, 0) QTY_175
     , DECODE(LOT.OPER, 'A0900', QTY_1, 0) QTY_176
     , DECODE(LOT.OPER, 'A0910', QTY_1, 0) QTY_177
     , DECODE(LOT.OPER, 'A0920', QTY_1, 0) QTY_178
     , DECODE(LOT.OPER, 'A0930', QTY_1, 0) QTY_179
     , DECODE(LOT.OPER, 'A0935', QTY_1, 0) QTY_180
     , DECODE(LOT.OPER, 'A040A', QTY_1, 0) QTY_181
     , DECODE(LOT.OPER, 'A0950', QTY_1, 0) QTY_182
     , DECODE(LOT.OPER, 'A053A', QTY_1, 0) QTY_183
     , DECODE(LOT.OPER, 'A0970', QTY_1, 0) QTY_184
     , DECODE(LOT.OPER, 'A0940', QTY_1, 0) QTY_185
     , DECODE(LOT.OPER, 'A0980', QTY_1, 0) QTY_186
     , DECODE(LOT.OPER, 'A1000', QTY_1, 0) QTY_187
     , DECODE(LOT.OPER, 'A055A', QTY_1, 0) QTY_188
     , DECODE(LOT.OPER, 'A060A', QTY_1, 0) QTY_189
     , DECODE(LOT.OPER, 'A1040', QTY_1, 0) QTY_190
     , DECODE(LOT.OPER, 'A1070', QTY_1, 0) QTY_191
     , DECODE(LOT.OPER, 'A1020', QTY_1, 0) QTY_192
     , DECODE(LOT.OPER, 'A1100', QTY_1, 0) QTY_193
     , DECODE(LOT.OPER, 'A1110', QTY_1, 0) QTY_194
     , DECODE(LOT.OPER, 'A1120', QTY_1, 0) QTY_195
     , DECODE(LOT.OPER, 'A1130', QTY_1, 0) QTY_196
     , DECODE(LOT.OPER, 'A1140', QTY_1, 0) QTY_197
     , DECODE(LOT.OPER, 'A1150', QTY_1, 0) QTY_198
     , DECODE(LOT.OPER, 'A1600', QTY_1, 0) QTY_199
     , DECODE(LOT.OPER, 'A1650', QTY_1, 0) QTY_200
     , DECODE(LOT.OPER, 'A1170', QTY_1, 0) QTY_201
     , DECODE(LOT.OPER, 'A1180', QTY_1, 0) QTY_202
     , DECODE(LOT.OPER, 'A1200', QTY_1, 0) QTY_203
     , DECODE(LOT.OPER, 'A1230', QTY_1, 0) QTY_204
     , DECODE(LOT.OPER, 'A1240', QTY_1, 0) QTY_205
     , DECODE(LOT.OPER, 'A1250', QTY_1, 0) QTY_206
     , DECODE(LOT.OPER, 'A1260', QTY_1, 0) QTY_207
     , DECODE(LOT.OPER, 'A1270', QTY_1, 0) QTY_208
     , DECODE(LOT.OPER, 'A1300', QTY_1, 0) QTY_209
     , DECODE(LOT.OPER, 'A1350', QTY_1, 0) QTY_210
     , DECODE(LOT.OPER, 'A1370', QTY_1, 0) QTY_211
     , DECODE(LOT.OPER, 'A1380', QTY_1, 0) QTY_212
     , DECODE(LOT.OPER, 'A1050', QTY_1, 0) QTY_213
     , DECODE(LOT.OPER, 'A1420', QTY_1, 0) QTY_214
     , DECODE(LOT.OPER, 'A1440', QTY_1, 0) QTY_215
     , DECODE(LOT.OPER, 'A1450', QTY_1, 0) QTY_216
     , DECODE(LOT.OPER, 'A1821', QTY_1, 0) QTY_217
     , DECODE(LOT.OPER, 'A1460', QTY_1, 0) QTY_218
     , DECODE(LOT.OPER, 'A1470', QTY_1, 0) QTY_219
     , DECODE(LOT.OPER, 'A1500', QTY_1, 0) QTY_220
     , DECODE(LOT.OPER, 'A1550', QTY_1, 0) QTY_221
     , DECODE(LOT.OPER, 'A1610', QTY_1, 0) QTY_222
     , DECODE(LOT.OPER, 'A1560', QTY_1, 0) QTY_223
     , DECODE(LOT.OPER, 'A1720', QTY_1, 0) QTY_224
     , DECODE(LOT.OPER, 'A1730', QTY_1, 0) QTY_225
     , DECODE(LOT.OPER, 'A1740', QTY_1, 0) QTY_226
     , DECODE(LOT.OPER, 'A1750', QTY_1, 0) QTY_227
     , DECODE(LOT.OPER, 'A1755', QTY_1, 0) QTY_228
     , DECODE(LOT.OPER, 'A1760', QTY_1, 0) QTY_229
     , DECODE(LOT.OPER, 'A1765', QTY_1, 0) QTY_230
     , DECODE(LOT.OPER, 'A1766', QTY_1, 0) QTY_231
     , DECODE(LOT.OPER, 'A1763', QTY_1, 0) QTY_232
     , DECODE(LOT.OPER, 'A1770', QTY_1, 0) QTY_233
     , DECODE(LOT.OPER, 'A1780', QTY_1, 0) QTY_234
     , DECODE(LOT.OPER, 'A1790', QTY_1, 0) QTY_235
     , DECODE(LOT.OPER, 'A1795', QTY_1, 0) QTY_236
     , DECODE(LOT.OPER, 'A1860', QTY_1, 0) QTY_237
     , DECODE(LOT.OPER, 'A1850', QTY_1, 0) QTY_238
     , DECODE(LOT.OPER, 'A1390', QTY_1, 0) QTY_239
     , DECODE(LOT.OPER, 'A1800', QTY_1, 0) QTY_240
     , DECODE(LOT.OPER, 'A1805', QTY_1, 0) QTY_241
     , DECODE(LOT.OPER, 'A1810', QTY_1, 0) QTY_242
     , DECODE(LOT.OPER, 'A1811', QTY_1, 0) QTY_243
     , DECODE(LOT.OPER, 'A1812', QTY_1, 0) QTY_244
     , DECODE(LOT.OPER, 'A1816', QTY_1, 0) QTY_245
     , DECODE(LOT.OPER, 'A1820', QTY_1, 0) QTY_246
     , DECODE(LOT.OPER, 'A1825', QTY_1, 0) QTY_247
     , DECODE(LOT.OPER, 'A1826', QTY_1, 0) QTY_248
     , DECODE(LOT.OPER, 'A1920', QTY_1, 0) QTY_249
     , DECODE(LOT.OPER, 'A1960', QTY_1, 0) QTY_250
     , DECODE(LOT.OPER, 'A1815', QTY_1, 0) QTY_251
     , DECODE(LOT.OPER, 'A1830', QTY_1, 0) QTY_252
     , DECODE(LOT.OPER, 'A1710', QTY_1, 0) QTY_253
     , DECODE(LOT.OPER, 'A1840', QTY_1, 0) QTY_254
     , DECODE(LOT.OPER, 'A1900', QTY_1, 0) QTY_255
     , DECODE(LOT.OPER, 'A1910', QTY_1, 0) QTY_256
     , DECODE(LOT.OPER, 'A1950', QTY_1, 0) QTY_257
     , DECODE(LOT.OPER, 'A2000', QTY_1, 0) QTY_258
     , DECODE(LOT.OPER, 'A2010', QTY_1, 0) QTY_259
     , DECODE(LOT.OPER, 'A2020', QTY_1, 0) QTY_260
     , DECODE(LOT.OPER, 'A2025', QTY_1, 0) QTY_261
     , DECODE(LOT.OPER, 'A1819', QTY_1, 0) QTY_262
     , DECODE(LOT.OPER, 'A2030', QTY_1, 0) QTY_263
     , DECODE(LOT.OPER, 'A2040', QTY_1, 0) QTY_264
     , DECODE(LOT.OPER, 'A2041', QTY_1, 0) QTY_265
     , DECODE(LOT.OPER, 'A2042', QTY_1, 0) QTY_266
     , DECODE(LOT.OPER, 'A2070', QTY_1, 0) QTY_267
     , DECODE(LOT.OPER, 'A2050', QTY_1, 0) QTY_268
     , DECODE(LOT.OPER, 'A2150', QTY_1, 0) QTY_269
     , DECODE(LOT.OPER, 'A2200', QTY_1, 0) QTY_270
     , DECODE(LOT.OPER, 'A2100', QTY_1, 0) QTY_271
     , DECODE(LOT.OPER, 'A2300', QTY_1, 0) QTY_272
     , DECODE(LOT.OPER, 'A2350', QTY_1, 0) QTY_273
     , DECODE(LOT.OPER, 'AZ009', QTY_1, 0) QTY_274
     , DECODE(LOT.OPER, 'AZ010', QTY_1, 0) QTY_275
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) AS TTL_TAT 
     , TRUNC(TO_DATE('20200401220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_TAT 
  FROM (
        SELECT LOT.FACTORY, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14, LOT.OPER_IN_TIME, LOT.CREATE_QTY_1, OPR.OPER_GRP_1 AS OPER_GROUP, LOT.OPER, LOT.QTY_1 
          FROM RWIPLOTSTS_BOH LOT, 
               MWIPOPRDEF OPR 
         WHERE LOT.CUTOFF_DT = '2020040122'
           AND LOT.FACTORY = OPR.FACTORY 
           AND LOT.OPER = OPR.OPER 
           AND LOT.FACTORY = 'HMVA2' 
           AND LOT.LOT_DEL_FLAG = ' ' 
           AND LOT.MAT_VER = 1 
           AND LOT.LOT_TYPE = 'W' 
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE LOT.FACTORY = MAT.FACTORY 
   AND LOT.MAT_ID = MAT.MAT_ID 
ORDER BY Customer, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS Customer,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 as PIN_TYPE, LOT.MAT_ID as Product,  ' '
     , LOT.LOT_CMF_4 RUN_ID 
     , LOT.LOT_ID 
     , TO_CHAR(TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS IN_TIME 
     , TO_CHAR(TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI') AS MOVE_TIME 
     , LOT.CREATE_QTY_1 AS IN_QTY 
     , DECODE(LOT.OPER, 'A0000', QTY_1, 0) QTY_0
     , DECODE(LOT.OPER, 'A0005', QTY_1, 0) QTY_1
     , DECODE(LOT.OPER, 'A000N', QTY_1, 0) QTY_2
     , DECODE(LOT.OPER, 'A0010', QTY_1, 0) QTY_3
     , DECODE(LOT.OPER, 'A0012', QTY_1, 0) QTY_4
     , DECODE(LOT.OPER, 'A0013', QTY_1, 0) QTY_5
     , DECODE(LOT.OPER, 'A0015', QTY_1, 0) QTY_6
     , DECODE(LOT.OPER, 'A0020', QTY_1, 0) QTY_7
     , DECODE(LOT.OPER, 'A0055', QTY_1, 0) QTY_8
     , DECODE(LOT.OPER, 'A0023', QTY_1, 0) QTY_9
     , DECODE(LOT.OPER, 'A0025', QTY_1, 0) QTY_10
     , DECODE(LOT.OPER, 'A0030', QTY_1, 0) QTY_11
     , DECODE(LOT.OPER, 'A0190', QTY_1, 0) QTY_12
     , DECODE(LOT.OPER, 'A0033', QTY_1, 0) QTY_13
     , DECODE(LOT.OPER, 'A0040', QTY_1, 0) QTY_14
     , DECODE(LOT.OPER, 'A0041', QTY_1, 0) QTY_15
     , DECODE(LOT.OPER, 'A0042', QTY_1, 0) QTY_16
     , DECODE(LOT.OPER, 'A0045', QTY_1, 0) QTY_17
     , DECODE(LOT.OPER, 'A0050', QTY_1, 0) QTY_18
     , DECODE(LOT.OPER, 'A0060', QTY_1, 0) QTY_19
     , DECODE(LOT.OPER, 'A0070', QTY_1, 0) QTY_20
     , DECODE(LOT.OPER, 'A0080', QTY_1, 0) QTY_21
     , DECODE(LOT.OPER, 'A0090', QTY_1, 0) QTY_22
     , DECODE(LOT.OPER, 'A0095', QTY_1, 0) QTY_23
     , DECODE(LOT.OPER, 'A0110', QTY_1, 0) QTY_24
     , DECODE(LOT.OPER, 'A0120', QTY_1, 0) QTY_25
     , DECODE(LOT.OPER, 'A0130', QTY_1, 0) QTY_26
     , DECODE(LOT.OPER, 'A0140', QTY_1, 0) QTY_27
     , DECODE(LOT.OPER, 'A0160', QTY_1, 0) QTY_28
     , DECODE(LOT.OPER, 'A0161', QTY_1, 0) QTY_29
     , DECODE(LOT.OPER, 'A0165', QTY_1, 0) QTY_30
     , DECODE(LOT.OPER, 'A0065', QTY_1, 0) QTY_31
     , DECODE(LOT.OPER, 'A0100', QTY_1, 0) QTY_32
     , DECODE(LOT.OPER, 'A0150', QTY_1, 0) QTY_33
     , DECODE(LOT.OPER, 'A0175', QTY_1, 0) QTY_34
     , DECODE(LOT.OPER, 'A0176', QTY_1, 0) QTY_35
     , DECODE(LOT.OPER, 'A0170', QTY_1, 0) QTY_36
     , DECODE(LOT.OPER, 'A0180', QTY_1, 0) QTY_37
     , DECODE(LOT.OPER, 'A0200', QTY_1, 0) QTY_38
     , DECODE(LOT.OPER, 'A0201', QTY_1, 0) QTY_39
     , DECODE(LOT.OPER, 'A0202', QTY_1, 0) QTY_40
     , DECODE(LOT.OPER, 'A0210', QTY_1, 0) QTY_41
     , DECODE(LOT.OPER, 'A0215', QTY_1, 0) QTY_42
     , DECODE(LOT.OPER, 'A0220', QTY_1, 0) QTY_43
     , DECODE(LOT.OPER, 'A0230', QTY_1, 0) QTY_44
     , DECODE(LOT.OPER, 'A0300', QTY_1, 0) QTY_45
     , DECODE(LOT.OPER, 'A0250', QTY_1, 0) QTY_46
     , DECODE(LOT.OPER, 'A0305', QTY_1, 0) QTY_47
     , DECODE(LOT.OPER, 'A0240', QTY_1, 0) QTY_48
     , DECODE(LOT.OPER, 'A0260', QTY_1, 0) QTY_49
     , DECODE(LOT.OPER, 'A0270', QTY_1, 0) QTY_50
     , DECODE(LOT.OPER, 'A0290', QTY_1, 0) QTY_51
     , DECODE(LOT.OPER, 'A0295', QTY_1, 0) QTY_52
     , DECODE(LOT.OPER, 'A0280', QTY_1, 0) QTY_53
     , DECODE(LOT.OPER, 'A0306', QTY_1, 0) QTY_54
     , DECODE(LOT.OPER, 'A0307', QTY_1, 0) QTY_55
     , DECODE(LOT.OPER, 'A0308', QTY_1, 0) QTY_56
     , DECODE(LOT.OPER, 'A0310', QTY_1, 0) QTY_57
     , DECODE(LOT.OPER, 'A0320', QTY_1, 0) QTY_58
     , DECODE(LOT.OPER, 'A0330', QTY_1, 0) QTY_59
     , DECODE(LOT.OPER, 'A1280', QTY_1, 0) QTY_60
     , DECODE(LOT.OPER, 'A0333', QTY_1, 0) QTY_61
     , DECODE(LOT.OPER, 'A0335', QTY_1, 0) QTY_62
     , DECODE(LOT.OPER, 'A0337', QTY_1, 0) QTY_63
     , DECODE(LOT.OPER, 'A0372', QTY_1, 0) QTY_64
     , DECODE(LOT.OPER, 'A0395', QTY_1, 0) QTY_65
     , DECODE(LOT.OPER, 'A0397', QTY_1, 0) QTY_66
     , DECODE(LOT.OPER, 'A0340', QTY_1, 0) QTY_67
     , DECODE(LOT.OPER, 'A0345', QTY_1, 0) QTY_68
     , DECODE(LOT.OPER, 'A0350', QTY_1, 0) QTY_69
     , DECODE(LOT.OPER, 'A0360', QTY_1, 0) QTY_70
     , DECODE(LOT.OPER, 'A0370', QTY_1, 0) QTY_71
     , DECODE(LOT.OPER, 'A0375', QTY_1, 0) QTY_72
     , DECODE(LOT.OPER, 'A0380', QTY_1, 0) QTY_73
     , DECODE(LOT.OPER, 'A0381', QTY_1, 0) QTY_74
     , DECODE(LOT.OPER, 'A0382', QTY_1, 0) QTY_75
     , DECODE(LOT.OPER, 'A0383', QTY_1, 0) QTY_76
     , DECODE(LOT.OPER, 'A0385', QTY_1, 0) QTY_77
     , DECODE(LOT.OPER, 'A0391', QTY_1, 0) QTY_78
     , DECODE(LOT.OPER, 'A0399', QTY_1, 0) QTY_79
     , DECODE(LOT.OPER, 'A0390', QTY_1, 0) QTY_80
     , DECODE(LOT.OPER, 'A0400', QTY_1, 0) QTY_81
     , DECODE(LOT.OPER, 'A0401', QTY_1, 0) QTY_82
     , DECODE(LOT.OPER, 'A0500', QTY_1, 0) QTY_83
     , DECODE(LOT.OPER, 'A0530', QTY_1, 0) QTY_84
     , DECODE(LOT.OPER, 'A0531', QTY_1, 0) QTY_85
     , DECODE(LOT.OPER, 'A0501', QTY_1, 0) QTY_86
     , DECODE(LOT.OPER, 'A0540', QTY_1, 0) QTY_87
     , DECODE(LOT.OPER, 'A0550', QTY_1, 0) QTY_88
     , DECODE(LOT.OPER, 'A0600', QTY_1, 0) QTY_89
     , DECODE(LOT.OPER, 'A0620', QTY_1, 0) QTY_90
     , DECODE(LOT.OPER, 'A0660', QTY_1, 0) QTY_91
     , DECODE(LOT.OPER, 'A0630', QTY_1, 0) QTY_92
     , DECODE(LOT.OPER, 'A0650', QTY_1, 0) QTY_93
     , DECODE(LOT.OPER, 'A0670', QTY_1, 0) QTY_94
     , DECODE(LOT.OPER, 'A0720', QTY_1, 0) QTY_95
     , DECODE(LOT.OPER, 'A0700', QTY_1, 0) QTY_96
     , DECODE(LOT.OPER, 'A0339', QTY_1, 0) QTY_97
     , DECODE(LOT.OPER, 'A0541', QTY_1, 0) QTY_98
     , DECODE(LOT.OPER, 'A0551', QTY_1, 0) QTY_99
     , DECODE(LOT.OPER, 'A0561', QTY_1, 0) QTY_100
     , DECODE(LOT.OPER, 'A0601', QTY_1, 0) QTY_101
     , DECODE(LOT.OPER, 'A0710', QTY_1, 0) QTY_102
     , DECODE(LOT.OPER, 'A0800', QTY_1, 0) QTY_103
     , DECODE(LOT.OPER, 'A0402', QTY_1, 0) QTY_104
     , DECODE(LOT.OPER, 'A0502', QTY_1, 0) QTY_105
     , DECODE(LOT.OPER, 'A0532', QTY_1, 0) QTY_106
     , DECODE(LOT.OPER, 'A0801', QTY_1, 0) QTY_107
     , DECODE(LOT.OPER, 'A0542', QTY_1, 0) QTY_108
     , DECODE(LOT.OPER, 'A0552', QTY_1, 0) QTY_109
     , DECODE(LOT.OPER, 'A0562', QTY_1, 0) QTY_110
     , DECODE(LOT.OPER, 'A0602', QTY_1, 0) QTY_111
     , DECODE(LOT.OPER, 'A0711', QTY_1, 0) QTY_112
     , DECODE(LOT.OPER, 'A0802', QTY_1, 0) QTY_113
     , DECODE(LOT.OPER, 'A0403', QTY_1, 0) QTY_114
     , DECODE(LOT.OPER, 'A0503', QTY_1, 0) QTY_115
     , DECODE(LOT.OPER, 'A0533', QTY_1, 0) QTY_116
     , DECODE(LOT.OPER, 'A0543', QTY_1, 0) QTY_117
     , DECODE(LOT.OPER, 'A0553', QTY_1, 0) QTY_118
     , DECODE(LOT.OPER, 'A0563', QTY_1, 0) QTY_119
     , DECODE(LOT.OPER, 'A0603', QTY_1, 0) QTY_120
     , DECODE(LOT.OPER, 'A0712', QTY_1, 0) QTY_121
     , DECODE(LOT.OPER, 'A0713', QTY_1, 0) QTY_122
     , DECODE(LOT.OPER, 'A0803', QTY_1, 0) QTY_123
     , DECODE(LOT.OPER, 'A0404', QTY_1, 0) QTY_124
     , DECODE(LOT.OPER, 'A0504', QTY_1, 0) QTY_125
     , DECODE(LOT.OPER, 'A0534', QTY_1, 0) QTY_126
     , DECODE(LOT.OPER, 'A0544', QTY_1, 0) QTY_127
     , DECODE(LOT.OPER, 'A0554', QTY_1, 0) QTY_128
     , DECODE(LOT.OPER, 'A0564', QTY_1, 0) QTY_129
     , DECODE(LOT.OPER, 'A0604', QTY_1, 0) QTY_130
     , DECODE(LOT.OPER, 'A0714', QTY_1, 0) QTY_131
     , DECODE(LOT.OPER, 'A0804', QTY_1, 0) QTY_132
     , DECODE(LOT.OPER, 'A0405', QTY_1, 0) QTY_133
     , DECODE(LOT.OPER, 'A0505', QTY_1, 0) QTY_134
     , DECODE(LOT.OPER, 'A0535', QTY_1, 0) QTY_135
     , DECODE(LOT.OPER, 'A0545', QTY_1, 0) QTY_136
     , DECODE(LOT.OPER, 'A0555', QTY_1, 0) QTY_137
     , DECODE(LOT.OPER, 'A0565', QTY_1, 0) QTY_138
     , DECODE(LOT.OPER, 'A0605', QTY_1, 0) QTY_139
     , DECODE(LOT.OPER, 'A0715', QTY_1, 0) QTY_140
     , DECODE(LOT.OPER, 'A0805', QTY_1, 0) QTY_141
     , DECODE(LOT.OPER, 'A0406', QTY_1, 0) QTY_142
     , DECODE(LOT.OPER, 'A0506', QTY_1, 0) QTY_143
     , DECODE(LOT.OPER, 'A0536', QTY_1, 0) QTY_144
     , DECODE(LOT.OPER, 'A0546', QTY_1, 0) QTY_145
     , DECODE(LOT.OPER, 'A0556', QTY_1, 0) QTY_146
     , DECODE(LOT.OPER, 'A0566', QTY_1, 0) QTY_147
     , DECODE(LOT.OPER, 'A0606', QTY_1, 0) QTY_148
     , DECODE(LOT.OPER, 'A0716', QTY_1, 0) QTY_149
     , DECODE(LOT.OPER, 'A0806', QTY_1, 0) QTY_150
     , DECODE(LOT.OPER, 'A0407', QTY_1, 0) QTY_151
     , DECODE(LOT.OPER, 'A0507', QTY_1, 0) QTY_152
     , DECODE(LOT.OPER, 'A0537', QTY_1, 0) QTY_153
     , DECODE(LOT.OPER, 'A0547', QTY_1, 0) QTY_154
     , DECODE(LOT.OPER, 'A0557', QTY_1, 0) QTY_155
     , DECODE(LOT.OPER, 'A0567', QTY_1, 0) QTY_156
     , DECODE(LOT.OPER, 'A0607', QTY_1, 0) QTY_157
     , DECODE(LOT.OPER, 'A0717', QTY_1, 0) QTY_158
     , DECODE(LOT.OPER, 'A0807', QTY_1, 0) QTY_159
     , DECODE(LOT.OPER, 'A0408', QTY_1, 0) QTY_160
     , DECODE(LOT.OPER, 'A0508', QTY_1, 0) QTY_161
     , DECODE(LOT.OPER, 'A0538', QTY_1, 0) QTY_162
     , DECODE(LOT.OPER, 'A0558', QTY_1, 0) QTY_163
     , DECODE(LOT.OPER, 'A0568', QTY_1, 0) QTY_164
     , DECODE(LOT.OPER, 'A0608', QTY_1, 0) QTY_165
     , DECODE(LOT.OPER, 'A0808', QTY_1, 0) QTY_166
     , DECODE(LOT.OPER, 'A0409', QTY_1, 0) QTY_167
     , DECODE(LOT.OPER, 'A0509', QTY_1, 0) QTY_168
     , DECODE(LOT.OPER, 'A0539', QTY_1, 0) QTY_169
     , DECODE(LOT.OPER, 'A0559', QTY_1, 0) QTY_170
     , DECODE(LOT.OPER, 'A0569', QTY_1, 0) QTY_171
     , DECODE(LOT.OPER, 'A0609', QTY_1, 0) QTY_172
     , DECODE(LOT.OPER, 'A0809', QTY_1, 0) QTY_173
     , DECODE(LOT.OPER, 'A080A', QTY_1, 0) QTY_174
     , DECODE(LOT.OPER, 'A0890', QTY_1, 0) QTY_175
     , DECODE(LOT.OPER, 'A0900', QTY_1, 0) QTY_176
     , DECODE(LOT.OPER, 'A0910', QTY_1, 0) QTY_177
     , DECODE(LOT.OPER, 'A0920', QTY_1, 0) QTY_178
     , DECODE(LOT.OPER, 'A0930', QTY_1, 0) QTY_179
     , DECODE(LOT.OPER, 'A0935', QTY_1, 0) QTY_180
     , DECODE(LOT.OPER, 'A040A', QTY_1, 0) QTY_181
     , DECODE(LOT.OPER, 'A0950', QTY_1, 0) QTY_182
     , DECODE(LOT.OPER, 'A053A', QTY_1, 0) QTY_183
     , DECODE(LOT.OPER, 'A0970', QTY_1, 0) QTY_184
     , DECODE(LOT.OPER, 'A0940', QTY_1, 0) QTY_185
     , DECODE(LOT.OPER, 'A0980', QTY_1, 0) QTY_186
     , DECODE(LOT.OPER, 'A1000', QTY_1, 0) QTY_187
     , DECODE(LOT.OPER, 'A055A', QTY_1, 0) QTY_188
     , DECODE(LOT.OPER, 'A060A', QTY_1, 0) QTY_189
     , DECODE(LOT.OPER, 'A1040', QTY_1, 0) QTY_190
     , DECODE(LOT.OPER, 'A1070', QTY_1, 0) QTY_191
     , DECODE(LOT.OPER, 'A1020', QTY_1, 0) QTY_192
     , DECODE(LOT.OPER, 'A1100', QTY_1, 0) QTY_193
     , DECODE(LOT.OPER, 'A1110', QTY_1, 0) QTY_194
     , DECODE(LOT.OPER, 'A1120', QTY_1, 0) QTY_195
     , DECODE(LOT.OPER, 'A1130', QTY_1, 0) QTY_196
     , DECODE(LOT.OPER, 'A1140', QTY_1, 0) QTY_197
     , DECODE(LOT.OPER, 'A1150', QTY_1, 0) QTY_198
     , DECODE(LOT.OPER, 'A1600', QTY_1, 0) QTY_199
     , DECODE(LOT.OPER, 'A1650', QTY_1, 0) QTY_200
     , DECODE(LOT.OPER, 'A1170', QTY_1, 0) QTY_201
     , DECODE(LOT.OPER, 'A1180', QTY_1, 0) QTY_202
     , DECODE(LOT.OPER, 'A1200', QTY_1, 0) QTY_203
     , DECODE(LOT.OPER, 'A1230', QTY_1, 0) QTY_204
     , DECODE(LOT.OPER, 'A1240', QTY_1, 0) QTY_205
     , DECODE(LOT.OPER, 'A1250', QTY_1, 0) QTY_206
     , DECODE(LOT.OPER, 'A1260', QTY_1, 0) QTY_207
     , DECODE(LOT.OPER, 'A1270', QTY_1, 0) QTY_208
     , DECODE(LOT.OPER, 'A1300', QTY_1, 0) QTY_209
     , DECODE(LOT.OPER, 'A1350', QTY_1, 0) QTY_210
     , DECODE(LOT.OPER, 'A1370', QTY_1, 0) QTY_211
     , DECODE(LOT.OPER, 'A1380', QTY_1, 0) QTY_212
     , DECODE(LOT.OPER, 'A1050', QTY_1, 0) QTY_213
     , DECODE(LOT.OPER, 'A1420', QTY_1, 0) QTY_214
     , DECODE(LOT.OPER, 'A1440', QTY_1, 0) QTY_215
     , DECODE(LOT.OPER, 'A1450', QTY_1, 0) QTY_216
     , DECODE(LOT.OPER, 'A1821', QTY_1, 0) QTY_217
     , DECODE(LOT.OPER, 'A1460', QTY_1, 0) QTY_218
     , DECODE(LOT.OPER, 'A1470', QTY_1, 0) QTY_219
     , DECODE(LOT.OPER, 'A1500', QTY_1, 0) QTY_220
     , DECODE(LOT.OPER, 'A1550', QTY_1, 0) QTY_221
     , DECODE(LOT.OPER, 'A1610', QTY_1, 0) QTY_222
     , DECODE(LOT.OPER, 'A1560', QTY_1, 0) QTY_223
     , DECODE(LOT.OPER, 'A1720', QTY_1, 0) QTY_224
     , DECODE(LOT.OPER, 'A1730', QTY_1, 0) QTY_225
     , DECODE(LOT.OPER, 'A1740', QTY_1, 0) QTY_226
     , DECODE(LOT.OPER, 'A1750', QTY_1, 0) QTY_227
     , DECODE(LOT.OPER, 'A1755', QTY_1, 0) QTY_228
     , DECODE(LOT.OPER, 'A1760', QTY_1, 0) QTY_229
     , DECODE(LOT.OPER, 'A1765', QTY_1, 0) QTY_230
     , DECODE(LOT.OPER, 'A1766', QTY_1, 0) QTY_231
     , DECODE(LOT.OPER, 'A1763', QTY_1, 0) QTY_232
     , DECODE(LOT.OPER, 'A1770', QTY_1, 0) QTY_233
     , DECODE(LOT.OPER, 'A1780', QTY_1, 0) QTY_234
     , DECODE(LOT.OPER, 'A1790', QTY_1, 0) QTY_235
     , DECODE(LOT.OPER, 'A1795', QTY_1, 0) QTY_236
     , DECODE(LOT.OPER, 'A1860', QTY_1, 0) QTY_237
     , DECODE(LOT.OPER, 'A1850', QTY_1, 0) QTY_238
     , DECODE(LOT.OPER, 'A1390', QTY_1, 0) QTY_239
     , DECODE(LOT.OPER, 'A1800', QTY_1, 0) QTY_240
     , DECODE(LOT.OPER, 'A1805', QTY_1, 0) QTY_241
     , DECODE(LOT.OPER, 'A1810', QTY_1, 0) QTY_242
     , DECODE(LOT.OPER, 'A1811', QTY_1, 0) QTY_243
     , DECODE(LOT.OPER, 'A1812', QTY_1, 0) QTY_244
     , DECODE(LOT.OPER, 'A1816', QTY_1, 0) QTY_245
     , DECODE(LOT.OPER, 'A1820', QTY_1, 0) QTY_246
     , DECODE(LOT.OPER, 'A1825', QTY_1, 0) QTY_247
     , DECODE(LOT.OPER, 'A1826', QTY_1, 0) QTY_248
     , DECODE(LOT.OPER, 'A1920', QTY_1, 0) QTY_249
     , DECODE(LOT.OPER, 'A1960', QTY_1, 0) QTY_250
     , DECODE(LOT.OPER, 'A1815', QTY_1, 0) QTY_251
     , DECODE(LOT.OPER, 'A1830', QTY_1, 0) QTY_252
     , DECODE(LOT.OPER, 'A1710', QTY_1, 0) QTY_253
     , DECODE(LOT.OPER, 'A1840', QTY_1, 0) QTY_254
     , DECODE(LOT.OPER, 'A1900', QTY_1, 0) QTY_255
     , DECODE(LOT.OPER, 'A1910', QTY_1, 0) QTY_256
     , DECODE(LOT.OPER, 'A1950', QTY_1, 0) QTY_257
     , DECODE(LOT.OPER, 'A2000', QTY_1, 0) QTY_258
     , DECODE(LOT.OPER, 'A2010', QTY_1, 0) QTY_259
     , DECODE(LOT.OPER, 'A2020', QTY_1, 0) QTY_260
     , DECODE(LOT.OPER, 'A2025', QTY_1, 0) QTY_261
     , DECODE(LOT.OPER, 'A1819', QTY_1, 0) QTY_262
     , DECODE(LOT.OPER, 'A2030', QTY_1, 0) QTY_263
     , DECODE(LOT.OPER, 'A2040', QTY_1, 0) QTY_264
     , DECODE(LOT.OPER, 'A2041', QTY_1, 0) QTY_265
     , DECODE(LOT.OPER, 'A2042', QTY_1, 0) QTY_266
     , DECODE(LOT.OPER, 'A2070', QTY_1, 0) QTY_267
     , DECODE(LOT.OPER, 'A2050', QTY_1, 0) QTY_268
     , DECODE(LOT.OPER, 'A2150', QTY_1, 0) QTY_269
     , DECODE(LOT.OPER, 'A2200', QTY_1, 0) QTY_270
     , DECODE(LOT.OPER, 'A2100', QTY_1, 0) QTY_271
     , DECODE(LOT.OPER, 'A2300', QTY_1, 0) QTY_272
     , DECODE(LOT.OPER, 'A2350', QTY_1, 0) QTY_273
     , DECODE(LOT.OPER, 'AZ009', QTY_1, 0) QTY_274
     , DECODE(LOT.OPER, 'AZ010', QTY_1, 0) QTY_275
     , TRUNC(TO_DATE('20200527220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14,'YYYYMMDDHH24MISS'), 2) AS TTL_TAT 
     , TRUNC(TO_DATE('20200527220000', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_TAT 
  FROM (
        SELECT LOT.FACTORY, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14, LOT.OPER_IN_TIME, LOT.CREATE_QTY_1, OPR.OPER_GRP_1 AS OPER_GROUP, LOT.OPER, LOT.QTY_1 
          FROM RWIPLOTSTS_BOH LOT, 
               MWIPOPRDEF OPR 
         WHERE LOT.CUTOFF_DT = '2020052722'
           AND LOT.FACTORY = OPR.FACTORY 
           AND LOT.OPER = OPR.OPER 
           AND LOT.FACTORY = 'HMVA2' 
           AND LOT.LOT_DEL_FLAG = ' ' 
           AND LOT.MAT_VER = 1 
           AND LOT.LOT_TYPE = 'W' 
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE LOT.FACTORY = MAT.FACTORY 
   AND LOT.MAT_ID = MAT.MAT_ID 
ORDER BY Customer, LOT.MAT_ID, LOT.LOT_CMF_4, LOT.LOT_ID, LOT.LOT_CMF_14 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010704'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_VENDOR_PLATING' AND KEY_1 = HLD.SHP_FAC AND ROWNUM=1), '-') AS SHP_FAC, (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER, MAT.MAT_GRP_6, MAT.MAT_GRP_3
     , SUM(DECODE(WORK_DATE, '20200503', HLD.QTY_1, 0)) A0
     , SUM(DECODE(WORK_DATE, '20200504', HLD.QTY_1, 0)) A1
     , SUM(DECODE(WORK_DATE, '20200505', HLD.QTY_1, 0)) A2
     , SUM(DECODE(WORK_DATE, '20200506', HLD.QTY_1, 0)) A3
     , SUM(DECODE(WORK_DATE, '20200507', HLD.QTY_1, 0)) A4
     , SUM(DECODE(WORK_DATE, '20200508', HLD.QTY_1, 0)) A5
     , SUM(DECODE(WORK_DATE, '20200509', HLD.QTY_1, 0)) A6
     , SUM(DECODE(WORK_DATE, '20200510', HLD.QTY_1, 0)) A7
     , SUM(DECODE(WORK_DATE, '20200511', HLD.QTY_1, 0)) A8
     , SUM(DECODE(WORK_DATE, '20200512', HLD.QTY_1, 0)) A9
     , SUM(DECODE(WORK_DATE, '20200513', HLD.QTY_1, 0)) A10
     , SUM(DECODE(WORK_DATE, '20200514', HLD.QTY_1, 0)) A11
     , SUM(DECODE(WORK_DATE, '20200515', HLD.QTY_1, 0)) A12
     , SUM(DECODE(WORK_DATE, '20200516', HLD.QTY_1, 0)) A13
     , SUM(DECODE(WORK_DATE, '20200517', HLD.QTY_1, 0)) A14
     , SUM(DECODE(WORK_DATE, '20200518', HLD.QTY_1, 0)) A15
     , SUM(DECODE(WORK_DATE, '20200519', HLD.QTY_1, 0)) A16
     , SUM(DECODE(WORK_DATE, '20200520', HLD.QTY_1, 0)) A17
     , SUM(DECODE(WORK_DATE, '20200521', HLD.QTY_1, 0)) A18
     , SUM(DECODE(WORK_DATE, '20200522', HLD.QTY_1, 0)) A19
     , SUM(DECODE(WORK_DATE, '20200523', HLD.QTY_1, 0)) A20
     , SUM(DECODE(WORK_DATE, '20200524', HLD.QTY_1, 0)) A21
     , SUM(DECODE(WORK_DATE, '20200525', HLD.QTY_1, 0)) A22
     , SUM(DECODE(WORK_DATE, '20200526', HLD.QTY_1, 0)) A23
     , SUM(DECODE(WORK_DATE, '20200527', HLD.QTY_1, 0)) A24
     , SUM(DECODE(WORK_DATE, '20200528', HLD.QTY_1, 0)) A25
     , SUM(DECODE(WORK_DATE, '20200529', HLD.QTY_1, 0)) A26
     , SUM(DECODE(WORK_DATE, '20200530', HLD.QTY_1, 0)) A27
  FROM ( 
        SELECT HLD.FACTORY 
             , HLD.MAT_ID 
             , HLD.LOT_ID   
             , HLD.QTY_1 
             , GET_WORK_DATE(HLD.HOLD_TRAN_TIME, 'D') AS WORK_DATE 
             , HIS.LOT_CMF_5 AS LOT_TYPE 
             , HIS.TRAN_CMF_2 AS SHP_FAC 
          FROM RWIPLOTHLD HLD 
             , RWIPLOTHIS HIS 
         WHERE 1=1 
           AND HLD.FACTORY = 'HMVA2' 
           AND HLD.FACTORY = HIS.FACTORY(+) 
           AND HLD.LOT_ID = HIS.LOT_ID(+) 
           AND HLD.HIST_SEQ = HIS.HIST_SEQ(+) 
           AND HLD.OPER IN ('A1050', 'A1440', 'A1450', 'A1460')    
           AND HLD.HOLD_TRAN_TIME BETWEEN '20200502220000' AND '20200530215959' 
           AND HIS.HOLD_CODE IN ('S0', 'H55', 'H74') 
           AND HLD.HIST_DEL_FLAG = ' ' 
           AND HIS.HIST_DEL_FLAG = ' ' 
           AND HIS.TRAN_CODE = 'HOLD' 
       ) HLD 
       , MWIPMATDEF MAT 
 WHERE 1 = 1            
   AND HLD.FACTORY = MAT.FACTORY 
   AND HLD.MAT_ID = MAT.MAT_ID            
   AND MAT.DELETE_FLAG <> 'Y'
   AND MAT.MAT_TYPE = 'FG'
 GROUP BY HLD.SHP_FAC, MAT.MAT_GRP_1 , MAT.MAT_GRP_6, MAT.MAT_GRP_3
 ORDER BY HLD.SHP_FAC, MAT.MAT_GRP_1 , MAT.MAT_GRP_6, MAT.MAT_GRP_3

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_VENDOR_PLATING' AND KEY_1 = HLD.SHP_FAC AND ROWNUM=1), '-') AS SHP_FAC, (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER, MAT.MAT_GRP_6, MAT.MAT_GRP_3
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200503', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200503', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200503', 1, 0))), 2) AS A0
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200504', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200504', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200504', 1, 0))), 2) AS A1
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200505', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200505', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200505', 1, 0))), 2) AS A2
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200506', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200506', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200506', 1, 0))), 2) AS A3
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200507', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200507', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200507', 1, 0))), 2) AS A4
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200508', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200508', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200508', 1, 0))), 2) AS A5
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200509', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200509', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200509', 1, 0))), 2) AS A6
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200510', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200510', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200510', 1, 0))), 2) AS A7
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200511', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200511', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200511', 1, 0))), 2) AS A8
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200512', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200512', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200512', 1, 0))), 2) AS A9
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200513', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200513', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200513', 1, 0))), 2) AS A10
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200514', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200514', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200514', 1, 0))), 2) AS A11
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200515', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200515', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200515', 1, 0))), 2) AS A12
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200516', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200516', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200516', 1, 0))), 2) AS A13
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200517', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200517', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200517', 1, 0))), 2) AS A14
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200518', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200518', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200518', 1, 0))), 2) AS A15
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200519', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200519', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200519', 1, 0))), 2) AS A16
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200520', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200520', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200520', 1, 0))), 2) AS A17
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200521', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200521', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200521', 1, 0))), 2) AS A18
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200522', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200522', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200522', 1, 0))), 2) AS A19
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200523', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200523', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200523', 1, 0))), 2) AS A20
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200524', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200524', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200524', 1, 0))), 2) AS A21
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200525', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200525', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200525', 1, 0))), 2) AS A22
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200526', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200526', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200526', 1, 0))), 2) AS A23
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200527', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200527', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200527', 1, 0))), 2) AS A24
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200528', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200528', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200528', 1, 0))), 2) AS A25
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200529', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200529', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200529', 1, 0))), 2) AS A26
     , ROUND(DECODE(SUM(DECODE(WORK_DATE, '20200530', 1, 0)), 0, 0, SUM(DECODE(WORK_DATE, '20200530', TAT, 0)) / SUM(DECODE(WORK_DATE, '20200530', 1, 0))), 2) AS A27
  FROM ( 
        SELECT HLD.FACTORY 
             , HLD.MAT_ID 
             , HLD.LOT_ID   
             , TRUNC(DECODE(TRIM(HLD.RELEASE_TRAN_TIME), NULL, SYSDATE,TO_DATE(HLD.RELEASE_TRAN_TIME,'YYYYMMDDHH24MISS')) - TO_DATE(HLD.HOLD_TRAN_TIME,'YYYYMMDDHH24MISS'),2) AS TAT 
             , GET_WORK_DATE(HLD.HOLD_TRAN_TIME, 'D') AS WORK_DATE 
             , HIS.LOT_CMF_5 AS LOT_TYPE 
             , HIS.TRAN_CMF_2 AS SHP_FAC 
          FROM RWIPLOTHLD HLD 
             , RWIPLOTHIS HIS 
         WHERE 1=1 
           AND HLD.FACTORY = 'HMVA2' 
           AND HLD.FACTORY = HIS.FACTORY(+) 
           AND HLD.LOT_ID = HIS.LOT_ID(+) 
           AND HLD.HIST_SEQ = HIS.HIST_SEQ(+) 
           AND HLD.OPER IN ('A1050', 'A1440', 'A1450', 'A1460')    
           AND HLD.HOLD_TRAN_TIME BETWEEN '20200502220000' AND '20200530215959' 
           AND HIS.HOLD_CODE IN ('S0', 'H55', 'H74') 
           AND HLD.HIST_DEL_FLAG = ' ' 
           AND HIS.HIST_DEL_FLAG = ' ' 
           AND HIS.TRAN_CODE = 'HOLD' 
       ) HLD 
       , MWIPMATDEF MAT 
 WHERE 1 = 1            
   AND HLD.FACTORY = MAT.FACTORY 
   AND HLD.MAT_ID = MAT.MAT_ID            
   AND MAT.DELETE_FLAG <> 'Y'
   AND MAT.MAT_TYPE = 'FG'
 GROUP BY HLD.SHP_FAC, MAT.MAT_GRP_1 , MAT.MAT_GRP_6, MAT.MAT_GRP_3
 ORDER BY HLD.SHP_FAC, MAT.MAT_GRP_1 , MAT.MAT_GRP_6, MAT.MAT_GRP_3

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'BUM010101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT               
      LOT_ID          
     ,MOTHER_LOT_ID          
     ,TESTAREA          
     ,PRODUCT          
     ,START_TIME          
     ,END_TIME          
     ,YIELD          
     ,WAFER_CAT          
     ,LOSS_DIE          
     ,TESTED_DIE          
     ,NETDIE          
     ,GEC          
 FROM VYMSWFRYLD@RPTTOMES YLD, MWIPMATDEF MAT      
 WHERE 1=1          
 AND YLD.PRODUCT = MAT.MAT_ID 
 AND END_TIME BETWEEN TO_DATE('20200523000000','YYYYMMDDHH24MISS') AND TO_DATE('20200530235900','YYYYMMDDHH24MISS')          
 AND MAT.FACTORY = 'HMKB1'   
 AND MAT.MAT_VER = 1 
 ORDER BY  LOT_ID         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT               
      LOT_ID          
     ,MOTHER_LOT_ID          
     ,TESTAREA          
     ,PRODUCT          
     ,START_TIME          
     ,END_TIME          
     ,YIELD          
     ,WAFER_CAT          
     ,LOSS_DIE          
     ,TESTED_DIE          
     ,NETDIE          
     ,GEC          
 FROM VYMSWFRYLD@RPTTOMES YLD, MWIPMATDEF MAT      
 WHERE 1=1          
 AND YLD.PRODUCT = MAT.MAT_ID 
 AND END_TIME BETWEEN TO_DATE('20200401000000','YYYYMMDDHH24MISS') AND TO_DATE('20200530235900','YYYYMMDDHH24MISS')          
 AND MAT.FACTORY = 'HMKB1'   
 AND MAT.MAT_VER = 1 
 ORDER BY  LOT_ID         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD') - 7, 'YYYYMMDD'))) PREV_WEEK                
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200530')) CUR_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD') + 14, 'YYYYMMDD'))) NEXT_NEXT_WEEK                  
FROM DUAL         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070504'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') - 7, 'YYYYMMDD'))) PREV_WEEK                
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200301')) CUR_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK                  
     , MAX((SELECT LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') + 14, 'YYYYMMDD'))) NEXT_NEXT_WEEK                  
FROM DUAL         

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH V_CAL AS (         
SELECT MIN(DAYSTR) START_DAY         
     , MAX(DAYSTR) END_DAY         
     , MAX((SELECT SYS_YEAR FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200301' )) YEAR         
     , MAX((SELECT SYS_MONTH FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200301')) MONTH         
     , MAX((SELECT PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200301')) CUR_WEEK         
     , MAX((SELECT PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') + 7, 'YYYYMMDD'))) NEXT_WEEK         
     , MAX((SELECT TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') - 1, 'YYYYMMDD') FROM DUAL)) PREV_DAY         
     , '20200301' TODAY         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200301')) YEAR_CUR_WEEK         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') + 7, 'YYYYMMDD'))) YEAR_NEXT_WEEK         
     , MAX((SELECT SYS_YEAR||LPAD(PLAN_WEEK,2,'0') FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = TO_CHAR(TO_DATE('20200301', 'YYYYMMDD') + 14, 'YYYYMMDD'))) YEAR_NEXT_NEXT_WEEK         
     , MAX(CASE WHEN GUBUN = 'MON' THEN START_T ELSE '' END) MONTH_START         
     , MAX(CASE WHEN GUBUN = 'MON' THEN END_T ELSE '' END) MONTH_END         
     , MAX(CASE WHEN GUBUN = 'WEEK' THEN START_T ELSE '' END) WEEK_START         
     , MAX(CASE WHEN GUBUN = 'WEEK' THEN END_T ELSE '' END) WEEK_END         
  FROM (SELECT 'MON' GUBUN, B.SYS_YEAR, B.SYS_MONTH, B.SYS_DAY, B.PLAN_WEEK, B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0') AS DAYSTR, MIN(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER() START_T, MAX(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER() END_T         
          FROM MWIPCALDEF A, MWIPCALDEF B         
         WHERE A.CALENDAR_ID = 'OTD'         
           AND A.SYS_DATE = '20200301'         
           AND A.CALENDAR_ID = B.CALENDAR_ID         
           AND A.SYS_YEAR = B.SYS_YEAR         
           AND A.SYS_MONTH = B.SYS_MONTH         
           AND A.SYS_DATE >= B.SYS_DATE         
        UNION ALL         
        SELECT 'WEEK', B.SYS_YEAR, B.SYS_MONTH, B.SYS_DAY, B.PLAN_WEEK, B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0') AS DAYSTR, MIN(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER(), MAX(B.SYS_YEAR || LPAD(B.SYS_MONTH,2,'0') ||  LPAD(B.SYS_DAY,2,'0')) OVER()         
          FROM MWIPCALDEF A, MWIPCALDEF B         
         WHERE A.CALENDAR_ID = 'OTD'         
           AND A.SYS_DATE = '20200301'         
           AND A.CALENDAR_ID = B.CALENDAR_ID         
           AND A.SYS_YEAR = B.SYS_YEAR         
           AND A.PLAN_WEEK = B.PLAN_WEEK         
           AND A.SYS_DATE >= B.SYS_DATE)         
)          
, V_MAT AS (         
SELECT DISTINCT REPLACE(BOM.MATCODE, '-O', '') AS MATCODE, MAX(DES.DESCRIPT) DESCRIPT/*, MAT.MAT_ID*/, MAT.VENDOR_ID, MAT.MAT_CMF_11, NVL(PROD.MAT_ID,MAT.MAT_ID) MAT_ID                                            
  FROM MWIPMATDEF MAT                    
     , (SELECT /*+ ORDERED */MATCODE, PARTNUMBER, RESV_FLAG_1                   
          FROM CWIPBOMDEF B                  
             , MWIPMATDEF M                  
         WHERE B.MATCODE = M.MAT_ID                  
           AND M.MAT_TYPE = 'PB'                  
           AND B.RESV_FLAG_1 = 'Y'                  
           AND B.DELFLAG = ' ') BOM                           
     , (SELECT DISTINCT REPLACE(MATCODE, '-O', '') MATCODE, MAX(DESCRIPT) DESCRIPT                            
          FROM CWIPBOMDEF                            
         WHERE 1 = 1                           
           AND RESV_FLAG_1 = 'Y'                                              
           AND DELFLAG = ' '                           
         GROUP BY REPLACE(MATCODE, '-O', '')) DES          
     , HRTDMCPROUT@RPTTOMES PROD                                          
 WHERE MAT.MAT_ID = BOM.PARTNUMBER                                             
   AND MAT.FACTORY = 'HMVA2'                                             
   AND MAT.MAT_GRP_10 IN ('EMCP', 'EMMC')                                             
   AND MAT.MAT_ID LIKE '%'        
   AND MAT.VENDOR_ID <> ' '                           
   AND MAT.VENDOR_ID NOT LIKE 'PMSE000%'              
   AND REPLACE(BOM.MATCODE, '-O', '') = DES.MATCODE            
   AND PROD.MAT_KEY(+) = MAT.MAT_ID                        
 GROUP BY REPLACE(BOM.MATCODE, '-O', ''), MAT.MAT_ID, MAT.VENDOR_ID, MAT.MAT_CMF_11, PROD.MAT_ID             
)         
, V_WEEK_PLAN AS (         
SELECT MAT.MAT_ID                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END) AS W0                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END) AS W1                  
     , SUM(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END) AS W2                  
  FROM MWIPMATDEF MAT                  
     , (                  
        SELECT MAT_ID                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_CUR_WEEK, WW_QTY, 0)) AS W0                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_NEXT_WEEK, WW_QTY, 0)) AS W1                  
             , SUM(DECODE(PLAN_WEEK, V_CAL.YEAR_NEXT_NEXT_WEEK, WW_QTY, 0)) AS W2                  
          FROM RWIPPLNWEK, V_CAL                  
         WHERE 1=1                  
           AND FACTORY = 'HMVA2'                  
           AND GUBUN = '3'         
           AND PLAN_WEEK BETWEEN V_CAL.YEAR_CUR_WEEK AND V_CAL.YEAR_NEXT_NEXT_WEEK                  
         GROUP BY MAT_ID                  
       ) PLN                  
 WHERE 1=1                  
   AND MAT.MAT_ID = PLN.MAT_ID                  
   AND MAT.FACTORY = 'HMVA2'                  
   AND MAT.DELETE_FLAG = ' '                  
   AND MAT.MAT_TYPE = 'FG'                  
 GROUP BY MAT.MAT_ID                 
)         
, V_WIP AS (         
SELECT MAT_ID, DA1_AFTER_WIP AS TTL         
  FROM (SELECT MAT_ID         
             , SUM(CASE WHEN OPER BETWEEN 'A0402' AND 'AZ010' THEN QTY ELSE 0 END) DA1_AFTER_WIP         
          FROM (         
                SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_4, MAT_GRP_5         
                     , CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) ELSE QTY_1 END AS QTY         
                  FROM (         
                        SELECT A.MAT_ID, A.OPER, B.OPER_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, QTY_1         
                             , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT          
                          FROM RWIPLOTSTS_BOH A, V_CAL         
                             , MWIPOPRDEF B         
                             , MWIPMATDEF C         
                         WHERE  1 = 1           
                           AND A.CUTOFF_DT =  V_CAL.TODAY||'22'                
                           AND A.FACTORY = B.FACTORY          
                           AND A.FACTORY = C.FACTORY          
                           AND A.OPER = B.OPER         
                           AND A.MAT_ID = C.MAT_ID         
                           AND A.FACTORY  = 'HMVA2'          
                           AND A.LOT_DEL_FLAG = ' '         
                           AND A.LOT_TYPE = 'W'         
                           AND A.LOT_CMF_5 LIKE 'P%'          
                           AND (C.MAT_GRP_5 IN ('1st','Merge', '-') OR C.MAT_GRP_5 LIKE 'Middle%')         
                           AND C.DELETE_FLAG = ' '          
                       )         
               )         
         GROUP BY MAT_ID         
       )                  
)         
, V_AO AS (         
SELECT MAT_ID, SUM(WEEK_AO) WEEK_AO, SUM(MONTH_AO) MONTH_AO         
  FROM (SELECT A.MAT_ID          
             , SUM(SHIP_QTY_1) QTY         
             , CASE WHEN WORK_DATE BETWEEN MAX(V_CAL.WEEK_START) AND MAX(V_CAL.WEEK_END) THEN SUM(SHIP_QTY_1)          
                    ELSE 0 END AS WEEK_AO         
             , CASE WHEN WORK_DATE BETWEEN MAX(V_CAL.MONTH_START) AND MAX(V_CAL.MONTH_END) THEN SUM(SHIP_QTY_1)          
                    ELSE 0 END AS MONTH_AO                  
         FROM (                  
              SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3                         
                   , SHIP_QTY_1 AS SHIP_QTY_1                  
                   , SHIP_QTY_2 AS SHIP_QTY_2                  
                FROM (                  
                     SELECT CM_KEY_1 AS FACTORY, MAT_ID                  
                          , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010') OPER                  
                          , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3                        
                         , S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1 SHIP_QTY_1             
                         , S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2 SHIP_QTY_2              
                       FROM RSUMFACMOV                   
                      WHERE FACTORY NOT IN ('RETURN')                       
                     )                        
              )A                  
              , MWIPMATDEF B         
              , V_CAL                 
         WHERE 1=1                   
           AND A.FACTORY  = 'HMVA2'                   
           AND A.FACTORY = B.FACTORY                   
           AND A.MAT_ID = B.MAT_ID                                  
           AND A.MAT_VER = 1                   
           AND B.MAT_VER = 1                   
           AND B.MAT_TYPE = 'FG'                   
           AND A.OPER IN ('AZ010')                  
           AND A.MAT_ID LIKE '%'                    
           AND A.OPER NOT IN ('00001','00002')                   
           AND A.WORK_DATE BETWEEN V_CAL.START_DAY AND V_CAL.END_DAY               
           AND B.MAT_GRP_3 <> '-'         
           AND (B.MAT_GRP_5 IN ('1st','-','Merge')  OR B.MAT_GRP_5 LIKE 'Middle%')         
         GROUP BY A.MAT_ID, WORK_DATE         
     )         
 GROUP BY MAT_ID         
)         
, V_STOCK AS (         
SELECT REPLACE(A.MAT_ID,'-O','') AS MAT_ID         
     , SUM(B.INV_QTY) AS "창고재고"         
     , SUM(B.INV_L_QTY) AS "공정창고"         
     , SUM(E.WIK_WIP) AS "외주재고"          
     , SUM(C.QTY_TTL) AS "현장재고"         
     , SUM(C.QTY_SMT) AS "SMT"         
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS "재고합"         
  FROM MWIPMATDEF A          
     , (          
        SELECT MAT_ID          
             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY            
             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY          
          FROM CWMSLOTSTS_BOH@RPTTOMES       
         WHERE CUTOFF_DT = '2020030122'
           AND QUANTITY> 0          
           AND STORAGE_LOCATION IN ('1000', '1001', '1003')          
         GROUP BY MAT_ID          
         UNION ALL 
        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
          FROM CWIPMATSLP@RPTTOMES 
         WHERE 1=1 
           AND RECV_FLAG = ' ' 
           AND MAT_ID LIKE 'R16%' 
           AND IN_TIME BETWEEN '20200228000000' AND '20200301235959' 
         GROUP BY MAT_ID 
       ) B          
     , (          
        SELECT MAT_ID         
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1          
                        ELSE 0          
                   END) AS GRADE_A          
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1          
                        ELSE 0         
                   END) AS GRADE_B          
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1          
                        ELSE 0          
                   END) AS IN_QTY          
             , COUNT(*) AS LOT_TTL          
             , SUM(CASE WHEN A.OPER = 'M0330' THEN QTY_1         
                        ELSE 0 END) QTY_SMT                   
             , SUM(CASE WHEN A.OPER <> 'M0330' THEN QTY_1         
                        ELSE 0 END) QTY_TTL           
          FROM RWIPLOTSTS_BOH A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.CUTOFF_DT = '20200301' || '22' 
           AND A.FACTORY = B.FACTORY(+)          
           AND A.LOT_ID = B.LOT_ID(+)          
           AND A.FACTORY = 'HMVA2'         
           AND A.LOT_TYPE != 'W'         
           AND A.LOT_DEL_FLAG = ' '         
           AND A.LOT_CMF_2 = '-'          
           AND A.LOT_CMF_9 != ' '          
           AND A.QTY_1 > 0          
           AND A.OPER NOT IN  ('00001', '00002', 'V0000')          
         GROUP BY A.MAT_ID           
       ) C          
     , (          
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP          
          FROM ISTMWIKWIP@RPTTOMES, V_CAL          
         WHERE 1=1          
                   AND CUTOFF_DT = '2020030122'         
         GROUP BY MAT_ID          
       ) E          
 WHERE 1=1         
   AND A.MAT_ID = B.MAT_ID(+)         
   AND A.MAT_ID = C.MAT_ID(+)         
   AND A.MAT_ID = E.MAT_ID(+)         
   AND A.FACTORY = 'HMVA2'         
   AND A.MAT_ID LIKE '%'         
 GROUP BY REPLACE(A.MAT_ID,'-O','')         
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) > 0         
 ORDER BY REPLACE(A.MAT_ID,'-O','')         
)         
, V_PCB AS (         
SELECT REPLACE(A.MAT_ID,'-O','')  AS MAT_ID         
     , SUM(DECODE(WORK_DATE, V_CAL.PREV_DAY, END_QTY)) AS PREV_DAY         
     , SUM(DECODE(WORK_DATE, V_CAL.TODAY, END_QTY)) AS CURRENT_DAY         
  FROM (         
        SELECT FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3         
             , SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1) AS END_QTY         
          FROM RSUMWIPMOV, V_CAL         
         WHERE 1=1         
           AND FACTORY = 'HMVA2'         
           AND WORK_DATE BETWEEN V_CAL.PREV_DAY AND V_CAL.TODAY         
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%')         
         GROUP BY FACTORY, MAT_ID, OPER, WORK_DATE, CM_KEY_3          
       ) A         
     , MWIPMATDEF B         
     , V_CAL         
 WHERE 1=1         
   AND A.FACTORY = B.FACTORY         
   AND A.MAT_ID = B.MAT_ID         
   AND A.END_QTY > 0         
   AND A.OPER IN ('V0000')         
 GROUP BY REPLACE(A.MAT_ID,'-O','')         
)         
, V_MON_PLN AS (         
SELECT MAT_ID, RESV_FIELD3 SOP_PLN         
  FROM CWIPPLNMON, V_CAL         
 WHERE FACTORY = 'HMVA2'         
   AND PLAN_MONTH = V_CAL.YEAR || LPAD(V_CAL.MONTH, 2, '0')           
   AND RESV_FIELD3 <> ' '          
)         
, V_ORDER AS (         
SELECT REPLACE(SMM.MATCODE, '-O', '')    AS MATCODE         
     , SUM(SMM.ORDER_QTY) AS ORDER_QTY          
  FROM RSUMWIPMAT SMM         
 GROUP BY REPLACE(SMM.MATCODE, '-O', '')         
)         
SELECT MAT.MATCODE, MAT.DESCRIPT,  ' ', MAT.MAT_CMF_11         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" - BY_MATCODE."현장재고",0) AS "당주 SMT 잔량"         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" - (BY_MATCODE."현장재고" + BY_MATCODE."외주재고"),0) AS "차주 불출 잔량"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" - (BY_MATCODE."현장재고" + BY_MATCODE."외주재고")) / NULLIF((7 - (TO_DATE('20200301220000', 'YYYYMMDDHH24MISS') - (NEXT_DAY(TO_DATE('20200301220000', 'YYYYMMDDHH24MISS'),2) - 7 )) - 1),0),0)  AS "차주 일필요"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공") + MAT."SOP 차주 계획" - BY_MATCODE."현장재고",0) AS "차주 입고 총량"         
     , ROUND((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" -(BY_MATCODE."현장재고")) / NULLIF((7 - (TO_DATE('20200301220000', 'YYYYMMDDHH24MISS') - (NEXT_DAY(TO_DATE('20200301220000', 'YYYYMMDDHH24MISS'),2) - 7 )) ),0),0)  AS "차주 입고 일필요"         
     , ROUND(((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공") + MAT."SOP 차주 계획" - BY_MATCODE."현장재고" + MAT."SOP 차차주 계획")/1,0) AS "차차주 입고 필요량"         
     , ROUND(((MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획" -(BY_MATCODE."현장재고") + MAT."SOP 차차주 계획") / NULLIF((14 - (TO_DATE('20200301220000', 'YYYYMMDDHH24MISS') - (NEXT_DAY(TO_DATE('20200301220000', 'YYYYMMDDHH24MISS'),2) - 7 )) ),0))/1,0)  AS "차차주 일필요량"         
     , ROUND(MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공",0) AS "SOP 당주 잔량"         
     , ROUND(MAT."SOP 차주 계획",0) AS "SOP 차주 계획"         
     , ROUND(MAT."SOP 차차주 계획",0) AS "SOP 차차주 계획"         
     , ROUND(BY_MATCODE.TTL,0) AS TTL         
     , ROUND(BY_MATCODE."현장재고",0) AS "현장재고"         
     , ROUND(BY_MATCODE."SMT",0) AS "SMT"         
     , ROUND(BY_MATCODE."외주재고",0) AS "외주재고"         
     , ROUND(BY_MATCODE."공정창고",0) AS "공정창고"          
     , ROUND(BY_MATCODE."창고재고",0) AS "창고재고"          
     , (BY_MATCODE.TTL - (MAT."SOP 당주 계획" - MAT."주AO실적" - MAT."DA이후재공" + MAT."SOP 차주 계획")) AS "당주+차주 PCB 부족"         
     , ROUND(BY_MATCODE."발주잔량",0) AS "발주잔량"         
     , 0 AS "MZ 소요량"         
     , 0 AS "전일 PCB 불출실적"         
     , 0 AS "당일 PCB 불출실적"         
     , ROUND(BY_MATCODE."전일 PCB 입고 실적",0) AS "전일 PCB 입고 실적"         
     , ROUND(BY_MATCODE."당일 PCB 입고 실적",0) AS "당일 PCB 입고 실적"         
     , ROUND(MAT."월계획",0) AS "월계획"         
     , ROUND(MAT."달AO실적"+MAT."DA이후재공"+BY_MATCODE."현장재고",0) AS "작업 완료"         
     , ROUND(MAT."월계획" - (MAT."달AO실적"+MAT."DA이후재공"+BY_MATCODE."현장재고") ,0) AS "SMT 잔량"              
     , ROUND(MAT."DA이후재공",1) AS "DA이후재공"         
     , ROUND(MAT."주AO실적",1) AS "주AO실적"          
     , ROUND(MAT."달AO실적",1) AS "달AO실적"          
  FROM (SELECT          
               V_MAT.MATCODE, MAX(V_MAT.DESCRIPT) DESCRIPT,  ' ', V_MAT.MAT_CMF_11          
             , NVL(SUM(V_WEEK_PLAN.W0),0) AS "SOP 당주 계획"          
             , NVL(SUM(V_WEEK_PLAN.W1),0) AS "SOP 차주 계획"         
             , NVL(SUM(V_WEEK_PLAN.W2),0) AS "SOP 차차주 계획"         
             , NVL(SUM(V_AO.WEEK_AO),0)   AS "주AO실적"         
             , NVL(SUM(V_AO.MONTH_AO),0)  AS "달AO실적"         
             , NVL(SUM(V_MON_PLN.SOP_PLN),0) AS "월계획"         
             , NVL(SUM(V_AO.MONTH_AO + V_WIP.TTL),0) AS "작업 완료"         
             , NVL(SUM(V_MON_PLN.SOP_PLN - (V_AO.MONTH_AO + V_WIP.TTL)),0) AS "SMT 잔량"         
             , NVL(SUM(V_WIP.TTL),0) AS "DA이후재공"         
          FROM V_MAT         
             , V_WEEK_PLAN         
             , V_WIP         
             , V_AO         
             , V_MON_PLN         
         WHERE V_MAT.MAT_ID = V_WEEK_PLAN.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_WIP.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_AO.MAT_ID(+)         
           AND V_MAT.MAT_ID = V_MON_PLN.MAT_ID(+)         
         GROUP BY V_MAT.MATCODE, ' ', V_MAT.MAT_CMF_11          
       ) MAT         
     , (SELECT V_STOCK.MAT_ID         
             , NVL(V_STOCK."창고재고",0) + NVL(V_STOCK."공정창고",0) + NVL(V_STOCK."외주재고",0)  + NVL(V_STOCK."현장재고",0) + NVL(V_STOCK."SMT",0) AS TTL         
             , NVL(V_STOCK."현장재고",0) AS "현장재고"         
             , NVL(V_STOCK."SMT",0) AS "SMT"         
             , NVL(V_STOCK."외주재고",0) AS "외주재고"         
             , NVL(V_STOCK."공정창고",0) AS "공정창고"         
             , NVL(V_STOCK."창고재고",0) AS "창고재고"         
             , NVL(V_ORDER.ORDER_QTY, 0) AS "발주잔량"         
             , NVL(V_PCB.PREV_DAY,0) AS "전일 PCB 입고 실적"         
             , NVL(V_PCB.CURRENT_DAY,0) AS "당일 PCB 입고 실적"         
          FROM V_STOCK         
             , V_PCB         
             , V_ORDER         
         WHERE 1 = 1         
           AND V_STOCK.MAT_ID = V_PCB.MAT_ID(+)         
           AND V_STOCK.MAT_ID = V_ORDER.MATCODE(+)         
       ) BY_MATCODE                    
 WHERE MAT.MATCODE = BY_MATCODE.MAT_ID(+)                
   AND MAT.MATCODE LIKE '%'         
 ORDER BY 1,2,3,4                

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS CODE, OPER_DESC AS DATA 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY = 'HMVA2'
   AND (OPER LIKE 'V%' OR OPER LIKE 'M%')  
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE, A.MAT_ID, B.MAT_DESC, ' ' 
     , SUM(DECODE(OPER, 'M0110', BOH_QTY,0)) BOH_QTY0
     , SUM(DECODE(OPER, 'M0120', BOH_QTY,0)) BOH_QTY1
     , SUM(DECODE(OPER, 'M0160', BOH_QTY,0)) BOH_QTY2
     , SUM(DECODE(OPER, 'M0161', BOH_QTY,0)) BOH_QTY3
     , SUM(DECODE(OPER, 'M0300', BOH_QTY,0)) BOH_QTY4
     , SUM(DECODE(OPER, 'M0315', BOH_QTY,0)) BOH_QTY5
     , SUM(DECODE(OPER, 'M0320', BOH_QTY,0)) BOH_QTY6
     , SUM(DECODE(OPER, 'M0323', BOH_QTY,0)) BOH_QTY7
     , SUM(DECODE(OPER, 'M0325', BOH_QTY,0)) BOH_QTY8
     , SUM(DECODE(OPER, 'M0329', BOH_QTY,0)) BOH_QTY9
     , SUM(DECODE(OPER, 'M0330', BOH_QTY,0)) BOH_QTY10
     , SUM(DECODE(OPER, 'M0336', BOH_QTY,0)) BOH_QTY11
     , SUM(DECODE(OPER, 'M0337', BOH_QTY,0)) BOH_QTY12
     , SUM(DECODE(OPER, 'M0339', BOH_QTY,0)) BOH_QTY13
     , SUM(DECODE(OPER, 'M0340', BOH_QTY,0)) BOH_QTY14
     , SUM(DECODE(OPER, 'M0345', BOH_QTY,0)) BOH_QTY15
     , SUM(DECODE(OPER, 'M0391', BOH_QTY,0)) BOH_QTY16
     , SUM(DECODE(OPER, 'M0400', BOH_QTY,0)) BOH_QTY17
     , SUM(DECODE(OPER, 'M0401', BOH_QTY,0)) BOH_QTY18
     , SUM(DECODE(OPER, 'M0500', BOH_QTY,0)) BOH_QTY19
     , SUM(DECODE(OPER, 'M0550', BOH_QTY,0)) BOH_QTY20
     , SUM(DECODE(OPER, 'M1750', BOH_QTY,0)) BOH_QTY21
     , SUM(DECODE(OPER, 'V0000', BOH_QTY,0)) BOH_QTY22
     , SUM(DECODE(OPER, 'V0013', BOH_QTY,0)) BOH_QTY23
     , SUM(DECODE(OPER, 'V0020', BOH_QTY,0)) BOH_QTY24
     , SUM(DECODE(OPER, 'V0040', BOH_QTY,0)) BOH_QTY25
     , SUM(DECODE(OPER, 'V0055', BOH_QTY,0)) BOH_QTY26
     , SUM(DECODE(OPER, 'V0065', BOH_QTY,0)) BOH_QTY27
     , SUM(DECODE(OPER, 'V0090', BOH_QTY,0)) BOH_QTY28
     , SUM(DECODE(OPER, 'V0100', BOH_QTY,0)) BOH_QTY29
     , SUM(DECODE(OPER, 'V0110', BOH_QTY,0)) BOH_QTY30
     , SUM(DECODE(OPER, 'V0120', BOH_QTY,0)) BOH_QTY31
     , SUM(DECODE(OPER, 'V0130', BOH_QTY,0)) BOH_QTY32
     , SUM(DECODE(OPER, 'V0160', BOH_QTY,0)) BOH_QTY33
     , SUM(DECODE(OPER, 'V0161', BOH_QTY,0)) BOH_QTY34
     , SUM(DECODE(OPER, 'V0165', BOH_QTY,0)) BOH_QTY35
     , SUM(DECODE(OPER, 'V0175', BOH_QTY,0)) BOH_QTY36
     , SUM(DECODE(OPER, 'V0200', BOH_QTY,0)) BOH_QTY37
     , SUM(DECODE(OPER, 'V0300', BOH_QTY,0)) BOH_QTY38
     , SUM(DECODE(OPER, 'V0305', BOH_QTY,0)) BOH_QTY39
     , SUM(DECODE(OPER, 'V0310', BOH_QTY,0)) BOH_QTY40
     , SUM(DECODE(OPER, 'V0311', BOH_QTY,0)) BOH_QTY41
     , SUM(DECODE(OPER, 'V0315', BOH_QTY,0)) BOH_QTY42
     , SUM(DECODE(OPER, 'V0319', BOH_QTY,0)) BOH_QTY43
     , SUM(DECODE(OPER, 'V0320', BOH_QTY,0)) BOH_QTY44
     , SUM(DECODE(OPER, 'V0323', BOH_QTY,0)) BOH_QTY45
     , SUM(DECODE(OPER, 'V0327', BOH_QTY,0)) BOH_QTY46
     , SUM(DECODE(OPER, 'V0330', BOH_QTY,0)) BOH_QTY47
     , SUM(DECODE(OPER, 'V0331', BOH_QTY,0)) BOH_QTY48
     , SUM(DECODE(OPER, 'V0333', BOH_QTY,0)) BOH_QTY49
     , SUM(DECODE(OPER, 'V0334', BOH_QTY,0)) BOH_QTY50
     , SUM(DECODE(OPER, 'V0340', BOH_QTY,0)) BOH_QTY51
     , SUM(DECODE(OPER, 'V0350', BOH_QTY,0)) BOH_QTY52
     , SUM(DECODE(OPER, 'V0360', BOH_QTY,0)) BOH_QTY53
     , SUM(DECODE(OPER, 'V0370', BOH_QTY,0)) BOH_QTY54
     , SUM(DECODE(OPER, 'V0380', BOH_QTY,0)) BOH_QTY55
     , SUM(DECODE(OPER, 'V0390', BOH_QTY,0)) BOH_QTY56
     , SUM(DECODE(OPER, 'V0391', BOH_QTY,0)) BOH_QTY57
     , SUM(DECODE(OPER, 'V0400', BOH_QTY,0)) BOH_QTY58
     , SUM(DECODE(OPER, 'V0530', BOH_QTY,0)) BOH_QTY59
     , SUM(DECODE(OPER, 'V0600', BOH_QTY,0)) BOH_QTY60
     , SUM(DECODE(OPER, 'V0601', BOH_QTY,0)) BOH_QTY61
     , SUM(DECODE(OPER, 'V0660', BOH_QTY,0)) BOH_QTY62
     , SUM(DECODE(OPER, 'V0910', BOH_QTY,0)) BOH_QTY63
     , SUM(DECODE(OPER, 'V0930', BOH_QTY,0)) BOH_QTY64
     , SUM(DECODE(OPER, 'V1000', BOH_QTY,0)) BOH_QTY65
     , SUM(DECODE(OPER, 'V1001', BOH_QTY,0)) BOH_QTY66
     , SUM(DECODE(OPER, 'V1300', BOH_QTY,0)) BOH_QTY67
     , SUM(DECODE(OPER, 'V1301', BOH_QTY,0)) BOH_QTY68
     , SUM(DECODE(OPER, 'V1750', BOH_QTY,0)) BOH_QTY69
     , SUM(DECODE(OPER, 'V1800', BOH_QTY,0)) BOH_QTY70
     , SUM(DECODE(OPER, 'M0110', IN_QTY,0)) IN_QTY0
     , SUM(DECODE(OPER, 'M0120', IN_QTY,0)) IN_QTY1
     , SUM(DECODE(OPER, 'M0160', IN_QTY,0)) IN_QTY2
     , SUM(DECODE(OPER, 'M0161', IN_QTY,0)) IN_QTY3
     , SUM(DECODE(OPER, 'M0300', IN_QTY,0)) IN_QTY4
     , SUM(DECODE(OPER, 'M0315', IN_QTY,0)) IN_QTY5
     , SUM(DECODE(OPER, 'M0320', IN_QTY,0)) IN_QTY6
     , SUM(DECODE(OPER, 'M0323', IN_QTY,0)) IN_QTY7
     , SUM(DECODE(OPER, 'M0325', IN_QTY,0)) IN_QTY8
     , SUM(DECODE(OPER, 'M0329', IN_QTY,0)) IN_QTY9
     , SUM(DECODE(OPER, 'M0330', IN_QTY,0)) IN_QTY10
     , SUM(DECODE(OPER, 'M0336', IN_QTY,0)) IN_QTY11
     , SUM(DECODE(OPER, 'M0337', IN_QTY,0)) IN_QTY12
     , SUM(DECODE(OPER, 'M0339', IN_QTY,0)) IN_QTY13
     , SUM(DECODE(OPER, 'M0340', IN_QTY,0)) IN_QTY14
     , SUM(DECODE(OPER, 'M0345', IN_QTY,0)) IN_QTY15
     , SUM(DECODE(OPER, 'M0391', IN_QTY,0)) IN_QTY16
     , SUM(DECODE(OPER, 'M0400', IN_QTY,0)) IN_QTY17
     , SUM(DECODE(OPER, 'M0401', IN_QTY,0)) IN_QTY18
     , SUM(DECODE(OPER, 'M0500', IN_QTY,0)) IN_QTY19
     , SUM(DECODE(OPER, 'M0550', IN_QTY,0)) IN_QTY20
     , SUM(DECODE(OPER, 'M1750', IN_QTY,0)) IN_QTY21
     , SUM(DECODE(OPER, 'V0000', IN_QTY,0)) IN_QTY22
     , SUM(DECODE(OPER, 'V0013', IN_QTY,0)) IN_QTY23
     , SUM(DECODE(OPER, 'V0020', IN_QTY,0)) IN_QTY24
     , SUM(DECODE(OPER, 'V0040', IN_QTY,0)) IN_QTY25
     , SUM(DECODE(OPER, 'V0055', IN_QTY,0)) IN_QTY26
     , SUM(DECODE(OPER, 'V0065', IN_QTY,0)) IN_QTY27
     , SUM(DECODE(OPER, 'V0090', IN_QTY,0)) IN_QTY28
     , SUM(DECODE(OPER, 'V0100', IN_QTY,0)) IN_QTY29
     , SUM(DECODE(OPER, 'V0110', IN_QTY,0)) IN_QTY30
     , SUM(DECODE(OPER, 'V0120', IN_QTY,0)) IN_QTY31
     , SUM(DECODE(OPER, 'V0130', IN_QTY,0)) IN_QTY32
     , SUM(DECODE(OPER, 'V0160', IN_QTY,0)) IN_QTY33
     , SUM(DECODE(OPER, 'V0161', IN_QTY,0)) IN_QTY34
     , SUM(DECODE(OPER, 'V0165', IN_QTY,0)) IN_QTY35
     , SUM(DECODE(OPER, 'V0175', IN_QTY,0)) IN_QTY36
     , SUM(DECODE(OPER, 'V0200', IN_QTY,0)) IN_QTY37
     , SUM(DECODE(OPER, 'V0300', IN_QTY,0)) IN_QTY38
     , SUM(DECODE(OPER, 'V0305', IN_QTY,0)) IN_QTY39
     , SUM(DECODE(OPER, 'V0310', IN_QTY,0)) IN_QTY40
     , SUM(DECODE(OPER, 'V0311', IN_QTY,0)) IN_QTY41
     , SUM(DECODE(OPER, 'V0315', IN_QTY,0)) IN_QTY42
     , SUM(DECODE(OPER, 'V0319', IN_QTY,0)) IN_QTY43
     , SUM(DECODE(OPER, 'V0320', IN_QTY,0)) IN_QTY44
     , SUM(DECODE(OPER, 'V0323', IN_QTY,0)) IN_QTY45
     , SUM(DECODE(OPER, 'V0327', IN_QTY,0)) IN_QTY46
     , SUM(DECODE(OPER, 'V0330', IN_QTY,0)) IN_QTY47
     , SUM(DECODE(OPER, 'V0331', IN_QTY,0)) IN_QTY48
     , SUM(DECODE(OPER, 'V0333', IN_QTY,0)) IN_QTY49
     , SUM(DECODE(OPER, 'V0334', IN_QTY,0)) IN_QTY50
     , SUM(DECODE(OPER, 'V0340', IN_QTY,0)) IN_QTY51
     , SUM(DECODE(OPER, 'V0350', IN_QTY,0)) IN_QTY52
     , SUM(DECODE(OPER, 'V0360', IN_QTY,0)) IN_QTY53
     , SUM(DECODE(OPER, 'V0370', IN_QTY,0)) IN_QTY54
     , SUM(DECODE(OPER, 'V0380', IN_QTY,0)) IN_QTY55
     , SUM(DECODE(OPER, 'V0390', IN_QTY,0)) IN_QTY56
     , SUM(DECODE(OPER, 'V0391', IN_QTY,0)) IN_QTY57
     , SUM(DECODE(OPER, 'V0400', IN_QTY,0)) IN_QTY58
     , SUM(DECODE(OPER, 'V0530', IN_QTY,0)) IN_QTY59
     , SUM(DECODE(OPER, 'V0600', IN_QTY,0)) IN_QTY60
     , SUM(DECODE(OPER, 'V0601', IN_QTY,0)) IN_QTY61
     , SUM(DECODE(OPER, 'V0660', IN_QTY,0)) IN_QTY62
     , SUM(DECODE(OPER, 'V0910', IN_QTY,0)) IN_QTY63
     , SUM(DECODE(OPER, 'V0930', IN_QTY,0)) IN_QTY64
     , SUM(DECODE(OPER, 'V1000', IN_QTY,0)) IN_QTY65
     , SUM(DECODE(OPER, 'V1001', IN_QTY,0)) IN_QTY66
     , SUM(DECODE(OPER, 'V1300', IN_QTY,0)) IN_QTY67
     , SUM(DECODE(OPER, 'V1301', IN_QTY,0)) IN_QTY68
     , SUM(DECODE(OPER, 'V1750', IN_QTY,0)) IN_QTY69
     , SUM(DECODE(OPER, 'V1800', IN_QTY,0)) IN_QTY70
     , SUM(DECODE(OPER, 'M0110', END_QTY,0)) END_QTY0
     , SUM(DECODE(OPER, 'M0120', END_QTY,0)) END_QTY1
     , SUM(DECODE(OPER, 'M0160', END_QTY,0)) END_QTY2
     , SUM(DECODE(OPER, 'M0161', END_QTY,0)) END_QTY3
     , SUM(DECODE(OPER, 'M0300', END_QTY,0)) END_QTY4
     , SUM(DECODE(OPER, 'M0315', END_QTY,0)) END_QTY5
     , SUM(DECODE(OPER, 'M0320', END_QTY,0)) END_QTY6
     , SUM(DECODE(OPER, 'M0323', END_QTY,0)) END_QTY7
     , SUM(DECODE(OPER, 'M0325', END_QTY,0)) END_QTY8
     , SUM(DECODE(OPER, 'M0329', END_QTY,0)) END_QTY9
     , SUM(DECODE(OPER, 'M0330', END_QTY,0)) END_QTY10
     , SUM(DECODE(OPER, 'M0336', END_QTY,0)) END_QTY11
     , SUM(DECODE(OPER, 'M0337', END_QTY,0)) END_QTY12
     , SUM(DECODE(OPER, 'M0339', END_QTY,0)) END_QTY13
     , SUM(DECODE(OPER, 'M0340', END_QTY,0)) END_QTY14
     , SUM(DECODE(OPER, 'M0345', END_QTY,0)) END_QTY15
     , SUM(DECODE(OPER, 'M0391', END_QTY,0)) END_QTY16
     , SUM(DECODE(OPER, 'M0400', END_QTY,0)) END_QTY17
     , SUM(DECODE(OPER, 'M0401', END_QTY,0)) END_QTY18
     , SUM(DECODE(OPER, 'M0500', END_QTY,0)) END_QTY19
     , SUM(DECODE(OPER, 'M0550', END_QTY,0)) END_QTY20
     , SUM(DECODE(OPER, 'M1750', END_QTY,0)) END_QTY21
     , SUM(DECODE(OPER, 'V0000', END_QTY,0)) END_QTY22
     , SUM(DECODE(OPER, 'V0013', END_QTY,0)) END_QTY23
     , SUM(DECODE(OPER, 'V0020', END_QTY,0)) END_QTY24
     , SUM(DECODE(OPER, 'V0040', END_QTY,0)) END_QTY25
     , SUM(DECODE(OPER, 'V0055', END_QTY,0)) END_QTY26
     , SUM(DECODE(OPER, 'V0065', END_QTY,0)) END_QTY27
     , SUM(DECODE(OPER, 'V0090', END_QTY,0)) END_QTY28
     , SUM(DECODE(OPER, 'V0100', END_QTY,0)) END_QTY29
     , SUM(DECODE(OPER, 'V0110', END_QTY,0)) END_QTY30
     , SUM(DECODE(OPER, 'V0120', END_QTY,0)) END_QTY31
     , SUM(DECODE(OPER, 'V0130', END_QTY,0)) END_QTY32
     , SUM(DECODE(OPER, 'V0160', END_QTY,0)) END_QTY33
     , SUM(DECODE(OPER, 'V0161', END_QTY,0)) END_QTY34
     , SUM(DECODE(OPER, 'V0165', END_QTY,0)) END_QTY35
     , SUM(DECODE(OPER, 'V0175', END_QTY,0)) END_QTY36
     , SUM(DECODE(OPER, 'V0200', END_QTY,0)) END_QTY37
     , SUM(DECODE(OPER, 'V0300', END_QTY,0)) END_QTY38
     , SUM(DECODE(OPER, 'V0305', END_QTY,0)) END_QTY39
     , SUM(DECODE(OPER, 'V0310', END_QTY,0)) END_QTY40
     , SUM(DECODE(OPER, 'V0311', END_QTY,0)) END_QTY41
     , SUM(DECODE(OPER, 'V0315', END_QTY,0)) END_QTY42
     , SUM(DECODE(OPER, 'V0319', END_QTY,0)) END_QTY43
     , SUM(DECODE(OPER, 'V0320', END_QTY,0)) END_QTY44
     , SUM(DECODE(OPER, 'V0323', END_QTY,0)) END_QTY45
     , SUM(DECODE(OPER, 'V0327', END_QTY,0)) END_QTY46
     , SUM(DECODE(OPER, 'V0330', END_QTY,0)) END_QTY47
     , SUM(DECODE(OPER, 'V0331', END_QTY,0)) END_QTY48
     , SUM(DECODE(OPER, 'V0333', END_QTY,0)) END_QTY49
     , SUM(DECODE(OPER, 'V0334', END_QTY,0)) END_QTY50
     , SUM(DECODE(OPER, 'V0340', END_QTY,0)) END_QTY51
     , SUM(DECODE(OPER, 'V0350', END_QTY,0)) END_QTY52
     , SUM(DECODE(OPER, 'V0360', END_QTY,0)) END_QTY53
     , SUM(DECODE(OPER, 'V0370', END_QTY,0)) END_QTY54
     , SUM(DECODE(OPER, 'V0380', END_QTY,0)) END_QTY55
     , SUM(DECODE(OPER, 'V0390', END_QTY,0)) END_QTY56
     , SUM(DECODE(OPER, 'V0391', END_QTY,0)) END_QTY57
     , SUM(DECODE(OPER, 'V0400', END_QTY,0)) END_QTY58
     , SUM(DECODE(OPER, 'V0530', END_QTY,0)) END_QTY59
     , SUM(DECODE(OPER, 'V0600', END_QTY,0)) END_QTY60
     , SUM(DECODE(OPER, 'V0601', END_QTY,0)) END_QTY61
     , SUM(DECODE(OPER, 'V0660', END_QTY,0)) END_QTY62
     , SUM(DECODE(OPER, 'V0910', END_QTY,0)) END_QTY63
     , SUM(DECODE(OPER, 'V0930', END_QTY,0)) END_QTY64
     , SUM(DECODE(OPER, 'V1000', END_QTY,0)) END_QTY65
     , SUM(DECODE(OPER, 'V1001', END_QTY,0)) END_QTY66
     , SUM(DECODE(OPER, 'V1300', END_QTY,0)) END_QTY67
     , SUM(DECODE(OPER, 'V1301', END_QTY,0)) END_QTY68
     , SUM(DECODE(OPER, 'V1750', END_QTY,0)) END_QTY69
     , SUM(DECODE(OPER, 'V1800', END_QTY,0)) END_QTY70
     , SUM(DECODE(OPER, 'M0110', EOH_QTY,0)) EOH_QTY0
     , SUM(DECODE(OPER, 'M0120', EOH_QTY,0)) EOH_QTY1
     , SUM(DECODE(OPER, 'M0160', EOH_QTY,0)) EOH_QTY2
     , SUM(DECODE(OPER, 'M0161', EOH_QTY,0)) EOH_QTY3
     , SUM(DECODE(OPER, 'M0300', EOH_QTY,0)) EOH_QTY4
     , SUM(DECODE(OPER, 'M0315', EOH_QTY,0)) EOH_QTY5
     , SUM(DECODE(OPER, 'M0320', EOH_QTY,0)) EOH_QTY6
     , SUM(DECODE(OPER, 'M0323', EOH_QTY,0)) EOH_QTY7
     , SUM(DECODE(OPER, 'M0325', EOH_QTY,0)) EOH_QTY8
     , SUM(DECODE(OPER, 'M0329', EOH_QTY,0)) EOH_QTY9
     , SUM(DECODE(OPER, 'M0330', EOH_QTY,0)) EOH_QTY10
     , SUM(DECODE(OPER, 'M0336', EOH_QTY,0)) EOH_QTY11
     , SUM(DECODE(OPER, 'M0337', EOH_QTY,0)) EOH_QTY12
     , SUM(DECODE(OPER, 'M0339', EOH_QTY,0)) EOH_QTY13
     , SUM(DECODE(OPER, 'M0340', EOH_QTY,0)) EOH_QTY14
     , SUM(DECODE(OPER, 'M0345', EOH_QTY,0)) EOH_QTY15
     , SUM(DECODE(OPER, 'M0391', EOH_QTY,0)) EOH_QTY16
     , SUM(DECODE(OPER, 'M0400', EOH_QTY,0)) EOH_QTY17
     , SUM(DECODE(OPER, 'M0401', EOH_QTY,0)) EOH_QTY18
     , SUM(DECODE(OPER, 'M0500', EOH_QTY,0)) EOH_QTY19
     , SUM(DECODE(OPER, 'M0550', EOH_QTY,0)) EOH_QTY20
     , SUM(DECODE(OPER, 'M1750', EOH_QTY,0)) EOH_QTY21
     , SUM(DECODE(OPER, 'V0000', EOH_QTY,0)) EOH_QTY22
     , SUM(DECODE(OPER, 'V0013', EOH_QTY,0)) EOH_QTY23
     , SUM(DECODE(OPER, 'V0020', EOH_QTY,0)) EOH_QTY24
     , SUM(DECODE(OPER, 'V0040', EOH_QTY,0)) EOH_QTY25
     , SUM(DECODE(OPER, 'V0055', EOH_QTY,0)) EOH_QTY26
     , SUM(DECODE(OPER, 'V0065', EOH_QTY,0)) EOH_QTY27
     , SUM(DECODE(OPER, 'V0090', EOH_QTY,0)) EOH_QTY28
     , SUM(DECODE(OPER, 'V0100', EOH_QTY,0)) EOH_QTY29
     , SUM(DECODE(OPER, 'V0110', EOH_QTY,0)) EOH_QTY30
     , SUM(DECODE(OPER, 'V0120', EOH_QTY,0)) EOH_QTY31
     , SUM(DECODE(OPER, 'V0130', EOH_QTY,0)) EOH_QTY32
     , SUM(DECODE(OPER, 'V0160', EOH_QTY,0)) EOH_QTY33
     , SUM(DECODE(OPER, 'V0161', EOH_QTY,0)) EOH_QTY34
     , SUM(DECODE(OPER, 'V0165', EOH_QTY,0)) EOH_QTY35
     , SUM(DECODE(OPER, 'V0175', EOH_QTY,0)) EOH_QTY36
     , SUM(DECODE(OPER, 'V0200', EOH_QTY,0)) EOH_QTY37
     , SUM(DECODE(OPER, 'V0300', EOH_QTY,0)) EOH_QTY38
     , SUM(DECODE(OPER, 'V0305', EOH_QTY,0)) EOH_QTY39
     , SUM(DECODE(OPER, 'V0310', EOH_QTY,0)) EOH_QTY40
     , SUM(DECODE(OPER, 'V0311', EOH_QTY,0)) EOH_QTY41
     , SUM(DECODE(OPER, 'V0315', EOH_QTY,0)) EOH_QTY42
     , SUM(DECODE(OPER, 'V0319', EOH_QTY,0)) EOH_QTY43
     , SUM(DECODE(OPER, 'V0320', EOH_QTY,0)) EOH_QTY44
     , SUM(DECODE(OPER, 'V0323', EOH_QTY,0)) EOH_QTY45
     , SUM(DECODE(OPER, 'V0327', EOH_QTY,0)) EOH_QTY46
     , SUM(DECODE(OPER, 'V0330', EOH_QTY,0)) EOH_QTY47
     , SUM(DECODE(OPER, 'V0331', EOH_QTY,0)) EOH_QTY48
     , SUM(DECODE(OPER, 'V0333', EOH_QTY,0)) EOH_QTY49
     , SUM(DECODE(OPER, 'V0334', EOH_QTY,0)) EOH_QTY50
     , SUM(DECODE(OPER, 'V0340', EOH_QTY,0)) EOH_QTY51
     , SUM(DECODE(OPER, 'V0350', EOH_QTY,0)) EOH_QTY52
     , SUM(DECODE(OPER, 'V0360', EOH_QTY,0)) EOH_QTY53
     , SUM(DECODE(OPER, 'V0370', EOH_QTY,0)) EOH_QTY54
     , SUM(DECODE(OPER, 'V0380', EOH_QTY,0)) EOH_QTY55
     , SUM(DECODE(OPER, 'V0390', EOH_QTY,0)) EOH_QTY56
     , SUM(DECODE(OPER, 'V0391', EOH_QTY,0)) EOH_QTY57
     , SUM(DECODE(OPER, 'V0400', EOH_QTY,0)) EOH_QTY58
     , SUM(DECODE(OPER, 'V0530', EOH_QTY,0)) EOH_QTY59
     , SUM(DECODE(OPER, 'V0600', EOH_QTY,0)) EOH_QTY60
     , SUM(DECODE(OPER, 'V0601', EOH_QTY,0)) EOH_QTY61
     , SUM(DECODE(OPER, 'V0660', EOH_QTY,0)) EOH_QTY62
     , SUM(DECODE(OPER, 'V0910', EOH_QTY,0)) EOH_QTY63
     , SUM(DECODE(OPER, 'V0930', EOH_QTY,0)) EOH_QTY64
     , SUM(DECODE(OPER, 'V1000', EOH_QTY,0)) EOH_QTY65
     , SUM(DECODE(OPER, 'V1001', EOH_QTY,0)) EOH_QTY66
     , SUM(DECODE(OPER, 'V1300', EOH_QTY,0)) EOH_QTY67
     , SUM(DECODE(OPER, 'V1301', EOH_QTY,0)) EOH_QTY68
     , SUM(DECODE(OPER, 'V1750', EOH_QTY,0)) EOH_QTY69
     , SUM(DECODE(OPER, 'V1800', EOH_QTY,0)) EOH_QTY70
     , SUM(DECODE(OPER, 'M0110', LOSS_QTY,0)) LOSS_QTY0
     , SUM(DECODE(OPER, 'M0120', LOSS_QTY,0)) LOSS_QTY1
     , SUM(DECODE(OPER, 'M0160', LOSS_QTY,0)) LOSS_QTY2
     , SUM(DECODE(OPER, 'M0161', LOSS_QTY,0)) LOSS_QTY3
     , SUM(DECODE(OPER, 'M0300', LOSS_QTY,0)) LOSS_QTY4
     , SUM(DECODE(OPER, 'M0315', LOSS_QTY,0)) LOSS_QTY5
     , SUM(DECODE(OPER, 'M0320', LOSS_QTY,0)) LOSS_QTY6
     , SUM(DECODE(OPER, 'M0323', LOSS_QTY,0)) LOSS_QTY7
     , SUM(DECODE(OPER, 'M0325', LOSS_QTY,0)) LOSS_QTY8
     , SUM(DECODE(OPER, 'M0329', LOSS_QTY,0)) LOSS_QTY9
     , SUM(DECODE(OPER, 'M0330', LOSS_QTY,0)) LOSS_QTY10
     , SUM(DECODE(OPER, 'M0336', LOSS_QTY,0)) LOSS_QTY11
     , SUM(DECODE(OPER, 'M0337', LOSS_QTY,0)) LOSS_QTY12
     , SUM(DECODE(OPER, 'M0339', LOSS_QTY,0)) LOSS_QTY13
     , SUM(DECODE(OPER, 'M0340', LOSS_QTY,0)) LOSS_QTY14
     , SUM(DECODE(OPER, 'M0345', LOSS_QTY,0)) LOSS_QTY15
     , SUM(DECODE(OPER, 'M0391', LOSS_QTY,0)) LOSS_QTY16
     , SUM(DECODE(OPER, 'M0400', LOSS_QTY,0)) LOSS_QTY17
     , SUM(DECODE(OPER, 'M0401', LOSS_QTY,0)) LOSS_QTY18
     , SUM(DECODE(OPER, 'M0500', LOSS_QTY,0)) LOSS_QTY19
     , SUM(DECODE(OPER, 'M0550', LOSS_QTY,0)) LOSS_QTY20
     , SUM(DECODE(OPER, 'M1750', LOSS_QTY,0)) LOSS_QTY21
     , SUM(DECODE(OPER, 'V0000', LOSS_QTY,0)) LOSS_QTY22
     , SUM(DECODE(OPER, 'V0013', LOSS_QTY,0)) LOSS_QTY23
     , SUM(DECODE(OPER, 'V0020', LOSS_QTY,0)) LOSS_QTY24
     , SUM(DECODE(OPER, 'V0040', LOSS_QTY,0)) LOSS_QTY25
     , SUM(DECODE(OPER, 'V0055', LOSS_QTY,0)) LOSS_QTY26
     , SUM(DECODE(OPER, 'V0065', LOSS_QTY,0)) LOSS_QTY27
     , SUM(DECODE(OPER, 'V0090', LOSS_QTY,0)) LOSS_QTY28
     , SUM(DECODE(OPER, 'V0100', LOSS_QTY,0)) LOSS_QTY29
     , SUM(DECODE(OPER, 'V0110', LOSS_QTY,0)) LOSS_QTY30
     , SUM(DECODE(OPER, 'V0120', LOSS_QTY,0)) LOSS_QTY31
     , SUM(DECODE(OPER, 'V0130', LOSS_QTY,0)) LOSS_QTY32
     , SUM(DECODE(OPER, 'V0160', LOSS_QTY,0)) LOSS_QTY33
     , SUM(DECODE(OPER, 'V0161', LOSS_QTY,0)) LOSS_QTY34
     , SUM(DECODE(OPER, 'V0165', LOSS_QTY,0)) LOSS_QTY35
     , SUM(DECODE(OPER, 'V0175', LOSS_QTY,0)) LOSS_QTY36
     , SUM(DECODE(OPER, 'V0200', LOSS_QTY,0)) LOSS_QTY37
     , SUM(DECODE(OPER, 'V0300', LOSS_QTY,0)) LOSS_QTY38
     , SUM(DECODE(OPER, 'V0305', LOSS_QTY,0)) LOSS_QTY39
     , SUM(DECODE(OPER, 'V0310', LOSS_QTY,0)) LOSS_QTY40
     , SUM(DECODE(OPER, 'V0311', LOSS_QTY,0)) LOSS_QTY41
     , SUM(DECODE(OPER, 'V0315', LOSS_QTY,0)) LOSS_QTY42
     , SUM(DECODE(OPER, 'V0319', LOSS_QTY,0)) LOSS_QTY43
     , SUM(DECODE(OPER, 'V0320', LOSS_QTY,0)) LOSS_QTY44
     , SUM(DECODE(OPER, 'V0323', LOSS_QTY,0)) LOSS_QTY45
     , SUM(DECODE(OPER, 'V0327', LOSS_QTY,0)) LOSS_QTY46
     , SUM(DECODE(OPER, 'V0330', LOSS_QTY,0)) LOSS_QTY47
     , SUM(DECODE(OPER, 'V0331', LOSS_QTY,0)) LOSS_QTY48
     , SUM(DECODE(OPER, 'V0333', LOSS_QTY,0)) LOSS_QTY49
     , SUM(DECODE(OPER, 'V0334', LOSS_QTY,0)) LOSS_QTY50
     , SUM(DECODE(OPER, 'V0340', LOSS_QTY,0)) LOSS_QTY51
     , SUM(DECODE(OPER, 'V0350', LOSS_QTY,0)) LOSS_QTY52
     , SUM(DECODE(OPER, 'V0360', LOSS_QTY,0)) LOSS_QTY53
     , SUM(DECODE(OPER, 'V0370', LOSS_QTY,0)) LOSS_QTY54
     , SUM(DECODE(OPER, 'V0380', LOSS_QTY,0)) LOSS_QTY55
     , SUM(DECODE(OPER, 'V0390', LOSS_QTY,0)) LOSS_QTY56
     , SUM(DECODE(OPER, 'V0391', LOSS_QTY,0)) LOSS_QTY57
     , SUM(DECODE(OPER, 'V0400', LOSS_QTY,0)) LOSS_QTY58
     , SUM(DECODE(OPER, 'V0530', LOSS_QTY,0)) LOSS_QTY59
     , SUM(DECODE(OPER, 'V0600', LOSS_QTY,0)) LOSS_QTY60
     , SUM(DECODE(OPER, 'V0601', LOSS_QTY,0)) LOSS_QTY61
     , SUM(DECODE(OPER, 'V0660', LOSS_QTY,0)) LOSS_QTY62
     , SUM(DECODE(OPER, 'V0910', LOSS_QTY,0)) LOSS_QTY63
     , SUM(DECODE(OPER, 'V0930', LOSS_QTY,0)) LOSS_QTY64
     , SUM(DECODE(OPER, 'V1000', LOSS_QTY,0)) LOSS_QTY65
     , SUM(DECODE(OPER, 'V1001', LOSS_QTY,0)) LOSS_QTY66
     , SUM(DECODE(OPER, 'V1300', LOSS_QTY,0)) LOSS_QTY67
     , SUM(DECODE(OPER, 'V1301', LOSS_QTY,0)) LOSS_QTY68
     , SUM(DECODE(OPER, 'V1750', LOSS_QTY,0)) LOSS_QTY69
     , SUM(DECODE(OPER, 'V1800', LOSS_QTY,0)) LOSS_QTY70
  FROM ( 
        SELECT MAT_ID, OPER 
             , SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS IN_QTY  
             , SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY 
             , 0 AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY
          FROM RSUMWIPMOV 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE BETWEEN '20200529' AND '20200530' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         HAVING SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) + SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) > 0 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, SUM(EOH_QTY_1) AS BOH_QTY, 0 AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RSUMWIPEOH 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND WORK_DATE = '20200528' 
           AND LOT_TYPE <> 'W' 
           AND SHIFT = '3' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, SUM(QTY_1) AS EOH_QTY, 0 AS LOSS_QTY 
          FROM RWIPLOTSTS 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND LOT_DEL_FLAG = ' ' 
           AND LOT_TYPE <> 'W' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
           AND QTY_1 > 0 
         GROUP BY MAT_ID, OPER 
         UNION ALL 
        SELECT MAT_ID, OPER 
             , 0 AS IN_QTY, 0 AS END_QTY, 0 AS BOH_QTY, 0 AS EOH_QTY, SUM(LOSS_QTY) AS LOSS
          FROM RWIPLOTLSM 
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND TRAN_TIME BETWEEN '20200528220000' AND '20200530215959' 
           AND (OPER LIKE 'V%' OR OPER LIKE 'M%') 
         GROUP BY MAT_ID, OPER 
       ) A 
     , MWIPMATDEF B 
 WHERE 1=1 
   AND A.MAT_ID = B.MAT_ID 
   AND A.MAT_ID LIKE '%'  
   AND A.OPER LIKE '%'
   AND B.FACTORY = 'HMVA2'
   AND B.DELETE_FLAG = ' ' 
 GROUP BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 
 ORDER BY B.MAT_TYPE, A.MAT_ID, B.MAT_DESC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070202'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY='HMVA2' AND TABLE_NAME='MATERIAL_TYPE' AND KEY_1 IN ('AE','LF','PB','GW','MC','SB','BD')
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', A.MATCODE, A.MAT_DESC,  ' ', A.A_COUNT, A.B_COUNT, A.C_COUNT, A.D_COUNT, A.E_COUNT, A.TOTAL_COUNT, A.TOTAL_QTY, A.USAGE, ROUND(B.TOTAL/(DECODE(A.BASE_QTY, 0, 1, 0) + A.BASE_QTY) * A.USAGE) AS E_QTY, ' ', A.UNIT_1 
     , B.MAT_ID
     , B.HMK2A 
     , B.BG 
     , B.SAW 
     , B.DA 
     , B.TOTAL 
 FROM( 
       SELECT A.PARTNUMBER 
            , A.MATCODE 
            , A.MAT_TYPE 
            , A.MAT_DESC 
            , A.BASE_QTY AS BASE_QTY 
            , A.USAGE AS USAGE 
            , A.UNIT_1 
            , NVL(B.A_COUNT,0) AS A_COUNT 
            , NVL(B.A_QTY,0) AS A_QTY 
            , NVL(B.B_COUNT,0) AS B_COUNT 
            , NVL(B.B_QTY,0) AS B_QTY 
            , NVL(B.C_COUNT,0) AS C_COUNT 
            , NVL(B.C_QTY,0) AS C_QTY 
            , NVL(B.D_COUNT,0) AS D_COUNT 
            , NVL(B.D_QTY,0) AS D_QTY 
            , NVL(B.E_COUNT,0) AS E_COUNT 
            , NVL(B.E_QTY,0) AS E_QTY 
            , NVL(B.TOTAL_COUNT,0) AS TOTAL_COUNT 
            , NVL(B.TOTAL_QTY,0) AS TOTAL_QTY 
        FROM( 
              SELECT DISTINCT A.PARTNUMBER 
                   , A.MATCODE 
                   , B.MAT_TYPE 
                   , B.MAT_DESC 
                   , A.PAR_BASE_QTY AS BASE_QTY 
                   , A.UNIT_QTY AS USAGE 
                   , B.UNIT_1 
                FROM CWIPBOMDEF A, 
                     MWIPMATDEF B 
               WHERE A.MATCODE=B.MAT_ID 
              GROUP BY A.PARTNUMBER,A.MATCODE,B.MAT_TYPE,B.MAT_DESC,A.PAR_BASE_QTY,A.UNIT_QTY,B.UNIT_1 
            )A, 
            ( 
              SELECT MAT_ID 
                   , SUM(DECODE(RES_COUNT,0,DECODE(AG_COUNT,0,DECODE(RE_COUNT,0,A_COUNT,0),0),0)) AS A_COUNT 
                   , SUM(DECODE(RES_QTY,0,DECODE(AG_QTY,0,DECODE(RE_COUNT,0,A_QTY,0),0),0)) AS A_QTY 
                   , SUM(DECODE(RES_COUNT,0,DECODE(AG_COUNT,0,DECODE(RE_COUNT,0,B_COUNT,0),0),0)) AS B_COUNT 
                   , SUM(DECODE(RES_QTY,0,DECODE(AG_QTY,0,DECODE(RE_COUNT,0,B_QTY,0),0),0)) AS B_QTY 
                   , SUM(RES_COUNT) AS C_COUNT 
                   , SUM(RES_QTY) C_QTY 
                   , SUM(AG_COUNT) AS D_COUNT 
                   , SUM(AG_QTY) D_QTY 
                   , SUM(RE_COUNT) AS E_COUNT 
                   , SUM(RE_QTY) E_QTY 
                   , SUM(DECODE(RES_COUNT,0,A_COUNT,0)+DECODE(RES_COUNT,0,B_COUNT,0)+RES_COUNT) AS TOTAL_COUNT 
                   , SUM(DECODE(RES_QTY,0,A_QTY,0)+DECODE(RES_QTY,0,B_QTY,0)+RES_QTY) AS TOTAL_QTY 
               FROM( 
                     SELECT LOT_ID, 
                            MAT_ID, 
                            GRADE, 
                            SUM(DECODE(GRADE,'A',LOT_COUNT,0)) AS A_COUNT, 
                            SUM(DECODE(GRADE,'A',LOT_QTY,0)) AS A_QTY, 
                            SUM(DECODE(GRADE,'B',LOT_COUNT,0)) AS B_COUNT, 
                            SUM(DECODE(GRADE,'B',LOT_QTY,0)) AS B_QTY, 
                            SUM(RES_COUNT) AS RES_COUNT, 
                            SUM(RES_QTY) RES_QTY, 
                            SUM(AG_COUNT) AS AG_COUNT, 
                            SUM(AG_QTY) AG_QTY, 
                            SUM(RE_COUNT) AS RE_COUNT, 
                            SUM(RE_QTY) RE_QTY 
                      FROM( 
                            ( 
                              SELECT LOT_ID 
                                   , MAT_ID 
                                   , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                   , COUNT(LOT_ID) AS LOT_COUNT 
                                   , QTY_1 AS LOT_QTY 
                                   , 0 AS RES_COUNT 
                                   , 0 AS RES_QTY 
                                   , 0 AS AG_COUNT 
                                   , 0 AS AG_QTY 
                                   , 0 AS RE_COUNT 
                                   , 0 AS RE_QTY 
                                FROM RWIPLOTSTS 
                               WHERE 1=1 
                                     AND FACTORY = 'HMVA2' 
                                     AND OPER IN ( 
                                                   SELECT ATTR_KEY 
                                                     FROM MATRNAMSTS 
                                                    WHERE 1=1 
                                                          AND FACTORY = 'HMVA2' 
                                                          AND ATTR_TYPE = 'OPER' 
                                                          AND ATTR_NAME = 'MATERIAL_OPER' 
                                                          AND ATTR_VALUE = 'Y' 
                                                          AND ATTR_KEY <> 'V0000' 
                                                 ) 
                                     AND LOT_DEL_FLAG = ' ' 
                                     AND LOT_TYPE <> 'W' 
                                     AND QTY_1 > 0 
                               GROUP BY LOT_ID,MAT_ID,LOT_CMF_9,QTY_1 
                            ) 
                            UNION ALL 
                            ( 
                              SELECT A.LOT_ID 
                                   , A.MAT_ID 
                                   , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                   , 0 AS LOT_COUNT 
                                   , 0 AS LOT_QTY 
                                   , COUNT(A.LOT_ID) AS RES_COUNT 
                                   , A.QTY_1 AS RES_QTY 
                                   , 0 AS AG_COUNT 
                                   , 0 AS AG_QTY 
                                   , 0 AS RE_COUNT 
                                   , 0 AS RE_QTY 
                                FROM RWIPLOTSTS A, 
                                     CRASRESMAT B 
                               WHERE A.LOT_ID=B.LOT_ID 
                               GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1
                           ) 
                           UNION ALL 
                           ( 
                             SELECT A.LOT_ID 
                                  , A.MAT_ID 
                                  , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                  , 0 AS LOT_COUNT 
                                  , 0 AS LOT_QTY 
                                  , 0 AS RES_COUNT 
                                  , 0 AS RES_QTY 
                                  , COUNT(A.LOT_ID) AS AG_COUNT 
                                  , A.QTY_1 AS AG_QTY 
                                  , 0 AS RE_COUNT 
                                  , 0 AS RE_QTY 
                               FROM RWIPLOTSTS A, 
                                    CWIPMATAGI B 
                              WHERE A.LOT_ID=B.LOT_ID 
                                AND A.QTY_1 > 0 
                                AND A.LOT_ID NOT LIKE '%-$%' 
                                AND TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') BETWEEN B.AGING_TIME AND B.LIFE_END_TIME 
                                AND A.LOT_DEL_FLAG = ' ' 
                                AND B.LOT_ID NOT IN ( SELECT LOT_ID FROM CRASRESMAT WHERE FACTORY = 'HMVA2' ) 
                              GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1 
                           ) 
                           UNION ALL 
                           ( 
                             SELECT A.LOT_ID 
                                  , A.MAT_ID 
                                  , REPLACE(LOT_CMF_9,' ','A') AS GRADE 
                                  , 0 AS LOT_COUNT 
                                  , 0 AS LOT_QTY 
                                  , 0 AS RES_COUNT 
                                  , 0 AS RES_QTY 
                                  , 0 AS AG_COUNT 
                                  , 0 AS AG_QTY 
                                  , COUNT(A.LOT_ID) AS RE_COUNT 
                                  , A.QTY_1 AS RE_QTY 
                               FROM RWIPLOTSTS A, 
                                    CWIPMATAGI B 
                              WHERE A.LOT_ID=B.LOT_ID 
                                AND A.QTY_1 > 0 
                                AND A.LOT_ID NOT LIKE '%-$%' 
                                AND B.RESET_FLAG = 'Y' 
                                AND B.AGING_TIME = ' ' 
                                AND A.LOT_DEL_FLAG = ' ' 
                                AND B.LOT_ID NOT IN ( SELECT LOT_ID FROM CRASRESMAT WHERE FACTORY = 'HMVA2' ) 
                              GROUP BY A.LOT_ID,A.MAT_ID,LOT_CMF_9,QTY_1 
                           ) 
                     ) 
                     GROUP BY LOT_ID,MAT_ID,GRADE 
                   ) 
              GROUP BY MAT_ID 
            )B 
        WHERE A.MATCODE=B.MAT_ID(+) 
     ) A, 
     ( 
       SELECT A.MAT_ID 
            , SUM(DECODE(C.OPER_GRP_1, 'HMK2A', A.QTY_1,0)) HMK2A 
            , SUM(DECODE(C.OPER_GRP_1,'B/G',A.QTY_1,0)) AS BG 
            , SUM(DECODE(C.OPER_GRP_1,'SAW',A.QTY_1,0)) AS SAW 
            , SUM(CASE C.OPER_GRP_1 WHEN 'SMT' THEN A.QTY_1 WHEN 'S/P' THEN A.QTY_1 WHEN 'D/A' THEN A.QTY_1 ELSE 0 END) AS DA 
            , SUM(DECODE(C.OPER_GRP_1,'W/B',A.QTY_1,0)) AS WB 
            , SUM(DECODE(C.OPER_GRP_1,'MOLD',A.QTY_1,0)) AS MOLD 
            , SUM(CASE C.OPER_GRP_1 WHEN 'CURE' THEN A.QTY_1 WHEN 'M/K' THEN A.QTY_1 WHEN 'V/I' THEN A.QTY_1 WHEN 'S/B/A' THEN A.QTY_1 ELSE 0 END) AS SBA 
            , SUM(CASE C.OPER_GRP_1 WHEN 'TIN' THEN A.QTY_1 WHEN 'SMT' THEN A.QTY_1 WHEN 'SIG' THEN A.QTY_1 ELSE 0 END) AS SIG 
            , SUM(A.QTY_1) AS TOTAL 
         FROM RWIPLOTSTS A, MWIPMATDEF B, MWIPOPRDEF C, MGCMTBLDAT D 
        WHERE A.FACTORY = 'HMVA2' 
              AND B.MAT_VER = 1 
              AND A.OWNER_CODE = 'PROD' 
              AND A.FACTORY = B.FACTORY 
              AND A.MAT_ID = B.MAT_ID 
              AND A.OPER=C.OPER 
              AND A.MAT_VER = 1 
              AND A.LOT_DEL_FLAG = ' ' 
              AND B.MAT_GRP_1 = D.KEY_1 
              AND B.FACTORY=D.FACTORY 
              AND D.TABLE_NAME='H_CUSTOMER' 
              AND C.OPER_GRP_1 IN ('HMK2A','B/G','SAW','SMT','S/P','D/A') 
       GROUP BY A.MAT_ID 
       HAVING SUM(A.QTY_1) > 0 
     ) B 
 WHERE A.PARTNUMBER(+)=B.MAT_ID
      AND A.MAT_TYPE='PB'
ORDER BY A.MATCODE, B.MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT PLAN_WEEK
  FROM (
        SELECT PLAN_WEEK
             , ROW_NUMBER() OVER(ORDER BY PLAN_WEEK) AS RN
          FROM (
                SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
                  FROM MWIPCALDEF
                 WHERE CALENDAR_ID = 'OTD' 
                   AND SYS_DATE >= '20200530'
               )
       )
 WHERE RN <= 6
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070207'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_WEEK
  FROM (
        SELECT PLAN_WEEK
             , ROW_NUMBER() OVER(ORDER BY PLAN_WEEK) AS RN
          FROM (
                SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
                  FROM MWIPCALDEF
                 WHERE CALENDAR_ID = 'OTD' 
                   AND SYS_DATE >= '20200530'
               )
       )
 WHERE RN <= 6
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT B.MAT_TYPE, A.MAT_ID, (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'MAT_MASTER' AND KEY_1 = A.MAT_ID) AS MAT_DESC, B.SAP_CODE, B.MAT_GRP_1,  ' ' 
     , MAX(B.UNIT_QTY) AS UNIT_QTY
     , MAX(A.QTY) AS QTY
     , ROUND(MAX(A.QTY) / MAX(B.UNIT_QTY) * 1000, 0) AS CONVERT_QTY
     , SUM(C.TTL) AS TTL
     , SUM(C.W1) AS W1
     , SUM(C.W2) AS W2
     , SUM(C.W3) AS W3
     , SUM(C.W4) AS W4
     , SUM(C.W5) AS W5
     , SUM(C.W6) AS W6
     , ROUND(MAX(A.QTY) / MAX(B.UNIT_QTY) * 1000, 0) - SUM(C.TTL) AS BALANCE
  FROM ( 
        SELECT MAT_ID 
             , SUM(QUANTITY) AS QTY  
          FROM CWMSLOTSTS@RPTTOMES
         WHERE 1=1 
           AND MAT_ID LIKE 'R%' 
           AND EPN_DATE <= TO_CHAR(ADD_MONTHS(SYSDATE,3), 'YYYYMMDD') 
           AND QUANTITY > 0   
           AND MOVEMENT_CODE <> 'A11' 
           AND STORAGE_LOCATION <> '2205' 
         GROUP BY MAT_ID
       ) A
     , ( 
        SELECT A.MAT_ID AS PRODUCT, A.MAT_GRP_1, A.MAT_GRP_2, A.MAT_GRP_3, A.MAT_GRP_4, A.MAT_GRP_5, A.MAT_GRP_6, A.MAT_GRP_7, A.MAT_GRP_8, A.MAT_GRP_9 
             , A.MAT_CMF_7, A.MAT_CMF_10, A.MAT_CMF_13, A.VENDOR_ID AS SAP_CODE, A.MAT_ID 
             , B.STEPID, B.MATCODE, B.DESCRIPT, B.PAR_BASE_QTY, B.UNIT_QTY, B.UNIT, B.RESV_FIELD_2 AS MAT_TYPE  
          FROM MWIPMATDEF A  
             , CWIPBOMDEF B 
         WHERE 1=1 
           AND A.MAT_ID = B.PARTNUMBER(+)  
           AND A.FACTORY = 'HMVA2'   
           AND A.MAT_TYPE = 'FG'  
           AND A.DELETE_FLAG = ' ' 
           AND B.RESV_FLAG_1(+) = 'Y'  
           AND B.RESV_FIELD_2(+) <> 'WW' 
       ) B
     , ( 
        SELECT MAT_ID 
             , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W1 
             , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W2 
             , SUM(DECODE(PLAN_WEEK, '202025', WW_QTY, 0)) AS W3 
             , SUM(DECODE(PLAN_WEEK, '202026', WW_QTY, 0)) AS W4 
             , SUM(DECODE(PLAN_WEEK, '202027', WW_QTY, 0)) AS W5 
             , SUM(DECODE(PLAN_WEEK, '202028', WW_QTY, 0)) AS W6 
             , SUM(WW_QTY) AS TTL 
          FROM RWIPPLNWEK
         WHERE 1=1 
           AND FACTORY = 'HMVA2' 
           AND PLAN_WEEK BETWEEN '202023' AND '202028'
           AND  GUBUN = '3' 
         GROUP BY MAT_ID
       ) C
 WHERE 1=1
   AND A.MAT_ID = B.MATCODE(+)
   AND B.MAT_ID = C.MAT_ID(+)
   AND B.MAT_TYPE LIKE '%'
   AND A.MAT_ID LIKE '%'
 GROUP BY B.MAT_TYPE, A.MAT_ID, A.MAT_ID, B.SAP_CODE, B.MAT_GRP_1,  ' ' 
 ORDER BY B.MAT_TYPE, A.MAT_ID, A.MAT_ID, B.SAP_CODE, B.MAT_GRP_1,  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010801'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT PLAN_WEEK,PLAN_YEAR,SEQ 
  FROM ( 
       SELECT PLAN_WEEK,PLAN_YEAR,1 AS SEQ 
         FROM MWIPCALDEF  
        WHERE CALENDAR_ID = 'SE' 
          AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD'), 'YYYYMMDD') 
    UNION ALL 
       SELECT PLAN_WEEK,PLAN_YEAR,2 AS SEQ 
         FROM MWIPCALDEF  
        WHERE CALENDAR_ID = 'SE' 
          AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD')+7, 'YYYYMMDD') 
    UNION ALL 
       SELECT PLAN_WEEK,PLAN_YEAR,3 AS SEQ 
         FROM MWIPCALDEF  
        WHERE CALENDAR_ID = 'SE' 
          AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD')+1, 'YYYYMMDD') 
    UNION ALL 
       SELECT PLAN_WEEK,PLAN_YEAR,4 AS SEQ 
         FROM MWIPCALDEF  
        WHERE CALENDAR_ID = 'SE' 
          AND SYS_DATE = TO_CHAR(TO_DATE('20200530', 'YYYYMMDD')-1, 'YYYYMMDD') 
        ) 
ORDER BY SEQ

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
       SELECT MIN(SYS_DATE), MAX(SYS_DATE) 
         FROM MWIPCALDEF 
        WHERE 1=1 
          AND CALENDAR_ID = 'SE' 
          AND PLAN_YEAR = '2020'
          AND PLAN_WEEK = '22'
          AND SYS_DATE < TO_CHAR(TO_DATE('20200530', 'YYYYMMDD'), 'YYYYMMDD') 
        ORDER BY SYS_DATE

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010203'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT TO_DATE(RESV_FIELD5,'YYYY-MM-DD HH24MISS') FROM CWIPPLNDAY
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200530')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200530', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010201'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200401')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200401', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT  
            LAST_DAY('20200401')-2 AS "SYSLSI", 
            LAST_DAY('20200401') AS "MEMO",  
            LAST_DAY('20200401')- 2 - TO_DATE('20200401') +1  AS REMAIN1,  
            LAST_DAY('20200401') - TO_DATE('20200401')+1  AS REMAIN2,  
            SYSDATE AS TODAY  
        FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200528000000' AND '20200530235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200530' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
