SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PQC030106'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DEFECT_CODE AS Code, DESC_1 AS Data
  FROM CABRDFTDEF@RPTTOMES 
 WHERE FACTORY = 'HMVA2' 
 ORDER BY DEFECT_CODE

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT * FROM MGCMTBLDAT WHERE FACTORY =:FACTORY AND TABLE_NAME=:TABLE_NAME
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS Code, OPER_DESC AS Data FROM MWIPOPRDEF
 WHERE FACTORY = 'HMVA2' 
   AND OPER_GRP_1 <> '-' 
 ORDER BY OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS Code, OPER_DESC AS Data FROM MWIPOPRDEF
 WHERE FACTORY = 'HMVA2' 
   AND OPER_GRP_1 <> '-' 
 ORDER BY OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT.MAT_CMF_10 AS PIN_TYPE, MAT.MAT_GRP_3 AS PACKAGE,  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID AS PRODUCT 
     , SUBSTR(STS.ABR_NO, 1, 3) AS ABR_TYPE 
     , STS.ABR_NO 
     , STEP10_TIME 
     , OPER_1 
     , (SELECT OPER_DESC FROM MWIPOPRDEF WHERE FACTORY = STS.FACTORY AND OPER = OPER_1) AS OPER_1_DEC 
     , OPER_2 
     , (SELECT OPER_DESC FROM MWIPOPRDEF WHERE FACTORY = STS.FACTORY AND OPER = OPER_2) AS OPER_2_DEC 
     , (SELECT DEFECT_CODE FROM CABRDFTDEF@RPTTOMES WHERE DEL_FLAG=' ' AND FACTORY = 'HMVA2' AND DEFECT_CODE = STS.DEFECT_CODE) AS DEFECT_CODE 
     , (SELECT DESC_1 FROM CABRDFTDEF@RPTTOMES WHERE DEL_FLAG=' ' AND FACTORY = 'HMVA2' AND DEFECT_CODE = STS.DEFECT_CODE) AS DEFECT_CODE 
     , RES_ID 
     , LOT_ID 
     , QTY_1 
     , FAIL_QTY 
     , INSP_QTY 
     , DECODE(INSP_QTY, 0, 0, ROUND((FAIL_QTY / INSP_QTY) * 1000000, 2)) AS LOSS_PER 
     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_ABR_STEP' AND FACTORY = STS.FACTORY AND KEY_1 = STS.CUR_STEP) AS CUR_STEP 
     , CLOSE_TIME 
     , TRUNC(DECODE(CLOSE_TIME, ' ', SYSDATE, TO_DATE(CLOSE_TIME, 'YYYYMMDDHH24MISS')) - TO_DATE(STEP10_TIME, 'YYYYMMDDHH24MISS'), 2) AS TAT 
     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_DEPARTMENT' AND FACTORY = STS.FACTORY AND KEY_1 = STS.STEP10_DEPT) AS DEP 
     , (SELECT USER_DESC || '(' || USER_ID || ')' FROM RWEBUSRDEF WHERE USER_ID = STS.STEP10_USER) AS QC_USER 
     , (SELECT USER_DESC || '(' || USER_ID || ')' FROM RWEBUSRDEF WHERE USER_ID = STS.QA_OPER) AS OPER_USER 
     , DAT.MAN 
     , DAT.MAT 
     , DAT.MCN 
     , DAT.MTD 
     , DAT.ENV 
     , DAT2.MAN 
     , DAT2.MAT 
     , DAT2.MCN 
     , DAT2.MTD 
     , DAT2.ENV 
  FROM CABRLOTSTS@RPTTOMES STS 
     , MWIPMATDEF MAT 
     , (  
        SELECT ABR_NO
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAN, '|')), '|'), ' | ', '') AS MAN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAT, '|')), '|'), ' | ', '') AS MAT
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MCN, '|')), '|'), ' | ', '') AS MCN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MTD, '|')), '|'), ' | ', '') AS MTD
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (ENV, '|')), '|'), ' | ', '') AS ENV
          FROM (
                SELECT FACTORY
                     , ABR_NO
                     , MAN_CONTENTS AS MAN
                     , MAT_CONTENTS AS MAT
                     , MCN_CONTENTS AS MCN
                     , MTD_CONTENTS AS MTD
                     , ENV_CONTENTS AS ENV
                     , ROW_NUMBER () OVER (PARTITION BY ABR_NO ORDER BY UPDATE_TIME) AS RNUM 
                  FROM CABR4MPDAT@RPTTOMES
                 WHERE FACTORY = 'HMVA2' 
                   AND SUB_TYPE = 'TYPE_AN'
                   AND ABR_NO IN (SELECT ABR_NO 
                                    FROM CABRLOTSTS@RPTTOMES 
                                   WHERE FACTORY = 'HMVA2'
                                     AND STEP10_TIME BETWEEN '20200331220000' AND '20200513215959'
                                     AND SUBSTR(ABR_NO, 0, 3) LIKE '%'
                                     AND DEFECT_CODE LIKE '%'
                                     AND CUR_STEP LIKE '%'
                                     AND OPER_1 BETWEEN 'A0000'AND 'AZ010'
                                     AND DEL_FLAG <> 'Y' 
                                  )
               )         
         WHERE ABR_NO = ABR_NO
         START WITH RNUM = 1
       CONNECT BY PRIOR ABR_NO = ABR_NO 
           AND RNUM = (RNUM - 1) 
         GROUP BY ABR_NO
       ) DAT 
     , ( 
        SELECT ABR_NO
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAN, '|')), '|'), ' | ', '') AS MAN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAT, '|')), '|'), ' | ', '') AS MAT
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MCN, '|')), '|'), ' | ', '') AS MCN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MTD, '|')), '|'), ' | ', '') AS MTD
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (ENV, '|')), '|'), ' | ', '') AS ENV             
          FROM (
                SELECT FACTORY
                     , ABR_NO
                     , MAN_CONTENTS AS MAN
                     , MAT_CONTENTS AS MAT
                     , MCN_CONTENTS AS MCN
                     , MTD_CONTENTS AS MTD
                     , ENV_CONTENTS AS ENV
                     , ROW_NUMBER () OVER (PARTITION BY ABR_NO ORDER BY UPDATE_TIME) AS RNUM                   
                  FROM CABR4MPDAT@RPTTOMES
                 WHERE FACTORY = 'HMVA2' 
                   AND SUB_TYPE = 'TYPE_MS'
                   AND ABR_NO IN (SELECT ABR_NO 
                                    FROM CABRLOTSTS@RPTTOMES 
                                   WHERE FACTORY = 'HMVA2'
                                     AND STEP10_TIME BETWEEN '20200331220000' AND '20200513215959'
                                     AND SUBSTR(ABR_NO, 0, 3) LIKE '%'
                                     AND DEFECT_CODE LIKE '%'
                                     AND CUR_STEP LIKE '%'
                                     AND OPER_1 BETWEEN 'A0000'AND 'AZ010'
                                     AND DEL_FLAG <> 'Y' 
                                  )
               )        
         WHERE ABR_NO = ABR_NO
         START WITH RNUM = 1
       CONNECT BY PRIOR ABR_NO = ABR_NO 
           AND RNUM = (RNUM - 1) 
         GROUP BY ABR_NO
       ) DAT2
 WHERE 1=1 
   AND STS.FACTORY = MAT.FACTORY 
   AND STS.MAT_ID = MAT.MAT_ID 
   AND STS.ABR_NO = DAT.ABR_NO(+) 
   AND STS.ABR_NO = DAT2.ABR_NO(+) 
   AND STS.FACTORY = 'HMVA2'
   AND STEP10_TIME BETWEEN '20200331220000' AND '20200513215959'
   AND SUBSTR(STS.ABR_NO, 0, 3) LIKE '%'
   AND STS.DEFECT_CODE LIKE '%'
   AND STS.CUR_STEP LIKE '%'
   AND STS.OPER_1 BETWEEN 'A0000'AND 'AZ010'
   AND STS.DEL_FLAG <> 'Y' 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_CMF_10, MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ABR_TYPE, COUNT(ABR_TYPE) AS CNT, ROUND(AVG(TAT), 2) AS TAT 
  FROM ( 
        SELECT SUBSTR(ABR_NO,1,3) AS ABR_TYPE 
             , TRUNC(DECODE(CLOSE_TIME, ' ', SYSDATE, TO_DATE(CLOSE_TIME, 'YYYYMMDDHH24MISS')) - TO_DATE(STEP10_TIME, 'YYYYMMDDHH24MISS'), 2) AS TAT
          FROM CABRLOTSTS@RPTTOMES STS 
             , MWIPMATDEF MAT 
 WHERE 1=1 
   AND STS.FACTORY = 'HMVA2'
   AND STS.FACTORY = MAT.FACTORY 
   AND STS.MAT_ID = MAT.MAT_ID 
   AND STEP10_TIME BETWEEN '20200331220000' AND '20200513215959'
   AND SUBSTR(STS.ABR_NO, 0, 3) LIKE '%'
   AND STS.DEFECT_CODE LIKE '%'
   AND STS.CUR_STEP LIKE '%'
   AND STS.OPER_1 BETWEEN 'A0000'AND 'AZ010'
       )
 GROUP BY ABR_TYPE 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , ROUND(SUM(TOTAL)/10, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200504', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200505', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200506', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200507', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200508', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200509', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200510', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200511', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200513', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200504' AND '20200513' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '20' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
SELECT B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
     , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS PLAN_0
  FROM RWIPPLNWEK A
     , (
        SELECT DISTINCT MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, BASE_MAT_ID, MAT_CMF_11, MAT_ID
          FROM MWIPMATDEF
         WHERE FACTORY IN ('HMKT1', 'HMKE1')
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG' 
       ) B
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID
   AND A.FACTORY = 'HMKT1'
   AND A.PLAN_WEEK BETWEEN '202020' AND '202020'
   AND A.GUBUN = '3' 
   AND A.MAT_ID LIKE '%'
 GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
)
SELECT KEY_1 AS OPER_GRP, KEY_2 AS GP, KEY_4 AS TYPE, KEY_3 AS SYS, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
     , ROUND(SUM(NEED_0), 1) AS NEED_0
     , ROUND(RES_Y_CNT - SUM(NEED_0), 1) AS DEF_0
     , SUM(PLAN_0) AS PLAN_0
  FROM (
        SELECT A.KEY_1
             , A.KEY_2
             , A.KEY_3
             , A.KEY_4
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_Y_CNT, RES_Y_CNT)) AS RES_Y_CNT
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_N_CNT, RES_N_CNT)) AS RES_N_CNT
          FROM MGCMTBLDAT A
             , (
                SELECT 'RES_GRP_6' AS GUBUN, RES_GRP_6 AS DATA
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_6 
                 UNION ALL
                SELECT 'RES_GRP_3' AS GUBUN, RES_GRP_3
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_3 
                 UNION ALL
                SELECT 'SUB_AREA_ID' AS GUBUN, SUB_AREA_ID
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY SUB_AREA_ID 
               ) B
             , (
                SELECT SUBSTR(MODEL, 1, 6) AS HDR_ID
                     , SUM(DECODE(PROGRAM, 'Y', 1, 0)) AS HDR_Y_CNT
                     , SUM(DECODE(PROGRAM, 'N', 1, 0)) AS HDR_N_CNT
                  FROM CRASHDRDEF@RPTTOMES
                 WHERE FACTORY = 'HMKT1'
                 GROUP BY SUBSTR(MODEL, 1, 6)
               ) C
         WHERE 1=1
           AND A.DATA_1 = B.GUBUN(+)
           AND A.KEY_3 = C.HDR_ID(+)
           AND B.DATA(+) LIKE A.DATA_2
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_MACHINE_INFO'
         GROUP BY A.KEY_1, A.KEY_2, A.KEY_3, A.KEY_4
       ) A
     , ( 
        SELECT KEY_3 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY KEY_3, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT DATA_8 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY DATA_8, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'AUTO VISUAL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (80000 * 7) END) NEED_0
             , SUM(PLAN_0) AS PLAN_0
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1100') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW 
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' ' 
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'TAPE & REEL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (100000 * 7) END) NEED_0
             , SUM(PLAN_0) AS PLAN_0
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1200') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW   
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' '
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
       ) B
 WHERE 1=1
   AND A.KEY_3 = B.GUBUN(+)
 GROUP BY KEY_1, KEY_2, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
 ORDER BY DECODE(KEY_1, 'TEST', 1, 'AUTO VISUAL', 2, 3), KEY_2 DESC, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '7' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '6' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '7' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
SELECT B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
     , SUM(DECODE(PLAN_WEEK, '202007', WW_QTY, 0)) AS PLAN_0
  FROM RWIPPLNWEK A
     , (
        SELECT DISTINCT MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, BASE_MAT_ID, MAT_CMF_11, MAT_ID
          FROM MWIPMATDEF
         WHERE FACTORY IN ('HMKT1', 'HMKE1')
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG' 
       ) B
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID
   AND A.FACTORY = 'HMKT1'
   AND A.PLAN_WEEK BETWEEN '202007' AND '202007'
   AND A.GUBUN = '3' 
   AND A.MAT_ID LIKE '%'
 GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
)
SELECT KEY_1 AS OPER_GRP, KEY_2 AS GP, KEY_4 AS TYPE, KEY_3 AS SYS, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
     , ROUND(SUM(NEED_0), 1) AS NEED_0
     , ROUND(RES_Y_CNT - SUM(NEED_0), 1) AS DEF_0
     , SUM(PLAN_0) AS PLAN_0
  FROM (
        SELECT A.KEY_1
             , A.KEY_2
             , A.KEY_3
             , A.KEY_4
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_Y_CNT, RES_Y_CNT)) AS RES_Y_CNT
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_N_CNT, RES_N_CNT)) AS RES_N_CNT
          FROM MGCMTBLDAT A
             , (
                SELECT 'RES_GRP_6' AS GUBUN, RES_GRP_6 AS DATA
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_6 
                 UNION ALL
                SELECT 'RES_GRP_3' AS GUBUN, RES_GRP_3
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_3 
                 UNION ALL
                SELECT 'SUB_AREA_ID' AS GUBUN, SUB_AREA_ID
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY SUB_AREA_ID 
               ) B
             , (
                SELECT SUBSTR(MODEL, 1, 6) AS HDR_ID
                     , SUM(DECODE(PROGRAM, 'Y', 1, 0)) AS HDR_Y_CNT
                     , SUM(DECODE(PROGRAM, 'N', 1, 0)) AS HDR_N_CNT
                  FROM CRASHDRDEF@RPTTOMES
                 WHERE FACTORY = 'HMKT1'
                 GROUP BY SUBSTR(MODEL, 1, 6)
               ) C
         WHERE 1=1
           AND A.DATA_1 = B.GUBUN(+)
           AND A.KEY_3 = C.HDR_ID(+)
           AND B.DATA(+) LIKE A.DATA_2
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_MACHINE_INFO'
         GROUP BY A.KEY_1, A.KEY_2, A.KEY_3, A.KEY_4
       ) A
     , ( 
        SELECT KEY_3 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY KEY_3, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT DATA_8 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY DATA_8, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'AUTO VISUAL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (80000 * 7) END) NEED_0
             , SUM(PLAN_0) AS PLAN_0
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1100') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW 
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' ' 
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'TAPE & REEL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (100000 * 7) END) NEED_0
             , SUM(PLAN_0) AS PLAN_0
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1200') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW   
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' '
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
       ) B
 WHERE 1=1
   AND A.KEY_3 = B.GUBUN(+)
 GROUP BY KEY_1, KEY_2, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
 ORDER BY DECODE(KEY_1, 'TEST', 1, 'AUTO VISUAL', 2, 3), KEY_2 DESC, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '6' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '19' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
SELECT B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
     , SUM(DECODE(PLAN_WEEK, '202007', WW_QTY, 0)) AS PLAN_0
     , SUM(DECODE(PLAN_WEEK, '202008', WW_QTY, 0)) AS PLAN_1
     , SUM(DECODE(PLAN_WEEK, '202009', WW_QTY, 0)) AS PLAN_2
     , SUM(DECODE(PLAN_WEEK, '202010', WW_QTY, 0)) AS PLAN_3
     , SUM(DECODE(PLAN_WEEK, '202011', WW_QTY, 0)) AS PLAN_4
     , SUM(DECODE(PLAN_WEEK, '202012', WW_QTY, 0)) AS PLAN_5
     , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS PLAN_6
     , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS PLAN_7
     , SUM(DECODE(PLAN_WEEK, '202015', WW_QTY, 0)) AS PLAN_8
     , SUM(DECODE(PLAN_WEEK, '202016', WW_QTY, 0)) AS PLAN_9
     , SUM(DECODE(PLAN_WEEK, '202017', WW_QTY, 0)) AS PLAN_10
     , SUM(DECODE(PLAN_WEEK, '202018', WW_QTY, 0)) AS PLAN_11
     , SUM(DECODE(PLAN_WEEK, '202019', WW_QTY, 0)) AS PLAN_12
  FROM RWIPPLNWEK A
     , (
        SELECT DISTINCT MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, BASE_MAT_ID, MAT_CMF_11, MAT_ID
          FROM MWIPMATDEF
         WHERE FACTORY IN ('HMKT1', 'HMKE1')
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG' 
       ) B
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID
   AND A.FACTORY = 'HMKT1'
   AND A.PLAN_WEEK BETWEEN '202007' AND '202019'
   AND A.GUBUN = '3' 
   AND A.MAT_ID LIKE '%'
 GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
)
SELECT KEY_1 AS OPER_GRP, KEY_2 AS GP, KEY_4 AS TYPE, KEY_3 AS SYS, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
     , ROUND(SUM(NEED_0), 1) AS NEED_0
     , ROUND(SUM(NEED_1), 1) AS NEED_1
     , ROUND(SUM(NEED_2), 1) AS NEED_2
     , ROUND(SUM(NEED_3), 1) AS NEED_3
     , ROUND(SUM(NEED_4), 1) AS NEED_4
     , ROUND(SUM(NEED_5), 1) AS NEED_5
     , ROUND(SUM(NEED_6), 1) AS NEED_6
     , ROUND(SUM(NEED_7), 1) AS NEED_7
     , ROUND(SUM(NEED_8), 1) AS NEED_8
     , ROUND(SUM(NEED_9), 1) AS NEED_9
     , ROUND(SUM(NEED_10), 1) AS NEED_10
     , ROUND(SUM(NEED_11), 1) AS NEED_11
     , ROUND(SUM(NEED_12), 1) AS NEED_12
     , ROUND(RES_Y_CNT - SUM(NEED_0), 1) AS DEF_0
     , ROUND(RES_Y_CNT - SUM(NEED_1), 1) AS DEF_1
     , ROUND(RES_Y_CNT - SUM(NEED_2), 1) AS DEF_2
     , ROUND(RES_Y_CNT - SUM(NEED_3), 1) AS DEF_3
     , ROUND(RES_Y_CNT - SUM(NEED_4), 1) AS DEF_4
     , ROUND(RES_Y_CNT - SUM(NEED_5), 1) AS DEF_5
     , ROUND(RES_Y_CNT - SUM(NEED_6), 1) AS DEF_6
     , ROUND(RES_Y_CNT - SUM(NEED_7), 1) AS DEF_7
     , ROUND(RES_Y_CNT - SUM(NEED_8), 1) AS DEF_8
     , ROUND(RES_Y_CNT - SUM(NEED_9), 1) AS DEF_9
     , ROUND(RES_Y_CNT - SUM(NEED_10), 1) AS DEF_10
     , ROUND(RES_Y_CNT - SUM(NEED_11), 1) AS DEF_11
     , ROUND(RES_Y_CNT - SUM(NEED_12), 1) AS DEF_12
     , SUM(PLAN_0) AS PLAN_0
     , SUM(PLAN_1) AS PLAN_1
     , SUM(PLAN_2) AS PLAN_2
     , SUM(PLAN_3) AS PLAN_3
     , SUM(PLAN_4) AS PLAN_4
     , SUM(PLAN_5) AS PLAN_5
     , SUM(PLAN_6) AS PLAN_6
     , SUM(PLAN_7) AS PLAN_7
     , SUM(PLAN_8) AS PLAN_8
     , SUM(PLAN_9) AS PLAN_9
     , SUM(PLAN_10) AS PLAN_10
     , SUM(PLAN_11) AS PLAN_11
     , SUM(PLAN_12) AS PLAN_12
  FROM (
        SELECT A.KEY_1
             , A.KEY_2
             , A.KEY_3
             , A.KEY_4
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_Y_CNT, RES_Y_CNT)) AS RES_Y_CNT
             , SUM(DECODE(A.KEY_2, 'HANDLER', HDR_N_CNT, RES_N_CNT)) AS RES_N_CNT
          FROM MGCMTBLDAT A
             , (
                SELECT 'RES_GRP_6' AS GUBUN, RES_GRP_6 AS DATA
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_6 
                 UNION ALL
                SELECT 'RES_GRP_3' AS GUBUN, RES_GRP_3
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY RES_GRP_3 
                 UNION ALL
                SELECT 'SUB_AREA_ID' AS GUBUN, SUB_AREA_ID
                     , SUM(DECODE(RES_CMF_9, 'Y', 1, 0)) AS RES_Y_CNT
                     , SUM(DECODE(RES_CMF_9, 'N', 1, 0)) AS RES_N_CNT
                  FROM MRASRESDEF
                 WHERE 1=1
                   AND FACTORY = 'HMKT1'
                   AND DELETE_FLAG = ' '
                 GROUP BY SUB_AREA_ID 
               ) B
             , (
                SELECT SUBSTR(MODEL, 1, 6) AS HDR_ID
                     , SUM(DECODE(PROGRAM, 'Y', 1, 0)) AS HDR_Y_CNT
                     , SUM(DECODE(PROGRAM, 'N', 1, 0)) AS HDR_N_CNT
                  FROM CRASHDRDEF@RPTTOMES
                 WHERE FACTORY = 'HMKT1'
                 GROUP BY SUBSTR(MODEL, 1, 6)
               ) C
         WHERE 1=1
           AND A.DATA_1 = B.GUBUN(+)
           AND A.KEY_3 = C.HDR_ID(+)
           AND B.DATA(+) LIKE A.DATA_2
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_MACHINE_INFO'
         GROUP BY A.KEY_1, A.KEY_2, A.KEY_3, A.KEY_4
       ) A
     , ( 
        SELECT KEY_3 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_1 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_1
             , SUM((B.PLAN_2 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_2
             , SUM((B.PLAN_3 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_3
             , SUM((B.PLAN_4 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_4
             , SUM((B.PLAN_5 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_5
             , SUM((B.PLAN_6 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_6
             , SUM((B.PLAN_7 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_7
             , SUM((B.PLAN_8 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_8
             , SUM((B.PLAN_9 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_9
             , SUM((B.PLAN_10 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_10
             , SUM((B.PLAN_11 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_11
             , SUM((B.PLAN_12 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_12
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
             , SUM((B.PLAN_1 * DATA_7)) AS PLAN_1
             , SUM((B.PLAN_2 * DATA_7)) AS PLAN_2
             , SUM((B.PLAN_3 * DATA_7)) AS PLAN_3
             , SUM((B.PLAN_4 * DATA_7)) AS PLAN_4
             , SUM((B.PLAN_5 * DATA_7)) AS PLAN_5
             , SUM((B.PLAN_6 * DATA_7)) AS PLAN_6
             , SUM((B.PLAN_7 * DATA_7)) AS PLAN_7
             , SUM((B.PLAN_8 * DATA_7)) AS PLAN_8
             , SUM((B.PLAN_9 * DATA_7)) AS PLAN_9
             , SUM((B.PLAN_10 * DATA_7)) AS PLAN_10
             , SUM((B.PLAN_11 * DATA_7)) AS PLAN_11
             , SUM((B.PLAN_12 * DATA_7)) AS PLAN_12
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY KEY_3, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT DATA_8 AS GUBUN, KEY_2 AS OPER
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM((B.PLAN_0 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_0
             , SUM((B.PLAN_1 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_1
             , SUM((B.PLAN_2 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_2
             , SUM((B.PLAN_3 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_3
             , SUM((B.PLAN_4 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_4
             , SUM((B.PLAN_5 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_5
             , SUM((B.PLAN_6 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_6
             , SUM((B.PLAN_7 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_7
             , SUM((B.PLAN_8 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_8
             , SUM((B.PLAN_9 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_9
             , SUM((B.PLAN_10 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_10
             , SUM((B.PLAN_11 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_11
             , SUM((B.PLAN_12 * DATA_7) / ((86400 / (NVL(DATA_4,0) + NVL(DATA_5,0)) * (DATA_1/100) * (DATA_2/100) * (DATA_3/100) * KEY_4) * 7)) AS NEED_12
             , SUM((B.PLAN_0 * DATA_7)) AS PLAN_0
             , SUM((B.PLAN_1 * DATA_7)) AS PLAN_1
             , SUM((B.PLAN_2 * DATA_7)) AS PLAN_2
             , SUM((B.PLAN_3 * DATA_7)) AS PLAN_3
             , SUM((B.PLAN_4 * DATA_7)) AS PLAN_4
             , SUM((B.PLAN_5 * DATA_7)) AS PLAN_5
             , SUM((B.PLAN_6 * DATA_7)) AS PLAN_6
             , SUM((B.PLAN_7 * DATA_7)) AS PLAN_7
             , SUM((B.PLAN_8 * DATA_7)) AS PLAN_8
             , SUM((B.PLAN_9 * DATA_7)) AS PLAN_9
             , SUM((B.PLAN_10 * DATA_7)) AS PLAN_10
             , SUM((B.PLAN_11 * DATA_7)) AS PLAN_11
             , SUM((B.PLAN_12 * DATA_7)) AS PLAN_12
          FROM MGCMTBLDAT A
             , DT B
         WHERE 1=1
           AND A.KEY_1 = B.MAT_ID
           AND A.FACTORY = 'HMKT1'
           AND A.TABLE_NAME = 'H_CAPA_SIM_INFO'
         GROUP BY DATA_8, KEY_2, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'AUTO VISUAL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (80000 * 7) END) NEED_0
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_1 / (80000 * 7) END) NEED_1
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_2 / (80000 * 7) END) NEED_2
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_3 / (80000 * 7) END) NEED_3
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_4 / (80000 * 7) END) NEED_4
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_5 / (80000 * 7) END) NEED_5
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_6 / (80000 * 7) END) NEED_6
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_7 / (80000 * 7) END) NEED_7
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_8 / (80000 * 7) END) NEED_8
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_9 / (80000 * 7) END) NEED_9
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_10 / (80000 * 7) END) NEED_10
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_11 / (80000 * 7) END) NEED_11
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_12 / (80000 * 7) END) NEED_12
             , SUM(PLAN_0) AS PLAN_0
             , SUM(PLAN_1) AS PLAN_1
             , SUM(PLAN_2) AS PLAN_2
             , SUM(PLAN_3) AS PLAN_3
             , SUM(PLAN_4) AS PLAN_4
             , SUM(PLAN_5) AS PLAN_5
             , SUM(PLAN_6) AS PLAN_6
             , SUM(PLAN_7) AS PLAN_7
             , SUM(PLAN_8) AS PLAN_8
             , SUM(PLAN_9) AS PLAN_9
             , SUM(PLAN_10) AS PLAN_10
             , SUM(PLAN_11) AS PLAN_11
             , SUM(PLAN_12) AS PLAN_12
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1100') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW 
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' ' 
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
         UNION ALL
        SELECT 'TAPE & REEL' AS GUBUN, '' AS OPER 
             , B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_0 / (100000 * 7) END) NEED_0
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_1 / (100000 * 7) END) NEED_1
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_2 / (100000 * 7) END) NEED_2
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_3 / (100000 * 7) END) NEED_3
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_4 / (100000 * 7) END) NEED_4
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_5 / (100000 * 7) END) NEED_5
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_6 / (100000 * 7) END) NEED_6
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_7 / (100000 * 7) END) NEED_7
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_8 / (100000 * 7) END) NEED_8
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_9 / (100000 * 7) END) NEED_9
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_10 / (100000 * 7) END) NEED_10
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_11 / (100000 * 7) END) NEED_11
             , SUM(CASE WHEN C.FLOW IS NULL THEN 0 ELSE PLAN_12 / (100000 * 7) END) NEED_12
             , SUM(PLAN_0) AS PLAN_0
             , SUM(PLAN_1) AS PLAN_1
             , SUM(PLAN_2) AS PLAN_2
             , SUM(PLAN_3) AS PLAN_3
             , SUM(PLAN_4) AS PLAN_4
             , SUM(PLAN_5) AS PLAN_5
             , SUM(PLAN_6) AS PLAN_6
             , SUM(PLAN_7) AS PLAN_7
             , SUM(PLAN_8) AS PLAN_8
             , SUM(PLAN_9) AS PLAN_9
             , SUM(PLAN_10) AS PLAN_10
             , SUM(PLAN_11) AS PLAN_11
             , SUM(PLAN_12) AS PLAN_12
          FROM DT A
             , MWIPMATDEF B
             , (SELECT DISTINCT FLOW FROM MWIPFLWOPR@RPTTOMES WHERE FACTORY = 'HMKT1' AND OPER ='T1200') C 
         WHERE 1=1
           AND A.MAT_ID = B.MAT_ID
           AND B.FIRST_FLOW = C.FLOW   
           AND B.FACTORY = 'HMKT1'
           AND B.MAT_TYPE = 'FG'
           AND B.DELETE_FLAG = ' '
         GROUP BY B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_6, B.BASE_MAT_ID, B.MAT_CMF_11, B.MAT_ID
       ) B
 WHERE 1=1
   AND A.KEY_3 = B.GUBUN(+)
 GROUP BY KEY_1, KEY_2, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 
 ORDER BY DECODE(KEY_1, 'TEST', 1, 'AUTO VISUAL', 2, 3), KEY_2 DESC, KEY_4, KEY_3, OPER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', RES_Y_CNT, RES_N_CNT 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '13' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='20' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200513' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200513')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200513', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)*USAGE/1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_WEEK/1,0) AS SOP_PLN
     , ROUND(ASSY_WEEK/1,0) AS ASSY_WEEK 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', WW_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', WW_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', WW_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', WW_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', WW_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE 'P%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(WEEK_AO,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_WEEK,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/USAGE*1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_MON/1,0) AS SOP_PLN 
     , ROUND(ASSY_MON/1,0) AS ASSY_MON 
     , ROUND((SOP_PLN_MON-ASSY_MON)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_MON-ASSY_MON)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_MON-ASSY_MON)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', REV_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', REV_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', REV_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', REV_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', REV_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', REV_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', REV_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', REV_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE 'P%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(ASSY_MON,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_MON,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)*USAGE/1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_WEEK/1,0) AS SOP_PLN
     , ROUND(ASSY_WEEK/1,0) AS ASSY_WEEK 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', WW_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', WW_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', WW_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', WW_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', WW_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', WW_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', WW_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE 'P%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(WEEK_AO,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_WEEK,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/USAGE*1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_MON/1,0) AS SOP_PLN 
     , ROUND(ASSY_MON/1,0) AS ASSY_MON 
     , ROUND((SOP_PLN_MON-ASSY_MON)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_MON-ASSY_MON)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_MON-ASSY_MON)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', REV_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', REV_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', REV_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', REV_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', REV_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', REV_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', REV_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', REV_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE 'P%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(ASSY_MON,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_MON,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/USAGE*1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_MON/1,0) AS SOP_PLN 
     , ROUND(ASSY_MON/1,0) AS ASSY_MON 
     , ROUND((SOP_PLN_MON-ASSY_MON)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_MON-ASSY_MON)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_MON-ASSY_MON)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND CM_KEY_3 LIKE 'P%' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', REV_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', REV_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', REV_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', REV_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', REV_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', REV_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', REV_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', REV_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE 'P%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(ASSY_MON,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_MON,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '05' 
   AND SYS_DAY = '01' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='18' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202005', '202006' ,'202007') 
   AND SYS_DATE >= '20200501' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200501', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200501','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  ' ', (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER) AS CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER 
     , RTRIM(TO_CHAR(USAGE, 'FM9990D9999'), '.') AS USAGE 
     , ROUND(WIP_STOCK/1,0) AS WIP_STOCK 
     , ROUND(((MAT_TTL/USAGE*1000)-REV_QTY)/1,0) AS CMM 
     , ROUND((((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/1,0) AS "재공대비과부족" 
     , CASE WHEN ((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK<0 THEN ROUND((ABS(((MAT_TTL/USAGE*1000)-REV_QTY)-WIP_STOCK)/USAGE*1000)/1,1) ELSE 0 END "원부자재입고필요" 
     , ROUND(SOP_PLN_MON/1,0) AS SOP_PLN 
     , ROUND(ASSY_MON/1,0) AS ASSY_MON 
     , ROUND((SOP_PLN_MON-ASSY_MON)/1,1) AS "공정기준잔량" 
     , ROUND(((SOP_PLN_MON-ASSY_MON)*USAGE/1000)/1,1) AS "원부자재필요" 
     , ROUND((MAT_TTL-((SOP_PLN_MON-ASSY_MON)*USAGE/1000))/1,0) AS "계획대비과부족" 
     , ROUND(MAT_TTL/1,0) AS MAT_TTL 
     , ROUND(MAT_SMT_IN/1,0) AS MAT_SMT_IN 
     , ROUND(MAT_L_IN/1,0) AS MAT_L_IN 
     , ROUND(WIK_WIP/1,0) AS WIK_WIP 
     , ROUND(MAT_INV_L_QTY/1,0) AS MAT_INV_L_QTY 
     , ROUND(MAT_INV_QTY/1,0) AS MAT_INV_QTY 
     , ROUND(ORDER_QTY/1,0) AS ORDER_QTY 
     , ROUND((SOP_PLN_WEEK-ASSY_WEEK)/1,0) AS W0 
     , ROUND(W1/1,0) AS W1 
     , ROUND(W2/1,0) AS W2 
     , ROUND(W3/1,0) AS W3 
     , ROUND(W4/1,0) AS W4 
     , ROUND(W5/1,0) AS W5 
     , ROUND(W6/1,0) AS W6 
     , ROUND(W7/1,0) AS W7 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000))/1,0) AS MW0 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000))/1,0) AS MW1 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000))/1,0) AS MW2 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000))/1,0) AS MW3 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000))/1,0) AS MW4 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000))/1,0) AS MW5 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000))/1,0) AS MW6 
     , ROUND((MAT_TTL-((SOP_PLN_WEEK-ASSY_WEEK)*USAGE/1000) - (W1*USAGE/1000) - (W2*USAGE/1000) - (W3*USAGE/1000) - (W4*USAGE/1000) - (W5*USAGE/1000) - (W6*USAGE/1000) - (W7*USAGE/1000))/1,0) AS MW7 
  FROM ( 
        SELECT  ' ', MAT.MAT_GRP_1 AS CUSTOMER, MAT.MAT_GRP_2 AS FAMILY, MAT_GRP_10 AS PACKAGE,  ' ',  ' ', MAT.MAT_GRP_6 AS LD_COUNT, MAT.MAT_CMF_11 AS PKG_CODE,  ' ', REPLACE(A.MATCODE, '-O','') AS MATCODE,  ' ',  ' ',  ' ', A.OPER
             , SUM(A.SOP_PLN_MON) AS SOP_PLN_MON 
             , SUM(A.SOP_PLN_WEEK) AS SOP_PLN_WEEK 
             , SUM(A.WEEK_AO+A.WIP_STOCK_NEXT) AS ASSY_WEEK 
             , SUM(A.ASSY_MON+A.WIP_STOCK_NEXT) AS ASSY_MON 
             , SUM(A.WIP_STOCK) AS WIP_STOCK 
             , SUM(A.REV_QTY) AS REV_QTY 
             , MAX(A.USAGE) AS USAGE 
             , MAX(A.TTL) AS MAT_TTL 
             , MAX(A.SMT_IN) AS MAT_SMT_IN 
             , MAX(A.L_IN) AS MAT_L_IN 
             , MAX(A.WIK_WIP) AS WIK_WIP 
             , MAX(A.INV_L_QTY) AS MAT_INV_L_QTY 
             , MAX(A.INV_QTY) AS MAT_INV_QTY 
             , MAX(A.ORDER_QTY) AS ORDER_QTY 
             , MAX(A.WIP_STOCK-A.IN_QTY) AS  IN_QTY 
             , SUM(A.W0) AS W0 
             , SUM(A.W1) AS W1 
             , SUM(A.W2) AS W2 
             , SUM(A.W3) AS W3 
             , SUM(A.W4) AS W4 
             , SUM(A.W5) AS W5 
             , SUM(A.W6) AS W6 
             , SUM(A.W7) AS W7 
        FROM MWIPMATDEF MAT 
           ,  ( 
              SELECT MAT.MAT_ID 
                   , C.MATTYPE 
                   , C.MATCODE 
                   , C.DESCRIPT 
                   , C.OPER 
                   , C.UNIT 
                   , MAX(A.SOP_PLN_MON) AS  SOP_PLN_MON 
                   , MAX(A.SOP_PLN_WEEK) AS  SOP_PLN_WEEK 
                   , MAX(USAGE) AS USAGE 
                   , MAX(A.WEEK_AO) AS WEEK_AO 
                   , MAX(A.ASSY_MON) AS ASSY_MON 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN B.OPER = 'A0000' THEN NVL(B.VO,0) ELSE 0 END 
                           END),0)) AS WIP_STOCK 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN C.OPER AND 'AZ010') AND B.OPER <> C.OPER THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS WIP_STOCK_NEXT 
                   , SUM(NVL((CASE WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END ELSE 0 END  
                               ELSE CASE WHEN (B.OPER BETWEEN 'A0000' AND C.OPER) AND B.OPER <> 'A0000' THEN NVL(B.VO,0) ELSE 0 END  
                           END),0)) AS REV_QTY 
                   , MAX(C.TTL) AS TTL 
                   , MAX(C.SMT_IN) AS SMT_IN 
                   , MAX(C.L_IN) AS L_IN 
                   , MAX(C.WIK_WIP) AS WIK_WIP 
                   , MAX(C.INV_L_QTY) AS INV_L_QTY 
                   , MAX(C.INV_QTY) AS INV_QTY 
                   , MAX(C.ORDER_QTY) AS ORDER_QTY 
                   , MAX(C.IN_QTY) AS IN_QTY 
                   , MAX(A.W0) AS W0 
                   , MAX(A.W1) AS W1 
                   , MAX(A.W2) AS W2 
                   , MAX(A.W3) AS W3 
                   , MAX(A.W4) AS W4 
                   , MAX(A.W5) AS W5 
                   , MAX(A.W6) AS W6 
                   , MAX(A.W7) AS W7 
                FROM MWIPMATDEF MAT 
                   , ( 
                      SELECT MAT.MAT_ID   
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(PLAN.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(PLAN.RESV_FIELD1,0) END) AS SOP_PLN_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W_PLN.W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W_PLN.W0,0) END) AS SOP_PLN_WEEK  
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(WEEK_AO.WEEK_AO,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(WEEK_AO.WEEK_AO,0) END) WEEK_AO 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(NVL(MON_AO.ASSY_MON,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) ELSE NVL(MON_AO.ASSY_MON,0) END) ASSY_MON 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W0,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W0,0) END) AS W0 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W1,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W1,0) END) AS W1 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W2,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W2,0) END) AS W2 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W3,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W3,0) END) AS W3 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W4,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W4,0) END) AS W4 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W5,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W5,0) END) AS W5 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W6,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W6,0) END) AS W6 
                           , MAX(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN NVL(W7,0) / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE NVL(W7,0) END) AS W7 
                           , MAX(W_PLN.W_LAST) AS W_LAST 
                        FROM MWIPMATDEF MAT  
                           , (    
                              SELECT MAT_ID, SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
                                FROM RSUMFACMOV   
                               WHERE 1=1   
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501' 
                                 AND LOT_TYPE = 'W'   
                                 AND CM_KEY_1 = 'HMVA2'   
                                 AND CM_KEY_2 = 'PROD'   
                                 AND CM_KEY_3 LIKE '%' 
                                 AND FACTORY NOT IN ('RETURN')  
                               GROUP BY MAT_ID     
                             ) SHP   
                          , ( 
                             SELECT MAT_ID 
                                  , SUM(DECODE(SUBSTR(WORK_DATE,0,6),'202005', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0),0)) AS ASSY_MON  
                               FROM RSUMFACMOV 
                              WHERE 1=1 
                                AND WORK_DATE BETWEEN '20200429' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) MON_AO 
                           , ( 
                              SELECT MAT_ID 
                                   , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                                FROM RSUMFACMOV 
                               WHERE 1=1 
                                 AND WORK_DATE BETWEEN '20200425' AND '20200501'
                                 AND LOT_TYPE = 'W' 
                                 AND CM_KEY_1 = 'HMVA2' 
                                 AND CM_KEY_2 = 'PROD' 
                                 AND FACTORY NOT IN ('RETURN') 
                               GROUP BY MAT_ID 
                             ) WEEK_AO 
                           , (  
                              SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1  
                                FROM (  
                                      SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                        FROM (  
                                              SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                FROM CWIPPLNMON  
                                               WHERE 1=1  
                                                 AND FACTORY = 'HMVA2'  
                                               GROUP BY FACTORY, MAT_ID, PLAN_MONTH  
                                             )  
                                       GROUP BY FACTORY, MAT_ID,PLAN_MONTH  
                                     )  
                                WHERE PLAN_MONTH = '202005' 
                             ) PLAN 
                           , (   
                              SELECT MAT_ID   
                                   , SUM(DECODE(PLAN_WEEK, '202018', REV_QTY, 0)) AS W0  
                                   , SUM(DECODE(PLAN_WEEK, '202019', REV_QTY, 0)) AS W1  
                                   , SUM(DECODE(PLAN_WEEK, '202020', REV_QTY, 0)) AS W2  
                                   , SUM(DECODE(PLAN_WEEK, '202021', REV_QTY, 0)) AS W3  
                                   , SUM(DECODE(PLAN_WEEK, '202022', REV_QTY, 0)) AS W4  
                                   , SUM(DECODE(PLAN_WEEK, '202023', REV_QTY, 0)) AS W5  
                                   , SUM(DECODE(PLAN_WEEK, '202024', REV_QTY, 0)) AS W6  
                                   , SUM(DECODE(PLAN_WEEK, '202025', REV_QTY, 0)) AS W7  
                                   , SUM(CASE WHEN PLAN_WEEK >= CKD_S_WEEK AND PLAN_WEEK <= CKD_L_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST   
                                FROM (   
                                      SELECT A.PLAN_WEEK, B.CKD_S_WEEK, B.CKD_L_WEEK, A.MAT_ID, A.WW_QTY, B.CNT   
                                           , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY   
                                        FROM RWIPPLNWEK A   
                                           , (   
                                              SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK, COUNT(*) AS CNT  
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200425') AS CKD_S_WEEK 
                                                   , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200501') AS CKD_L_WEEK 
                                                FROM MWIPCALDEF  
                                               WHERE 1=1  
                                                 AND CALENDAR_ID = 'OTD'  
                                                 AND PLAN_YEAR||LPAD(PLAN_MONTH,2,'0') IN('202005','202006','202007') 
                                               GROUP BY PLAN_WEEK  
                                             ) B   
                                       WHERE 1=1   
                                         AND A.PLAN_WEEK = B.PLAN_WEEK   
                                         AND A.FACTORY = 'HMVA2'     
                                         AND A.GUBUN = '3'    
                                     )   
                               GROUP BY MAT_ID   
                             ) W_PLN   
                       WHERE 1=1  
                         AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                         AND MAT.MAT_ID = SHP.MAT_ID(+)  
                         AND MAT.MAT_ID = W_PLN.MAT_ID(+)  
                         AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                         AND MAT.MAT_ID = WEEK_AO.MAT_ID(+)  
                         AND MAT.FACTORY = 'HMVA2'  
                         AND MAT.DELETE_FLAG = ' '  
                         AND MAT.MAT_TYPE = 'FG'  
                         AND MAT.MAT_ID LIKE '%'  
                       GROUP BY MAT.MAT_ID 
                     ) A 
                   , ( 
                      SELECT LOT.MAT_ID, MAT.MAT_GRP_3, LOT.OPER_GRP_1, LOT.OPER 
                           , DECODE(MAT.MAT_GRP_3,'COB',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),'BGN',ROUND(QTY/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0),QTY) AS VO 
                        FROM ( 
                              SELECT FACTORY, MAT_ID, OPER_GRP_1, OPER 
                                   , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                              ELSE QTY_1 
                                         END) QTY 
                                FROM ( 
                                      SELECT A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER, A.QTY_1 
                                           , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                        FROM RWIPLOTSTS_BOH A 
                                           , MWIPOPRDEF B 
                                       WHERE 1 = 1 
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+) 
                                         AND A.OPER = B.OPER(+) 
                                         AND A.FACTORY = 'HMVA2' 
                                         AND A.LOT_TYPE = 'W' 
                                         AND A.LOT_DEL_FLAG = ' ' 
                                         AND B.OPER_GRP_1 NOT IN (' ', '-') 
                                         AND B.OPER BETWEEN 'A0000' AND 'AZ010' 
                                         AND A.LOT_CMF_5 LIKE '%' 
                                     ) 
                               GROUP BY FACTORY, MAT_ID, OPER_GRP_1, OPER 
                               ORDER BY MAT_ID, OPER, OPER_GRP_1 
                             ) LOT 
                           , MWIPMATDEF MAT 
                       WHERE 1 = 1 
                         AND LOT.FACTORY = MAT.FACTORY 
                         AND LOT.MAT_ID = MAT.MAT_ID 
                         AND MAT.DELETE_FLAG <> 'Y' 
                         AND MAT.MAT_GRP_2 <> '-' 
                       ORDER BY LOT.OPER, LOT.OPER_GRP_1 
                     ) B 
                   , ( 
                      SELECT MAT.MAT_ID    
                           , SMM.MAT_TYPE AS MATTYPE   
                           , MAX(NVL(SMM.UNIT_QTY,0)) AS USAGE   
                           , SMM.MATCODE AS MATCODE 
                           , SMM.DESCRIPT AS DESCRIPT 
                           , SMM.OPER AS OPER  
                           , SMM.UNIT_1 AS UNIT  
                           , MAX(WIP_MAT.TTL) AS TTL 
                           , MAX(WIP_MAT.SMT_IN) AS SMT_IN 
                           , MAX(WIP_MAT.L_IN) AS L_IN 
                           , MAX(WIP_MAT.WIK_WIP) AS WIK_WIP 
                           , MAX(WIP_MAT.INV_L_QTY) AS INV_L_QTY 
                           , MAX(WIP_MAT.INV_QTY) AS INV_QTY 
                           , MAX(WIP_MAT.ORDER_QTY) AS ORDER_QTY 
                           , MAX(WIP_MAT.IN_QTY) AS IN_QTY 
                        FROM MWIPMATDEF MAT  
                           , (   
                              SELECT DISTINCT NVL(P.MAT_ID,B.PARTNUMBER) PARTNUMBER, B.MATCODE, B.DESCRIPT, B.RESV_FIELD_2 AS MAT_TYPE, B.UNIT AS UNIT_1, B.UNIT_QTY, B.STEPID AS OPER 
                                FROM CWIPMATDEF@RPTTOMES A  
                                   , CWIPBOMDEF B  
                                   , RWIPMCPBOM P    
                               WHERE 1=1  
                                 AND A.MAT_ID = B.MATCODE  
                                 AND A.FACTORY = 'HMVA2'  
                                 AND B.RESV_FIELD_2 IN ('CW','GW','MC','SB','SW','TE', 'LF', 'PB', 'RC')  
                                 AND B.RESV_FIELD_2 <> ' '  
                                 AND B.RESV_FLAG_1 = 'Y'  
                                 AND B.STEPID <> 'A0300'  
                                 AND B.MATCODE NOT LIKE '%-O'  
                                 AND B.PARTNUMBER = P.MCP_TO_PART(+) 
                               ORDER BY MATCODE 
                             ) SMM 
                           , (  
                              SELECT REPLACE(A.MAT_ID, '-O', '') AS MAT_ID 
                                   , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0))+SUM(NVL(C.QTY_SMT,0))+SUM(NVL(C.QTY_TTL,0))+SUM(NVL(E.WIK_WIP,0)) AS TTL 
                                   , SUM(NVL(C.QTY_SMT,0)) AS SMT_IN  
                                   , SUM(NVL(C.QTY_TTL,0)) AS L_IN  
                                   , SUM(NVL(E.WIK_WIP,0)) AS WIK_WIP  
                                   , SUM(NVL(B.INV_L_QTY,0)) AS INV_L_QTY  
                                   , SUM(NVL(B.INV_QTY,0)) AS INV_QTY  
                                   , SUM(NVL(D.ORDER_QTY,0)) AS ORDER_QTY  
                                   , SUM(NVL(C.IN_QTY,0)) AS IN_QTY  
                                FROM MWIPMATDEF A     
                                   , (     
                                      SELECT MAT_ID 
                                           , SUM(INV_QTY) AS INV_QTY 
                                           , SUM(INV_L_QTY) AS INV_L_QTY 
                                        FROM ( 
                                              SELECT MAT_ID  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY  
                                                   , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY    
                                                FROM CWMSLOTSTS_BOH@RPTTOMES 
                                               WHERE CUTOFF_DT = '2020050122'
                                                 AND QUANTITY> 0 
                                                 AND STORAGE_LOCATION IN ('1000', '1001', '1003') 
                                               GROUP BY MAT_ID  
                                               UNION ALL 
                                              SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                                                FROM CWIPMATSLP@RPTTOMES 
                                               WHERE 1=1 
                                                 AND RECV_FLAG = ' ' 
                                                 AND IN_TIME BETWEEN '20200429000000' AND '20200501235959' 
                                               GROUP BY MAT_ID 
                                             ) 
                                       GROUP BY MAT_ID 
                                     ) B     
                                   , (     
                                      SELECT MAT_ID  
                                           , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1   
                                                      ELSE 0   
                                                 END) AS IN_QTY   
                                           , COUNT(*) AS LOT_TTL   
                                           , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_SMT  
                                           , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS QTY_TTL  
                                        FROM RWIPLOTSTS_BOH A 
                                           , CRASRESMAT B 
                                       WHERE 1=1  
                                         AND A.CUTOFF_DT = '20200501' || '22' 
                                         AND A.FACTORY = B.FACTORY(+)   
                                         AND A.LOT_ID = B.LOT_ID(+)   
                                         AND A.FACTORY = 'HMVA2'  
                                         AND A.LOT_TYPE != 'W'  
                                         AND A.LOT_DEL_FLAG = ' '  
                                         AND A.LOT_CMF_2 = '-'   
                                         AND A.LOT_CMF_9 != ' '   
                                         AND A.QTY_1 > 0   
                                         AND A.OPER NOT IN  ('00001', '00002', 'V0000')   
                                       GROUP BY A.MAT_ID    
                                     ) C     
                                   , (     
                                      SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY     
                                        FROM RSAPORDQNT     
                                       WHERE 1=1     
                                         AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD')     
                                       GROUP BY MAT_ID     
                                     ) D 
                                   , ( 
                                      SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
                                        FROM ISTMWIKWIP@RPTTOMES 
                                       WHERE 1=1 
                                         AND CUTOFF_DT = '20200501' || '22'
                                       GROUP BY MAT_ID 
                                     ) E 
                               WHERE 1=1 
                                 AND A.MAT_ID = B.MAT_ID(+) 
                                 AND A.MAT_ID = C.MAT_ID(+) 
                                 AND A.MAT_ID = D.MAT_ID(+) 
                                 AND A.MAT_ID = E.MAT_ID(+) 
                                 AND A.FACTORY = 'HMVA2' 
                               GROUP BY REPLACE(A.MAT_ID, '-O', '') 
                               HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(C.QTY_SMT,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) + SUM(NVL(C.IN_QTY,0)) > 0 
                             ) WIP_MAT 
                       WHERE 1=1 
                         AND MAT.MAT_ID = SMM.PARTNUMBER(+) 
                         AND SMM.MATCODE = WIP_MAT.MAT_ID(+) 
                         AND MAT.FACTORY = 'HMVA2' 
                         AND MAT.DELETE_FLAG = ' ' 
                         AND MAT.MAT_TYPE = 'FG' 
                         AND MAT.MAT_ID LIKE '%' 
                         AND SMM.UNIT_QTY > 0 
                       GROUP BY MAT.MAT_ID, SMM.MAT_TYPE, SMM.DESCRIPT, SMM.MATCODE, SMM.DESCRIPT, SMM.OPER, SMM.UNIT_1 
                     ) C 
               WHERE 1=1 
                 AND MAT.MAT_ID = A.MAT_ID(+) 
                 AND MAT.MAT_ID = B.MAT_ID(+) 
                 AND MAT.MAT_ID = C.MAT_ID(+) 
                 AND MAT.FACTORY = 'HMVA2' 
                 AND MAT.DELETE_FLAG = ' ' 
                 AND MAT.VENDOR_ID <> ' ' 
               GROUP BY MAT.MAT_ID, C.MATTYPE, C.MATCODE, C.DESCRIPT, C.OPER, C.UNIT 
             ) A 
        WHERE 1=1  
          AND MAT.MAT_ID = A.MAT_ID(+) 
          AND MAT.FACTORY = 'HMVA2' 
          AND MAT.DELETE_FLAG = ' ' 
          AND A.MATCODE <> ' ' 
        GROUP BY  ' ', MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_10,  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', REPLACE(A.MATCODE, '-O',''),  ' ',  ' ',  ' ', A.OPER
        HAVING ( 
                SUM(NVL(SOP_PLN_MON,0))+SUM(NVL(SOP_PLN_WEEK,0))+SUM(NVL(ASSY_MON,0))+SUM(NVL(WIP_STOCK,0))+SUM(NVL(REV_QTY,0))+MAX(NVL(TTL,0)) 
               +SUM(NVL(W0,0))+SUM(NVL(W1,0))+SUM(NVL(W2,0))+SUM(NVL(W3,0))+SUM(NVL(W4,0))+SUM(NVL(W5,0))+SUM(NVL(W6,0))+SUM(NVL(W7,0)) 
               ) > 0 
       ) A 
 WHERE 1=1  
   AND NVL(WIP_STOCK,0)+NVL(SOP_PLN_MON,0)+NVL(SOP_PLN_WEEK,0)+NVL(ASSY_MON,0)+NVL(REV_QTY,0)+NVL(MAT_TTL,0)+NVL(MAT_L_IN,0)+NVL(WIK_WIP,0)+NVL(MAT_INV_L_QTY,0)+NVL(MAT_INV_QTY,0)+NVL(ORDER_QTY,0)+NVL(W1,0)+NVL(W2,0)+NVL(W3,0)+NVL(W4,0)+NVL(W5,0)+NVL(W6,0)+NVL(W7,0) > 0 
 ORDER BY  ' ', DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, FAMILY, PACKAGE,  ' ',  ' ', LD_COUNT, PKG_CODE,  ' ', MATCODE,  ' ',  ' ',  ' ', OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT MAT_ID FROM CMATPLNINP@RPTTOMES WHERE PLAN_DATE <> ' '
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011014'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER,  ' ', MAT_GRP_10 AS PKG,  ' ', MAT_CMF_11 AS PKG_CODE,  ' ',  ' ', MAT_GRP_5 AS TYPE_2, OPER AS STEP,  ' ',  ' ',  ' ',  ' ',  ' ' 
     , RES_MODEL_S1, DECODE(SHP_MON_S1, 0, 0, ROUND(SHP_MON_S1/SHP_MON_TTL*100,2)) AS SHP_MON_S1, ROUND(UPH_S1, 0) AS UPH_S1 
     , RES_MODEL_S2, DECODE(SHP_MON_S2, 0, 0, ROUND(SHP_MON_S2/SHP_MON_TTL*100,2)) AS SHP_MON_S2, ROUND(UPH_S2, 0) AS UPH_S2 
     , RES_MODEL_S3, DECODE(SHP_MON_S3, 0, 0, ROUND(SHP_MON_S3/SHP_MON_TTL*100,2)) AS SHP_MON_S3, ROUND(UPH_S3, 0) AS UPH_S3 
     , RES_MODEL_S4, DECODE(SHP_MON_S4, 0, 0, ROUND(SHP_MON_S4/SHP_MON_TTL*100,2)) AS SHP_MON_S4, ROUND(UPH_S4, 0) AS UPH_S4 
     , RES_MODEL_S5, DECODE(SHP_MON_S5, 0, 0, ROUND(SHP_MON_S5/SHP_MON_TTL*100,2)) AS SHP_MON_S5, ROUND(UPH_S5, 0) AS UPH_S5 
     , RNAK AS SEC 
     , AMDL - RNAK AS NSEC 
     , DECODE(RNAK, 0, 0, ROUND(RNAK/AMDL*100,2)) AS RATE_COMP 
  FROM ( 
        SELECT MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ', MAT.MAT_CMF_11,  ' ',  ' ', MAT.MAT_GRP_5, A.OPER,  ' ',  ' ',  ' ',  ' ',  ' ' 
             , MAX(RANK)-1 AS RNAK 
             , MAX(B.AMDL) AS AMDL 
             , MAX(DECODE(RANK, 1, A.RES_MODEL, ' ')) AS RES_MODEL_TTL, SUM(DECODE(RANK, 1, A.SHP_MON, 0)) AS SHP_MON_TTL, AVG(DISTINCT DECODE(RANK, 1, A.UPH, NULL)) AS UPH_TTL 
             , MAX(DECODE(RANK, 2, A.RES_MODEL, ' ')) AS RES_MODEL_S1, SUM(DECODE(RANK, 2, A.SHP_MON, 0)) AS SHP_MON_S1, AVG(DISTINCT DECODE(RANK, 2, A.UPH, NULL)) AS UPH_S1 
             , MAX(DECODE(RANK, 3, A.RES_MODEL, ' ')) AS RES_MODEL_S2, SUM(DECODE(RANK, 3, A.SHP_MON, 0)) AS SHP_MON_S2, AVG(DISTINCT DECODE(RANK, 3, A.UPH, NULL)) AS UPH_S2 
             , MAX(DECODE(RANK, 4, A.RES_MODEL, ' ')) AS RES_MODEL_S3, SUM(DECODE(RANK, 4, A.SHP_MON, 0)) AS SHP_MON_S3, AVG(DISTINCT DECODE(RANK, 4, A.UPH, NULL)) AS UPH_S3 
             , MAX(DECODE(RANK, 5, A.RES_MODEL, ' ')) AS RES_MODEL_S4, SUM(DECODE(RANK, 5, A.SHP_MON, 0)) AS SHP_MON_S4, AVG(DISTINCT DECODE(RANK, 5, A.UPH, NULL)) AS UPH_S4 
             , MAX(DECODE(RANK, 6, A.RES_MODEL, ' ')) AS RES_MODEL_S5, SUM(DECODE(RANK, 6, A.SHP_MON, 0)) AS SHP_MON_S5, AVG(DISTINCT DECODE(RANK, 6, A.UPH, NULL)) AS UPH_S5 
          FROM MWIPMATDEF MAT 
             , ( 
                SELECT SHP.MAT_ID, SHP.OPER, SHP.RES_MODEL 
                     , SUM(NVL(SHP.QTY,0)) AS SHP_MON 
                     , SUM(NVL(UPH.UPEH,0)) AS UPH 
                     , ROW_NUMBER() OVER (PARTITION BY SHP.MAT_ID, SHP.OPER ORDER BY SHP.MAT_ID, SHP.OPER, DECODE(SHP.RES_MODEL, '', 1, 2), SUM(NVL(SHP.QTY,0)) DESC, SUM(NVL(UPH.UPEH,0)) DESC ) AS RANK   
                  FROM ( 
                        SELECT RES_MODEL, MAT_ID, OPER, SUM(MES_PROC_QTY) AS QTY 
                          FROM TSM_EQUIP_PROC_RESULT@RPTTOFA 
                         WHERE 1=1 
                           AND WORK_MONTH = '202004' 
                         GROUP BY RES_MODEL, MAT_ID, OPER 
                       ) SHP 
                     , CRASUPHDEF UPH 
                 WHERE 1=1 
                   AND UPH.FACTORY = 'HMVA2' 
                   AND SHP.MAT_ID = UPH.MAT_ID(+) 
                   AND SHP.OPER = UPH.OPER(+) 
                   AND SHP.RES_MODEL = UPH.RES_MODEL(+) 
                   AND SHP.OPER LIKE '%'
                   AND SHP.MAT_ID LIKE '%' 
                 GROUP BY GROUPING SETS ((SHP.MAT_ID, SHP.OPER, SHP.RES_MODEL), (SHP.MAT_ID, SHP.OPER)) 
               ) A 
             , ( 
                SELECT OPER, COUNT(OPER) AS AMDL 
                  FROM ( 
                        SELECT OPER, RES_MODEL 
                          FROM TSM_EQUIP_PROC_RESULT@RPTTOFA 
                         WHERE 1=1 
                           AND WORK_MONTH = '202004' 
                           AND OPER LIKE '%'
                         GROUP BY OPER, RES_MODEL 
                         ORDER BY OPER 
                       ) 
                 GROUP BY OPER 
               ) B 
         WHERE 1=1 
           AND MAT.FACTORY = 'HMVA2' 
           AND MAT.DELETE_FLAG = ' ' 
           AND MAT.MAT_TYPE = 'FG' 
           AND MAT.MAT_ID = A.MAT_ID 
           AND A.OPER = B.OPER(+) 
         GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ', MAT.MAT_CMF_11,  ' ',  ' ', MAT.MAT_GRP_5, A.OPER,  ' ',  ' ',  ' ',  ' ',  ' ' 
         ORDER BY DECODE(MAT.MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ', MAT.MAT_CMF_11,  ' ',  ' ', DECODE(MAT.MAT_GRP_5, '-', 1, '1st', 2, 'Middle', 3, 'Middle1', 4, 'Middle 1', 5, 'Middle2', 6, 'Middle 2', 7, 'Merge', 8), MAT.MAT_GRP_5, A.OPER,  ' ',  ' ',  ' ',  ' ',  ' ' 
       ) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011017'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010805'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, CONV_MAT_ID, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ', MAT_GRP_5 AS TYPE2,  ' ',  ' ',  ' ' 
     , OPER, RES_MODEL
     , ROUND(AVG(UPEH), 1) AS UPEH
     , ROUND(MIN(UPEH), 1) AS MIN_UPEH
     , ROUND(MAX(UPEH), 1) AS MAX_UPEH
     , ROUND(AVG(WPH), 1) AS WPH
  FROM (
        SELECT B.*
             , CASE WHEN B.MAT_GRP_1 = 'HX' THEN B.MAT_CMF_10
                    WHEN B.MAT_ID LIKE 'SEK%' THEN 'SEK_________-___' || SUBSTR(B.MAT_ID, -3)
                    ELSE B.MAT_ID
               END CONV_MAT_ID
             , A.OPER, A.RES_MODEL, A.UPEH
             , A.UPEH / (B.NET_DIE * (NVL(C.DAY_YIELD, 90) / 100)) AS WPH 
          FROM CRASUPHDEF A
             , VWIPMATDEF B
             , (
                SELECT MAT_ID, NET_DIE, DECODE(DAY_YIELD, 0, 90, DAY_YIELD) AS DAY_YIELD
                  FROM RSUMWAFYLD
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
               ) C
         WHERE 1=1
           AND A.FACTORY = B.FACTORY
           AND A.MAT_ID = B.MAT_ID
           AND A.MAT_ID = C.MAT_ID(+)
           AND A.FACTORY = 'HMVA2'
           AND B.DELETE_FLAG = ' '
           AND B.MAT_TYPE = 'FG'
       )
 WHERE 1=1
   AND OPER LIKE '%'
 GROUP BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 
 ORDER BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010805'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC
     , ROUND(AVG(A.UPEH), 0) AS UPEH
     , A.USER_CAPA
     , ROUND(AVG(A.UPOH), 0) AS UPOH
     , A.OP_EFFICE, A.YIELD
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202005' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_0
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202005' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_0
  FROM (
        SELECT KEY_1, KEY_2, KEY_3 AS OPER, DATA_1 AS OPER_DESC, DATA_3 AS USER_CAPA
             , DATA_4 AS OP_EFFICE, DATA_5 AS YIELD
             , B.MAT_GRP_1, B.MAT_GRP_5, B.PKG_CODE
             , AVG(B.UPEH) AS UPEH, AVG(B.UPEH * DATA_3) AS UPOH
             , AVG(CASE WHEN DATA_3 = ' ' OR DATA_4 = ' ' OR DATA_5 = ' ' THEN 0
                        WHEN B.UPEH IS NULL OR B.UPEH = 0 THEN 1000 / (B.OPER_AVG_UPEH * DATA_3 * (DATA_4/100) * (DATA_5/100)) * 1.15
                        ELSE 1000 / (B.UPEH * DATA_3 * (DATA_4/100) * (DATA_5/100)) * 1.15
                   END) AS K_TIME
             , AVG(B.OPER_AVG_UPEH) AS OPER_AVG_UPEH
          FROM MGCMTBLDAT A
             , (
                SELECT A.FACTORY, A.MAT_ID, A.OPER, A.UPEH, B.MAT_GRP_1, B.MAT_GRP_5, B.MAT_CMF_11
                     , CASE WHEN B.MAT_GRP_1 = 'HX' THEN B.MAT_ID ELSE B.MAT_CMF_11 END AS PKG_CODE
                     , AVG(A.UPEH) OVER(PARTITION BY A.OPER) AS OPER_AVG_UPEH
                  FROM CRASUPHDEF A
                     , MWIPMATDEF B
                 WHERE 1=1
                   AND A.FACTORY = B.FACTORY
                   AND A.MAT_ID = B.MAT_ID
                   AND A.FACTORY = 'HMVA2'
                   AND B.DELETE_FLAG = ' '
                   AND B.MAT_TYPE = 'FG'
               ) B
         WHERE 1=1
           AND A.FACTORY = B.FACTORY(+)
           AND A.KEY_3 = B.OPER(+)
           AND A.FACTORY = 'HMVA2'
           AND A.TABLE_NAME = 'H_RPT_HUMAN'
           AND A.DATA_2 = 'Y'
         GROUP BY KEY_1, KEY_2, KEY_3, DATA_1, DATA_3, DATA_4, DATA_5, B.MAT_GRP_1, B.MAT_GRP_5, PKG_CODE
       ) A
     , (
        SELECT PLAN_DATE, PKG_CODE, OPER, MAT_GRP_1, MAT_GRP_5, WORK_DAY
             , SUM(PLAN_QTY) AS PLAN_QTY
          FROM (
                SELECT B.PLAN_DATE, B.MAT_KEY, B.MAT_ID, C.OPER, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                     , CASE WHEN A.MAT_GRP_1 = 'HX' THEN A.MAT_ID ELSE A.MAT_CMF_11 END AS PKG_CODE
                     , MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, FIRST_FLOW
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX
                     , CASE WHEN MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                            ELSE SUBSTR(MAT_GRP_4, 3) 
                       END AS STACK
                     , TO_CHAR(LAST_DAY(TO_DATE(B.PLAN_DATE, 'YYYYMM')), 'DD') AS WORK_DAY
                  FROM VWIPMATDEF A
                     , (
                        SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                             , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                             , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                             , A.RESV_FIELD1 / 1000 AS PLAN_QTY
                          FROM CWIPPLNMON A
                             , RWIPMCPBOM B
                         WHERE 1=1   
                           AND A.FACTORY = B.FACTORY(+)
                           AND A.MAT_ID = B.MCP_TO_PART(+)
                           AND A.FACTORY = 'HMVA2' 
                           AND A.PLAN_MONTH BETWEEN '202005' AND '202005'
                           AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0  
                       ) B 
                     , (
                        SELECT DISTINCT SUBSTR(PLNNR, 1, 4) AS FLOW, KTSCH AS OPER
                          FROM ZHPPT120@SAPREAL
                         WHERE 1=1
                           AND ARBPL != 'DUMMY'
                       ) C   
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID
                   AND A.FIRST_FLOW = C.FLOW(+)
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' ' 
               )
         GROUP BY PLAN_DATE, PKG_CODE, OPER, MAT_GRP_1, MAT_GRP_5, WORK_DAY
       ) B
 WHERE 1=1
   AND A.PKG_CODE = B.PKG_CODE
   AND A.OPER = B.OPER
   AND A.MAT_GRP_1 = B.MAT_GRP_1
   AND A.MAT_GRP_5 = B.MAT_GRP_5
GROUP BY A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC, A.USER_CAPA, A.OP_EFFICE, A.YIELD
ORDER BY A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC, A.USER_CAPA, A.OP_EFFICE, A.YIELD

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , ROUND(SUM(TOTAL)/2, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200513', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200512' AND '20200513' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , ROUND(SUM(TOTAL)/10, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200504', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200505', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200506', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200507', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200508', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200509', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200510', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200511', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200513', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200504' AND '20200513' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC
     , ROUND(AVG(A.UPEH), 0) AS UPEH
     , A.USER_CAPA
     , ROUND(AVG(A.UPOH), 0) AS UPOH
     , A.OP_EFFICE, A.YIELD
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202003' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_0
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202003' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_0
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202004' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_1
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202004' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_1
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202005' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_2
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202005' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_2
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202006' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_3
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202006' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_3
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202007' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_4
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202007' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_4
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202008' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_5
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202008' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_5
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202009' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_6
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202009' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_6
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202010' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_7
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202010' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_7
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202011' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_8
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202011' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_8
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202012' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_9
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202012' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_9
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202101' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_10
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202101' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_10
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202102' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_11
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202102' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_11
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202103' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_12
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202103' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_12
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202104' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_13
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202104' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_13
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202105' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_14
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202105' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_14
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202106' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_15
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202106' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_15
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202107' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_16
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202107' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_16
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202108' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_17
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202108' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_17
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202109' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_18
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202109' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_18
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202110' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_19
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202110' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_19
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202111' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_20
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202111' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_20
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202112' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_21
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202112' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_21
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202201' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_22
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202201' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_22
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202202' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_23
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202202' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_23
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202203' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_24
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202203' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_24
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202204' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_25
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202204' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_25
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202205' THEN A.K_TIME * B.PLAN_QTY ELSE 0 END), 2) AS HUMAN_TIME_26
     , ROUND(SUM(CASE WHEN B.PLAN_DATE = '202205' THEN (A.K_TIME * B.PLAN_QTY) / B.WORK_DAY / 24 * 3 ELSE 0 END), 2) AS HUMAN_NEED_26
  FROM (
        SELECT KEY_1, KEY_2, KEY_3 AS OPER, DATA_1 AS OPER_DESC, DATA_3 AS USER_CAPA
             , DATA_4 AS OP_EFFICE, DATA_5 AS YIELD
             , B.MAT_GRP_1, B.MAT_GRP_5, B.PKG_CODE
             , AVG(B.UPEH) AS UPEH, AVG(B.UPEH * DATA_3) AS UPOH
             , AVG(CASE WHEN DATA_3 = ' ' OR DATA_4 = ' ' OR DATA_5 = ' ' THEN 0
                        WHEN B.UPEH IS NULL OR B.UPEH = 0 THEN 1000 / (B.OPER_AVG_UPEH * DATA_3 * (DATA_4/100) * (DATA_5/100)) * 1.15
                        ELSE 1000 / (B.UPEH * DATA_3 * (DATA_4/100) * (DATA_5/100)) * 1.15
                   END) AS K_TIME
             , AVG(B.OPER_AVG_UPEH) AS OPER_AVG_UPEH
          FROM MGCMTBLDAT A
             , (
                SELECT A.FACTORY, A.MAT_ID, A.OPER, A.UPEH, B.MAT_GRP_1, B.MAT_GRP_5, B.MAT_CMF_11
                     , CASE WHEN B.MAT_GRP_1 = 'HX' THEN B.MAT_ID ELSE B.MAT_CMF_11 END AS PKG_CODE
                     , AVG(A.UPEH) OVER(PARTITION BY A.OPER) AS OPER_AVG_UPEH
                  FROM CRASUPHDEF A
                     , MWIPMATDEF B
                 WHERE 1=1
                   AND A.FACTORY = B.FACTORY
                   AND A.MAT_ID = B.MAT_ID
                   AND A.FACTORY = 'HMVA2'
                   AND B.DELETE_FLAG = ' '
                   AND B.MAT_TYPE = 'FG'
               ) B
         WHERE 1=1
           AND A.FACTORY = B.FACTORY(+)
           AND A.KEY_3 = B.OPER(+)
           AND A.FACTORY = 'HMVA2'
           AND A.TABLE_NAME = 'H_RPT_HUMAN'
           AND A.DATA_2 = 'Y'
         GROUP BY KEY_1, KEY_2, KEY_3, DATA_1, DATA_3, DATA_4, DATA_5, B.MAT_GRP_1, B.MAT_GRP_5, PKG_CODE
       ) A
     , (
        SELECT PLAN_DATE, PKG_CODE, OPER, MAT_GRP_1, MAT_GRP_5, WORK_DAY
             , SUM(PLAN_QTY) AS PLAN_QTY
          FROM (
                SELECT B.PLAN_DATE, B.MAT_KEY, B.MAT_ID, C.OPER, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                     , CASE WHEN A.MAT_GRP_1 = 'HX' THEN A.MAT_ID ELSE A.MAT_CMF_11 END AS PKG_CODE
                     , MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, FIRST_FLOW
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX
                     , CASE WHEN MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                            ELSE SUBSTR(MAT_GRP_4, 3) 
                       END AS STACK
                     , TO_CHAR(LAST_DAY(TO_DATE(B.PLAN_DATE, 'YYYYMM')), 'DD') AS WORK_DAY
                  FROM VWIPMATDEF A
                     , (
                        SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                             , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                             , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                             , A.RESV_FIELD1 / 1000 AS PLAN_QTY
                          FROM CWIPPLNMON A
                             , RWIPMCPBOM B
                         WHERE 1=1   
                           AND A.FACTORY = B.FACTORY(+)
                           AND A.MAT_ID = B.MCP_TO_PART(+)
                           AND A.FACTORY = 'HMVA2' 
                           AND A.PLAN_MONTH BETWEEN '202003' AND '202205'
                           AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0  
                       ) B 
                     , (
                        SELECT DISTINCT SUBSTR(PLNNR, 1, 4) AS FLOW, KTSCH AS OPER
                          FROM ZHPPT120@SAPREAL
                         WHERE 1=1
                           AND ARBPL != 'DUMMY'
                       ) C   
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID
                   AND A.FIRST_FLOW = C.FLOW(+)
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' ' 
               )
         GROUP BY PLAN_DATE, PKG_CODE, OPER, MAT_GRP_1, MAT_GRP_5, WORK_DAY
       ) B
 WHERE 1=1
   AND A.PKG_CODE = B.PKG_CODE
   AND A.OPER = B.OPER
   AND A.MAT_GRP_1 = B.MAT_GRP_1
   AND A.MAT_GRP_5 = B.MAT_GRP_5
GROUP BY A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC, A.USER_CAPA, A.OP_EFFICE, A.YIELD
ORDER BY A.KEY_1, A.KEY_2, A.OPER, A.OPER_DESC, A.USER_CAPA, A.OP_EFFICE, A.YIELD

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011017'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, CONV_MAT_ID, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ', MAT_GRP_5 AS TYPE2,  ' ',  ' ',  ' ' 
     , OPER, RES_MODEL
     , ROUND(AVG(UPEH), 1) AS UPEH
     , ROUND(MIN(UPEH), 1) AS MIN_UPEH
     , ROUND(MAX(UPEH), 1) AS MAX_UPEH
     , ROUND(AVG(WPH), 1) AS WPH
  FROM (
        SELECT B.*
             , CASE WHEN B.MAT_GRP_1 = 'HX' THEN B.MAT_CMF_10
                    WHEN B.MAT_ID LIKE 'SEK%' THEN 'SEK_________-___' || SUBSTR(B.MAT_ID, -3)
                    ELSE B.MAT_ID
               END CONV_MAT_ID
             , A.OPER, A.RES_MODEL, A.UPEH
             , A.UPEH / (B.NET_DIE * (NVL(C.DAY_YIELD, 90) / 100)) AS WPH 
          FROM CRASUPHDEF A
             , VWIPMATDEF B
             , (
                SELECT MAT_ID, NET_DIE, DECODE(DAY_YIELD, 0, 90, DAY_YIELD) AS DAY_YIELD
                  FROM RSUMWAFYLD
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
               ) C
         WHERE 1=1
           AND A.FACTORY = B.FACTORY
           AND A.MAT_ID = B.MAT_ID
           AND A.MAT_ID = C.MAT_ID(+)
           AND A.FACTORY = 'HMVA2'
           AND B.DELETE_FLAG = ' '
           AND B.MAT_TYPE = 'FG'
       )
 WHERE 1=1
   AND OPER LIKE '%'
 GROUP BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 
 ORDER BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_DATE AS Code, '' AS Data
  FROM ( 
        SELECT TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS PLAN_DATE 
             , ROW_NUMBER() OVER(ORDER BY PDATE DESC) AS RK 
          FROM ZHMMT200@SAPREAL 
         WHERE 1=1 
           AND PDATE > TO_CHAR(ADD_MONTHS(SYSDATE,-1), 'YYYYMMDD') 
           AND TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'DY') IN ('월','목') 
         GROUP BY PDATE 
       ) 
 WHERE RK <= 4 
 ORDER BY PLAN_DATE DESC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1 AS Code, DATA_1 AS Data 
  FROM MGCMTBLDAT 
 WHERE FACTORY = 'HMVA2' 
   AND TABLE_NAME = 'MATERIAL_TYPE' 
   AND KEY_1 IN ('TE','PB','LF') 
 ORDER BY KEY_1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_DATE AS Code, '' AS Data
  FROM ( 
        SELECT TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS PLAN_DATE 
             , ROW_NUMBER() OVER(ORDER BY PDATE DESC) AS RK 
          FROM ZHMMT200@SAPREAL 
         WHERE 1=1 
           AND PDATE > TO_CHAR(ADD_MONTHS(SYSDATE,-1), 'YYYYMMDD') 
           AND TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'DY') IN ('월','목') 
         GROUP BY PDATE 
       ) 
 WHERE RK <= 4 
 ORDER BY PLAN_DATE DESC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200513')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200513', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070402'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200225')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200225', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200225', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200225', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200225', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200225'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200321')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200321', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200321', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200321', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200321', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200321'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1 Code, DATA_1 Data
  FROM MGCMTBLDAT
 WHERE 1=1 
   AND FACTORY = 'HMVA2' 
   AND TABLE_NAME = 'MATERIAL_TYPE' 
   AND DATA_2 = 'Y' 
 ORDER BY KEY_1 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200401')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200401', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
       , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
       , MAT_L, MAT_INV_QTY, SAFTY_WARNING, MAT_NEED, MAT_FORECAST_DAY, DELIVERY_WEEK, MAT_ORDER_QTY, ORDER_WARNING 
       , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
  FROM (SELECT MAT_ID,  ' ', MAT_TYPE, MATCODE, MAT_DESC, MAT_OPER, OPER, UNIT_QTY
             , REMAIN_W0, REMAIN_W1, REMAIN_W2, REMAIN_W3, REMAIN_W4, REMAIN_W5 
             , MAT_L, MAT_INV_QTY 
             , CASE WHEN MAT_TYPE = 'PB' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN MAT_TYPE = 'RC' AND DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_TTL THEN 'Y' 
                    WHEN DECODE(DELIVERY_DATE, 0, 4, DELIVERY_DATE) * MAT_NEED * 0.5 > MAT_INV_QTY THEN 'Y' 
                    ELSE 'N' 
               END SAFTY_WARNING 
             , MAT_NEED, MAT_FORECAST_DAY 
             , CEIL(DELIVERY_DATE / 7) || 'W' AS DELIVERY_WEEK 
             , MAT_ORDER_QTY 
             , CASE WHEN CEIL(DELIVERY_DATE / 7) = 0 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 1 AND SHORTAGE_W1 < 0 AND ABS(SHORTAGE_W1) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 2 AND SHORTAGE_W2 < 0 AND ABS(SHORTAGE_W2) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 3 AND SHORTAGE_W3 < 0 AND ABS(SHORTAGE_W3) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 4 AND SHORTAGE_W4 < 0 AND ABS(SHORTAGE_W4) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 5 AND SHORTAGE_W5 < 0 AND ABS(SHORTAGE_W5) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 6 AND SHORTAGE_W6 < 0 AND ABS(SHORTAGE_W6) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 7 AND SHORTAGE_W7 < 0 AND ABS(SHORTAGE_W7) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 8 AND SHORTAGE_W8 < 0 AND ABS(SHORTAGE_W8) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 9 AND SHORTAGE_W9 < 0 AND ABS(SHORTAGE_W9) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 10 AND SHORTAGE_W10 < 0 AND ABS(SHORTAGE_W10) > MAT_ORDER_QTY THEN 'Y' 
                    WHEN CEIL(DELIVERY_DATE / 7) = 11 AND SHORTAGE_W11 < 0 AND ABS(SHORTAGE_W11) > MAT_ORDER_QTY THEN 'Y' 
                    ELSE 'N' 
               END ORDER_WARNING  
             , SHORTAGE_W0, SHORTAGE_W1, SHORTAGE_W2, SHORTAGE_W3, SHORTAGE_W4, SHORTAGE_W5 
         FROM (SELECT A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, MAX(UNIT_QTY) AS UNIT_QTY
                   , SUM(ROUND(REMAIN_W0,0)) AS REMAIN_W0 
                   , SUM(ROUND(REMAIN_W1,0)) AS REMAIN_W1 
                   , SUM(ROUND(REMAIN_W2,0)) AS REMAIN_W2 
                   , SUM(ROUND(REMAIN_W3,0)) AS REMAIN_W3 
                   , SUM(ROUND(REMAIN_W4,0)) AS REMAIN_W4 
                   , SUM(ROUND(REMAIN_W5,0)) AS REMAIN_W5 
                   , MAX(TRUNC(MAT_SMT_IN + MAT_L_IN + MAT_WIK_WIP + MAT_INV_L_QTY)) AS MAT_L
                   , MAX(TRUNC(MAT_INV_QTY)) AS MAT_INV_QTY
                   , MAX(TRUNC(MAT_TTL)) AS MAT_TTL
                   , SUM(TRUNC(MAT_NEED)) AS MAT_NEED
                   , TO_CHAR(CASE WHEN SUM(TRUNC(MAT_NEED)) = 0 THEN TO_DATE('20200401', 'YYYYMMDD')
                                  WHEN (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) >= 60 THEN TO_DATE('20200401', 'YYYYMMDD') + 60
                                  ELSE (MAX(TRUNC(MAT_TTL)) / SUM(TRUNC(MAT_NEED))) + TO_DATE('20200401', 'YYYYMMDD')
                             END, 'YY/MM/DD') MAT_FORECAST_DAY
                   , MAX(TRUNC(MAT_ORDER_QTY)) AS MAT_ORDER_QTY
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0,0)) AS SHORTAGE_W0
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1,0)) AS SHORTAGE_W1
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2,0)) AS SHORTAGE_W2
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3,0)) AS SHORTAGE_W3
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4,0)) AS SHORTAGE_W4
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5,0)) AS SHORTAGE_W5
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6,0)) AS SHORTAGE_W6
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7,0)) AS SHORTAGE_W7
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8,0)) AS SHORTAGE_W8
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9,0)) AS SHORTAGE_W9
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10,0)) AS SHORTAGE_W10
                   , MAX(TRUNC(MAT_TTL)) - SUM(ROUND(REMAIN_W0 + REMAIN_W1 + REMAIN_W2 + REMAIN_W3 + REMAIN_W4 + REMAIN_W5 + REMAIN_W6 + REMAIN_W7 + REMAIN_W8 + REMAIN_W9 + REMAIN_W10 + REMAIN_W11,0)) AS SHORTAGE_W11
                   , MAX(NVL(A.DELIVERY_DATE, 0)) AS DELIVERY_DATE
                FROM RSUMMATMRP A 
                   , MWIPMATDEF B 
               WHERE 1=1 
                 AND A.FACTORY = B.FACTORY 
                 AND A.MAT_ID = B.MAT_ID 
                 AND A.WORK_DATE = '20200401'
            GROUP BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1
            ORDER BY A.MAT_ID,  ' ', A.MAT_TYPE, A.MATCODE, A.MAT_DESC, A.MAT_OPER, A.OPER, 1)) 
 WHERE 1 = 1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200513')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200513', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010204'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200513')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200513', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200513','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , A.MON_PLAN AS "월계획"
     , 0 AS "월계획Rev"
     , 0 AS "월계획 차이"
     , A.TARGET_MON, A.ASSY_MON
     , DECODE(A.MON_PLAN, 0, 0, ROUND((A.ASSY_MON/A.MON_PLAN)*100, 1)) JINDO, A.DEF, WEEK_PLAN, ASSY_WEEK, WEEK_PLAN-ASSY_WEEK AS "주계획 차이"
     , A.HMK3A, A.FINISH, A.MOLD, A.WB_AFTER, A.DA + A.WB_BEFORE, A.SAW, A.STOCK, A.HMK3A+A.FINISH+A.MOLD+A.WB_AFTER+A.WB_BEFORE+A.DA+A.SAW+A.STOCK AS TTL, A.TARGET_DAY AS "일목표", A.AO0, A.AO1, A.AO2
     , A.RCV0, A.RCV1, A.RCV2, A.SW0, A.SW1, A.SW2, A.DA0, A.DA1, A.DA2, A.WB0, A.WB1, A.WB2, A.MD0, A.MD1, A.MD2, A.TF0, A.TF1, A.TF2 
     , ROUND(B.TAT1*24,2)
     , CASE WHEN HIST_AO > 0 THEN '●' END AS HIST_AO
  FROM ( 
        SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS MAJOR, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
             , SUM(NVL(A.MON_PLAN,0)) AS MON_PLAN 
             , SUM(NVL(A.ORI_PLAN,0)) AS ORI_PLAN 
             , SUM(NVL(A.WEEK_PLAN,0)) AS WEEK_PLAN 
             , SUM(NVL(A.ASSY_WEEK,0)) AS ASSY_WEEK 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) * 41.9) / 100),0) AS TARGET_MON 
             , SUM(NVL(A.ASSY_MON,0)) AS ASSY_MON 
             , SUM(NVL(A.ASSY_MON,0)) - ROUND(((SUM(NVL(A.MON_PLAN,0)) * 41.9) / 100),1) AS DEF   
             , SUM(NVL(A.AO0,0)) AS AO0 
             , SUM(NVL(A.AO1,0)) AS AO1 
             , SUM(NVL(A.AO2,0)) AS AO2 
             , ROUND(((SUM(NVL(A.MON_PLAN,0)) - SUM(NVL(A.ASSY_MON,0))) /19), 1) AS TARGET_DAY 
             , SUM(NVL(A.RCV0,0)) AS RCV0
             , SUM(NVL(A.RCV1,0)) AS RCV1
             , SUM(NVL(A.RCV2,0)) AS RCV2
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW0 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW0 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT) ELSE 0 END 
                                   ELSE D.SW0 / DECODE(A.MAT_GRP_1,'HX',1, COMP_CNT)
                              END),0)
                    ),0) AS SW0
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW1 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW1 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW1 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW1
             , ROUND(SUM(NVL((CASE WHEN A.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(A.MAT_GRP_5, '2nd', D.SW2 / COMP_CNT, 0)
                                   WHEN A.MAT_GRP_3 IN ('COB', 'BGN') THEN D.SW2 / NET_DIE
                                   WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT) ELSE 0 END 
                                   ELSE D.SW2 / DECODE(A.MAT_GRP_1,'HX',1,COMP_CNT)
                              END),0)
                    ),0) AS SW2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA02,0) + NVL(D.DA03,0) + NVL(D.DA04,0) + NVL(D.DA05,0) + NVL(D.DA06,0) + NVL(D.DA07,0) + NVL(D.DA08,0) + NVL(D.DA09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA02, '3', D.DA03, '4', D.DA04, '5', D.DA05, '6', D.DA06, '7', D.DA07, '8', D.DA08, '9', D.DA09, 0)
                             ELSE D.DA0
                        END),0)
                   ) AS DA0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA12,0) + NVL(D.DA13,0) + NVL(D.DA14,0) + NVL(D.DA15,0) + NVL(D.DA16,0) + NVL(D.DA17,0) + NVL(D.DA18,0) + NVL(D.DA19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA12, '3', D.DA13, '4', D.DA14, '5', D.DA15, '6', D.DA16, '7', D.DA17, '8', D.DA18, '9', D.DA19, 0)
                             ELSE D.DA1
                        END),0)
                   ) AS DA1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.DA22,0) + NVL(D.DA23,0) + NVL(D.DA24,0) + NVL(D.DA25,0) + NVL(D.DA26,0) + NVL(D.DA27,0) + NVL(D.DA28,0) + NVL(D.DA29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.DA22, '3', D.DA23, '4', D.DA24, '5', D.DA25, '6', D.DA26, '7', D.DA27, '8', D.DA28, '9', D.DA29, 0)
                             ELSE D.DA2
                        END),0)
                   ) AS DA2
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB02,0) + NVL(D.WB03,0) + NVL(D.WB04,0) + NVL(D.WB05,0) + NVL(D.WB06,0) + NVL(D.WB07,0) + NVL(D.WB08,0) + NVL(D.WB09,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB02, '3', D.WB03, '4', D.WB04, '5', D.WB05, '6', D.WB06, '7', D.WB07, '8', D.WB08, '9', D.WB09, 0)
                             ELSE D.WB0
                        END),0)
                   ) AS WB0
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB12,0) + NVL(D.WB13,0) + NVL(D.WB14,0) + NVL(D.WB15,0) + NVL(D.WB16,0) + NVL(D.WB17,0) + NVL(D.WB18,0) + NVL(D.WB19,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB12, '3', D.WB13, '4', D.WB14, '5', D.WB15, '6', D.WB16, '7', D.WB17, '8', D.WB18, '9', D.WB19, 0)
                             ELSE D.WB1
                        END),0)
                   ) AS WB1
             , SUM(NVL((CASE WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' AND A.MAT_GRP_5 <> '-' THEN (CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(D.WB22,0) + NVL(D.WB23,0) + NVL(D.WB24,0) + NVL(D.WB25,0) + NVL(D.WB26,0) + NVL(D.WB27,0) + NVL(D.WB28,0) + NVL(D.WB29,0) ELSE 0 END)
                             WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', D.WB22, '3', D.WB23, '4', D.WB24, '5', D.WB25, '6', D.WB26, '7', D.WB27, '8', D.WB28, '9', D.WB29, 0)
                             ELSE D.WB2
                        END),0)
                   ) AS WB2
             , SUM(NVL(D.MD0,0)) AS MD0, SUM(NVL(D.MD1,0)) AS MD1, SUM(NVL(D.MD2,0)) AS MD2 
             , SUM(NVL(D.TF0,0)) AS TF0, SUM(NVL(D.TF1,0)) AS TF1, SUM(NVL(D.TF2,0)) AS TF2 
             , SUM(NVL(F.V0,0)) AS STOCK
             , SUM(NVL(F.V1,0)+NVL(F.V2,0)) AS SAW
             , SUM(NVL(F.V3,0)+NVL(F.V4,0)+NVL(F.V17,0)) AS DA
             , SUM(NVL((CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 = '1st' OR MAT_GRP_5 LIKE 'Middle%' THEN NVL(F.V5+F.V16,0) ELSE 0 END
                             ELSE 0
                        END),0)
                    ) AS WB_BEFORE
             , SUM(NVL((CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN A.MAT_GRP_5 = 'Merge' THEN NVL(F.V5+F.V16,0) ELSE 0 END
                             ELSE NVL(F.V5+F.V16,0)
                        END),0)
                    ) AS WB_AFTER
             , SUM(NVL(F.V6,0)+NVL(F.V7,0)) AS MOLD
             , SUM(NVL(F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14,0)) AS FINISH
             , SUM(NVL(F.V15,0)) AS HMK3A
             , SUM(NVL(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17,0)) AS TTL
             , SUM(HIST_AO) AS HIST_AO 
          FROM ( 
                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8 
                     , DECODE(MAT.MAT_GRP_1,'SE',MAT.MAT_GRP_9,' ') AS MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT  
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.PLAN_QTY_ASSY / MAT.NET_DIE),0)
                            ELSE SUM(PLAN.PLAN_QTY_ASSY)
                       END MON_PLAN
                     , 0 AS ORI_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(WEEK_PLAN.WEEK_PLAN / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_PLAN.WEEK_PLAN)
                            END WEEK_PLAN
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(WEEK_AO.WEEK_AO / MAT.NET_DIE),0)
                            ELSE SUM(WEEK_AO.WEEK_AO)
                            END ASSY_WEEK
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.ASSY_MON / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.ASSY_MON)
                       END ASSY_MON
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO0 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO0)
                       END AO0
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO1 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO1)
                       END AO1
                     , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.AO2 / MAT.NET_DIE),0)
                            ELSE SUM(MON_AO.AO2)
                       END AO2
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV0 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV0 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV0 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV0 / MAT.COMP_CNT)
                             END, 0) AS RCV0
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV1 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV1 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV1 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV1 / MAT.COMP_CNT)
                             END, 0) AS RCV1
                     , ROUND(CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(DAY_RCV.RCV2 / MAT.NET_DIE),0)
                                  WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') THEN DECODE(MAT.MAT_GRP_5, '2nd', SUM(DAY_RCV.RCV2 / MAT.COMP_CNT), 0)
                                  WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN SUM(DAY_RCV.RCV2 / MAT.COMP_CNT) ELSE 0 END 
                                  ELSE SUM(DAY_RCV.RCV2 / MAT.COMP_CNT)
                             END, 0) AS RCV2
                     , SUM(HIST_AO.HIST_AO) AS HIST_AO 
                  FROM VWIPMATDEF MAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                          FROM ( 
                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                  FROM ( 
                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                          FROM CWIPPLNMON 
                                         WHERE 1=1 
                                           AND FACTORY = 'HMVA2' 
                                         GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                       ) 
                                 GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                               ) 
                       ) PLAN 
                     , ( 
                        SELECT FACTORY,MAT_ID, SUM(WW_QTY) AS WEEK_PLAN 
                          FROM RWIPPLNWEK 
                         WHERE FACTORY = 'HMVA2' 
                           AND PLAN_WEEK = '202020'
                           AND GUBUN = '3' 
                        GROUP BY FACTORY,MAT_ID 
                       ) WEEK_PLAN 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(AO0) AS AO0 
                             , SUM(AO1) AS AO1 
                             , SUM(AO2) AS AO2 
                             , SUM(ASSY_MON) AS ASSY_MON 
                          FROM (
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200511', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO0 
                                     , SUM(DECODE(WORK_DATE,'20200512', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO1
                                     , SUM(DECODE(WORK_DATE,'20200513', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS AO2
                                     , 0 AS ASSY_MON  
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200511' AND '20200513'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                                 UNION ALL 
                                SELECT MAT_ID 
                                     , 0, 0, 0 
                                     , SUM(SHP_QTY_1) AS ASSY_MON 
                                  FROM VSUMWIPOUT 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200501' AND '20200513'
                                   AND FACTORY = 'HMVA2' 
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID 
                       ) MON_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS WEEK_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200509' AND '20200513'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) WEEK_AO 
                     , ( 
                        SELECT MAT_ID 
                             , SUM(DECODE(WORK_DATE,'20200511', NVL(RCV_QTY_1,0), 0)) AS RCV0
                             , SUM(DECODE(WORK_DATE,'20200512', NVL(RCV_QTY_1,0), 0)) AS RCV1
                             , SUM(DECODE(WORK_DATE,'20200513', NVL(RCV_QTY_1,0), 0)) AS RCV2
                          FROM VSUMWIPRCV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN '20200511' AND '20200513'
                           AND LOT_TYPE = 'W' 
                           AND FACTORY = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                         GROUP BY MAT_ID 
                       ) DAY_RCV  
                     , ( 
                        SELECT MAT_ID 
                             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS HIST_AO  
                          FROM RSUMFACMOV 
                         WHERE 1=1 
                           AND WORK_DATE BETWEEN TO_CHAR(ADD_MONTHS('20200513', -6), 'YYYYMMDD') AND '20200513'
                           AND LOT_TYPE = 'W' 
                           AND CM_KEY_1 = 'HMVA2' 
                           AND CM_KEY_2 = 'PROD' 
                           AND CM_KEY_3 LIKE 'P%'
                           AND FACTORY NOT IN ('RETURN') 
                         GROUP BY MAT_ID 
                       ) HIST_AO 
                 WHERE 1 = 1 
                   AND MAT.FACTORY =PLAN.FACTORY(+) 
                   AND MAT.FACTORY =WEEK_PLAN.FACTORY(+) 
                   AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_PLAN.MAT_ID(+) 
                   AND MAT.MAT_ID = MON_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = WEEK_AO.MAT_ID(+) 
                   AND MAT.MAT_ID = DAY_RCV.MAT_ID(+) 
                   AND MAT.MAT_ID = HIST_AO.MAT_ID(+) 
                   AND MAT.FACTORY = 'HMVA2' 
                   AND PLAN.PLAN_MONTH(+) = '202005' 
                   AND MAT.MAT_TYPE= 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.NET_DIE, MAT.MAT_CMF_11, MAT.COMP_CNT
               ) A  
             , ( 
                SELECT MAT_ID 
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200511', QTY,0))) AS SW0
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200512', QTY,0))) AS SW1
                     , SUM(DECODE(OPER, 'A0200', DECODE(WORK_DATE,'20200513', QTY,0))) AS SW2
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA0
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA1
                     , SUM(DECODE(OPER_GRP_7, 'D/A', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA2
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB0
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB1
                     , SUM(DECODE(OPER_GRP_7, 'W/B', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB2
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200511', QTY,0))) AS MD0
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200512', QTY,0))) AS MD1
                     , SUM(DECODE(OPER_GRP_7, 'MOLD', DECODE(WORK_DATE,'20200513', QTY,0))) AS MD2
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200511', QTY,0))) AS TF0
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200512', QTY,0))) AS TF1
                     , SUM(DECODE(OPER_GRP_7, 'SIG', DECODE(WORK_DATE,'20200513', QTY,0))) AS TF2
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA02
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA12
                     , SUM(DECODE(OPER, 'A0402', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA22
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA03
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA13
                     , SUM(DECODE(OPER, 'A0403', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA23
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA04
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA14
                     , SUM(DECODE(OPER, 'A0404', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA24
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA05
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA15
                     , SUM(DECODE(OPER, 'A0405', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA25
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA06
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA16
                     , SUM(DECODE(OPER, 'A0406', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA26
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA07
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA17
                     , SUM(DECODE(OPER, 'A0407', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA27
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA08
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA18
                     , SUM(DECODE(OPER, 'A0408', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA28
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200511', QTY,0))) AS DA09
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200512', QTY,0))) AS DA19
                     , SUM(DECODE(OPER, 'A0409', DECODE(WORK_DATE,'20200513', QTY,0))) AS DA29
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB02
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB12
                     , SUM(DECODE(OPER, 'A0602', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB22
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB03
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB13
                     , SUM(DECODE(OPER, 'A0603', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB23
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB04
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB14
                     , SUM(DECODE(OPER, 'A0604', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB24
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB05
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB15
                     , SUM(DECODE(OPER, 'A0605', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB25 
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB06
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB16
                     , SUM(DECODE(OPER, 'A0606', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB26 
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB07
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB17
                     , SUM(DECODE(OPER, 'A0607', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB27 
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB08
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB18
                     , SUM(DECODE(OPER, 'A0608', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB28 
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200511', QTY,0))) AS WB09
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200512', QTY,0))) AS WB19
                     , SUM(DECODE(OPER, 'A0609', DECODE(WORK_DATE,'20200513', QTY,0))) AS WB29 
                  FROM ( 
                        SELECT A.MAT_ID,A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                             , SUM(A.S1_END_QTY_1 + A.S2_END_QTY_1 + A.S3_END_QTY_1 + A.S1_END_RWK_QTY_1 + A.S2_END_RWK_QTY_1 + A.S3_END_RWK_QTY_1 ) AS QTY 
                          FROM RSUMWIPMOV A 
                             , MWIPOPRDEF B 
                         WHERE 1=1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.OPER = B.OPER 
                           AND A.FACTORY = 'HMVA2' 
                           AND B.OPER_GRP_7 IN ('SAW','D/A','W/B','MOLD','SIG','V/I') 
                           AND A.MAT_VER = 1 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND A.WORK_DATE BETWEEN '20200511' AND '20200513'
                           AND A.LOT_TYPE = 'W'
                           AND A.OPER <> 'A1760'
                         GROUP BY A.MAT_ID, A.WORK_DATE,B.OPER,B.OPER_GRP_7 
                       ) 
                 GROUP BY MAT_ID 
               ) D  
             , ( 
                SELECT MAT_ID 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)), 0) AS V0 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)), 0) AS V1 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)), 0) AS V2 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)), 0) AS V3 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)), 0) AS V4 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)), 0) AS V5 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)), 0) AS V6 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)), 0) AS V7 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)), 0) AS V8 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)), 0) AS V9 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)), 0) AS V10 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)), 0) AS V11 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)), 0) AS V12 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)), 0) AS V13 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)), 0) AS V14 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)), 0) AS V15 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)), 0) AS V16 
                     , ROUND(SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)), 0) AS V17 
                  FROM (  
                        SELECT MAT_ID, OPER, OPER_GRP_1 
                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM ( 
                                SELECT A.MAT_ID, B.OPER, C.MAT_GRP_1  
                                     , CASE WHEN C.MAT_GRP_3 IN ('FCBGA', 'FCFBGA') AND B.OPER = 'A0800' THEN 'D/A' ELSE B.OPER_GRP_1 END OPER_GRP_1  
                                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN QTY_1/NET_DIE ELSE QTY_1 END AS QTY_1
                                     , COMP_CNT  
                                     , HX_COMP_MIN, HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C 
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.FACTORY = C.FACTORY 
                                   AND A.OPER = B.OPER 
                                   AND A.MAT_ID = C.MAT_ID 
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.DELETE_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                                   AND REGEXP_LIKE(C.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                                   AND A.LOT_CMF_5 LIKE 'P%'
                               ) 
                       )  
                 GROUP BY MAT_ID 
               ) F 
         WHERE 1 = 1 
           AND A.MAT_ID = D.MAT_ID(+)
           AND A.MAT_ID = F.MAT_ID(+)
           AND A.MAT_ID LIKE '%' 
         GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
        HAVING (
                NVL(SUM(A.MON_PLAN), 0)+ 
                NVL(SUM(A.ORI_PLAN), 0)+ 
                NVL(SUM(A.ASSY_MON), 0)+ 
                NVL(SUM(A.WEEK_PLAN), 0)+ 
                NVL(SUM(A.AO0), 0)+ NVL(SUM(A.AO1), 0)+ NVL(SUM(A.AO2), 0)+ 
                NVL(SUM(A.RCV0), 0)+ NVL(SUM(A.RCV1), 0)+ NVL(SUM(A.RCV2), 0)+ 
                NVL(SUM(D.SW0), 0)+ NVL(SUM(D.SW1), 0)+ NVL(SUM(D.SW2), 0)+ 
                NVL(SUM(D.DA0), 0)+ NVL(SUM(D.DA1), 0)+ NVL(SUM(D.DA2), 0)+ 
                NVL(SUM(D.WB0), 0)+ NVL(SUM(D.WB1), 0)+ NVL(SUM(D.WB2), 0)+ 
                NVL(SUM(D.MD0), 0)+ NVL(SUM(D.MD1), 0)+ NVL(SUM(D.MD2), 0)+  
                NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ NVL(SUM(D.TF0), 0)+ 
                NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16+F.V17), 0)  
               ) <> 0
       ) A 
     , ( 
        SELECT MAT_GRP_1 AS CUSTOMER
             , MAT_GRP_10 AS PKG 
             , SUM(DECODE(SHIP_DATE,'20200511', TAT, 0)) AS TAT0 
             , SUM(DECODE(SHIP_DATE,'20200512', TAT, 0)) AS TAT1 
             , SUM(DECODE(SHIP_DATE,'20200513', TAT, 0)) AS TAT2 
          FROM ( 
                SELECT MAT.MAT_GRP_1,MAT.MAT_GRP_10,TAT.SHIP_DATE,SUM(TAT.TOTAL_TAT_QTY),SUM(SHIP.SHIP_QTY),ROUND(DECODE(SUM(SHIP.SHIP_QTY),0,0,(SUM(TAT.TOTAL_TAT_QTY)/SUM(SHIP.SHIP_QTY))),4) AS TAT 
                  FROM ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE 
                             , ROUND(SUM(TOTAL_TAT_QTY),4) AS TOTAL_TAT_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER <> 'A0000' 
                           AND SHIP_DATE BETWEEN '20200511' AND '20200513'
                         GROUP BY FACTORY,MAT_ID,SHIP_DATE 
                       ) TAT 
                     , ( 
                        SELECT FACTORY,MAT_ID,SHIP_DATE,SHIP_QTY 
                          FROM CSUMTATMAT@RPTTOMES 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2' 
                           AND OPER = 'AZ010' 
                           AND SHIP_DATE BETWEEN '20200511' AND '20200513'
                       ) SHIP 
                     , MWIPMATDEF MAT 
                 WHERE 1=1 
                   AND TAT.FACTORY = SHIP.FACTORY 
                   AND TAT.MAT_ID = SHIP.MAT_ID 
                   AND TAT.SHIP_DATE = SHIP.SHIP_DATE 
                   AND TAT.MAT_ID = MAT.MAT_ID 
                   AND MAT.MAT_TYPE = 'FG' 
                   AND MAT.DELETE_FLAG <> 'Y' 
                   AND MAT.FACTORY = 'HMVA2' 
                 GROUP BY MAT_GRP_1,MAT_GRP_10,TAT.SHIP_DATE
               ) 
         GROUP BY MAT_GRP_1, MAT_GRP_10 
       ) B  
 WHERE 1=1 
   AND A.CUSTOMER = B.CUSTOMER(+) 
   AND A.PKG = B.PKG(+) 
   AND A.PKG <> '-' 
   AND NVL(ORI_PLAN,0) + NVL(MON_PLAN,0) + NVL(TARGET_MON,0) + NVL(ASSY_MON,0) + NVL(WEEK_PLAN,0) + NVL(DEF,0) + NVL(AO0,0) + NVL(AO1,0) + NVL(AO2,0) + NVL(A.RCV0,0) + NVL(A.RCV1,0) + NVL(A.RCV2,0) + NVL(A.SW0,0) 
     + NVL(A.SW1,0) + NVL(A.SW2,0) + NVL(A.DA0,0) + NVL(A.DA1,0) + NVL(A.DA2,0) + NVL(A.WB0,0) + NVL(A.WB1,0) + NVL(A.WB2,0) + NVL(A.MD0,0) + NVL(A.MD1,0) + NVL(A.MD2,0) + NVL(A.TF0,0) 
     + NVL(A.TF1,0) + NVL(A.TF2,0) + NVL(TTL,0) <> 0 
 ORDER BY DECODE(A.CUSTOMER, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6),CUSTOMER, A.MAJOR, A.PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010803'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1 AS Code, DATA_1 AS Data 
  FROM MGCMTBLDAT 
 WHERE FACTORY= 'HMVA2'
   AND TABLE_NAME = 'MATERIAL_TYPE' 
   AND KEY_1 <> 'ALL' 
 ORDER BY KEY_1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_ID AS PRODUCT, (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER, MAT_GRP_2 AS FAMILY, MAT_GRP_3 AS PKG, MAT_GRP_4 AS TYPE1, MAT_GRP_5 AS TYPE2, MAT_GRP_6 AS LEAD_COUNT, MAT_GRP_7 AS DENSITY, MAT_GRP_8 AS GENERATION, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_10 AS PACKAGE2 
     , MAT_DESC, MAT_TYPE 
     , MAT_CMF_1 AS PLATING, MAT_CMF_2 AS LEAD_FREE, MAT_CMF_3 AS HALOGEN_FREE, MAT_CMF_4 AS STD_MG_QTY, MAT_CMF_5 AS STD_SP_QTY 
     , MAT_CMF_6 AS MA_RULE, MAT_CMF_7 AS CUSTOMER_DEVICE, MAT_CMF_8 AS SALES_CODE, MAT_CMF_9 AS BODY_SIZE, MAT_CMF_10 AS PIN_TYPE 
     , MAT_CMF_11 AS PACK_CODE, MAT_CMF_12 AS EMP_NO, MAT_CMF_13 AS NET_DIE, MAT_CMF_14 AS WF_INCH 
     , FIRST_FLOW, LAST_FLOW, VENDOR_MAT_ID AS ERP_CODE_BG, BASE_MAT_ID AS ERP_CODE_ASSY_TEST 
     , LF_MATERIAL, BD_DIAGRAM, MK_DIAGRAM 
     , GW_1, CAP_1, EMC_1, SB, TRAY, LM_1, BG_1, WM_TYPE1, BLADE_1 
     , RESV_FIELD_1 AS CUT_METHOD, BLADE_8 AS PMC_TIME 
     , BOM_LF_PB, BOM_GW_CW, BOM_LM, BOM_WBL, BOM_AE, BOM_NT, BOM_MC, BOM_SB, BOM_PKG_SAW 
     , UNIT, ADH_8 AS POLISHING, ADH_6 AS GDP, ADH_5 AS NCH, ADH_9 AS GEMAN 
     , (SELECT SUM(DECODE(TCD_CMF_2, ' ', 0, TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = A.FACTORY AND MAT_ID = A.MAT_ID) AS WIRE_COUNT 
  FROM MWIPMATDEF A 
     , CLOTCRDDAT@RPTTOMES B 
     , ( 
        SELECT MAT_ID, MAX(UNIT) AS UNIT 
          FROM ( 
                SELECT DISTINCT B.PARTNUMBER AS MAT_ID, A.C_MAT_CMF_4 AS UNIT 
                  FROM CWIPMATDEF@RPTTOMES A 
                     , CWIPBOMDEF B 
                 WHERE 1=1 
                   AND A.MAT_ID = B.MATCODE 
                   AND A.FACTORY = 'HMVA2' 
                   AND B.RESV_FIELD_2 IN ('LF','PB') 
                   AND B.RESV_FLAG_1 = 'Y' 
                   AND A.C_MAT_CMF_4 <> ' ' 
               ) 
         GROUP BY MAT_ID 
       ) C
     , ( 
        SELECT MAT_ID 
             , MAX(CASE WHEN RESV_FIELD_2 IN ('LF', 'PB') THEN MATCODE ELSE ' ' END) BOM_LF_PB 
             , MAX(CASE WHEN RESV_FIELD_2 IN ('GW', 'CW') THEN MATCODE ELSE ' ' END) BOM_GW_CW 
             , MAX(CASE WHEN RESV_FIELD_2 = 'LM' THEN MATCODE ELSE ' ' END) BOM_LM 
             , MAX(CASE WHEN RESV_FIELD_2 = 'WBL' THEN MATCODE ELSE ' ' END) BOM_WBL 
             , MAX(CASE WHEN RESV_FIELD_2 = 'AE' THEN MATCODE ELSE ' ' END) BOM_AE 
             , MAX(CASE WHEN RESV_FIELD_2 = 'NT' THEN MATCODE ELSE ' ' END) BOM_NT 
             , MAX(CASE WHEN RESV_FIELD_2 = 'MC' THEN MATCODE ELSE ' ' END) BOM_MC 
             , MAX(CASE WHEN RESV_FIELD_2 = 'SB' THEN MATCODE ELSE ' ' END) BOM_SB 
             , MAX(CASE WHEN RESV_FIELD_2 = 'BD' THEN MATCODE ELSE ' ' END) BOM_PKG_SAW 
          FROM ( 
                SELECT MAT_ID, RESV_FIELD_2 
                     , MAX(MATCODE) KEEP(DENSE_RANK FIRST ORDER BY CREATE_DT DESC) MATCODE 
                  FROM ( 
                        SELECT PARTNUMBER AS MAT_ID, MATCODE
                             , CASE WHEN RESV_FIELD_2 = 'TE' AND STEPID = 'A0020' THEN 'LM'
                                    WHEN RESV_FIELD_2 = 'TE' AND STEPID = 'A0040' THEN 'WBL'
                                    ELSE RESV_FIELD_2
                               END AS RESV_FIELD_2
                             , CREATE_DT 
                          FROM CWIPBOMDEF 
                         WHERE 1=1 
                           AND RESV_FLAG_1 = 'Y' 
                           AND (RESV_FIELD_2 IN ('LF', 'PB', 'GW', 'CW', 'TE', 'AE', 'NT', 'MC', 'SB') OR (RESV_FIELD_2 = 'BD' AND STEPID = 'A1750'))
                       ) 
                 GROUP BY MAT_ID, RESV_FIELD_2 
               ) 
         GROUP BY MAT_ID 
       ) D
 WHERE 1=1 
   AND A.FACTORY = B.FACTORY(+)
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
   AND A.DELETE_FLAG = ' ' 
   AND A.MAT_ID LIKE '%' 
   AND A.MAT_TYPE = 'FG'
 ORDER BY A.MAT_ID, A.MAT_GRP_1, A.MAT_GRP_2, A.MAT_GRP_3, A.MAT_GRP_4, A.MAT_GRP_5, A.MAT_GRP_6, A.MAT_GRP_7, A.MAT_GRP_8, A.MAT_GRP_9, A.MAT_GRP_10 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , ROUND(SUM(TOTAL)/43, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200430', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200501', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200502', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200503', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200504', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200505', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200506', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200507', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200508', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200509', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200510', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200511', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200512', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200513', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200401' AND '20200513' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , ROUND(SUM(TOTAL)/30, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200401', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200402', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200403', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200404', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200405', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200406', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200407', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200408', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200409', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200410', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200411', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200412', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200413', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200414', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200415', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200416', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200417', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200418', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200419', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200420', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200421', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200422', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200423', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200424', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200425', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200426', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200427', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200428', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200429', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200430', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200401' AND '20200430' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
