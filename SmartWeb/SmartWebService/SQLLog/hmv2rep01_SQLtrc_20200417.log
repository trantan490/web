SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE)  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND SYS_YEAR||LPAD(PLAN_WEEK,2,'0') = '202016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, PKG, SAP_CODE
     , RESV_FIELD_1 AS PIN_TYPE
     , OPER
     , ROUND(TTL_PLAN / 1, 0) AS TTL_PLAN
     , ROUND(TTL_DEF / 1, 0) AS TTL_DEF
     , DECODE(SEQ, 1, 'PLAN', 2, 'ACT', 3, 'BAL', 4, 'BOH') AS GUBUN
     , ROUND(DECODE(SEQ, 1, PLAN_D0, 2, SHP_D0, 3, BAL_D0, 4, WIP_D0) / 1, 0) AS D0
     , ROUND(DECODE(SEQ, 1, PLAN_D1, 2, SHP_D1, 3, BAL_D1, 4, WIP_D1) / 1, 0) AS D1
     , ROUND(DECODE(SEQ, 1, PLAN_D2, 2, SHP_D2, 3, BAL_D2, 4, WIP_D2) / 1, 0) AS D2
     , ROUND(DECODE(SEQ, 1, PLAN_D3, 2, SHP_D3, 3, BAL_D3, 4, WIP_D3) / 1, 0) AS D3
     , ROUND(DECODE(SEQ, 1, PLAN_D4, 2, SHP_D4, 3, BAL_D4, 4, WIP_D4) / 1, 0) AS D4
     , ROUND(DECODE(SEQ, 1, PLAN_D5, 2, SHP_D5, 3, BAL_D5, 4, WIP_D5) / 1, 0) AS D5
     , ROUND(DECODE(SEQ, 1, PLAN_D6, 2, SHP_D6, 3, BAL_D6, 4, WIP_D6) / 1, 0) AS D6
     , ROUND(DECODE(SEQ, 1, PLAN_D7, 2, SHP_D7, 3, BAL_D7, 4, WIP_D7) / 1, 0) AS D7
     , ROUND(DECODE(SEQ, 1, PLAN_D8, 2, SHP_D8, 3, BAL_D8, 4, WIP_D8) / 1, 0) AS D8
     , ROUND(DECODE(SEQ, 1, PLAN_D9, 2, SHP_D9, 3, BAL_D9, 4, WIP_D9) / 1, 0) AS D9
     , ROUND(DECODE(SEQ, 1, PLAN_D10, 2, SHP_D10, 3, BAL_D10, 4, WIP_D10) / 1, 0) AS D10
     , ROUND(DECODE(SEQ, 1, PLAN_D11, 2, SHP_D11, 3, BAL_D11, 4, WIP_D11) / 1, 0) AS D11
     , ROUND(DECODE(SEQ, 1, PLAN_D12, 2, SHP_D12, 3, BAL_D12, 4, WIP_D12) / 1, 0) AS D12
     , ROUND(DECODE(SEQ, 1, PLAN_D13, 2, SHP_D13, 3, BAL_D13, 4, WIP_D13) / 1, 0) AS D13
  FROM RSUMSCMDAT A
     , (
        SELECT DISTINCT MAT_GRP_10 AS PKG, VENDOR_ID
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG'
       ) B
     , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 4) C
 WHERE 1=1   
   AND A.SAP_CODE = B.VENDOR_ID
   AND A.FACTORY = 'HMVA2'
   AND A.PLAN_WEEK = '202016'
   AND DECODE(SEQ, 1, 'PLAN', 2, 'ACT', 3, 'BAL', 4, 'BOH') IN ('PLAN', 'ACT', 'BAL') 
 ORDER BY CUSTOMER, PKG, SAP_CODE, OPER_SEQ DESC, SEQ

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE)  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND SYS_YEAR||LPAD(PLAN_WEEK,2,'0') = '202016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.CUSTOMER) AS CUSTOMER, PKG, SAP_CODE
     , RESV_FIELD_1 AS PIN_TYPE
     , OPER
     , ROUND(TTL_PLAN / 1, 0) AS TTL_PLAN
     , ROUND(TTL_DEF / 1, 0) AS TTL_DEF
     , DECODE(SEQ, 1, 'PLAN', 2, 'ACT', 3, 'BAL', 4, 'BOH') AS GUBUN
     , ROUND(DECODE(SEQ, 1, PLAN_D0, 2, SHP_D0, 3, BAL_D0, 4, WIP_D0) / 1, 0) AS D0
     , ROUND(DECODE(SEQ, 1, PLAN_D1, 2, SHP_D1, 3, BAL_D1, 4, WIP_D1) / 1, 0) AS D1
     , ROUND(DECODE(SEQ, 1, PLAN_D2, 2, SHP_D2, 3, BAL_D2, 4, WIP_D2) / 1, 0) AS D2
     , ROUND(DECODE(SEQ, 1, PLAN_D3, 2, SHP_D3, 3, BAL_D3, 4, WIP_D3) / 1, 0) AS D3
     , ROUND(DECODE(SEQ, 1, PLAN_D4, 2, SHP_D4, 3, BAL_D4, 4, WIP_D4) / 1, 0) AS D4
     , ROUND(DECODE(SEQ, 1, PLAN_D5, 2, SHP_D5, 3, BAL_D5, 4, WIP_D5) / 1, 0) AS D5
     , ROUND(DECODE(SEQ, 1, PLAN_D6, 2, SHP_D6, 3, BAL_D6, 4, WIP_D6) / 1, 0) AS D6
     , ROUND(DECODE(SEQ, 1, PLAN_D7, 2, SHP_D7, 3, BAL_D7, 4, WIP_D7) / 1, 0) AS D7
     , ROUND(DECODE(SEQ, 1, PLAN_D8, 2, SHP_D8, 3, BAL_D8, 4, WIP_D8) / 1, 0) AS D8
     , ROUND(DECODE(SEQ, 1, PLAN_D9, 2, SHP_D9, 3, BAL_D9, 4, WIP_D9) / 1, 0) AS D9
     , ROUND(DECODE(SEQ, 1, PLAN_D10, 2, SHP_D10, 3, BAL_D10, 4, WIP_D10) / 1, 0) AS D10
     , ROUND(DECODE(SEQ, 1, PLAN_D11, 2, SHP_D11, 3, BAL_D11, 4, WIP_D11) / 1, 0) AS D11
     , ROUND(DECODE(SEQ, 1, PLAN_D12, 2, SHP_D12, 3, BAL_D12, 4, WIP_D12) / 1, 0) AS D12
     , ROUND(DECODE(SEQ, 1, PLAN_D13, 2, SHP_D13, 3, BAL_D13, 4, WIP_D13) / 1, 0) AS D13
  FROM RSUMSCMDAT A
     , (
        SELECT DISTINCT MAT_GRP_10 AS PKG, VENDOR_ID
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND DELETE_FLAG = ' '
           AND MAT_TYPE = 'FG'
       ) B
     , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 4) C
 WHERE 1=1   
   AND A.SAP_CODE = B.VENDOR_ID
   AND A.FACTORY = 'HMVA2'
   AND A.PLAN_WEEK = '202016'
   AND DECODE(SEQ, 1, 'PLAN', 2, 'ACT', 3, 'BAL', 4, 'BOH') IN ('PLAN', 'ACT', 'BAL') 
 ORDER BY CUSTOMER, PKG, SAP_CODE, OPER_SEQ DESC, SEQ

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011015'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(PLAN)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS PLAN 
     , ROUND(SUM(SHP)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SHP 
     , ROUND(SUM(DEF)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DEF 
     , GUBUN 
     , ROUND(SUM(HMK3A)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS HMK3A 
     , ROUND(SUM(QC_GATE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS QC_GATE 
     , ROUND(SUM(PVI)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS PVI 
     , ROUND(SUM(AVI)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS AVI 
     , ROUND(SUM(SIG)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SIG 
     , ROUND(SUM(SBA)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SBA 
     , ROUND(SUM(TIN)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS TIN 
     , ROUND(SUM(TRIM)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS TRIM 
     , ROUND(SUM(MK)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS MK 
     , ROUND(SUM(CURE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS CURE 
     , ROUND(SUM(MOLD)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS MOLD 
     , ROUND(SUM(GATE)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS GATE 
     , ROUND(SUM(WB9)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB9 
     , ROUND(SUM(DA9)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA9 
     , ROUND(SUM(WB8)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB8 
     , ROUND(SUM(DA8)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA8 
     , ROUND(SUM(WB7)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB7 
     , ROUND(SUM(DA7)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA7 
     , ROUND(SUM(WB6)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB6 
     , ROUND(SUM(DA6)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA6 
     , ROUND(SUM(WB5)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB5 
     , ROUND(SUM(DA5)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA5 
     , ROUND(SUM(WB4)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB4 
     , ROUND(SUM(DA4)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA4 
     , ROUND(SUM(WB3)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB3 
     , ROUND(SUM(DA3)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA3 
     , ROUND(SUM(WB2)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB2 
     , ROUND(SUM(DA2)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA2 
     , ROUND(SUM(WB1)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WB1 
     , ROUND(SUM(DA1)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS DA1 
     , ROUND(SUM(SP)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SP 
     , ROUND(SUM(SAW)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS SAW 
     , ROUND(SUM(BG)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS BG 
     , ROUND(SUM(HMK2A)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS HMK2A 
     , ROUND(SUM(WIP_DEF)/DECODE(GUBUN, '설비대수', 1, 1000),0) AS WIP_DEF 
  FROM (  
        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
             , MAX(PLAN) AS PLAN 
             , MAX(SHP) AS SHP 
             , MAX(DEF) AS DEF 
             , SUM(DECODE(OPER_GRP_1, 'HMK3A', SUM_DEF, 0)) AS HMK3A 
             , SUM(DECODE(OPER_GRP_1, 'QC_GATE', SUM_DEF, 0)) AS QC_GATE 
             , SUM(DECODE(OPER_GRP_1, 'PVI', SUM_DEF, 0)) AS PVI 
             , SUM(DECODE(OPER_GRP_1, 'AVI', SUM_DEF, 0)) AS AVI 
             , SUM(DECODE(OPER_GRP_1, 'SIG', SUM_DEF, 0)) AS SIG 
             , SUM(DECODE(OPER_GRP_1, 'SBA', SUM_DEF, 0)) AS SBA 
             , SUM(DECODE(OPER_GRP_1, 'TIN', SUM_DEF, 0)) AS TIN 
             , SUM(DECODE(OPER_GRP_1, 'TRIM', SUM_DEF, 0)) AS TRIM 
             , SUM(DECODE(OPER_GRP_1, 'MK', SUM_DEF, 0)) AS MK 
             , SUM(DECODE(OPER_GRP_1, 'CURE', SUM_DEF, 0)) AS CURE 
             , SUM(DECODE(OPER_GRP_1, 'MOLD', SUM_DEF, 0)) AS MOLD 
             , SUM(DECODE(OPER_GRP_1, 'GATE', SUM_DEF, 0)) AS GATE 
             , SUM(DECODE(OPER_GRP_1, 'WB9', SUM_DEF, 0)) AS WB9 
             , SUM(DECODE(OPER_GRP_1, 'DA9', SUM_DEF, 0)) AS DA9 
             , SUM(DECODE(OPER_GRP_1, 'WB8', SUM_DEF, 0)) AS WB8 
             , SUM(DECODE(OPER_GRP_1, 'DA8', SUM_DEF, 0)) AS DA8 
             , SUM(DECODE(OPER_GRP_1, 'WB7', SUM_DEF, 0)) AS WB7 
             , SUM(DECODE(OPER_GRP_1, 'DA7', SUM_DEF, 0)) AS DA7 
             , SUM(DECODE(OPER_GRP_1, 'WB6', SUM_DEF, 0)) AS WB6 
             , SUM(DECODE(OPER_GRP_1, 'DA6', SUM_DEF, 0)) AS DA6 
             , SUM(DECODE(OPER_GRP_1, 'WB5', SUM_DEF, 0)) AS WB5 
             , SUM(DECODE(OPER_GRP_1, 'DA5', SUM_DEF, 0)) AS DA5 
             , SUM(DECODE(OPER_GRP_1, 'WB4', SUM_DEF, 0)) AS WB4 
             , SUM(DECODE(OPER_GRP_1, 'DA4', SUM_DEF, 0)) AS DA4 
             , SUM(DECODE(OPER_GRP_1, 'WB3', SUM_DEF, 0)) AS WB3 
             , SUM(DECODE(OPER_GRP_1, 'DA3', SUM_DEF, 0)) AS DA3 
             , SUM(DECODE(OPER_GRP_1, 'WB2', SUM_DEF, 0)) AS WB2 
             , SUM(DECODE(OPER_GRP_1, 'DA2', SUM_DEF, 0)) AS DA2 
             , SUM(DECODE(OPER_GRP_1, 'WB1', SUM_DEF, 0)) AS WB1 
             , SUM(DECODE(OPER_GRP_1, 'DA1', SUM_DEF, 0)) AS DA1 
             , SUM(DECODE(OPER_GRP_1, 'SP', SUM_DEF, 0)) AS SP 
             , SUM(DECODE(OPER_GRP_1, 'SAW', SUM_DEF, 0)) AS SAW 
             , SUM(DECODE(OPER_GRP_1, 'BG', SUM_DEF, 0)) AS BG 
             , SUM(DECODE(OPER_GRP_1, 'HMK2A',SUM_DEF, 0)) AS HMK2A 
             , MAX(WIP_TTL) AS WIP_TTL 
             , MAX(DEF) - MAX(WIP_TTL) AS WIP_DEF 
          FROM ( 
                SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
                     , OPER_GRP_1 
                     , DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') AS GUBUN 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_PLAN, 6, D1_PLAN, 7, D2_PLAN, 8, WEEK_PLAN, 9, WEEK2_PLAN, 10, MON_PLAN)) AS PLAN  
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, SHP_TODAY, 6, SHP_D1, 7, SHP_D2, 8, SHP_WEEK, 9, SHP2_WEEK, 10, SHP_MONTH)) AS SHP 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_DEF, 6, D1_DEF, 7, D2_DEF, 8, WEEK_DEF, 9, WEEK2_DEF, 10, MONTH_DEF)) AS DEF 
                     , SUM(DECODE(SEQ, 1, WIP_QTY, 2, RES_CNT, 3, RES_CAPA, 4, ASSY_END_QTY, 5, D0_SUM_QUANTITY, 6, D1_SUM_QUANTITY, 7, D2_SUM_QUANTITY, 8, WEEK_SUM_QUANTITY, 9, WEEK2_SUM_QUANTITY, 10, MONTH_SUM_QUANTITY)) AS SUM_DEF 
                     , MAX(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, WIP_TTL)) AS WIP_TTL 
                  FROM ( 
                        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                             , SUM(NVL(D0_PLAN,0)) AS D0_PLAN, SUM(NVL(SHP_TODAY,0)) AS SHP_TODAY, SUM(NVL(D0_DEF,0)) AS D0_DEF 
                             , SUM(NVL(D1_PLAN,0)) AS D1_PLAN, SUM(NVL(SHP_D1,0)) AS SHP_D1, SUM(NVL(D1_DEF,0)) AS D1_DEF 
                             , SUM(NVL(D2_PLAN,0)) AS D2_PLAN, SUM(NVL(SHP_D2,0)) AS SHP_D2, SUM(NVL(D2_DEF,0)) AS D2_DEF 
                             , SUM(NVL(WEEK_PLAN,0)) AS WEEK_PLAN, SUM(NVL(SHP_WEEK,0)) AS SHP_WEEK, SUM(NVL(WEEK_DEF,0)) AS WEEK_DEF 
                             , SUM(NVL(WEEK2_PLAN,0)) AS WEEK2_PLAN, SUM(NVL(SHP2_WEEK,0)) AS SHP2_WEEK, SUM(NVL(WEEK2_DEF,0)) AS WEEK2_DEF 
                             , SUM(NVL(MON_PLAN,0)) AS MON_PLAN, SUM(NVL(SHP_MONTH,0)) AS SHP_MONTH, SUM(NVL(MONTH_DEF,0)) AS MONTH_DEF 
                             , SUM(NVL(ASSY_END_QTY,0)) AS ASSY_END_QTY 
                             , SUM(NVL(WIP_QTY,0)) AS WIP_QTY 
                             , SUM(SUM(WIP_QTY)) OVER(PARTITION BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS WIP_TTL 
                             , SUM(RES_CNT) AS RES_CNT 
                             , SUM(RES_CAPA) AS RES_CAPA 
                             , SUM(NVL(D0_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D0_SUM_QUANTITY 
                             , SUM(NVL(D1_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D1_SUM_QUANTITY 
                             , SUM(NVL(D2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D2_SUM_QUANTITY 
                             , SUM(NVL(WEEK_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK_SUM_QUANTITY 
                             , SUM(NVL(WEEK2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK2_SUM_QUANTITY 
                             , SUM(NVL(MONTH_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS MONTH_SUM_QUANTITY 
                          FROM ( 
                                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_CMF_7, MAT.MAT_CMF_8, MAT.MAT_CMF_11, MAT.MAT_ID, MAT.CONV_MAT_ID, MAT.OPER_GRP_1 
                                     , A.D0_PLAN, A.SHP_TODAY, A.D0_DEF 
                                     , A.D1_PLAN, A.SHP_D1, A.D1_DEF 
                                     , A.D2_PLAN, A.SHP_D2, A.D2_DEF 
                                     , A.WEEK_PLAN, A.SHP_WEEK, A.WEEK_DEF 
                                     , A.WEEK2_PLAN, A.SHP2_WEEK, A.WEEK2_DEF 
                                     , A.MON_PLAN, A.SHP_MONTH, A.MONTH_DEF 
                                     , A.D0_ORI_PLAN 
                                     , NVL(B.ASSY_END_QTY,0) AS ASSY_END_QTY 
                                     , MAX(NVL(B.ASSY_END_QTY,0)) OVER(PARTITION BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS CHK_ASSY_END_QTY 
                                     , NVL(WIP.QTY,0) AS WIP_QTY 
                                     , RES_CNT 
                                     , RES_CAPA 
                                     , SUM(NVL(WIP.QTY,0)) OVER(PARTITION BY A.MAT_ID ORDER BY MAT.MAT_ID, DECODE(MAT.OPER_GRP_1, 'HMK3A', 1, 'QC_GATE', 2, 'PVI', 3, 'AVI', 4, 'SIG', 5, 'SBA', 6, 'TIN', 7, 'TRIM', 8, 'MK', 9, 'CURE', 10, 'MOLD', 11, 'GATE', 12 
                                                                                                                                , 'WB9', 13, 'DA9', 14, 'WB8', 15, 'DA8', 16, 'WB7', 17, 'DA7', 18, 'WB6', 19, 'DA6', 20, 'WB5', 21, 'DA5', 22, 'WB4', 23, 'DA4', 24 
                                                                                                                                , 'WB3', 25, 'DA3', 26, 'WB2', 27, 'DA2', 28, 'WB1', 29, 'DA1', 30, 'SP', 31, 'SAW', 32, 'BG', 33, 'HMK2A',34, 35)) AS WIP_SUM_QUANTITY 
                                  FROM ( 
                                        SELECT MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_7, MAT_CMF_8, MAT_CMF_11, MAT_ID, OPER_GRP_1 
                                             , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT_ID, -3) 
                                                    WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                                                    ELSE MAT_ID 
                                                END CONV_MAT_ID 
                                          FROM ( 
                                                SELECT * 
                                                  FROM (
                                                        SELECT A.* 
                                                          FROM MWIPMATDEF A
                                                         WHERE 1=1 
                                                           AND FACTORY = 'HMVA2' 
                                                           AND DELETE_FLAG = ' ' 
                                                           AND MAT_TYPE = 'FG' 
                                                           AND MAT_ID LIKE '%' 
                                                           AND MAT_GRP_10 NOT LIKE 'COB%' 
                                                       ) 
                                               ) 
                                             , ( 
                                                SELECT DECODE(LEVEL, 1, 'HMK3A', 2, 'QC_GATE', 3, 'PVI', 4, 'AVI', 5, 'SIG', 6, 'SBA', 7, 'TIN', 8, 'TRIM', 9, 'MK', 10, 'CURE', 11, 'MOLD', 12, 'GATE' 
                                                                   , 13, 'WB9', 14, 'DA9', 15, 'WB8', 16, 'DA8', 17, 'WB7', 18, 'DA7', 19, 'WB6', 20, 'DA6', 21, 'WB5', 22, 'DA5', 23, 'WB4', 24, 'DA4'
                                                                   , 25, 'WB3', 26, 'DA3', 27, 'WB2', 28, 'DA2', 29, 'WB1', 30, 'DA1', 31, 'SP', 32, 'SAW', 33, 'BG', 34, 'HMK2A' 
                                                             ) OPER_GRP_1 
                                                  FROM DUAL CONNECT BY LEVEL <= 34 
                                               ) 
                                       ) MAT 
                                     , ( 
                                        SELECT MAT.MAT_ID 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) AS D0_PLAN 
                                             , SUM(NVL(D0_PLAN, 0)) AS D0_ORI_PLAN 
                                             , SUM(NVL(SHP_TODAY, 0)) AS SHP_TODAY 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D0_DEF 
                                             , SUM(NVL(D1_PLAN, 0)) AS D1_PLAN 
                                             , 0 AS SHP_D1 
                                             , SUM(NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D1_DEF 
                                             , SUM(NVL(D2_PLAN, 0)) AS D2_PLAN 
                                             , 0 AS SHP_D2 
                                             , SUM(NVL(D2_PLAN, 0) + NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D2_DEF 
                                             , SUM(NVL(WEEK1_PLAN, 0)) AS WEEK_PLAN 
                                             , SUM(NVL(SHP_WEEK, 0)) AS SHP_WEEK 
                                             , SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK_DEF 
                                             , SUM(NVL(WEEK2_PLAN, 0)) AS WEEK2_PLAN 
                                             , 0 AS SHP2_WEEK 
                                             , SUM(NVL(WEEK2_PLAN, 0) + NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK2_DEF 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(MON.RESV_FIELD1/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) 
                                                    ELSE MON.RESV_FIELD1 
                                                END,0)) MON_PLAN 
                                             , SUM(NVL(SHP_MONTH, 0)) AS SHP_MONTH 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(MON.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)-NVL(SHP_MONTH, 0) 
                                                    ELSE NVL(MON.RESV_FIELD1, 0)-NVL(SHP_MONTH, 0) 
                                                END,0)) MONTH_DEF 
                                          FROM MWIPMATDEF MAT 
                                             , ( 
                                                SELECT FACTORY, MAT_ID 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                ELSE 0 
                                                           END) AS WEEK1_TTL 
                                                     , SUM(W1_QTY) AS WEEK1_PLAN 
                                                     , SUM(W2_QTY) AS WEEK2_PLAN 
                                                     , SUM(NVL(W1_QTY,0) + NVL(W2_QTY,0)) AS WEEK_TTL 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D6_QTY 
                                                                ELSE 0 
                                                           END) AS D0_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D7_QTY 
                                                                ELSE 0 
                                                           END) AS D1_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D8_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 7 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'D') = 1 THEN D8_QTY 
                                                                ELSE 0 
                                                           END) AS D2_PLAN 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, 'OTD' AS CALENDAR_ID 
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID NOT LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202016','202017') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                         UNION ALL 
                                                        SELECT FACTORY, MAT_ID, 'SE' AS CALENDAR_ID  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202016', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202017', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202016','202017') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                       )  
                                                 GROUP BY FACTORY, MAT_ID  
                                               ) PLN 
                                             , (  
                                                SELECT FACTORY,MAT_ID, RESV_FIELD1  
                                                  FROM (  
                                                        SELECT FACTORY, MAT_ID, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                                          FROM (  
                                                                SELECT FACTORY, MAT_ID, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                                  FROM CWIPPLNMON  
                                                                 WHERE 1=1  
                                                                   AND FACTORY = 'HMVA2'  
                                                                   AND PLAN_MONTH = '202004' 
                                                                 GROUP BY FACTORY, MAT_ID 
                                                               )  
                                                         GROUP BY FACTORY, MAT_ID 
                                                       ) 
                                               ) MON 
                                             , (  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200417' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200413' AND '20200417' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200411' AND '20200417' THEN NVL(SHP_QTY_1, 0) 
                                                                ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200413' AND '20200416' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200411' AND '20200416' THEN NVL(SHP_QTY_1, 0)  
                                                                ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200401' AND '20200417' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID NOT LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN LEAST('20200401', '20200411', '20200413') AND '20200417' 
                                                 GROUP BY MAT_ID  
                                                 UNION ALL  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200417' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200411' AND '20200417' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200411' AND '20200416' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200401' AND '20200417' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT_06 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN '20200401' AND '20200417' 
                                                 GROUP BY MAT_ID 
                                               ) SHP 
                                         WHERE 1=1 
                                           AND MAT.FACTORY = 'HMVA2' 
                                           AND MAT.MAT_TYPE = 'FG' 
                                           AND MAT.DELETE_FLAG = ' ' 
                                           AND MAT.MAT_ID = PLN.MAT_ID(+) 
                                           AND MAT.MAT_ID = MON.MAT_ID(+) 
                                           AND MAT.MAT_ID = SHP.MAT_ID(+) 
                                         GROUP BY MAT.MAT_ID 
                                         ORDER BY MAT.MAT_ID 
                                       ) A 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1 
                                             , SUM(ASSY_END_QTY) AS ASSY_END_QTY 
                                          FROM ( 
                                                SELECT B.MAT_ID 
                                                     , CASE WHEN OPER IN ('A0000', 'A000N') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'HMK2A' 
                                                            WHEN OPER IN ('A0040') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'BG' 
                                                            WHEN OPER IN ('A0200', 'A0230') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'SAW' 
                                                            WHEN OPER IN ('A0400', 'A0401', 'A0333') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA1' 
                                                            WHEN OPER IN ('A0402') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA2' 
                                                            WHEN OPER IN ('A0403') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA3' 
                                                            WHEN OPER IN ('A0404') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA4' 
                                                            WHEN OPER IN ('A0405') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA5' 
                                                            WHEN OPER IN ('A0406') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA6' 
                                                            WHEN OPER IN ('A0407') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA7' 
                                                            WHEN OPER IN ('A0408') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA8' 
                                                            WHEN OPER IN ('A0409') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA9' 
                                                            WHEN OPER IN ('A0600','A0601') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB1' 
                                                            WHEN OPER IN ('A0602') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB2' 
                                                            WHEN OPER IN ('A0603') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB3' 
                                                            WHEN OPER IN ('A0604') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB4' 
                                                            WHEN OPER IN ('A0605') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB5' 
                                                            WHEN OPER IN ('A0606') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB6' 
                                                            WHEN OPER IN ('A0607') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB7' 
                                                            WHEN OPER IN ('A0608') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB8' 
                                                            WHEN OPER IN ('A0609') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB9' 
                                                            WHEN OPER IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') AND MAT_GRP_5 IN ('-', 'Merge') THEN 'GATE' 
                                                            WHEN OPER IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN OPER IN ('A1100') THEN 'CURE' 
                                                            WHEN OPER IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN OPER IN ('A1200') THEN 'TRIM' 
                                                            WHEN OPER IN ('A1450') THEN 'TIN' 
                                                            WHEN OPER IN ('A1300') THEN 'SBA' 
                                                            WHEN OPER IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN OPER IN ('A2000') THEN 'AVI' 
                                                            WHEN OPER IN ('A2050') THEN 'PVI' 
                                                            WHEN OPER IN ('A2100') THEN 'QC_GATE' 
                                                            WHEN OPER IN ('AZ010') THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                     , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) ASSY_END_QTY 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                             , SUM(END_LOT) AS END_LOT 
                                                             , SUM(END_QTY_1) AS END_QTY_1 
                                                             , SUM(END_QTY_2) AS END_QTY_2 
                                                             , SUM(CASE WHEN SHIP_QTY_1 > 0 THEN SHIP_QTY_1 ELSE 0 END) AS SHIP_QTY_1 
                                                             , SUM(CASE WHEN SHIP_QTY_2 > 0 THEN SHIP_QTY_2 ELSE 0 END) AS SHIP_QTY_2 
                                                          FROM ( 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM RSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM CSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT_06 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                               ) 
                                                         GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                       ) A 
                                                     , MWIPMATDEF B 
                                                 WHERE 1=1 
                                                   AND A.FACTORY  = 'HMVA2' 
                                                   AND A.FACTORY = B.FACTORY 
                                                   AND A.MAT_ID = B.MAT_ID 
                                                   AND B.MAT_TYPE = 'FG' 
                                                   AND A.MAT_ID LIKE '%' 
                                                   AND A.CM_KEY_3 LIKE 'P%'
                                                   AND A.OPER NOT IN ('00001','00002') 
                                                   AND A.WORK_DATE = '20200417' 
                                                 ) 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(ASSY_END_QTY) > 0 
                                       ) B 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1, SUM(NVL(QTY,0)) QTY 
                                          FROM (  
                                                SELECT MAT_ID 
                                                     , QTY 
                                                     , CASE WHEN OPER_GRP_8 = 'HMK2A' THEN 'HMK2A' 
                                                            WHEN OPER_GRP_8 = 'B/G' THEN 'BG' 
                                                            WHEN OPER_GRP_8 = 'SAW' THEN 'SAW' 
                                                            WHEN OPER_GRP_8 = 'S/P' THEN 'SP' 
                                                            WHEN OPER_GRP_8 IN ('D/A1', 'D/A1 CURE') THEN 'DA1' 
                                                            WHEN OPER_GRP_8 IN ('D/A2', 'D/A2 CURE') THEN 'DA2' 
                                                            WHEN OPER_GRP_8 IN ('D/A3', 'D/A3 CURE') THEN 'DA3' 
                                                            WHEN OPER_GRP_8 IN ('D/A4', 'D/A4 CURE') THEN 'DA4' 
                                                            WHEN OPER_GRP_8 IN ('D/A5', 'D/A5 CURE') THEN 'DA5' 
                                                            WHEN OPER_GRP_8 IN ('D/A6', 'D/A6 CURE') THEN 'DA6' 
                                                            WHEN OPER_GRP_8 IN ('D/A7', 'D/A7 CURE') THEN 'DA7' 
                                                            WHEN OPER_GRP_8 IN ('D/A8', 'D/A8 CURE') THEN 'DA8' 
                                                            WHEN OPER_GRP_8 IN ('D/A9', 'D/A9 CURE') THEN 'DA9' 
                                                            WHEN OPER_GRP_8 = 'W/B1' THEN 'WB1' 
                                                            WHEN OPER_GRP_8 = 'W/B2' THEN 'WB2' 
                                                            WHEN OPER_GRP_8 = 'W/B3' THEN 'WB3' 
                                                            WHEN OPER_GRP_8 = 'W/B4' THEN 'WB4' 
                                                            WHEN OPER_GRP_8 = 'W/B5' THEN 'WB5' 
                                                            WHEN OPER_GRP_8 = 'W/B6' THEN 'WB6' 
                                                            WHEN OPER_GRP_8 = 'W/B7' THEN 'WB7' 
                                                            WHEN OPER_GRP_8 = 'W/B8' THEN 'WB8' 
                                                            WHEN OPER_GRP_8 = 'W/B9' THEN 'WB9' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_5 = '-' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'HX' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 NOT IN ('SE','HX') AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'MOLD' THEN 'MOLD' 
                                                            WHEN OPER_GRP_8 = 'CURE' THEN 'CURE' 
                                                            WHEN OPER_GRP_8 = 'M/K' THEN 'MK' 
                                                            WHEN OPER_GRP_8 = 'TRIM' THEN 'TRIM' 
                                                            WHEN OPER_GRP_8 = 'TIN' THEN 'TIN' 
                                                            WHEN OPER_GRP_8 = 'S/B/A' THEN 'SBA' 
                                                            WHEN OPER_GRP_8 = 'SIG' THEN 'SIG' 
                                                            WHEN OPER_GRP_8 = 'AVI' THEN 'AVI' 
                                                            WHEN OPER_GRP_8 = 'V/I' THEN 'PVI' 
                                                            WHEN OPER_GRP_8 = 'QC GATE' THEN 'QC_GATE' 
                                                            WHEN OPER_GRP_8 = 'HMK3A' THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                  FROM ( 
                                                        SELECT MAT_ID, OPER, OPER_GRP_8, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_10 
                                                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                                         WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                                         ELSE QTY_1 END)
                                                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                                                    ELSE QTY_1 
                                                               END QTY 
                                                          FROM ( 
                                                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_8, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, C.MAT_GRP_10 
                                                                     , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END 
                                                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/TO_NUMBER(DECODE(MAT_CMF_13, ' ', 1, '-', 1, MAT_CMF_13)),0) 
                                                                            ELSE QTY_1 
                                                                       END AS QTY_1 
                                                                     , COMP_CNT  
                                                                     , HX_COMP_MIN, HX_COMP_MAX 
                                                                  FROM RWIPLOTSTS A   
                                                                     , MWIPOPRDEF B   
                                                                     , VWIPMATDEF C 
                                                                 WHERE 1 = 1  
                                                                   AND A.FACTORY = B.FACTORY 
                                                                   AND A.FACTORY = C.FACTORY 
                                                                   AND A.OPER = B.OPER 
                                                                   AND A.MAT_ID = C.MAT_ID 
                                                                   AND A.FACTORY = 'HMVA2'   
                                                                   AND A.LOT_TYPE = 'W'  
                                                                   AND A.LOT_CMF_5 LIKE 'P%'
                                                                   AND A.LOT_DEL_FLAG = ' '  
                                                                   AND C.MAT_GRP_2 <> '-' 
                                                                   AND C.DELETE_FLAG = ' '  
                                                               ) 
                                                       ) 
                                               ) 
                                         WHERE 1=1 
                                           AND OPER_GRP_1 <> ' ' 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(NVL(QTY,0)) > 0 
                                       ) WIP 
                                     , ( 
                                        SELECT A.RES_STS_2 AS MAT_ID 
                                             , A.OPER_GRP_1 
                                             , SUM(A.RES_CNT) AS RES_CNT 
                                             , SUM(TRUNC(NVL(NVL(B.UPEH,0) * 24 * A.PERCENT * A.RES_CNT, 0))) AS RES_CAPA 
                                          FROM ( 
                                                SELECT FACTORY, RES_STS_2, RES_STS_8 AS OPER, RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RES_CNT 
                                                     , CASE WHEN RES_STS_8 LIKE 'A06%' THEN 0.71
                                                            WHEN RES_STS_8 LIKE 'A04%' THEN 0.68
                                                            WHEN RES_STS_8 = 'A0333' THEN 0.68
                                                            ELSE 0.7
                                                       END PERCENT 
                                                     , CASE WHEN RES_STS_8 IN ('A0040') THEN 'BG' 
                                                            WHEN RES_STS_8 IN ('A0200', 'A0230') THEN 'SAW' 
                                                            WHEN RES_STS_8 IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                                                            WHEN RES_STS_8 IN ('A0402') THEN 'DA2' 
                                                            WHEN RES_STS_8 IN ('A0403') THEN 'DA3' 
                                                            WHEN RES_STS_8 IN ('A0404') THEN 'DA4' 
                                                            WHEN RES_STS_8 IN ('A0405') THEN 'DA5' 
                                                            WHEN RES_STS_8 IN ('A0406') THEN 'DA6' 
                                                            WHEN RES_STS_8 IN ('A0407') THEN 'DA7' 
                                                            WHEN RES_STS_8 IN ('A0408') THEN 'DA8' 
                                                            WHEN RES_STS_8 IN ('A0409') THEN 'DA9' 
                                                            WHEN RES_STS_8 IN ('A0600','A0601') THEN 'WB1' 
                                                            WHEN RES_STS_8 IN ('A0602') THEN 'WB2' 
                                                            WHEN RES_STS_8 IN ('A0603') THEN 'WB3' 
                                                            WHEN RES_STS_8 IN ('A0604') THEN 'WB4' 
                                                            WHEN RES_STS_8 IN ('A0605') THEN 'WB5' 
                                                            WHEN RES_STS_8 IN ('A0606') THEN 'WB6' 
                                                            WHEN RES_STS_8 IN ('A0607') THEN 'WB7' 
                                                            WHEN RES_STS_8 IN ('A0608') THEN 'WB8' 
                                                            WHEN RES_STS_8 IN ('A0609') THEN 'WB9' 
                                                            WHEN RES_STS_8 IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') THEN 'GATE' 
                                                            WHEN RES_STS_8 IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN RES_STS_8 IN ('A1100') THEN 'CURE' 
                                                            WHEN RES_STS_8 IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN RES_STS_8 IN ('A1200') THEN 'TRIM' 
                                                            WHEN RES_STS_8 IN ('A1450') THEN 'TIN' 
                                                            WHEN RES_STS_8 IN ('A1300') THEN 'SBA' 
                                                            WHEN RES_STS_8 IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN RES_STS_8 IN ('A2000') THEN 'AVI' 
                                                            WHEN RES_STS_8 IN ('A2050') THEN 'PVI' 
                                                            WHEN RES_STS_8 IN ('A2100') THEN 'QC_GATE' 
                                                            ELSE ' ' 
                                                       END OPER_GRP_1 
                                                  FROM MRASRESDEF 
                                                 WHERE 1 = 1  
                                                   AND FACTORY  = 'HMVA2' 
                                                   AND RES_CMF_9 = 'Y' 
                                                   AND RES_CMF_7 = 'Y' 
                                                   AND DELETE_FLAG = ' ' 
                                                   AND RES_TYPE='EQUIPMENT' 
                                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7  
                                               ) A 
                                             , CRASUPHDEF B 
                                         WHERE 1=1 
                                           AND A.FACTORY = B.FACTORY(+) 
                                           AND A.OPER = B.OPER(+) 
                                           AND A.RES_MODEL = B.RES_MODEL(+) 
                                           AND A.UPEH_GRP = B.UPEH_GRP(+) 
                                           AND A.RES_STS_2 = B.MAT_ID(+) 
                                           AND A.FACTORY  = 'HMVA2' 
                                           AND A.OPER NOT IN ('00001','00002') 
                                           AND A.OPER_GRP_1 <> ' ' 
                                         GROUP BY A.RES_STS_2, A.OPER_GRP_1 
                                       ) RES 
                                 WHERE 1=1 
                                   AND MAT.MAT_ID = A.MAT_ID(+) 
                                   AND MAT.MAT_ID = B.MAT_ID(+) 
                                   AND MAT.MAT_ID = WIP.MAT_ID(+) 
                                   AND MAT.MAT_ID = RES.MAT_ID(+) 
                                   AND MAT.OPER_GRP_1 = B.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = WIP.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = RES.OPER_GRP_1(+) 
                               ) 
                         GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                        HAVING ( 
                                SUM(NVL(D0_ORI_PLAN,0))+SUM(NVL(D1_PLAN,0))+SUM(NVL(D2_PLAN,0))+SUM(NVL(WEEK_PLAN,0))+SUM(NVL(WEEK2_PLAN,0))+SUM(NVL(MON_PLAN,0))+SUM(NVL(WIP_QTY,0)) 
                              + SUM(NVL(D0_PLAN,0))+SUM(NVL(SHP_WEEK,0))+SUM(NVL(SHP_MONTH,0))+SUM(NVL(ASSY_END_QTY,0)) 
                               ) > 0 
                      ) 
                    , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 10) 
                 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1, DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') 
               ) 
         GROUP BY  MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
       ) A 
 WHERE 1=1 
 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(GUBUN, 'WIP', 1, '설비대수', 2, 'CAPA현황', 3, '당일 실적', 4, 'D0 잔량', 5, 'D1 잔량', 6, 'D2 잔량', 7, '당주 잔량', 8, '차주 잔량', 9, '월간 잔량', 10) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , MAX(DECODE(OPER_GRP_1, 'HMK3A', 'T', '', 'F', 'F')) AS HMK3A 
     , MAX(DECODE(OPER_GRP_1, 'QC_GATE', 'T', '', 'F', 'F')) AS QC_GATE 
     , MAX(DECODE(OPER_GRP_1, 'PVI', 'T', '', 'F', 'F')) AS PVI 
     , MAX(DECODE(OPER_GRP_1, 'AVI', 'T', '', 'F', 'F')) AS AVI 
     , MAX(DECODE(OPER_GRP_1, 'SIG', 'T', '', 'F', 'F')) AS SIG 
     , MAX(DECODE(OPER_GRP_1, 'SBA', 'T', '', 'F', 'F')) AS SBA 
     , MAX(DECODE(OPER_GRP_1, 'TIN', 'T', '', 'F', 'F')) AS TIN 
     , MAX(DECODE(OPER_GRP_1, 'TRIM', 'T', '', 'F', 'F')) AS TRIM 
     , MAX(DECODE(OPER_GRP_1, 'MK', 'T', '', 'F', 'F')) AS MK 
     , MAX(DECODE(OPER_GRP_1, 'CURE', 'T', '', 'F', 'F')) AS CURE 
     , MAX(DECODE(OPER_GRP_1, 'MOLD', 'T', '', 'F', 'F')) AS MOLD 
     , MAX(DECODE(OPER_GRP_1, 'GATE', 'T', '', 'F', 'F')) AS GATE 
     , MAX(DECODE(OPER_GRP_1, 'WB9', 'T', '', 'F', 'F')) AS WB9 
     , MAX(DECODE(OPER_GRP_1, 'DA9', 'T', '', 'F', 'F')) AS DA9 
     , MAX(DECODE(OPER_GRP_1, 'WB8', 'T', '', 'F', 'F')) AS WB8 
     , MAX(DECODE(OPER_GRP_1, 'DA8', 'T', '', 'F', 'F')) AS DA8 
     , MAX(DECODE(OPER_GRP_1, 'WB7', 'T', '', 'F', 'F')) AS WB7 
     , MAX(DECODE(OPER_GRP_1, 'DA7', 'T', '', 'F', 'F')) AS DA7 
     , MAX(DECODE(OPER_GRP_1, 'WB6', 'T', '', 'F', 'F')) AS WB6 
     , MAX(DECODE(OPER_GRP_1, 'DA6', 'T', '', 'F', 'F')) AS DA6 
     , MAX(DECODE(OPER_GRP_1, 'WB5', 'T', '', 'F', 'F')) AS WB5 
     , MAX(DECODE(OPER_GRP_1, 'DA5', 'T', '', 'F', 'F')) AS DA5 
     , MAX(DECODE(OPER_GRP_1, 'WB4', 'T', '', 'F', 'F')) AS WB4 
     , MAX(DECODE(OPER_GRP_1, 'DA4', 'T', '', 'F', 'F')) AS DA4 
     , MAX(DECODE(OPER_GRP_1, 'WB3', 'T', '', 'F', 'F')) AS WB3 
     , MAX(DECODE(OPER_GRP_1, 'DA3', 'T', '', 'F', 'F')) AS DA3  
     , MAX(DECODE(OPER_GRP_1, 'WB2', 'T', '', 'F', 'F')) AS WB2 
     , MAX(DECODE(OPER_GRP_1, 'DA2', 'T', '', 'F', 'F')) AS DA2 
     , MAX(DECODE(OPER_GRP_1, 'WB1', 'T', '', 'F', 'F')) AS WB1 
     , MAX(DECODE(OPER_GRP_1, 'DA1', 'T', '', 'F', 'F')) AS DA1 
     , MAX(DECODE(OPER_GRP_1, 'SP', 'T', '', 'F', 'F')) AS SP 
     , MAX(DECODE(OPER_GRP_1, 'SAW', 'T', '', 'F', 'F')) AS SAW 
     , MAX(DECODE(OPER_GRP_1, 'BG', 'T', '', 'F', 'F')) AS BG 
     , MAX(DECODE(OPER_GRP_1, 'HMK2A','T', '', 'F', 'F')) AS HMK2A 
  FROM ( 
        SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID, MAT.DELETE_FLAG 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND MAT.MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT.MAT_ID, -3) 
                                                                    WHEN MAT.MAT_GRP_1 = 'HX' THEN MAT.MAT_CMF_10 
                                                                    ELSE MAT_ID 
                                                               END CONV_MAT_ID 
          FROM MWIPMATDEF MAT 
       ) MAT 
     , ( 
        SELECT A.MAT_ID 
                     , CASE WHEN B.OPER IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                            WHEN B.OPER IN ('A0402') THEN 'DA2' 
                            WHEN B.OPER IN ('A0403') THEN 'DA3' 
                            WHEN B.OPER IN ('A0404') THEN 'DA4' 
                            WHEN B.OPER IN ('A0405') THEN 'DA5' 
                            WHEN B.OPER IN ('A0406') THEN 'DA6' 
                            WHEN B.OPER IN ('A0407') THEN 'DA7' 
                            WHEN B.OPER IN ('A0408') THEN 'DA8' 
                            WHEN B.OPER IN ('A0409') THEN 'DA9' 
                            WHEN B.OPER IN ('A0600', 'A0601') THEN 'WB1' 
                            WHEN B.OPER IN ('A0602') THEN 'WB2' 
                            WHEN B.OPER IN ('A0603') THEN 'WB3' 
                            WHEN B.OPER IN ('A0604') THEN 'WB4' 
                            WHEN B.OPER IN ('A0605') THEN 'WB5' 
                            WHEN B.OPER IN ('A0606') THEN 'WB6' 
                            WHEN B.OPER IN ('A0607') THEN 'WB7' 
                            WHEN B.OPER IN ('A0608') THEN 'WB8' 
                            WHEN B.OPER IN ('A0609') THEN 'WB9' 
                            ELSE ' ' 
                        END OPER_GRP_1 
          FROM MWIPMATDEF A 
             , MWIPFLWOPR@RPTTOMES B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.FIRST_FLOW = B.FLOW 
           AND A.FACTORY = 'HMVA2' 
           AND A.DELETE_FLAG = ' ' 
           AND A.MAT_TYPE = 'FG' 
           AND A.MAT_GRP_5 IN ('-', 'Merge') 
           AND A.MAT_ID LIKE '%' 
       ) A 
 WHERE 1=1 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.DELETE_FLAG = ' ' 
   AND MAT.MAT_ID = A.MAT_ID  
 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 30)) - 17, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((17 + 5) / 30) ) * 30, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 30), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 13.1438494823565 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202004'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200417', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200401' AND '20200417' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200417', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200401' AND '20200417' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200417', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200401' AND '20200417'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200417', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200401' AND '20200417'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200417'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200417'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200417', '20200424', '20200501', '20200508', '20200515')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070505'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200417', '20200424', '20200501', '20200508', '20200515')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '
     , ROUND(SUM(PLN_W1) / 1, 0) AS PLN_W1
     , ROUND(SUM(SMT) / 1, 0) AS SMT_END
     , ROUND(SUM(AO_QTY) / 1, 0) AS AO_QTY
     , ROUND(SUM(AFTER_DA1) / 1, 0) AS AFTER_DA1
     , ROUND(SUM(SMT_DEF) / 1, 0) AS SMT_DEF
     , ROUND(SUM(SMT_DEF2) / 1, 0) AS SMT_DEF2
     , ROUND(SUM(SMT_DEF3) / 1, 0) AS SMT_DEF3
     , ROUND(SUM(SMT_OUT_TODAY) / 1, 0) AS SMT_OUT_TODAY
     , ROUND(SUM(SMT_OUT_YESTERDAY) / 1, 0) AS SMT_OUT_YESTERDAY
     , ROUND(SUM(SMT_TARGET) / 1, 0) AS SMT_TARGET
     , ROUND(SUM(DA1_CAPA) / 1, 0) AS DA1_CAPA
     , ROUND(SUM(BEFORE_DA1) / 1, 0) AS BEFORE_DA1
     , ROUND(SUM(DA_SMT) / 1, 0) AS DA_SMT
     , ROUND(SUM(PCB_SCH) / 1, 0) AS PCB_SCH
     , CASE WHEN SUM(PCB_SCH) = 0 THEN 0
            ELSE ROW_NUMBER() OVER(ORDER BY DECODE(SUM(PCB_SCH),0, 999, SUM(PCB_SCH)))
       END AS RNK
     , ROUND(SUM(TTL_WIP) / 1, 0) AS TTL_WIP
     , ROUND(SUM(SMT) / 1, 0) AS SMT
     , ROUND(SUM(SMT_WAIT) / 1, 0) AS SMT_WAIT
     , ROUND(SUM(WIK_WIP) / 1, 0) AS WIK_WIP
     , ROUND(SUM(INV_L_QTY) / 1, 0) AS INV_L_QTY
     , ROUND(SUM(INV_QTY) / 1, 0) AS INV_QTY
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > SUM(SMT_TARGET) THEN SUM(SMT_TARGET) ELSE SUM(TTL_WAIT) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > SUM(DA1_CAPA) THEN SUM(DA1_CAPA) ELSE SUM(TTL_WAIT) END)
       END / 1, 0) AS GUIDE_D1
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 2) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - SUM(SMT_TARGET) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - SUM(SMT_TARGET) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 2) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - SUM(DA1_CAPA) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - SUM(DA1_CAPA) END)
       END / 1, 0) AS GUIDE_D2
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 3) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 3) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) END)
       END / 1, 0) AS GUIDE_D3
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 4) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 4) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) END)
       END / 1, 0) AS GUIDE_D4
     , ROUND(SUM(ORDER_QTY) / 1, 0) AS ORDER_QTY
     , ROUND(SUM(PLN_W2) / 1, 0) AS PLN_W2
     , ROUND(SUM(PLN_W3) / 1, 0) AS PLN_W3
     , ROUND(SUM(PLN_W4) / 1, 0) AS PLN_W4
     , ROUND(SUM(PLN_W5) / 1, 0) AS PLN_W5
  FROM (
        SELECT MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
             , SUM(NVL(MAT.PLN_W1,0)) AS PLN_W1
             , SUM(NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)) AS SMT_END
             , SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF2
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0) + NVL(MAT.PLN_W3,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF3
             , SUM(NVL(MOV.SMT_OUT_YESTERDAY,0)) AS SMT_OUT_YESTERDAY
             , SUM(NVL(MOV.SMT_OUT_TODAY,0)) AS SMT_OUT_TODAY
             , ROUND(CASE TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'DY') WHEN '월' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)))
                                                                         WHEN '화' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 7
                                                                         WHEN '수' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 6
                                                                         WHEN '목' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 5
                                                                         WHEN '금' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 4
                                                                         WHEN '토' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 3
                                                                         ELSE SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 2
               END, 0) AS SMT_TARGET 
             , SUM(NVL(MAT.DA1_CAPA,0)) AS DA1_CAPA
             , SUM(NVL(MAT.BEFORE_DA1,0)) AS BEFORE_DA1
             , SUM(NVL(WIP.SMT,0) - NVL(MAT.BEFORE_DA1,0)) AS DA_SMT
             , CASE WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 AND SUM(NVL(MAT.BEFORE_DA1,0)) > 0 THEN 72
                    WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 THEN 0
                    ELSE ROUND(SUM(NVL(WIP.SMT,0)) / SUM(NVL(MAT.DA1_CAPA,0)) * 24, 2)
               END AS PCB_SCH
             , SUM(NVL(WIP.SMT,0) + NVL(WIP.SMT_WAIT,0) + NVL(WIK.WIK_WIP,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WIP
             , SUM(NVL(WIP.SMT_WAIT,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WAIT
             , SUM(NVL(WIP.SMT_WAIT,0)) AS SMT_WAIT
             , SUM(NVL(WIK.WIK_WIP,0)) AS WIK_WIP
             , SUM(NVL(WMS.INV_L_QTY,0)) AS INV_L_QTY
             , SUM(NVL(WMS.INV_QTY,0)) AS INV_QTY
             , SUM(NVL(ORD.ORDER_QTY,0)) AS ORDER_QTY
             , SUM(NVL(MAT.PLN_W2,0)) AS PLN_W2
             , SUM(NVL(MAT.PLN_W3,0)) AS PLN_W3
             , SUM(NVL(MAT.PLN_W4,0)) AS PLN_W4
             , SUM(NVL(MAT.PLN_W5,0)) AS PLN_W5
             , SUM(NVL(WIP.SMT,0)) AS SMT
             , SUM(NVL(MAT.AO_QTY,0)) AS AO_QTY
             , SUM(NVL(MAT.AFTER_DA1,0)) AS AFTER_DA1
          FROM (
                SELECT A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
                     , SUM(NVL(B.PLN_W1,0)) AS PLN_W1
                     , SUM(NVL(B.PLN_W2,0)) AS PLN_W2
                     , SUM(NVL(B.PLN_W3,0)) AS PLN_W3
                     , SUM(NVL(B.PLN_W4,0)) AS PLN_W4
                     , SUM(NVL(B.PLN_W5,0)) AS PLN_W5
                     , SUM(NVL(C.AO_QTY,0)) AS AO_QTY
                     , SUM(NVL(D.AFTER_DA1,0)) AS AFTER_DA1
                     , SUM(NVL(D.BEFORE_DA1,0)) AS BEFORE_DA1
                     , SUM(NVL(E.DA1_CAPA,0)) AS DA1_CAPA 
                  FROM (
                        SELECT DISTINCT MAT_CODE, MAT_CODE_DESC, B.VENDOR_ID, B.MAT_CMF_11, B.MAT_ID
                          FROM (
                                SELECT DISTINCT A.MAT_ID AS MAT_CODE, A.MAT_DESC AS MAT_CODE_DESC, B.PARTNUMBER
                                  FROM MWIPMATDEF A
                                     , CWIPBOMDEF B
                                 WHERE 1=1
                                   AND A.MAT_ID = B.MATCODE
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.DELETE_FLAG = ' '
                                   AND A.FIRST_FLOW IN ('HMAI','HMAJ','HMAR','HMBF', 'HMBJ')
                                   AND B.RESV_FLAG_1 = 'Y'
                                   AND B.RESV_FIELD_2 = 'PB'
                                   AND LENGTH(A.MAT_ID) = 10
                               ) A
                             , MWIPMATDEF B
                         WHERE A.PARTNUMBER = B.MAT_ID
                           AND B.FACTORY = 'HMVA2'
                           AND B.DELETE_FLAG = ' '
                           AND REGEXP_LIKE(B.MAT_GRP_5, '-|1st|Merge|Middle*')
                       ) A
                     , (
                        SELECT MAT_ID
                             , SUM(DECODE(PLAN_WEEK, '202016', WW_QTY, 0)) AS PLN_W1
                             , SUM(DECODE(PLAN_WEEK, '202017', WW_QTY, 0)) AS PLN_W2
                             , SUM(DECODE(PLAN_WEEK, '202018', WW_QTY, 0)) AS PLN_W3
                             , SUM(DECODE(PLAN_WEEK, '202019', WW_QTY, 0)) AS PLN_W4
                             , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS PLN_W5
                          FROM RWIPPLNWEK
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'
                           AND GUBUN = '3'
                           AND PLAN_WEEK BETWEEN '202016' AND '202020'
                         GROUP BY MAT_ID
                       ) B
                     , (
                        SELECT MAT_ID 
                             , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS AO_QTY
                          FROM RSUMFACMOV
                         WHERE 1=1
                           AND CM_KEY_1 = 'HMVA2'
                           AND WORK_DATE BETWEEN '20200411' AND '20200417'
                           AND LOT_TYPE = 'W'
                           AND FACTORY <> 'RETURN'
                         GROUP BY MAT_ID
                       ) C
                     , (
                        SELECT MAT_ID 
                             , SUM(CASE WHEN OPER > 'A0401' THEN QTY_1 ELSE 0 END) AS AFTER_DA1
                             , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1)
                                        WHEN OPER <= 'A0401' THEN QTY_1
                                        ELSE 0 
                                   END) AS BEFORE_DA1 
                          FROM ( 
                                SELECT MAT_ID, OPER, QTY_1 
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                  FROM RWIPLOTSTS A
                                 WHERE 1=1   
                                   AND FACTORY = 'HMVA2'
                                   AND LOT_DEL_FLAG = ' '
                                   AND LOT_TYPE = 'W'
                                   AND OPER <> 'A0000'
                               ) 
                         GROUP BY MAT_ID
                       ) D
                     , (
                        SELECT RES.MAT_ID
                             , SUM(TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0))) AS DA1_CAPA
                          FROM ( 
                                SELECT FACTORY, RES_STS_2 AS MAT_ID, RES_STS_8 AS OPER                      
                                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                                  FROM MRASRESDEF 
                                 WHERE 1 = 1  
                                   AND FACTORY  = 'HMVA2' 
                                   AND RES_CMF_9 = 'Y' 
                                   AND RES_CMF_7 = 'Y' 
                                   AND DELETE_FLAG = ' ' 
                                   AND RES_STS_8 IN ('A0333', 'A0400', 'A0401')
                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
                               ) RES 
                             , CRASUPHDEF UPH 
                         WHERE 1 = 1 
                           AND RES.FACTORY = UPH.FACTORY(+) 
                           AND RES.OPER = UPH.OPER(+) 
                           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
                           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
                           AND RES.MAT_ID = UPH.MAT_ID(+)
                         GROUP BY RES.MAT_ID 
                       ) E
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.MAT_ID = D.MAT_ID(+)
                   AND A.MAT_ID = E.MAT_ID(+)
                 GROUP BY A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
               ) MAT
             , (
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(CASE WHEN GUBUN = 'SMT' THEN QTY_1 ELSE 0 END) SMT
                     , SUM(CASE WHEN GUBUN = 'SMT_WAIT' THEN QTY_1 ELSE 0 END) SMT_WAIT
                  FROM (
                        SELECT MAT_ID, OPER
                             , CASE WHEN OPER <= 'M0330' THEN 'SMT_WAIT' ELSE 'SMT' END AS GUBUN
                             , QTY_1
                          FROM RWIPLOTSTS
                         WHERE 1=1   
                           AND FACTORY = 'HMVA2'
                           AND LOT_TYPE = 'P'
                           AND LOT_DEL_FLAG = ' '
                           AND LOT_CMF_2 = '-'
                           AND LOT_CMF_9 != ' '
                           AND QTY_1 > 0
                           AND OPER <>  'V0000'
                           AND (OPER LIKE 'M%' OR OPER LIKE 'V%')
                       )
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIP
             , (
                SELECT MAT_CODE
                     , SUM(INV_QTY) AS INV_QTY
                     , SUM(INV_L_QTY) AS INV_L_QTY
                  FROM (
                        SELECT MAT_ID AS MAT_CODE
                             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY
                             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY
                          FROM CWMSLOTSTS@RPTTOMES
                         WHERE 1=1
                           AND QUANTITY> 0
                           AND STORAGE_LOCATION IN ('1000', '1001', '1003')
                           AND MAT_ID LIKE 'R16%'
                         GROUP BY MAT_ID 
                         UNION ALL 
                        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                          FROM CWIPMATSLP@RPTTOMES 
                         WHERE 1=1 
                           AND RECV_FLAG = ' ' 
                           AND MAT_ID LIKE 'R16%' 
                           AND IN_TIME BETWEEN '20200415000000' AND '20200417235959' 
                         GROUP BY MAT_ID 
                       )
                 GROUP BY MAT_CODE 
               ) WMS
             , (          
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(LOT_QTY) AS WIK_WIP           
                  FROM ISTMWIKWIP@RPTTOMES
                 WHERE 1=1
                   AND CUTOFF_DT = '20200417' || TO_CHAR(SYSDATE, 'HH24')
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIK
             , (
                SELECT REPLACE(MATCODE, '-O', '') AS MAT_CODE
                     , SUM(ORDER_QTY) AS ORDER_QTY
                  FROM RSUMWIPMAT
                 WHERE MAT_TYPE = 'PB'
                 GROUP BY REPLACE(MATCODE, '-O', '')  
               ) ORD
             , (
                SELECT MAT_ID AS MAT_CODE
                     , SUM(DECODE(WORK_DATE, '20200416', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_YESTERDAY
                     , SUM(DECODE(WORK_DATE, '20200417', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_TODAY
                  FROM RSUMWIPMOV
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE IN ('20200416','20200417')
                   AND OPER = 'M0330'
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_CODE = WIP.MAT_CODE(+)
           AND MAT.MAT_CODE = WMS.MAT_CODE(+)
           AND MAT.MAT_CODE = WIK.MAT_CODE(+)
           AND MAT.MAT_CODE = ORD.MAT_CODE(+)
           AND MAT.MAT_CODE = MOV.MAT_CODE(+)
         GROUP BY MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
       )
 GROUP BY MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200417', '20200424', '20200501', '20200508', '20200515')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200417')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200417', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '
     , ROUND(SUM(PLN_W1) / 1, 0) AS PLN_W1
     , ROUND(SUM(SMT) / 1, 0) AS SMT_END
     , ROUND(SUM(AO_QTY) / 1, 0) AS AO_QTY
     , ROUND(SUM(AFTER_DA1) / 1, 0) AS AFTER_DA1
     , ROUND(SUM(SMT_DEF) / 1, 0) AS SMT_DEF
     , ROUND(SUM(SMT_DEF2) / 1, 0) AS SMT_DEF2
     , ROUND(SUM(SMT_DEF3) / 1, 0) AS SMT_DEF3
     , ROUND(SUM(SMT_OUT_TODAY) / 1, 0) AS SMT_OUT_TODAY
     , ROUND(SUM(SMT_OUT_YESTERDAY) / 1, 0) AS SMT_OUT_YESTERDAY
     , ROUND(SUM(SMT_TARGET) / 1, 0) AS SMT_TARGET
     , ROUND(SUM(DA1_CAPA) / 1, 0) AS DA1_CAPA
     , ROUND(SUM(BEFORE_DA1) / 1, 0) AS BEFORE_DA1
     , ROUND(SUM(DA_SMT) / 1, 0) AS DA_SMT
     , ROUND(SUM(PCB_SCH) / 1, 0) AS PCB_SCH
     , CASE WHEN SUM(PCB_SCH) = 0 THEN 0
            ELSE ROW_NUMBER() OVER(ORDER BY DECODE(SUM(PCB_SCH),0, 999, SUM(PCB_SCH)))
       END AS RNK
     , ROUND(SUM(TTL_WIP) / 1, 0) AS TTL_WIP
     , ROUND(SUM(SMT) / 1, 0) AS SMT
     , ROUND(SUM(SMT_WAIT) / 1, 0) AS SMT_WAIT
     , ROUND(SUM(WIK_WIP) / 1, 0) AS WIK_WIP
     , ROUND(SUM(INV_L_QTY) / 1, 0) AS INV_L_QTY
     , ROUND(SUM(INV_QTY) / 1, 0) AS INV_QTY
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > SUM(SMT_TARGET) THEN SUM(SMT_TARGET) ELSE SUM(TTL_WAIT) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > SUM(DA1_CAPA) THEN SUM(DA1_CAPA) ELSE SUM(TTL_WAIT) END)
       END / 1, 0) AS GUIDE_D1
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 2) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - SUM(SMT_TARGET) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - SUM(SMT_TARGET) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 2) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - SUM(DA1_CAPA) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - SUM(DA1_CAPA) END)
       END / 1, 0) AS GUIDE_D2
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 3) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 3) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) END)
       END / 1, 0) AS GUIDE_D3
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 4) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 4) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) END)
       END / 1, 0) AS GUIDE_D4
     , ROUND(SUM(ORDER_QTY) / 1, 0) AS ORDER_QTY
     , ROUND(SUM(PLN_W2) / 1, 0) AS PLN_W2
     , ROUND(SUM(PLN_W3) / 1, 0) AS PLN_W3
     , ROUND(SUM(PLN_W4) / 1, 0) AS PLN_W4
     , ROUND(SUM(PLN_W5) / 1, 0) AS PLN_W5
  FROM (
        SELECT MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
             , SUM(NVL(MAT.PLN_W1,0)) AS PLN_W1
             , SUM(NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)) AS SMT_END
             , SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF2
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0) + NVL(MAT.PLN_W3,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF3
             , SUM(NVL(MOV.SMT_OUT_YESTERDAY,0)) AS SMT_OUT_YESTERDAY
             , SUM(NVL(MOV.SMT_OUT_TODAY,0)) AS SMT_OUT_TODAY
             , ROUND(CASE TO_CHAR(TO_DATE('20200417', 'YYYYMMDD'), 'DY') WHEN '월' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)))
                                                                         WHEN '화' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 7
                                                                         WHEN '수' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 6
                                                                         WHEN '목' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 5
                                                                         WHEN '금' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 4
                                                                         WHEN '토' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 3
                                                                         ELSE SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 2
               END, 0) AS SMT_TARGET 
             , SUM(NVL(MAT.DA1_CAPA,0)) AS DA1_CAPA
             , SUM(NVL(MAT.BEFORE_DA1,0)) AS BEFORE_DA1
             , SUM(NVL(WIP.SMT,0) - NVL(MAT.BEFORE_DA1,0)) AS DA_SMT
             , CASE WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 AND SUM(NVL(MAT.BEFORE_DA1,0)) > 0 THEN 72
                    WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 THEN 0
                    ELSE ROUND(SUM(NVL(WIP.SMT,0)) / SUM(NVL(MAT.DA1_CAPA,0)) * 24, 2)
               END AS PCB_SCH
             , SUM(NVL(WIP.SMT,0) + NVL(WIP.SMT_WAIT,0) + NVL(WIK.WIK_WIP,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WIP
             , SUM(NVL(WIP.SMT_WAIT,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WAIT
             , SUM(NVL(WIP.SMT_WAIT,0)) AS SMT_WAIT
             , SUM(NVL(WIK.WIK_WIP,0)) AS WIK_WIP
             , SUM(NVL(WMS.INV_L_QTY,0)) AS INV_L_QTY
             , SUM(NVL(WMS.INV_QTY,0)) AS INV_QTY
             , SUM(NVL(ORD.ORDER_QTY,0)) AS ORDER_QTY
             , SUM(NVL(MAT.PLN_W2,0)) AS PLN_W2
             , SUM(NVL(MAT.PLN_W3,0)) AS PLN_W3
             , SUM(NVL(MAT.PLN_W4,0)) AS PLN_W4
             , SUM(NVL(MAT.PLN_W5,0)) AS PLN_W5
             , SUM(NVL(WIP.SMT,0)) AS SMT
             , SUM(NVL(MAT.AO_QTY,0)) AS AO_QTY
             , SUM(NVL(MAT.AFTER_DA1,0)) AS AFTER_DA1
          FROM (
                SELECT A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
                     , SUM(NVL(B.PLN_W1,0)) AS PLN_W1
                     , SUM(NVL(B.PLN_W2,0)) AS PLN_W2
                     , SUM(NVL(B.PLN_W3,0)) AS PLN_W3
                     , SUM(NVL(B.PLN_W4,0)) AS PLN_W4
                     , SUM(NVL(B.PLN_W5,0)) AS PLN_W5
                     , SUM(NVL(C.AO_QTY,0)) AS AO_QTY
                     , SUM(NVL(D.AFTER_DA1,0)) AS AFTER_DA1
                     , SUM(NVL(D.BEFORE_DA1,0)) AS BEFORE_DA1
                     , SUM(NVL(E.DA1_CAPA,0)) AS DA1_CAPA 
                  FROM (
                        SELECT DISTINCT MAT_CODE, MAT_CODE_DESC, B.VENDOR_ID, B.MAT_CMF_11, B.MAT_ID
                          FROM (
                                SELECT DISTINCT A.MAT_ID AS MAT_CODE, A.MAT_DESC AS MAT_CODE_DESC, B.PARTNUMBER
                                  FROM MWIPMATDEF A
                                     , CWIPBOMDEF B
                                 WHERE 1=1
                                   AND A.MAT_ID = B.MATCODE
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.DELETE_FLAG = ' '
                                   AND A.FIRST_FLOW IN ('HMAI','HMAJ','HMAR','HMBF', 'HMBJ')
                                   AND B.RESV_FLAG_1 = 'Y'
                                   AND B.RESV_FIELD_2 = 'PB'
                                   AND LENGTH(A.MAT_ID) = 10
                               ) A
                             , MWIPMATDEF B
                         WHERE A.PARTNUMBER = B.MAT_ID
                           AND B.FACTORY = 'HMVA2'
                           AND B.DELETE_FLAG = ' '
                           AND REGEXP_LIKE(B.MAT_GRP_5, '-|1st|Merge|Middle*')
                       ) A
                     , (
                        SELECT MAT_ID
                             , SUM(DECODE(PLAN_WEEK, '202016', WW_QTY, 0)) AS PLN_W1
                             , SUM(DECODE(PLAN_WEEK, '202017', WW_QTY, 0)) AS PLN_W2
                             , SUM(DECODE(PLAN_WEEK, '202018', WW_QTY, 0)) AS PLN_W3
                             , SUM(DECODE(PLAN_WEEK, '202019', WW_QTY, 0)) AS PLN_W4
                             , SUM(DECODE(PLAN_WEEK, '202020', WW_QTY, 0)) AS PLN_W5
                          FROM RWIPPLNWEK
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'
                           AND GUBUN = '3'
                           AND PLAN_WEEK BETWEEN '202016' AND '202020'
                         GROUP BY MAT_ID
                       ) B
                     , (
                        SELECT MAT_ID 
                             , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS AO_QTY
                          FROM RSUMFACMOV
                         WHERE 1=1
                           AND CM_KEY_1 = 'HMVA2'
                           AND WORK_DATE BETWEEN '20200411' AND '20200417'
                           AND LOT_TYPE = 'W'
                           AND FACTORY <> 'RETURN'
                         GROUP BY MAT_ID
                       ) C
                     , (
                        SELECT MAT_ID 
                             , SUM(CASE WHEN OPER > 'A0401' THEN QTY_1 ELSE 0 END) AS AFTER_DA1
                             , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1)
                                        WHEN OPER <= 'A0401' THEN QTY_1
                                        ELSE 0 
                                   END) AS BEFORE_DA1 
                          FROM ( 
                                SELECT MAT_ID, OPER, QTY_1 
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                  FROM RWIPLOTSTS A
                                 WHERE 1=1   
                                   AND FACTORY = 'HMVA2'
                                   AND LOT_DEL_FLAG = ' '
                                   AND LOT_TYPE = 'W'
                                   AND OPER <> 'A0000'
                               ) 
                         GROUP BY MAT_ID
                       ) D
                     , (
                        SELECT RES.MAT_ID
                             , SUM(TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0))) AS DA1_CAPA
                          FROM ( 
                                SELECT FACTORY, RES_STS_2 AS MAT_ID, RES_STS_8 AS OPER                      
                                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                                  FROM MRASRESDEF 
                                 WHERE 1 = 1  
                                   AND FACTORY  = 'HMVA2' 
                                   AND RES_CMF_9 = 'Y' 
                                   AND RES_CMF_7 = 'Y' 
                                   AND DELETE_FLAG = ' ' 
                                   AND RES_STS_8 IN ('A0333', 'A0400', 'A0401')
                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
                               ) RES 
                             , CRASUPHDEF UPH 
                         WHERE 1 = 1 
                           AND RES.FACTORY = UPH.FACTORY(+) 
                           AND RES.OPER = UPH.OPER(+) 
                           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
                           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
                           AND RES.MAT_ID = UPH.MAT_ID(+)
                         GROUP BY RES.MAT_ID 
                       ) E
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.MAT_ID = D.MAT_ID(+)
                   AND A.MAT_ID = E.MAT_ID(+)
                 GROUP BY A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
               ) MAT
             , (
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(CASE WHEN GUBUN = 'SMT' THEN QTY_1 ELSE 0 END) SMT
                     , SUM(CASE WHEN GUBUN = 'SMT_WAIT' THEN QTY_1 ELSE 0 END) SMT_WAIT
                  FROM (
                        SELECT MAT_ID, OPER
                             , CASE WHEN OPER <= 'M0330' THEN 'SMT_WAIT' ELSE 'SMT' END AS GUBUN
                             , QTY_1
                          FROM RWIPLOTSTS
                         WHERE 1=1   
                           AND FACTORY = 'HMVA2'
                           AND LOT_TYPE = 'P'
                           AND LOT_DEL_FLAG = ' '
                           AND LOT_CMF_2 = '-'
                           AND LOT_CMF_9 != ' '
                           AND QTY_1 > 0
                           AND OPER <>  'V0000'
                           AND (OPER LIKE 'M%' OR OPER LIKE 'V%')
                       )
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIP
             , (
                SELECT MAT_CODE
                     , SUM(INV_QTY) AS INV_QTY
                     , SUM(INV_L_QTY) AS INV_L_QTY
                  FROM (
                        SELECT MAT_ID AS MAT_CODE
                             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY
                             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY
                          FROM CWMSLOTSTS@RPTTOMES
                         WHERE 1=1
                           AND QUANTITY> 0
                           AND STORAGE_LOCATION IN ('1000', '1001', '1003')
                           AND MAT_ID LIKE 'R16%'
                         GROUP BY MAT_ID 
                         UNION ALL 
                        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                          FROM CWIPMATSLP@RPTTOMES 
                         WHERE 1=1 
                           AND RECV_FLAG = ' ' 
                           AND MAT_ID LIKE 'R16%' 
                           AND IN_TIME BETWEEN '20200415000000' AND '20200417235959' 
                         GROUP BY MAT_ID 
                       )
                 GROUP BY MAT_CODE 
               ) WMS
             , (          
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(LOT_QTY) AS WIK_WIP           
                  FROM ISTMWIKWIP@RPTTOMES
                 WHERE 1=1
                   AND CUTOFF_DT = '20200417' || TO_CHAR(SYSDATE, 'HH24')
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIK
             , (
                SELECT REPLACE(MATCODE, '-O', '') AS MAT_CODE
                     , SUM(ORDER_QTY) AS ORDER_QTY
                  FROM RSUMWIPMAT
                 WHERE MAT_TYPE = 'PB'
                 GROUP BY REPLACE(MATCODE, '-O', '')  
               ) ORD
             , (
                SELECT MAT_ID AS MAT_CODE
                     , SUM(DECODE(WORK_DATE, '20200416', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_YESTERDAY
                     , SUM(DECODE(WORK_DATE, '20200417', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_TODAY
                  FROM RSUMWIPMOV
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE IN ('20200416','20200417')
                   AND OPER = 'M0330'
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_CODE = WIP.MAT_CODE(+)
           AND MAT.MAT_CODE = WMS.MAT_CODE(+)
           AND MAT.MAT_CODE = WIK.MAT_CODE(+)
           AND MAT.MAT_CODE = ORD.MAT_CODE(+)
           AND MAT.MAT_CODE = MOV.MAT_CODE(+)
         GROUP BY MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
       )
 GROUP BY MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '

-------------------------------------------------------------
