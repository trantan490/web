SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202003','202004','202005')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMKA1' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1000,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1000,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1000,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1000,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1000,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1000,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1000,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1000,0) AS W4
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1000,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1000,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1000,0) AS SHP_W2
     , ROUND(SUM(SHP_W3 * CONVERT_QTY) /1000,0) AS SHP_W3
     , ROUND(SUM(M1 * CONVERT_QTY) /1000,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1000,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMKA1' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W3 END AS SHP_W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMKA1' 
                   AND PLAN_MONTH = '202003'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202010', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202011', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202012', SHP_QTY, 0)) AS SHP_W2 
                     , SUM(DECODE(PLAN_WEEK, '202013', SHP_QTY, 0)) AS SHP_W3 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202003%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMKA1' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202013'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202013'
                           AND PLAN_MONTH = '202003'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202010' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202011' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202012' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202013' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202014' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202003', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202004', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMKA1'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(SHP_W3,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010910'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010911'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '12' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '12' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '12' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '12' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '13' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202003','202004','202005')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1000,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1000,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1000,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1000,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1000,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1000,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1000,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1000,0) AS W4
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1000,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1000,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1000,0) AS SHP_W2
     , ROUND(SUM(SHP_W3 * CONVERT_QTY) /1000,0) AS SHP_W3
     , ROUND(SUM(M1 * CONVERT_QTY) /1000,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1000,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMKA1' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W3 END AS SHP_W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_MONTH = '202003'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202010', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202011', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202012', SHP_QTY, 0)) AS SHP_W2 
                     , SUM(DECODE(PLAN_WEEK, '202013', SHP_QTY, 0)) AS SHP_W3 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202003%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202013'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202013'
                           AND PLAN_MONTH = '202003'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202010' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202011' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202012' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202013' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202014' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202003', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202004', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMVA2'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(SHP_W3,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010910'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH MD AS
(
SELECT *
  FROM (
        SELECT '계획' AS GUBUN1 FROM DUAL UNION
        SELECT '일목표' AS GUBUN1 FROM DUAL
       ) A
     , (
        SELECT 'Wafer' AS GUBUN2, 'Half cut' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'B/G' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Pre_G' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Saw' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Stealth saw' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'Laser G/V' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'DAF Cut' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wafer' AS GUBUN2, 'DDS' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'Epoxy' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'BOC' AS GUBUN3 FROM DUAL UNION
        SELECT 'CHIP수' AS GUBUN2, 'Others' AS GUBUN3 FROM DUAL UNION
        SELECT 'Wire수' AS GUBUN2, ' ' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'C-Mold' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'ORP' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'SBA' AS GUBUN3 FROM DUAL UNION
        SELECT 'PKG수' AS GUBUN2, 'SST' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'Mold' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'SBA' AS GUBUN3 FROM DUAL UNION
        SELECT '95mm' AS GUBUN2, 'SST' AS GUBUN3 FROM DUAL
       ) B      
)
SELECT MDL.GUBUN1, MDL.GUBUN2, MDL.GUBUN3
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V0 ELSE V0 / TO_CHAR(LAST_DAY(TO_DATE('201912', 'YYYYMM')), 'DD') END / 1000, 0) V0
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V1 ELSE V1 / TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'DD') END / 1000, 0) V1
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V2 ELSE V2 / TO_CHAR(LAST_DAY(TO_DATE('202002', 'YYYYMM')), 'DD') END / 1000, 0) V2
     , ROUND(CASE WHEN MDL.GUBUN1 = '계획' THEN V3 ELSE V3 / TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')), 'DD') END / 1000, 0) V3
  FROM MD MDL
     , (
        SELECT *
          FROM (
                SELECT '계획' AS GUBUN1 FROM DUAL UNION
                SELECT '일목표' AS GUBUN1 FROM DUAL
               ) A
             , (
                SELECT GUBUN2, GUBUN3
                     , SUM(DECODE(PLAN_DATE, '201912', CONV_QTY, 0)) V0
                     , SUM(DECODE(PLAN_DATE, '202001', CONV_QTY, 0)) V1
                     , SUM(DECODE(PLAN_DATE, '202002', CONV_QTY, 0)) V2
                     , SUM(DECODE(PLAN_DATE, '202003', CONV_QTY, 0)) V3
                  FROM (
                        SELECT PLAN_DATE 
                             , CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN 'PKG수'
                                    ELSE 'Wafer' 
                               END AS GUBUN2 
                             , OPER AS GUBUN3
                             , CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN PLAN_QTY
                                    ELSE PLAN_QTY * NVL(COMP_CNT,1) 
                               END AS PLAN_QTY
                             , ROUND(CASE WHEN OPER IN ('C-Mold', 'ORP', 'SBA', 'SST') THEN PLAN_QTY
                                          ELSE PLAN_QTY * NVL(COMP_CNT,1) / (MAT_CMF_13 * 0.85) 
                                     END, 0) AS CONV_QTY
                          FROM (
                                SELECT PLAN_DATE, MAT_ID
                                     , CASE WHEN OPER = 'A0010' THEN 'Half cut'
                                            WHEN OPER = 'A0040' THEN 'B/G'
                                            WHEN OPER = 'A0030' THEN 'Pre_G'
                                            WHEN OPER = 'A0200' THEN 'Saw'
                                            WHEN OPER IN ('A0012', 'A0033') THEN 'Stealth saw'
                                            WHEN OPER = 'A0170' THEN 'Laser G/V'
                                            WHEN OPER = 'A0180' THEN 'DAF Cut'
                                            WHEN OPER = 'A0230' THEN 'DDS'
                                            WHEN OPER = 'A1000' THEN 'C-Mold'
                                            WHEN OPER IN ('A1250', 'A1260') THEN 'ORP'
                                            WHEN OPER = 'A1300' THEN 'SBA'
                                            WHEN OPER = 'A1750' THEN 'SST'
                                            ELSE ''
                                       END OPER
                                     , PLAN_QTY
                                     , MAT_CMF_13
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT
                                     , (SELECT KEY_3 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = A.MAT_GRP_1 AND KEY_3 = A.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = A.MAT_ID)) AS C_MOLD
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMKA1'   
                                                   AND A.PLAN_MONTH BETWEEN '201912' AND '202003'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     , ZHPPT120@SAPREAL SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMKA1'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                                 WHERE 1=1
                                   AND OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1000', 'A1250', 'A1260', 'A1300', 'A1750')
                               )
                         WHERE 1=1
                           AND (OPER <> 'C-Mold' OR (OPER = 'C-Mold' AND C_MOLD IS NOT NULL))
                         UNION ALL
                        SELECT PLAN_DATE
                             , 'CHIP수' AS GUBUN2
                             , FAMILY AS GUBUN3
                             , SUM(PLAN_QTY * STACK) AS PLAN_QTY
                             , SUM(PLAN_QTY * STACK) AS CONV_QTY
                          FROM (
                                SELECT DISTINCT A.PLAN_DATE, A.MAT_KEY, A.STACK, A.PLAN_QTY 
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = A.MAT_GRP_2) AS FAMILY
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMKA1'   
                                                   AND A.PLAN_MONTH BETWEEN '201912' AND '202003'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     , ZHPPT120@SAPREAL SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMKA1'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                               )
                         WHERE 1=1
                           AND FAMILY IN ('Epoxy', 'BOC', 'Others')
                         GROUP BY PLAN_DATE, FAMILY
                         UNION ALL
                        SELECT PLAN_DATE
                             , 'Wire수' AS GUBUN2     
                             , ' ' AS GUBUN3
                             , PLAN_QTY
                             , PLAN_QTY * NVL(WIRE_QTY, MAT_GRP_6) AS CONV_QTY
                          FROM (
                                SELECT PLAN_DATE
                                     , OPER
                                     , PLAN_QTY
                                     , MAT_ID
                                     , MAT_GRP_6
                                     , (SELECT MAX(TO_NUMBER(TCD_CMF_2)) FROM CWIPTCDDEF@RPTTOMES WHERE FACTORY = 'HMKA1' AND SET_FLAG = 'Y' AND TCD_CMF_2 <> ' ' AND MAT_ID = A.MAT_ID AND OPER = A.OPER) AS WIRE_QTY
                                  FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMKA1'   
                                                   AND A.PLAN_MONTH BETWEEN '201912' AND '202003'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     , ZHPPT120@SAPREAL SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMKA1'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                                 WHERE 1=1
                                   AND OPER LIKE 'A06%'
                               )
                         UNION ALL
                        SELECT PLAN_DATE
                             , '95mm' AS GUBUN2
                             , CASE WHEN OPER = 'A1000' THEN 'Mold'
                                    WHEN OPER = 'A1300' THEN 'SBA'
                                    ELSE 'SST'
                               END GUBUN3
                             , SUM(PLAN_QTY) AS PLAN_QTY
                             , SUM(PLAN_QTY) AS CONV_QTY
                          FROM (
                                        SELECT A.PLAN_DATE, A.MAT_KEY, A.MAT_ID, TO_NUMBER(PLAN_QTY) AS PLAN_QTY
                                             , B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_4, B.MAT_GRP_5
                                             , TO_NUMBER(DECODE(B.MAT_GRP_6, '-', 1, ' ', 1, B.MAT_GRP_6)) AS MAT_GRP_6
                                             , B.MAT_CMF_11, TO_NUMBER(DECODE(B.MAT_CMF_13,' ',1,B.MAT_CMF_13)) AS MAT_CMF_13
                                             , CASE WHEN B.MAT_GRP_4 IN ('-', 'FD', 'FU') THEN '1'
                                                    ELSE SUBSTR(B.MAT_GRP_4, 3) 
                                               END AS STACK
                                             , B.OPER
                                          FROM (
                                                SELECT DISTINCT A.PLAN_MONTH AS PLAN_DATE
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MCP_TO_PART END AS MAT_KEY
                                                     , CASE WHEN B.MAT_ID IS NULL THEN A.MAT_ID ELSE B.MAT_ID END AS MAT_ID
                                                     , A.RESV_FIELD1 AS PLAN_QTY
                                                  FROM CWIPPLNMON A
                                                     , RWIPMCPBOM B
                                                 WHERE 1=1   
                                                   AND A.MAT_ID = B.MCP_TO_PART(+)
                                                   AND A.FACTORY = 'HMKA1'   
                                                   AND A.PLAN_MONTH BETWEEN '201912' AND '202003'
                                                   AND DECODE(A.RESV_FIELD1, ' ', 0, A.RESV_FIELD1) > 0
                                               ) A
                                             , (
                                                SELECT DISTINCT MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11, MAT_CMF_13, KTSCH AS OPER
                                                  FROM MWIPMATDEF MAT
                                                     , ZHPPT120@SAPREAL SAP
                                                 WHERE 1=1
                                                   AND MAT.FIRST_FLOW = SUBSTR(PLNNR, 1, 4) 
                                                   AND MAT.FACTORY = 'HMKA1'
                                                   AND MAT.DELETE_FLAG = ' '
                                                   AND MAT.MAT_TYPE = 'FG'
                                                   AND SAP.ARBPL != 'DUMMY'
                                                   AND SAP.KTSCH LIKE 'A%'
                                               ) B   
                                         WHERE 1=1
                                           AND A.MAT_ID = B.MAT_ID
                                           AND (B.OPER IN ('A0010', 'A0200', 'A0030', 'A0040', 'A0012', 'A0033', 'A0170', 'A0180', 'A0230', 'A1250', 'A1260', 'A1300', 'A1750', 'A1000')
                                               OR B.OPER LIKE 'A06%')   
                                       ) A
                             , (
                                SELECT * 
                                  FROM MATRNAMSTS@RPTTOMES 
                                 WHERE FACTORY = 'HMKA1'
                                   AND ATTR_TYPE = 'MAT_ETC'
                                   AND ATTR_NAME = 'MAGAZINE_TYPE' 
                                   AND ATTR_VALUE = '95'
                               ) B
                         WHERE 1=1
                           AND A.MAT_ID = B.ATTR_KEY
                           AND A.OPER IN ('A1000', 'A1300', 'A1750')
                         GROUP BY PLAN_DATE, OPER
                       )
                 GROUP BY GUBUN2, GUBUN3
               )
       ) PLN
 WHERE 1=1
   AND MDL.GUBUN1 = PLN.GUBUN1(+)   
   AND MDL.GUBUN2 = PLN.GUBUN2(+)   
   AND MDL.GUBUN3 = PLN.GUBUN3(+)   
 ORDER BY GUBUN1, DECODE(GUBUN2, 'Wafer', 1, 'CHIP수', 2, 'Wire수', 3, 'PKG수', 4, 5), GUBUN3

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202003','202004','202005')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1000,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1000,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1000,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1000,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1000,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1000,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1000,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1000,0) AS W4
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1000,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1000,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1000,0) AS SHP_W2
     , ROUND(SUM(SHP_W3 * CONVERT_QTY) /1000,0) AS SHP_W3
     , ROUND(SUM(M1 * CONVERT_QTY) /1000,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1000,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMKA1' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W3 END AS SHP_W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_MONTH = '202003'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202010', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202011', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202012', SHP_QTY, 0)) AS SHP_W2 
                     , SUM(DECODE(PLAN_WEEK, '202013', SHP_QTY, 0)) AS SHP_W3 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202003%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202013'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202013'
                           AND PLAN_MONTH = '202003'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202010' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202011' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202012' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202013' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202014' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202003', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202004', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMVA2'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(SHP_W3,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202003','202004','202005')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1000,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1000,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1000,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1000,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1000,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1000,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1000,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1000,0) AS W4
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1000,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1000,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1000,0) AS SHP_W2
     , ROUND(SUM(SHP_W3 * CONVERT_QTY) /1000,0) AS SHP_W3
     , ROUND(SUM(M1 * CONVERT_QTY) /1000,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1000,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMKA1' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W3 END AS SHP_W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_MONTH = '202003'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202010', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202011', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202012', SHP_QTY, 0)) AS SHP_W2 
                     , SUM(DECODE(PLAN_WEEK, '202013', SHP_QTY, 0)) AS SHP_W3 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202003%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202013'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202013'
                           AND PLAN_MONTH = '202003'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202010' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202011' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202012' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202013' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202014' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202003', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202004', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMVA2'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(SHP_W3,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH CUT_OFF AS
(
 SELECT SAP_CODE, WORK_DATE, SYS_DATE, W1_CUTOFF
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 24
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 0
             ELSE ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS THIS_WEEK_TIME
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 0
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 24
             ELSE 24 - ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS NEXT_WEEK_TIME
      , TO_CHAR(W1_CUTOFF,'D') AS CKD_DAY
   FROM RSUMCUTOFF A
      , (
         SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, SYS_DATE AS WORK_DATE, TO_DATE(SYS_DATE, 'YYYYMMDD') AS SYS_DATE
           FROM MWIPCALDEF
          WHERE CALENDAR_ID = 'OTD'
            AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') 
        ) B
  WHERE 1=1
    AND A.WORK_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMKA1'
    AND A.OPER IN ('A0020', 'A0100')
), 
DT AS
(
SELECT STD.VENDOR_ID
     , STD.WORK_DATE
     , DECODE(RNK, 1, W1_QTY) AS W1_QTY
     , DECODE(RNK, 1, TTL_WIP) AS TTL_WIP
     , DECODE(RNK, 1, WF_DEF) AS WF_DEF
     , TTL_WEEK_NEED
     , SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_TTL_WEEK_NEED
     , RCV_QTY
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_RCV_QTY 
     , PLN_QTY
     , SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_PLN_QTY 
     , SHP_QTY
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHP_QTY
     , NVL(RCV_QTY,0) - NVL(TTL_WEEK_NEED,0) AS SHORT_WF
     , NVL(SHP_QTY,0) - NVL(PLN_QTY,0) AS SHORT_SHP
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_WF
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_SHP
     , CKD_DAY
  FROM (
        SELECT A.VENDOR_ID
             , B.WORK_DATE
             , A.W1_QTY
             , A.TTL_WIP
             , A.WF_DEF
             , A.W2_QTY
             , A.THIS_WEEK_TIME_IN
             , A.NEXT_WEEK_TIME_IN 
             , ROUND(B.THIS_WEEK_TIME) AS THIS_WEEK_TIME
             , ROUND(B.NEXT_WEEK_TIME) AS NEXT_WEEK_TIME
             , ROUND(A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME, 2) AS THIS_WEEK_NEED
             , ROUND(A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME, 2) AS NEXT_WEEK_NEED
             , ROUND((A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME) + (A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME), 2) AS TTL_WEEK_NEED
             , CASE WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 7 THEN D0_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 1 THEN D1_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 2 THEN D2_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 3 THEN D3_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 4 THEN D4_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 5 THEN D5_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 6 THEN D6_QTY
                    ELSE 0
               END PLN_QTY 
             , ROW_NUMBER() OVER(PARTITION BY A.VENDOR_ID ORDER BY B.WORK_DATE) AS RNK
             , CKD_DAY
          FROM (
                SELECT A.*
                     , ROUND(DECODE(THIS_TIME_SUM, 0, 0, WF_DEF / THIS_TIME_SUM), 2) AS THIS_WEEK_TIME_IN
                  FROM (
                        SELECT VENDOR_ID
                             , W1_QTY
                             , TTL_WIP
                             , NVL(W1_QTY,0) - NVL(TTL_WIP,0) AS WF_DEF
                             , W2_QTY
                             , D0_QTY, D1_QTY, D2_QTY, D3_QTY, D4_QTY, D5_QTY, D6_QTY
                             , ROUND(W2_QTY / 168,2) AS NEXT_WEEK_TIME_IN
                             , NVL((       
                                    SELECT SUM(THIS_WEEK_TIME) AS THIS_WEEK_TIME
                                      FROM CUT_OFF
                                     WHERE SAP_CODE = VENDOR_ID
                                     GROUP BY SAP_CODE 
                                   ),0) AS THIS_TIME_SUM
                          FROM (
                                SELECT VENDOR_ID
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W1_QTY END) AS W1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W2_QTY END) AS W2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D0_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D0_QTY END) AS D0_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D1_QTY END) AS D1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D2_QTY END) AS D2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D3_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D3_QTY END) AS D3_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D4_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D4_QTY END) AS D4_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D5_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D5_QTY END) AS D5_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D6_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D6_QTY END) AS D6_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN TTL_WIP/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE TTL_WIP END) AS TTL_WIP
                                  FROM (
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D0_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D1_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D2_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D3_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D4_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D5_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D6_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMKA1' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202013', '202014')
                                           AND MAT_ID NOT LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                         UNION ALL
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202012', D5_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202012', D6_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D0_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D1_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D2_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D3_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D4_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMKA1' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202012', '202013', '202014')
                                           AND MAT_ID LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                       ) PLN
                                     , (
                                        SELECT A.MAT_ID
                                             , HALF_WIP / NVL(DATA_1,1) AS HALF_WIP
                                             , STD_WIP
                                             , NVL(HALF_WIP / NVL(DATA_1,1),0) + NVL(STD_WIP, 0) AS TTL_WIP
                                          FROM (
                                                SELECT MAT_ID
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) HALF_WIP
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER > 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER > 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) STD_WIP
                                                  FROM (
                                                        SELECT OPER
                                                             , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                                         THEN DECODE(B.MAT_GRP_5, '1st', 0, QTY_1)
                                                                    WHEN (B.MAT_GRP_5 IN ('-', '1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN QTY_1
                                                               END QTY_1
                                                             , B.*
                                                          FROM RWIPLOTSTS_BOH A
                                                             , MWIPMATDEF B
                                                         WHERE 1=1
                                                           AND A.FACTORY = B.FACTORY 
                                                           AND A.MAT_ID = B.MAT_ID    
                                                           AND A.FACTORY = 'HMKA1'
                                                           AND A.CUTOFF_DT = '2020032022'
                                                           AND A.LOT_TYPE = 'W'
                                                           AND A.LOT_DEL_FLAG = ' '  
                                                           AND B.DELETE_FLAG = ' ' 
                                                           AND A.LOT_CMF_5 LIKE 'P%'
                                                           AND B.MAT_GRP_2 <> '-'
                                                           AND (B.MAT_GRP_5 IN ('-', '1st', '2nd', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%')
                                                       )
                                                 GROUP BY MAT_ID
                                               ) A
                                             , (
                                                SELECT KEY_1 AS MAT_ID, DATA_1
                                                  FROM MGCMTBLDAT 
                                                 WHERE FACTORY = 'HMKA1' 
                                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                                               ) B
                                         WHERE A.MAT_ID = B.MAT_ID(+) 
                                       ) WIP
                                     , MWIPMATDEF MAT
                                 WHERE 1=1
                                   AND MAT.MAT_ID = PLN.MAT_ID(+)
                                   AND MAT.MAT_ID = WIP.MAT_ID(+)
                                   AND MAT.FACTORY = 'HMKA1'
                                   AND MAT.DELETE_FLAG = ' '
                                   AND MAT.MAT_TYPE = 'FG'
                                 GROUP BY VENDOR_ID
                               )
                         WHERE W1_QTY > 0
                       ) A                 
               ) A
             , CUT_OFF B
         WHERE 1=1
           AND A.VENDOR_ID = B.SAP_CODE
       ) STD
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(RCV_QTY) AS RCV_QTY
          FROM (
                SELECT WORK_DATE, A.MAT_ID
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , RCV_QTY_1 / NVL(DATA_1,1) AS RCV_QTY    
                  FROM (
                        SELECT WORK_DATE, MAT_ID
                             , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN RCV_QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))                              
                                              ELSE RCV_QTY_1
                                         END),0) AS RCV_QTY_1             
                          FROM (
                                SELECT WORK_DATE
                                     , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                 THEN DECODE(B.MAT_GRP_5, '1st', 0, RCV_QTY_1)
                                            WHEN B.MAT_GRP_5 IN ('-', '1st') THEN RCV_QTY_1
                                       END RCV_QTY_1
                                     , B.* 
                                  FROM VSUMWIPRCV A
                                     , MWIPMATDEF B
                                 WHERE 1=1
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.MAT_ID = B.MAT_ID    
                                   AND A.FACTORY = 'HMKA1'
                                   AND A.WORK_DATE BETWEEN '20200321' AND '20200326'
                                   AND A.LOT_TYPE = 'W' 
                                   AND B.DELETE_FLAG = ' ' 
                                   AND A.CM_KEY_3 LIKE 'P%'
                                   AND B.MAT_GRP_2 <> '-'
                                   AND B.MAT_GRP_5 IN ('-', '1st', '2nd')
                               )
                         GROUP BY WORK_DATE, MAT_ID
                       ) A
                     , (
                        SELECT KEY_1 AS MAT_ID, DATA_1
                          FROM MGCMTBLDAT 
                         WHERE FACTORY = 'HMKA1' 
                           AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                       ) B
                 WHERE A.MAT_ID = B.MAT_ID(+)
               )
         GROUP BY VENDOR_ID, WORK_DATE
       ) RCV
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(SHP_QTY_1) AS SHP_QTY
          FROM (
                SELECT WORK_DATE
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , A.MAT_ID 
                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1)/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                            ELSE S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 
                       END AS SHP_QTY_1 
                  FROM RSUMFACMOV A
                     , MWIPMATDEF B
                 WHERE 1 = 1 
                   AND A.MAT_ID = B.MAT_ID
                   AND A.CM_KEY_1 = B.FACTORY
                   AND A.WORK_DATE BETWEEN '20200321' AND '20200326'
                   AND A.LOT_TYPE = 'W'
                   AND A.CM_KEY_1 = 'HMKA1' 
                   AND A.CM_KEY_2 = 'PROD'
                   AND A.CM_KEY_3 LIKE 'P%'
                   AND A.FACTORY NOT IN ('RETURN')
                   AND S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 > 0
               )
         GROUP BY VENDOR_ID, WORK_DATE 
       ) SHP
 WHERE 1=1   
   AND STD.WORK_DATE  = RCV.WORK_DATE(+)
   AND STD.WORK_DATE = SHP.WORK_DATE(+)   
   AND STD.VENDOR_ID = RCV.VENDOR_ID(+)
   AND STD.VENDOR_ID = SHP.VENDOR_ID(+)   
)
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(NVL(SUM(W1_QTY), 0) / 1, 0) AS W1_QTY
     , ROUND(NVL(SUM(TTL_WIP), 0) / 1, 0) AS TTL_WIP
     , ROUND(NVL(SUM(WF_DEF), 0) / 1, 0) AS WF_DEF
     , GUBUN_1
     , GUBUN_2
     , ROUND(SUM(D0) / 1, 0) AS D0
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 7 THEN 0 ELSE ROUND(SUM(D1), 0) END / 1, 0) AS D1
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1) THEN 0 ELSE ROUND(SUM(D2), 0) END / 1, 0) AS D2
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2) THEN 0 ELSE ROUND(SUM(D3), 0) END / 1, 0) AS D3
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3) THEN 0 ELSE ROUND(SUM(D4), 0) END / 1, 0) AS D4
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3,4) THEN 0 ELSE ROUND(SUM(D5), 0) END / 1, 0) AS D5
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3,4,5) THEN 0 ELSE ROUND(SUM(D6), 0) END / 1, 0) AS D6
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 7 THEN ROUND(SUM(D0), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 1 THEN ROUND(SUM(D1), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 2 THEN ROUND(SUM(D2), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 3 THEN ROUND(SUM(D3), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 4 THEN ROUND(SUM(D4), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 5 THEN ROUND(SUM(D5), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 6 THEN ROUND(SUM(D6), 0)
            ELSE ROUND(NVL(SUM(D0),0) + NVL(SUM(D1),0) + NVL(SUM(D2),0) + NVL(SUM(D3),0) + NVL(SUM(D4),0) + NVL(SUM(D5),0) + NVL(SUM(D6),0), 0)
       END / 1, 0) AS TTL
     , MAX(CKD_DAY) AS CKD_DAY
  FROM (
        SELECT VENDOR_ID, SUM(W1_QTY) AS W1_QTY, SUM(TTL_WIP) AS TTL_WIP, SUM(WF_DEF) AS WF_DEF, MAX(CKD_DAY) AS CKD_DAY
          FROM DT
         GROUP BY VENDOR_ID
       ) STD
     , (
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', TTL_WEEK_NEED)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', TTL_WEEK_NEED)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', TTL_WEEK_NEED)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', TTL_WEEK_NEED)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', TTL_WEEK_NEED)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', TTL_WEEK_NEED)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', TTL_WEEK_NEED)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', RCV_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', RCV_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', RCV_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', RCV_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', RCV_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', RCV_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', RCV_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SUM_SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SUM_SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SUM_SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SUM_SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SUM_SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SUM_SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SUM_SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', PLN_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', PLN_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', PLN_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', PLN_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', PLN_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', PLN_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', PLN_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHP_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHP_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHP_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHP_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHP_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHP_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHP_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SUM_SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SUM_SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SUM_SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SUM_SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SUM_SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SUM_SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SUM_SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
       ) DAT
     , (
        SELECT DISTINCT MAT_GRP_1,  ' ', MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', VENDOR_ID 
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMKA1'
           AND MAT_TYPE = 'FG'
           AND DELETE_FLAG = ' '
           AND VENDOR_ID <> ' '
           AND SUBSTR(VENDOR_ID, 5, 4) <> '0000'
           AND MAT_ID LIKE '%'
       ) MAT
 WHERE 1=1
   AND MAT.VENDOR_ID = STD.VENDOR_ID 
   AND MAT.VENDOR_ID = DAT.VENDOR_ID(+) 
 GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, GUBUN_2 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, DECODE(GUBUN_2, '계획', 1, '실적', 2, '과부족', 3, 4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) CUSTOMER, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
     , ROUND(SUM(ORI_PLN) / 1000, 0) AS ORI_PLN
     , ROUND(SUM(REV_PLN) / 1000, 0) AS REV_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , ROUND(DECODE(SUM(ORI_PLN), 0, 0, SUM(SHP_TTL) / SUM(ORI_PLN) * 100), 1) AS JINDO_1
     , ROUND(DECODE(SUM(REV_PLN), 0, 0, SUM(SHP_TTL) / SUM(REV_PLN) * 100), 1) AS JINDO_2
     , ROUND(SUM(D1_PLAN) / 1000, 0) AS D1_PLAN
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0)) / 1000, 0) AS D0_PLAN
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0) - NVL(SHP_TODAY,0)) / 1000, 0) AS D0_DEF
     , ROUND(SUM(HMK3A) / 1000, 0) AS HMK3A
     , ROUND(SUM(QC_GATE) / 1000, 0) AS QC_GATE
     , ROUND(SUM(PVI) / 1000, 0) AS PVI
     , ROUND(SUM(AVI) / 1000, 0) AS AVI
     , ROUND(SUM(SIG) / 1000, 0) AS SIG
     , ROUND(SUM(SBA) / 1000, 0) AS SBA
     , ROUND(SUM(TIN) / 1000, 0) AS TIN
     , ROUND(SUM(TRIM) / 1000, 0) AS TRIM
     , ROUND(SUM(MK) / 1000, 0) AS MK
     , ROUND(SUM(CURE) / 1000, 0) AS CURE
     , ROUND(SUM(MOLD) / 1000, 0) AS MOLD
     , ROUND(SUM(F_GATE) / 1000, 0) AS F_GATE
     , ROUND(SUM(F_WB9) / 1000, 0) AS F_WB9
     , ROUND(SUM(F_DA9) / 1000, 0) AS F_DA9
     , ROUND(SUM(F_WB8) / 1000, 0) AS F_WB8
     , ROUND(SUM(F_DA8) / 1000, 0) AS F_DA8
     , ROUND(SUM(F_WB7) / 1000, 0) AS F_WB7
     , ROUND(SUM(F_DA7) / 1000, 0) AS F_DA7
     , ROUND(SUM(F_WB6) / 1000, 0) AS F_WB6
     , ROUND(SUM(F_DA6) / 1000, 0) AS F_DA6
     , ROUND(SUM(F_WB5) / 1000, 0) AS F_WB5
     , ROUND(SUM(F_DA5) / 1000, 0) AS F_DA5
     , ROUND(SUM(F_WB4) / 1000, 0) AS F_WB4
     , ROUND(SUM(F_DA4) / 1000, 0) AS F_DA4
     , ROUND(SUM(F_WB3) / 1000, 0) AS F_WB3
     , ROUND(SUM(F_DA3) / 1000, 0) AS F_DA3
     , ROUND(SUM(F_WB2) / 1000, 0) AS F_WB2
     , ROUND(SUM(F_DA2) / 1000, 0) AS F_DA2
     , ROUND(SUM(F_WB1) / 1000, 0) AS F_WB1
     , ROUND(SUM(F_DA1 + SMT) / 1000, 0) AS F_DA1
     , ROUND(SUM(SP) / 1000, 0) AS SP
     , ROUND(SUM(SAW) / 1000, 0) AS SAW
     , ROUND(SUM(BG) / 1000, 0) AS BG
     , ROUND(SUM(STOCK) / 1000, 0) AS STOCK
     , ROUND(SUM(HMK3A + QC_GATE + PVI + AVI + SIG + SBA + TIN + TRIM + MK + CURE + MOLD + F_GATE + F_WB5 + F_DA5 + 
                 F_WB4 + F_DA4 + F_WB3 + F_DA3 + F_WB2 + F_DA2 + F_WB1 + F_DA1 + SP + SAW + BG + STOCK) / 1000, 0) AS WIP_TTL 
     , ROUND(SUM(RCV_QTY) / 1000, 0) AS RCV_QTY
     , ROUND(SUM(OUT_HMKA3) / 1000, 0) AS OUT_HMKA3
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(OUT_SIG) / 1000, 0) AS OUT_SIG
     , ROUND(SUM(OUT_MK) / 1000, 0) AS OUT_MK
     , ROUND(SUM(OUT_MOLD) / 1000, 0) AS OUT_MOLD
     , ROUND(SUM(OUT_WB9) / 1000, 0) AS OUT_WB9
     , ROUND(SUM(OUT_DA9) / 1000, 0) AS OUT_DA9
     , ROUND(SUM(OUT_WB8) / 1000, 0) AS OUT_WB8
     , ROUND(SUM(OUT_DA8) / 1000, 0) AS OUT_DA8
     , ROUND(SUM(OUT_WB7) / 1000, 0) AS OUT_WB7
     , ROUND(SUM(OUT_DA7) / 1000, 0) AS OUT_DA7
     , ROUND(SUM(OUT_WB6) / 1000, 0) AS OUT_WB6
     , ROUND(SUM(OUT_DA6) / 1000, 0) AS OUT_DA6
     , ROUND(SUM(OUT_WB5) / 1000, 0) AS OUT_WB5
     , ROUND(SUM(OUT_DA5) / 1000, 0) AS OUT_DA5
     , ROUND(SUM(OUT_WB4) / 1000, 0) AS OUT_WB4
     , ROUND(SUM(OUT_DA4) / 1000, 0) AS OUT_DA4
     , ROUND(SUM(OUT_WB3) / 1000, 0) AS OUT_WB3
     , ROUND(SUM(OUT_DA3) / 1000, 0) AS OUT_DA3
     , ROUND(SUM(OUT_WB2) / 1000, 0) AS OUT_WB2
     , ROUND(SUM(OUT_DA2) / 1000, 0) AS OUT_DA2
     , ROUND(SUM(OUT_WB1) / 1000, 0) AS OUT_WB1
     , ROUND(SUM(OUT_DA1) / 1000, 0) AS OUT_DA1
     , ROUND(SUM(OUT_DDS) / 1000, 0) AS OUT_DDS
     , ROUND(SUM(OUT_SAW) / 1000, 0) AS OUT_SAW
     , ROUND(SUM(OUT_BG) / 1000, 0) AS OUT_BG
     , ROUND(SUM(OUT_STEALTH) / 1000, 0) AS OUT_STEALTH
     , ROUND(SUM(OUT_PRI) / 1000, 0) AS OUT_PRI
     , ROUND(SUM(OUT_LAMI) / 1000, 0) AS OUT_LAMI
     , ROUND(SUM(OUT_STOCK) / 1000, 0) AS OUT_STOCK
  FROM (
        SELECT MAT.*
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.ORI_PLN/MAT.NET_DIE,0) ELSE PLN.ORI_PLN END, 0) * PRICE AS ORI_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.REV_PLN/MAT.NET_DIE,0) ELSE PLN.REV_PLN END, 0) * PRICE AS REV_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D0_PLAN/MAT.NET_DIE,0) ELSE PLN.D0_PLAN END, 0) * PRICE AS D0_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D1_PLAN/MAT.NET_DIE,0) ELSE PLN.D1_PLAN END, 0) * PRICE AS D1_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_WEEK/MAT.NET_DIE,0) ELSE SHP.SHP_WEEK END, 0) * PRICE AS SHP_WEEK 
             , NVL(STOCK,0) * PRICE AS STOCK, NVL(BG,0) * PRICE AS BG, NVL(SAW,0) * PRICE AS SAW, NVL(SP,0) * PRICE AS SP, NVL(SMT,0) * PRICE AS SMT, NVL(DA,0) * PRICE AS DA
             , NVL(S_DA1,0) * PRICE AS S_DA1, NVL(S_DA2,0) * PRICE AS S_DA2, NVL(S_DA3,0) * PRICE AS S_DA3, NVL(S_DA4,0) * PRICE AS S_DA4, NVL(S_DA5,0) * PRICE AS S_DA5
             , NVL(S_DA6,0) * PRICE AS S_DA6, NVL(S_DA7,0) * PRICE AS S_DA7, NVL(S_DA8,0) * PRICE AS S_DA8, NVL(S_DA9,0) * PRICE AS S_DA9
             , NVL(F_DA1,0) * PRICE AS F_DA1, NVL(F_DA2,0) * PRICE AS F_DA2, NVL(F_DA3,0) * PRICE AS F_DA3, NVL(F_DA4,0) * PRICE AS F_DA4, NVL(F_DA5,0) * PRICE AS F_DA5
             , NVL(F_DA6,0) * PRICE AS F_DA6, NVL(F_DA7,0) * PRICE AS F_DA7, NVL(F_DA8,0) * PRICE AS F_DA8, NVL(F_DA9,0) * PRICE AS F_DA9
             , NVL(WB,0) * PRICE AS WB, NVL(S_WB1,0) * PRICE AS S_WB1, NVL(S_WB2,0) * PRICE AS S_WB2, NVL(S_WB3,0) * PRICE AS S_WB3, NVL(S_WB4,0) * PRICE AS S_WB4
             , NVL(S_WB5,0) * PRICE AS S_WB5, NVL(S_WB6,0) * PRICE AS S_WB6, NVL(S_WB7,0) * PRICE AS S_WB7, NVL(S_WB8,0) * PRICE AS S_WB8, NVL(S_WB9,0) * PRICE AS S_WB9
             , NVL(F_WB1,0) * PRICE AS F_WB1, NVL(F_WB2,0) * PRICE AS F_WB2, NVL(F_WB3,0) * PRICE AS F_WB3, NVL(F_WB4,0) * PRICE AS F_WB4
             , NVL(F_WB5,0) * PRICE AS F_WB5, NVL(F_WB6,0) * PRICE AS F_WB6, NVL(F_WB7,0) * PRICE AS F_WB7, NVL(F_WB8,0) * PRICE AS F_WB8, NVL(F_WB9,0) * PRICE AS F_WB9
             , NVL(GATE,0) * PRICE AS GATE, NVL(F_GATE,0) * PRICE  AS F_GATE, NVL(MOLD,0) * PRICE AS MOLD, NVL(CURE,0) * PRICE AS CURE
             , NVL(MK,0) * PRICE AS MK, NVL(TRIM,0) * PRICE AS TRIM, NVL(TIN,0) * PRICE AS TIN, NVL(SBA,0) * PRICE AS SBA, NVL(SIG,0) * PRICE AS SIG
             , NVL(AVI,0) * PRICE AS AVI, NVL(VI,0) * PRICE AS VI, NVL(PVI,0) * PRICE AS PVI, NVL(QC_GATE,0) * PRICE AS QC_GATE, NVL(HMK3A,0) * PRICE AS HMK3A
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_QTY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_QTY
             , NVL(MOV.OUT_WB,0) * PRICE AS OUT_WB
             , NVL(MOV.OUT_DA,0) * PRICE AS OUT_DA
             , NVL(MOV.OUT_DP,0) * PRICE AS OUT_DP
             , NVL(MOV.OUT_HMKA3,0) * PRICE AS OUT_HMKA3
             , NVL(MOV.OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(MOV.OUT_SIG,0) * PRICE AS OUT_SIG
             , NVL(MOV.OUT_MK,0) * PRICE AS OUT_MK
             , NVL(MOV.OUT_MOLD,0) * PRICE AS OUT_MOLD
             , NVL(MOV.OUT_WB9,0) * PRICE AS OUT_WB9
             , NVL(MOV.OUT_DA9,0) * PRICE AS OUT_DA9
             , NVL(MOV.OUT_WB8,0) * PRICE AS OUT_WB8
             , NVL(MOV.OUT_DA8,0) * PRICE AS OUT_DA8
             , NVL(MOV.OUT_WB7,0) * PRICE AS OUT_WB7
             , NVL(MOV.OUT_DA7,0) * PRICE AS OUT_DA7
             , NVL(MOV.OUT_WB6,0) * PRICE AS OUT_WB6
             , NVL(MOV.OUT_DA6,0) * PRICE AS OUT_DA6
             , NVL(MOV.OUT_WB5,0) * PRICE AS OUT_WB5
             , NVL(MOV.OUT_DA5,0) * PRICE AS OUT_DA5
             , NVL(MOV.OUT_WB4,0) * PRICE AS OUT_WB4
             , NVL(MOV.OUT_DA4,0) * PRICE AS OUT_DA4
             , NVL(MOV.OUT_WB3,0) * PRICE AS OUT_WB3
             , NVL(MOV.OUT_DA3,0) * PRICE AS OUT_DA3
             , NVL(MOV.OUT_WB2,0) * PRICE AS OUT_WB2
             , NVL(MOV.OUT_DA2,0) * PRICE AS OUT_DA2
             , NVL(MOV.OUT_WB1,0) * PRICE AS OUT_WB1
             , NVL(MOV.OUT_DA1,0) * PRICE AS OUT_DA1
             , NVL(MOV.OUT_DDS,0) * PRICE AS OUT_DDS
             , NVL(MOV.OUT_SAW,0) * PRICE AS OUT_SAW
             , NVL(MOV.OUT_BG,0) * PRICE AS OUT_BG
             , NVL(MOV.OUT_STEALTH,0) * PRICE AS OUT_STEALTH
             , NVL(MOV.OUT_PRI,0) * PRICE AS OUT_PRI
             , NVL(MOV.OUT_LAMI,0) * PRICE AS OUT_LAMI
             , NVL(MOV.OUT_STOCK,0) * PRICE AS OUT_STOCK
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMKA1'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 <> 'PW' 
               ) MAT
             , (
                SELECT MAT_ID 
                     , SUM(ORI_PLN) AS ORI_PLN 
                     , SUM(REV_PLN) AS REV_PLN 
                     , SUM(D0_PLAN) AS D0_PLAN 
                     , SUM(D1_PLAN) AS D1_PLAN 
                  FROM ( 
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS ORI_PLN, SUM(RESV_FIELD1) AS REV_PLN, 0 AS D0_PLAN, 0 AS D1_PLAN
                          FROM (
                                SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                                  FROM CWIPPLNMON 
                                 WHERE 1=1 
                                   AND FACTORY = 'HMKA1'
                                   AND PLAN_MONTH = '202003'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID
                        HAVING SUM(PLAN_QTY_ASSY + RESV_FIELD1) > 0
                         UNION ALL
                        SELECT MAT_ID, 0, 0
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY + D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY + D6_QTY 
                                        ELSE 0 
                                   END) AS D0_PLAN 
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200326', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                        ELSE 0 
                                   END) AS D1_PLAN 
                          FROM (
                                SELECT FACTORY, MAT_ID 
                                     , SUM(DECODE(PLAN_WEEK, '202013', D0_QTY, 0)) AS D0_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D1_QTY, 0)) AS D1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D2_QTY, 0)) AS D2_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D3_QTY, 0)) AS D3_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D4_QTY, 0)) AS D4_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D5_QTY, 0)) AS D5_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', D6_QTY, 0)) AS D6_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D0_QTY, 0)) AS D7_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D1_QTY, 0)) AS D8_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D2_QTY, 0)) AS D9_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D3_QTY, 0)) AS D10_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D4_QTY, 0)) AS D11_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D5_QTY, 0)) AS D12_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', D6_QTY, 0)) AS D13_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS W1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS W2_QTY  
                                  FROM RWIPPLNWEK  
                                 WHERE 1=1  
                                   AND FACTORY = 'HMKA1'  
                                   AND GUBUN = '3'  
                                   AND PLAN_WEEK IN ('202013','202014') 
                                 GROUP BY FACTORY, MAT_ID  
                               )  
                         GROUP BY MAT_ID  
                       ) 
                 GROUP BY MAT_ID  
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200301' AND '20200326' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200326', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200321' AND '20200325' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200301' AND '20200326' 
                   AND FACTORY = 'HMKA1' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200301' AND '20200326' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200326', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200321' AND '20200325' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200301' AND '20200326' 
                   AND FACTORY = 'HMKA1' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID 
               ) SHP
             , (
                SELECT MAT_ID, SUM(RCV_QTY_1) AS RCV_QTY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMKA1'
                   AND WORK_DATE = '20200326'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)) AS STOCK
                     , SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)) AS BG
                     , SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)) AS SAW
                     , SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)) AS SP 
                     , SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)) AS SMT 
                     , SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)) AS DA
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0305', 'A0306', 'A0310', 'A0333', 'A0340', 'A0400', 'A0401', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS S_DA1
                     , SUM(CASE WHEN OPER IN ('A0402', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS S_DA2
                     , SUM(CASE WHEN OPER IN ('A0403', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS S_DA3
                     , SUM(CASE WHEN OPER IN ('A0404', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS S_DA4
                     , SUM(CASE WHEN OPER IN ('A0405', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS S_DA5
                     , SUM(CASE WHEN OPER IN ('A0406', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS S_DA6
                     , SUM(CASE WHEN OPER IN ('A0407', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS S_DA7
                     , SUM(CASE WHEN OPER IN ('A0408', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS S_DA8
                     , SUM(CASE WHEN OPER IN ('A0409', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS S_DA9
                     , SUM(CASE WHEN OPER IN ('A0250','A0333','A0340','A0400', 'A0401') THEN QTY ELSE 0 END) AS F_DA1
                     , SUM(CASE WHEN OPER IN ('A0402') THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA2 
                     , SUM(CASE WHEN OPER IN ('A0403') THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA3 
                     , SUM(CASE WHEN OPER IN ('A0404') THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA4 
                     , SUM(CASE WHEN OPER IN ('A0405') THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA5 
                     , SUM(CASE WHEN OPER IN ('A0406') THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA6 
                     , SUM(CASE WHEN OPER IN ('A0407') THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA7 
                     , SUM(CASE WHEN OPER IN ('A0408') THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA8 
                     , SUM(CASE WHEN OPER IN ('A0409') THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA9 
                     , SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)) AS WB
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0800', 'A0801') THEN QTY ELSE 0 END) AS S_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0802') THEN QTY ELSE 0 END) AS S_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0803') THEN QTY ELSE 0 END) AS S_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0804') THEN QTY ELSE 0 END) AS S_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0805') THEN QTY ELSE 0 END) AS S_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0806') THEN QTY ELSE 0 END) AS S_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0807') THEN QTY ELSE 0 END) AS S_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0808') THEN QTY ELSE 0 END) AS S_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0809') THEN QTY ELSE 0 END) AS S_WB9
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS F_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS F_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS F_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS F_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS F_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS F_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS F_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS F_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS F_WB9
                     , SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)) AS GATE
                     , SUM(CASE WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_5 = '-' THEN QTY 
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN QTY
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN QTY  
                                ELSE 0 END) AS F_GATE 
                     , SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)) AS MOLD
                     , SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)) AS CURE
                     , SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)) AS MK
                     , SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)) AS TRIM
                     , SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)) AS TIN
                     , SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)) AS SBA
                     , SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)) AS SIG
                     , SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)) AS AVI
                     , SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)) AS VI
                     , SUM(CASE WHEN OPER IN ('A2030', 'A2050') THEN QTY ELSE 0 END) AS PVI
                     , SUM(DECODE(OPER, 'A2100', QTY, 0)) AS QC_GATE
                     , SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)) AS HMK3A
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMKA1'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' ' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54')
                               )
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                 ELSE 0
                           END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A0000' THEN QTY ELSE 0 END) AS OUT_STOCK
                     , SUM(CASE WHEN OPER = 'A0020' THEN QTY ELSE 0 END) AS OUT_LAMI
                     , SUM(CASE WHEN OPER = 'A0030' THEN QTY ELSE 0 END) AS OUT_PRI
                     , SUM(CASE WHEN OPER = 'A0033' THEN QTY ELSE 0 END) AS OUT_STEALTH
                     , SUM(CASE WHEN OPER = 'A0040' THEN QTY ELSE 0 END) AS OUT_BG
                     , SUM(CASE WHEN OPER = 'A0200' THEN QTY ELSE 0 END) AS OUT_SAW
                     , SUM(CASE WHEN OPER = 'A0230' THEN QTY ELSE 0 END) AS OUT_DDS
                     , SUM(CASE WHEN OPER IN ('A0400', 'A0401', 'A0333') THEN QTY ELSE 0 END) AS OUT_DA1
                     , SUM(CASE WHEN OPER IN ('A0600', 'A0601') THEN QTY ELSE 0 END) AS OUT_WB1
                     , SUM(CASE WHEN OPER = 'A0402' THEN QTY ELSE 0 END) AS OUT_DA2
                     , SUM(CASE WHEN OPER = 'A0602' THEN QTY ELSE 0 END) AS OUT_WB2
                     , SUM(CASE WHEN OPER = 'A0403' THEN QTY ELSE 0 END) AS OUT_DA3
                     , SUM(CASE WHEN OPER = 'A0603' THEN QTY ELSE 0 END) AS OUT_WB3
                     , SUM(CASE WHEN OPER = 'A0404' THEN QTY ELSE 0 END) AS OUT_DA4
                     , SUM(CASE WHEN OPER = 'A0604' THEN QTY ELSE 0 END) AS OUT_WB4
                     , SUM(CASE WHEN OPER = 'A0405' THEN QTY ELSE 0 END) AS OUT_DA5
                     , SUM(CASE WHEN OPER = 'A0605' THEN QTY ELSE 0 END) AS OUT_WB5
                     , SUM(CASE WHEN OPER = 'A0406' THEN QTY ELSE 0 END) AS OUT_DA6
                     , SUM(CASE WHEN OPER = 'A0606' THEN QTY ELSE 0 END) AS OUT_WB6
                     , SUM(CASE WHEN OPER = 'A0407' THEN QTY ELSE 0 END) AS OUT_DA7
                     , SUM(CASE WHEN OPER = 'A0607' THEN QTY ELSE 0 END) AS OUT_WB7
                     , SUM(CASE WHEN OPER = 'A0408' THEN QTY ELSE 0 END) AS OUT_DA8
                     , SUM(CASE WHEN OPER = 'A0608' THEN QTY ELSE 0 END) AS OUT_WB8
                     , SUM(CASE WHEN OPER = 'A0409' THEN QTY ELSE 0 END) AS OUT_DA9
                     , SUM(CASE WHEN OPER = 'A0609' THEN QTY ELSE 0 END) AS OUT_WB9
                     , SUM(CASE WHEN OPER = 'A1000' THEN QTY ELSE 0 END) AS OUT_MOLD 
                     , SUM(CASE WHEN OPER IN ('A1150', 'A1500') THEN QTY ELSE 0 END) AS OUT_MK
                     , SUM(CASE WHEN OPER IN ('A1750', 'A1800', 'A1900') THEN QTY ELSE 0 END) AS OUT_SIG
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                     , SUM(CASE WHEN OPER = 'AZ010' THEN QTY ELSE 0 END) AS OUT_HMKA3 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , CASE WHEN OPER = 'AZ010' THEN S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1
                                                    ELSE S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1
                                               END END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMKA1'
                                           AND A.WORK_DATE = '20200326'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%'   
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0000|A0200|A0230|A0333|A040*|A060*|A1000|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
           AND NVL(ORI_PLN,0)+NVL(REV_PLN,0)+NVL(SHP_TTL,0)+NVL(RCV_QTY,0)+NVL(WIP_TTL,0)+NVL(D0_PLAN,0)+NVL(D1_PLAN,0)+NVL(SHP_WEEK,0) <> 0
       ) A
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
 ORDER BY DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5,6), CUSTOMER, MAT_GRP_9, MAT_GRP_10

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH CUT_OFF AS
(
 SELECT SAP_CODE, WORK_DATE, SYS_DATE, W1_CUTOFF
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 24
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 0
             ELSE ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS THIS_WEEK_TIME
      , CASE WHEN SYS_DATE - W1_CUTOFF <= -1 THEN 0
             WHEN SYS_DATE - W1_CUTOFF > 0 THEN 24
             ELSE 24 - ABS((SYS_DATE - W1_CUTOFF) * 24)
        END AS NEXT_WEEK_TIME
      , TO_CHAR(W1_CUTOFF,'D') AS CKD_DAY
   FROM RSUMCUTOFF A
      , (
         SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, SYS_DATE AS WORK_DATE, TO_DATE(SYS_DATE, 'YYYYMMDD') AS SYS_DATE
           FROM MWIPCALDEF
          WHERE CALENDAR_ID = 'OTD'
            AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') 
        ) B
  WHERE 1=1
    AND A.WORK_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMKA1'
    AND A.OPER IN ('A0020', 'A0100')
), 
DT AS
(
SELECT STD.VENDOR_ID
     , STD.WORK_DATE
     , DECODE(RNK, 1, W1_QTY) AS W1_QTY
     , DECODE(RNK, 1, TTL_WIP) AS TTL_WIP
     , DECODE(RNK, 1, WF_DEF) AS WF_DEF
     , TTL_WEEK_NEED
     , SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_TTL_WEEK_NEED
     , RCV_QTY
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_RCV_QTY 
     , PLN_QTY
     , SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_PLN_QTY 
     , SHP_QTY
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHP_QTY
     , NVL(RCV_QTY,0) - NVL(TTL_WEEK_NEED,0) AS SHORT_WF
     , NVL(SHP_QTY,0) - NVL(PLN_QTY,0) AS SHORT_SHP
     , SUM(NVL(RCV_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(TTL_WEEK_NEED,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_WF
     , SUM(NVL(SHP_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -
       SUM(NVL(PLN_QTY,0)) OVER(PARTITION BY STD.VENDOR_ID ORDER BY STD.WORK_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS SUM_SHORT_SHP
     , CKD_DAY
  FROM (
        SELECT A.VENDOR_ID
             , B.WORK_DATE
             , A.W1_QTY
             , A.TTL_WIP
             , A.WF_DEF
             , A.W2_QTY
             , A.THIS_WEEK_TIME_IN
             , A.NEXT_WEEK_TIME_IN 
             , ROUND(B.THIS_WEEK_TIME) AS THIS_WEEK_TIME
             , ROUND(B.NEXT_WEEK_TIME) AS NEXT_WEEK_TIME
             , ROUND(A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME, 2) AS THIS_WEEK_NEED
             , ROUND(A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME, 2) AS NEXT_WEEK_NEED
             , ROUND((A.THIS_WEEK_TIME_IN * THIS_WEEK_TIME) + (A.NEXT_WEEK_TIME_IN * NEXT_WEEK_TIME), 2) AS TTL_WEEK_NEED
             , CASE WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 7 THEN D0_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 1 THEN D1_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 2 THEN D2_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 3 THEN D3_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 4 THEN D4_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 5 THEN D5_QTY
                    WHEN TO_CHAR(TO_DATE(B.WORK_DATE,'YYYYMMDD'),'D') = 6 THEN D6_QTY
                    ELSE 0
               END PLN_QTY 
             , ROW_NUMBER() OVER(PARTITION BY A.VENDOR_ID ORDER BY B.WORK_DATE) AS RNK
             , CKD_DAY
          FROM (
                SELECT A.*
                     , ROUND(DECODE(THIS_TIME_SUM, 0, 0, WF_DEF / THIS_TIME_SUM), 2) AS THIS_WEEK_TIME_IN
                  FROM (
                        SELECT VENDOR_ID
                             , W1_QTY
                             , TTL_WIP
                             , NVL(W1_QTY,0) - NVL(TTL_WIP,0) AS WF_DEF
                             , W2_QTY
                             , D0_QTY, D1_QTY, D2_QTY, D3_QTY, D4_QTY, D5_QTY, D6_QTY
                             , ROUND(W2_QTY / 168,2) AS NEXT_WEEK_TIME_IN
                             , NVL((       
                                    SELECT SUM(THIS_WEEK_TIME) AS THIS_WEEK_TIME
                                      FROM CUT_OFF
                                     WHERE SAP_CODE = VENDOR_ID
                                     GROUP BY SAP_CODE 
                                   ),0) AS THIS_TIME_SUM
                          FROM (
                                SELECT VENDOR_ID
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W1_QTY END) AS W1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN W2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE W2_QTY END) AS W2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D0_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D0_QTY END) AS D0_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D1_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D1_QTY END) AS D1_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D2_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D2_QTY END) AS D2_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D3_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D3_QTY END) AS D3_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D4_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D4_QTY END) AS D4_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D5_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D5_QTY END) AS D5_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN D6_QTY/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE D6_QTY END) AS D6_QTY
                                     , SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN TTL_WIP/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13)) ELSE TTL_WIP END) AS TTL_WIP
                                  FROM (
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D0_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D1_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D2_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D3_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D4_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D5_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D6_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMKA1' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202013', '202014')
                                           AND MAT_ID NOT LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                         UNION ALL
                                        SELECT MAT_ID 
                                             , SUM(DECODE(PLAN_WEEK, '202013', WW_QTY, 0)) AS W1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202014', WW_QTY, 0)) AS W2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202012', D5_QTY, 0)) AS D0_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202012', D6_QTY, 0)) AS D1_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D0_QTY, 0)) AS D2_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D1_QTY, 0)) AS D3_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D2_QTY, 0)) AS D4_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D3_QTY, 0)) AS D5_QTY 
                                             , SUM(DECODE(PLAN_WEEK, '202013', D4_QTY, 0)) AS D6_QTY 
                                          FROM RWIPPLNWEK
                                         WHERE FACTORY = 'HMKA1' 
                                           AND GUBUN = '3' 
                                           AND PLAN_WEEK IN ('202012', '202013', '202014')
                                           AND MAT_ID LIKE 'SES%' 
                                         GROUP BY MAT_ID
                                       ) PLN
                                     , (
                                        SELECT A.MAT_ID
                                             , HALF_WIP / NVL(DATA_1,1) AS HALF_WIP
                                             , STD_WIP
                                             , NVL(HALF_WIP / NVL(DATA_1,1),0) + NVL(STD_WIP, 0) AS TTL_WIP
                                          FROM (
                                                SELECT MAT_ID
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER BETWEEN 'A0000' AND 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) HALF_WIP
                                                     , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') AND OPER > 'A0395' THEN QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                                                                      WHEN OPER > 'A0395' THEN QTY_1
                                                                      ELSE 0
                                                                 END),0) STD_WIP
                                                  FROM (
                                                        SELECT OPER
                                                             , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                                         THEN DECODE(B.MAT_GRP_5, '1st', 0, QTY_1)
                                                                    WHEN (B.MAT_GRP_5 IN ('-', '1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN QTY_1
                                                               END QTY_1
                                                             , B.*
                                                          FROM RWIPLOTSTS_BOH A
                                                             , MWIPMATDEF B
                                                         WHERE 1=1
                                                           AND A.FACTORY = B.FACTORY 
                                                           AND A.MAT_ID = B.MAT_ID    
                                                           AND A.FACTORY = 'HMKA1'
                                                           AND A.CUTOFF_DT = '2020032022'
                                                           AND A.LOT_TYPE = 'W'
                                                           AND A.LOT_DEL_FLAG = ' '  
                                                           AND B.DELETE_FLAG = ' ' 
                                                           AND A.LOT_CMF_5 LIKE 'P%'
                                                           AND B.MAT_GRP_2 <> '-'
                                                           AND (B.MAT_GRP_5 IN ('-', '1st', '2nd', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%')
                                                       )
                                                 GROUP BY MAT_ID
                                               ) A
                                             , (
                                                SELECT KEY_1 AS MAT_ID, DATA_1
                                                  FROM MGCMTBLDAT 
                                                 WHERE FACTORY = 'HMKA1' 
                                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                                               ) B
                                         WHERE A.MAT_ID = B.MAT_ID(+) 
                                       ) WIP
                                     , MWIPMATDEF MAT
                                 WHERE 1=1
                                   AND MAT.MAT_ID = PLN.MAT_ID(+)
                                   AND MAT.MAT_ID = WIP.MAT_ID(+)
                                   AND MAT.FACTORY = 'HMKA1'
                                   AND MAT.DELETE_FLAG = ' '
                                   AND MAT.MAT_TYPE = 'FG'
                                 GROUP BY VENDOR_ID
                               )
                         WHERE W1_QTY > 0
                       ) A                 
               ) A
             , CUT_OFF B
         WHERE 1=1
           AND A.VENDOR_ID = B.SAP_CODE
       ) STD
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(RCV_QTY) AS RCV_QTY
          FROM (
                SELECT WORK_DATE, A.MAT_ID
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , RCV_QTY_1 / NVL(DATA_1,1) AS RCV_QTY    
                  FROM (
                        SELECT WORK_DATE, MAT_ID
                             , ROUND(SUM(CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN RCV_QTY_1/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))                              
                                              ELSE RCV_QTY_1
                                         END),0) AS RCV_QTY_1             
                          FROM (
                                SELECT WORK_DATE
                                     , CASE WHEN B.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_GRP_5 = '1st' AND MAT_ID LIKE 'SEKS%') 
                                                 THEN DECODE(B.MAT_GRP_5, '1st', 0, RCV_QTY_1)
                                            WHEN B.MAT_GRP_5 IN ('-', '1st') THEN RCV_QTY_1
                                       END RCV_QTY_1
                                     , B.* 
                                  FROM VSUMWIPRCV A
                                     , MWIPMATDEF B
                                 WHERE 1=1
                                   AND A.FACTORY = B.FACTORY 
                                   AND A.MAT_ID = B.MAT_ID    
                                   AND A.FACTORY = 'HMKA1'
                                   AND A.WORK_DATE BETWEEN '20200321' AND '20200326'
                                   AND A.LOT_TYPE = 'W' 
                                   AND B.DELETE_FLAG = ' ' 
                                   AND A.CM_KEY_3 LIKE 'P%'
                                   AND B.MAT_GRP_2 <> '-'
                                   AND B.MAT_GRP_5 IN ('-', '1st', '2nd')
                               )
                         GROUP BY WORK_DATE, MAT_ID
                       ) A
                     , (
                        SELECT KEY_1 AS MAT_ID, DATA_1
                          FROM MGCMTBLDAT 
                         WHERE FACTORY = 'HMKA1' 
                           AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                       ) B
                 WHERE A.MAT_ID = B.MAT_ID(+)
               )
         GROUP BY VENDOR_ID, WORK_DATE
       ) RCV
     , (
        SELECT VENDOR_ID, WORK_DATE, SUM(SHP_QTY_1) AS SHP_QTY
          FROM (
                SELECT WORK_DATE
                     , (SELECT VENDOR_ID FROM MWIPMATDEF WHERE FACTORY = 'HMKA1' AND MAT_ID = A.MAT_ID) AS VENDOR_ID
                     , A.MAT_ID 
                     , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN (S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1)/TO_NUMBER(DECODE(MAT_CMF_13,' ',1,MAT_CMF_13))
                            ELSE S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 
                       END AS SHP_QTY_1 
                  FROM RSUMFACMOV A
                     , MWIPMATDEF B
                 WHERE 1 = 1 
                   AND A.MAT_ID = B.MAT_ID
                   AND A.CM_KEY_1 = B.FACTORY
                   AND A.WORK_DATE BETWEEN '20200321' AND '20200326'
                   AND A.LOT_TYPE = 'W'
                   AND A.CM_KEY_1 = 'HMKA1' 
                   AND A.CM_KEY_2 = 'PROD'
                   AND A.CM_KEY_3 LIKE 'P%'
                   AND A.FACTORY NOT IN ('RETURN')
                   AND S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1 > 0
               )
         GROUP BY VENDOR_ID, WORK_DATE 
       ) SHP
 WHERE 1=1   
   AND STD.WORK_DATE  = RCV.WORK_DATE(+)
   AND STD.WORK_DATE = SHP.WORK_DATE(+)   
   AND STD.VENDOR_ID = RCV.VENDOR_ID(+)
   AND STD.VENDOR_ID = SHP.VENDOR_ID(+)   
)
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(NVL(SUM(W1_QTY), 0) / 1, 0) AS W1_QTY
     , ROUND(NVL(SUM(TTL_WIP), 0) / 1, 0) AS TTL_WIP
     , ROUND(NVL(SUM(WF_DEF), 0) / 1, 0) AS WF_DEF
     , GUBUN_1
     , GUBUN_2
     , ROUND(SUM(D0) / 1, 0) AS D0
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 7 THEN 0 ELSE ROUND(SUM(D1), 0) END / 1, 0) AS D1
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1) THEN 0 ELSE ROUND(SUM(D2), 0) END / 1, 0) AS D2
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2) THEN 0 ELSE ROUND(SUM(D3), 0) END / 1, 0) AS D3
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3) THEN 0 ELSE ROUND(SUM(D4), 0) END / 1, 0) AS D4
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3,4) THEN 0 ELSE ROUND(SUM(D5), 0) END / 1, 0) AS D5
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') IN (7,1,2,3,4,5) THEN 0 ELSE ROUND(SUM(D6), 0) END / 1, 0) AS D6
     , ROUND(CASE WHEN GUBUN_2 IN ('과부족','누계차') AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 7 THEN ROUND(SUM(D0), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 1 THEN ROUND(SUM(D1), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 2 THEN ROUND(SUM(D2), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 3 THEN ROUND(SUM(D3), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 4 THEN ROUND(SUM(D4), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 5 THEN ROUND(SUM(D5), 0)
            WHEN GUBUN_2 = '누계차' AND TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'D') = 6 THEN ROUND(SUM(D6), 0)
            ELSE ROUND(NVL(SUM(D0),0) + NVL(SUM(D1),0) + NVL(SUM(D2),0) + NVL(SUM(D3),0) + NVL(SUM(D4),0) + NVL(SUM(D5),0) + NVL(SUM(D6),0), 0)
       END / 1, 0) AS TTL
     , MAX(CKD_DAY) AS CKD_DAY
  FROM (
        SELECT VENDOR_ID, SUM(W1_QTY) AS W1_QTY, SUM(TTL_WIP) AS TTL_WIP, SUM(WF_DEF) AS WF_DEF, MAX(CKD_DAY) AS CKD_DAY
          FROM DT
         GROUP BY VENDOR_ID
       ) STD
     , (
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', TTL_WEEK_NEED)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', TTL_WEEK_NEED)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', TTL_WEEK_NEED)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', TTL_WEEK_NEED)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', TTL_WEEK_NEED)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', TTL_WEEK_NEED)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', TTL_WEEK_NEED)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', RCV_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', RCV_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', RCV_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', RCV_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', RCV_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', RCV_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', RCV_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , 'WAFER' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SUM_SHORT_WF)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SUM_SHORT_WF)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SUM_SHORT_WF)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SUM_SHORT_WF)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SUM_SHORT_WF)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SUM_SHORT_WF)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SUM_SHORT_WF)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '계획' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', PLN_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', PLN_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', PLN_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', PLN_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', PLN_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', PLN_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', PLN_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '실적' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHP_QTY)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHP_QTY)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHP_QTY)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHP_QTY)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHP_QTY)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHP_QTY)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHP_QTY)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '과부족' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
         UNION ALL
        SELECT VENDOR_ID
             , '일출하' AS GUBUN_1
             , '누계차' AS GUBUN_2
             , SUM(DECODE(WORK_DATE, '20200321', SUM_SHORT_SHP)) AS D0
             , SUM(DECODE(WORK_DATE, '20200322', SUM_SHORT_SHP)) AS D1
             , SUM(DECODE(WORK_DATE, '20200323', SUM_SHORT_SHP)) AS D2
             , SUM(DECODE(WORK_DATE, '20200324', SUM_SHORT_SHP)) AS D3
             , SUM(DECODE(WORK_DATE, '20200325', SUM_SHORT_SHP)) AS D4
             , SUM(DECODE(WORK_DATE, '20200326', SUM_SHORT_SHP)) AS D5
             , SUM(DECODE(WORK_DATE, '20200327', SUM_SHORT_SHP)) AS D6
          FROM DT
         GROUP BY VENDOR_ID
       ) DAT
     , (
        SELECT DISTINCT MAT_GRP_1,  ' ', MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', VENDOR_ID 
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMKA1'
           AND MAT_TYPE = 'FG'
           AND DELETE_FLAG = ' '
           AND VENDOR_ID <> ' '
           AND SUBSTR(VENDOR_ID, 5, 4) <> '0000'
           AND MAT_ID LIKE '%'
       ) MAT
 WHERE 1=1
   AND MAT.VENDOR_ID = STD.VENDOR_ID 
   AND MAT.VENDOR_ID = DAT.VENDOR_ID(+) 
 GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, GUBUN_2 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN_1, DECODE(GUBUN_2, '계획', 1, '실적', 2, '과부족', 3, 4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011010'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202002', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200325','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_VIEW AS (
SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS FAMILY, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' '
     , DECODE(SEQ, 1, '대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율') GUBUN, SEQ GUBUN_SEQ 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA_TTL, 0 ) ) DA_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB_TTL, 0 ) ) WB_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA1, 0 ) ) DA1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA2, 0 ) ) DA2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA3, 0 ) ) DA3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA4, 0 ) ) DA4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA5, 0 ) ) DA5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA6, 0 ) ) DA6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA7, 0 ) ) DA7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA8, 0 ) ) DA8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA9, 0 ) ) DA9 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB1, 0 ) ) WB1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB2, 0 ) ) WB2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB3, 0 ) ) WB3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB4, 0 ) ) WB4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB5, 0 ) ) WB5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB6, 0 ) ) WB6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB7, 0 ) ) WB7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB8, 0 ) ) WB8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB9, 0 ) ) WB9 
  FROM ( 
        SELECT B.MAT_GRP_1,  B.MAT_GRP_2,  B.MAT_GRP_3,  B.MAT_GRP_4,  B.MAT_GRP_5,  B.MAT_GRP_6,  B.MAT_GRP_7,  B.MAT_GRP_8,  B.MAT_GRP_9,  B.MAT_GRP_10,  B.MAT_CMF_10, B.MAT_CMF_11, GUBUN,  DA_TTL, WB_TTL, DA1, WB1, DA2, WB2, DA3, WB3, DA4, WB4, DA5, WB5, DA6, WB6, DA7, WB7, DA8, WB8, DA9, WB9 
          FROM ( 
                SELECT DECODE(V.V_COL,'RES', '1_설비댓수', '2_RUN_CNT') GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) DA_TTL 
                     , SUM( CASE WHEN OPER LIKE 'A060%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) WB_TTL 
                     , SUM( DECODE(OPER, 'A0400', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0401', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0) ) DA1 
                     , SUM( DECODE(OPER, 'A0600', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0601', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB1 
                     , SUM( DECODE(OPER, 'A0402', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA2, SUM( DECODE(OPER, 'A0602', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB2 
                     , SUM( DECODE(OPER, 'A0403', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA3,SUM( DECODE(OPER, 'A0603', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB3 
                     , SUM( DECODE(OPER, 'A0404', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA4, SUM( DECODE(OPER, 'A0604', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB4 
                     , SUM( DECODE(OPER, 'A0405', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA5, SUM( DECODE(OPER, 'A0605', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB5 
                     , SUM( DECODE(OPER, 'A0406', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA6, SUM( DECODE(OPER, 'A0606', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB6 
                     , SUM( DECODE(OPER, 'A0407', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA7, SUM( DECODE(OPER, 'A0607', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB7 
                     , SUM( DECODE(OPER, 'A0408', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA8, SUM( DECODE(OPER, 'A0608', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB8 
                     , SUM( DECODE(OPER, 'A0409', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA9, SUM( DECODE(OPER, 'A0609', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_STS_2 MAT_ID, RES_GRP_6 RES_MODEL, RES_GRP_7 UPEH_GROUP, RES_STS_8 OPER , COUNT(RES_ID) RES_CNT, NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(LOT.LOT_ID, '-'), '-', 0, 1))), 0)  RUN_CNT 
                          FROM MRASRESDEF_BOH RAS 
                             , ( 
                                SELECT * 
                                  FROM RWIPLOTSTS_BOH LOT 
                                 WHERE LOT.FACTORY = 'HMKA1' 
                                   AND LOT.CUTOFF_DT = '2020032522' 
                                   AND LOT.LOT_TYPE = 'W' AND LOT_DEL_FLAG = ' ' 
                                   AND LOT.LOT_CMF_5 LIKE 'P%' 
                                   AND (LOT.OPER LIKE 'A040%' OR LOT.OPER LIKE 'A060%' ) 
                                   AND LOT.LOT_STATUS = 'PROC' 
                               ) LOT 
                         WHERE RAS.FACTORY = 'HMKA1' 
                           AND RAS.CUTOFF_DT = '2020032522' 
                           AND RAS.FACTORY = LOT.FACTORY(+) 
                           AND RES_ID = LOT.START_RES_ID(+) 
                           AND RES_CMF_9 = 'Y' 
                           AND RES_CMF_7 = 'Y' 
                           AND DELETE_FLAG  = ' ' 
                           AND RES_TYPE  = 'EQUIPMENT' 
                           AND (RES_STS_8 LIKE 'A040%' OR RES_STS_8 LIKE 'A060%' ) 
                           AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RES_STS_2, RES_GRP_6, RES_GRP_7, RES_STS_8 
                       ) 
                     , (SELECT 'RES' V_COL FROM DUAL UNION ALL SELECT 'RUN' FROM DUAL) V 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY  MAT_ID, V.V_COL 
                 UNION ALL 
                SELECT '3_CAPA' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_DA_TTL 
                     , SUM( CASE WHEN  OPER LIKE 'A060%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_WB_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400',  'A0401' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END ) RES_CNT_DA1 
                     , SUM( CASE WHEN OPER IN ( 'A0600',  'A0601' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END )   RES_CNT_WB1 
                     , SUM( DECODE( OPER, 'A0402',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA2, SUM( DECODE( OPER, 'A0602', RES_CNT *  NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB2 
                     , SUM( DECODE( OPER, 'A0403',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA3, SUM( DECODE( OPER, 'A0603',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB3 
                     , SUM( DECODE( OPER, 'A0404',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA4, SUM( DECODE( OPER, 'A0604',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB4 
                     , SUM( DECODE( OPER, 'A0405',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA5, SUM( DECODE( OPER, 'A0605',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB5 
                     , SUM( DECODE( OPER, 'A0406',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA6, SUM( DECODE( OPER, 'A0606',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB6 
                     , SUM( DECODE( OPER, 'A0407',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA7, SUM( DECODE( OPER, 'A0607',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB7 
                     , SUM( DECODE( OPER, 'A0408',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA8, SUM( DECODE( OPER, 'A0608',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB8 
                     , SUM( DECODE( OPER, 'A0409',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA9, SUM( DECODE( OPER, 'A0609',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_GRP_6 RES_MODEL, RAS.RES_STS_2 MAT_ID, RAS.RES_STS_8 OPER , COUNT(RES_ID) RES_CNT 
                             , MAX(DECODE(SUBSTR(RAS.RES_STS_8, 1, 3), 'A04', NVL(UPEH.UPEH, 0) * 0.68,  NVL(UPEH.UPEH, 0) * 0.71 )  ) UPEH 
                             , 1 CONV_RATE 
                          FROM MRASRESDEF_BOH RAS
                             , CRASUPHDEF UPEH
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE RAS.FACTORY = 'HMKA1' 
                           AND RAS.CUTOFF_DT = '2020032522' 
                           AND RAS.RES_CMF_9 = 'Y' 
                           AND RAS.RES_CMF_7 = 'Y' 
                           AND RAS.DELETE_FLAG  = ' ' 
                           AND RAS.RES_TYPE  = 'EQUIPMENT' 
                           AND (RAS.RES_STS_8 LIKE 'A040%' OR RAS.RES_STS_8 LIKE 'A060%') 
                           AND RAS.RES_STS_2 LIKE '%'
                           AND RAS.FACTORY = UPEH.FACTORY(+) 
                           AND RAS.RES_GRP_6 = UPEH.RES_MODEL(+) 
                           AND RAS.RES_STS_2 = UPEH.MAT_ID(+) 
                           AND RAS.RES_STS_8 = UPEH.OPER(+) 
                           AND RAS.RES_STS_2 = WIR.MAT_ID(+) 
                           AND RAS.RES_STS_8 = WIR.OPER(+) 
                           AND RAS.RES_STS_2 = GCM.MAT_ID(+) 
                           AND (RAS.RES_STS_1 NOT IN ('C200', 'B199') OR RAS.RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RAS.RES_GRP_6, RAS.RES_STS_2, RAS.RES_STS_8 
                       ) 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , WB_1+WB_2+WB_3+WB_4+WB_5+WB_6+WB_7+WB_8+WB_9 AS WB_WIP_TTL 
                     , DA_1 
                     , WB_1 
                     , DA_2 
                     , WB_2 
                     , DA_3 
                     , WB_3 
                     , DA_4 
                     , WB_4 
                     , DA_5 
                     , WB_5 
                     , DA_6 
                     , WB_6 
                     , DA_7 
                     , WB_7 
                     , DA_8 
                     , WB_8 
                     , DA_9 
                     , WB_9 
                  FROM ( 
                        SELECT '6_WIP_MAIN_M' AS GUBUN, LOT.MAT_ID 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('-', '1st') AND OPER IN ('A0250', 'A0400', 'A0401') THEN QTY_1 ELSE 0 END ) DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle', 'Merge' ) AND OPER = 'A0402' THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 1', 'Merge' ) AND OPER = 'A0403' THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 2', 'Merge' ) AND OPER = 'A0404' THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 3', 'Merge' ) AND OPER = 'A0405' THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 4', 'Merge' ) AND OPER = 'A0406' THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 5', 'Merge' ) AND OPER = 'A0407' THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 6', 'Merge' ) AND OPER = 'A0408' THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 7', 'Merge' ) AND OPER = 'A0409' THEN QTY_1 ELSE 0 END ) DA_9 
                             , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600', 'A0601') THEN QTY_1 ELSE 0 END ) WB_1 
                             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY_1 ELSE 0 END ) WB_2 
                             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY_1 ELSE 0 END ) WB_3 
                             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY_1 ELSE 0 END ) WB_4 
                             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY_1 ELSE 0 END ) WB_5 
                             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY_1 ELSE 0 END ) WB_6 
                             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY_1 ELSE 0 END ) WB_7 
                             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY_1 ELSE 0 END ) WB_8 
                             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY_1 ELSE 0 END ) WB_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020032522' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMKA1' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , DA_1 
                     , 0 AS WB_1 
                     , DA_2 
                     , 0 AS WB_2 
                     , DA_3 
                     , 0 AS WB_3 
                     , DA_4 
                     , 0 AS WB_4 
                     , DA_5 
                     , 0 AS WB_5 
                     , DA_6 
                     , 0 AS WB_6 
                     , DA_7 
                     , 0 AS WB_7 
                     , DA_8 
                     , 0 AS WB_8 
                     , DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT '5_WIP_MAIN' AS GUBUN, LOT.MAT_ID 
                             , 0 AS DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0402', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle' AND OPER IN ('A0403', 'A0502', 'A0532') THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 1' AND OPER IN ('A0404', 'A0503', 'A0533') THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 2' AND OPER IN ('A0405', 'A0504', 'A0534') THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 3' AND OPER IN ('A0406', 'A0505', 'A0535') THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 4' AND OPER IN ('A0407', 'A0506', 'A0536') THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 5' AND OPER IN ('A0408', 'A0507', 'A0537') THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 6' AND OPER IN ('A0409', 'A0508', 'A0538') THEN QTY_1 ELSE 0 END ) DA_9 
                          FROM RWIPLOTSTS_BOH LOT 
                             , VWIPMATDEF MAT 
                         WHERE LOT.CUTOFF_DT = '2020032522' 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMKA1' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT '4_WIP_CHIP' GUBUN, MAT_ID 
                     , SUM(QTY_1) AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , 0 AS DA_1 
                     , 0 AS WB_1 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0402') AND MAT_GRP_5 = '2nd' THEN QTY_1 ELSE 0 END) AS DA_2 
                     , 0 AS WB_2 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0403') AND MAT_GRP_5 = '3rd' THEN QTY_1 ELSE 0 END) AS DA_3 
                     , 0 AS WB_3 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0404') AND MAT_GRP_5 = '4th' THEN QTY_1 ELSE 0 END) AS DA_4 
                     , 0 AS WB_4 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0405') AND MAT_GRP_5 = '5th' THEN QTY_1 ELSE 0 END) AS DA_5 
                     , 0 AS WB_5 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0406') AND MAT_GRP_5 = '6th' THEN QTY_1 ELSE 0 END) AS DA_6 
                     , 0 AS WB_6 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0407') AND MAT_GRP_5 = '7th' THEN QTY_1 ELSE 0 END) AS DA_7 
                     , 0 AS WB_7 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0408') AND MAT_GRP_5 = '8th' THEN QTY_1 ELSE 0 END) AS DA_8 
                     , 0 AS WB_8 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0409') AND MAT_GRP_5 = '9th' THEN QTY_1 ELSE 0 END) AS DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, B.MAT_GRP_5, A.QTY_1 
                          FROM RWIPLOTSTS_BOH A, MWIPMATDEF B 
                         WHERE A.CUTOFF_DT = '2020032522' 
                           AND A.FACTORY = B.FACTORY 
                           AND A.MAT_ID = B.MAT_ID 
                           AND A.FACTORY = 'HMKA1' 
                           AND A.LOT_TYPE = 'W' 
                           AND A.LOT_CMF_5 LIKE 'P%' 
                           AND A.LOT_DEL_FLAG = ' ' 
                           AND A.OPER IN ('A0250', 'A0402', 'A0403', 'A0404', 'A0405', 'A0406', 'A0407', 'A0408', 'A0409') 
                           AND B.MAT_TYPE = 'FG' 
                           AND B.MAT_GRP_4 NOT IN ('-','FD','FU') 
                           AND B.MAT_GRP_5 IN ( '2nd',  '3rd', '4th', '5th', '6th',  '7th', '8th', '9th') 
                           AND B.DELETE_FLAG <> 'Y' 
                           AND B.MAT_GRP_2 <> '-' 
                       ) 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT '7_실적' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  QTY * CONV_RATE  ELSE 0  END ) DA_RST_TTL ,  SUM( CASE WHEN OPER LIKE 'A060%' THEN  QTY * CONV_RATE  ELSE 0  END ) WB_RST_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400', 'A0401') THEN QTY * CONV_RATE  ELSE 0 END ) DA401 , SUM( CASE WHEN OPER IN ( 'A0600', 'A0601') THEN QTY * CONV_RATE ELSE 0 END )  WB601 
                     , SUM(DECODE(OPER, 'A0402', QTY * CONV_RATE,  0)) DA402  , SUM(DECODE(OPER, 'A0602', QTY * CONV_RATE,  0)) WB602 
                     , SUM(DECODE(OPER, 'A0403', QTY * CONV_RATE,  0)) DA403  , SUM(DECODE(OPER, 'A0603', QTY * CONV_RATE,  0)) WB603 
                     , SUM(DECODE(OPER, 'A0404', QTY * CONV_RATE,  0)) DA404  , SUM(DECODE(OPER, 'A0604', QTY * CONV_RATE,  0)) WB604 
                     , SUM(DECODE(OPER, 'A0405', QTY * CONV_RATE,  0)) DA405  , SUM(DECODE(OPER, 'A0605', QTY * CONV_RATE,  0)) WB605 
                     , SUM(DECODE(OPER, 'A0406', QTY * CONV_RATE,  0)) DA406  , SUM(DECODE(OPER, 'A0606', QTY * CONV_RATE,  0)) WB606 
                     , SUM(DECODE(OPER, 'A0407', QTY * CONV_RATE,  0)) DA407  , SUM(DECODE(OPER, 'A0607', QTY * CONV_RATE,  0)) WB607 
                     , SUM(DECODE(OPER, 'A0408', QTY * CONV_RATE,  0)) DA408  , SUM(DECODE(OPER, 'A0608', QTY * CONV_RATE,  0)) WB608 
                     , SUM(DECODE(OPER, 'A0409', QTY * CONV_RATE,  0)) DA409  , SUM(DECODE(OPER, 'A0609', QTY * CONV_RATE,  0)) WB609 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1 + S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1 ) QTY 
                             , 1 CONV_RATE 
                          FROM RSUMWIPMOV A 
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE 1=1 
                           AND A.FACTORY  = 'HMKA1' 
                           AND A.MAT_VER  = 1 
                           AND A.WORK_DATE = '20200325'
                           AND A.LOT_TYPE  = 'W' 
                           AND A.MAT_ID LIKE '%'
                           AND ( A.OPER LIKE  'A040%' OR  A.OPER LIKE  'A060%'  ) 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND A.MAT_ID = WIR.MAT_ID(+) 
                           AND A.OPER  = WIR.OPER(+) 
                           AND A.MAT_ID = GCM.MAT_ID(+) 
                         GROUP BY A.MAT_ID, A.OPER 
                       ) 
                 GROUP BY MAT_ID 
               ) A 
             , (SELECT * FROM MWIPMATDEF WHERE FACTORY = 'HMKA1'  AND MAT_TYPE = 'FG' AND MAT_VER =  1 AND  DELETE_FLAG <> 'Y' ) B 
         WHERE A.MAT_ID = B.MAT_ID(+) 
       ) A 
     , ( SELECT SEQ FROM HRTDSUMSEQ@RPTTOMES WHERE SEQ <= 8 ) C 
 WHERE 1 = 1 
   AND A.MAT_GRP_1 IS NOT NULL 
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ' 
        , DECODE(SEQ, 1, '설비대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율'), SEQ
) 
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER)  CUSTOMER, FAMILY, PKG,  ' ',  ' ',  ' ' 
     , DECODE(GUBUN_SEQ, 1, '설비', 2, '설비', 3, 'CAPA', 4, '재공', 5, '재공', 6, '재공', 7, '실적', 8, 'CAPA 효율') AS GUBUN0 
     , GUBUN 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999'))) AS DA_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')) ) AS DA1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')) ) AS DA2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')) ) AS DA3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')) ) AS DA4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')) ) AS DA5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')) ) AS DA6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')) ) AS DA7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')) ) AS DA8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')) ) AS DA9 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999')),'0', '',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999'))) AS WB_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999'))) AS WB1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999'))) AS WB2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999'))) AS WB3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999'))) AS WB4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999'))) AS WB5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999'))) AS WB6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999'))) AS WB7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999'))) AS WB8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999'))) AS WB9 
  FROM TEMP_VIEW 
 GROUP BY GROUPING SETS((CUSTOMER, FAMILY, PKG, GUBUN, GUBUN_SEQ), (CUSTOMER, FAMILY, GUBUN, GUBUN_SEQ), (CUSTOMER, GUBUN, GUBUN_SEQ), (GUBUN, GUBUN_SEQ) ) 
 ORDER BY DECODE(TEMP_VIEW.CUSTOMER, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), TEMP_VIEW.CUSTOMER, FAMILY, PKG,GUBUN_SEQ 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202002', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202003', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200326','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH TEMP_VIEW AS (
SELECT A.MAT_GRP_1 AS CUSTOMER, A.MAT_GRP_9 AS FAMILY, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' '
     , DECODE(SEQ, 1, '대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율') GUBUN, SEQ GUBUN_SEQ 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA_TTL, 0 ) ) DA_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB_TTL, 0 ) ) WB_TTL 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA1, 0 ) ) DA1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA2, 0 ) ) DA2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA3, 0 ) ) DA3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA4, 0 ) ) DA4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA5, 0 ) ) DA5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA6, 0 ) ) DA6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA7, 0 ) ) DA7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA8, 0 ) ) DA8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.DA9, 0 ) ) DA9 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB1, 0 ) ) WB1 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB2, 0 ) ) WB2 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB3, 0 ) ) WB3 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB4, 0 ) ) WB4 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB5, 0 ) ) WB5 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB6, 0 ) ) WB6 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB7, 0 ) ) WB7 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB8, 0 ) ) WB8 
     , SUM( DECODE( TO_CHAR(SEQ), SUBSTR(GUBUN, 1, 1) , A.WB9, 0 ) ) WB9 
  FROM ( 
        SELECT B.MAT_GRP_1,  B.MAT_GRP_2,  B.MAT_GRP_3,  B.MAT_GRP_4,  B.MAT_GRP_5,  B.MAT_GRP_6,  B.MAT_GRP_7,  B.MAT_GRP_8,  B.MAT_GRP_9,  B.MAT_GRP_10,  B.MAT_CMF_10, B.MAT_CMF_11, GUBUN,  DA_TTL, WB_TTL, DA1, WB1, DA2, WB2, DA3, WB3, DA4, WB4, DA5, WB5, DA6, WB6, DA7, WB7, DA8, WB8, DA9, WB9 
          FROM ( 
                SELECT DECODE(V.V_COL,'RES', '1_설비댓수', '2_RUN_CNT') GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) DA_TTL 
                     , SUM( CASE WHEN OPER LIKE 'A060%' THEN  DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT)  ELSE 0  END ) WB_TTL 
                     , SUM( DECODE(OPER, 'A0400', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0401', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0) ) DA1 
                     , SUM( DECODE(OPER, 'A0600', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 'A0601', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB1 
                     , SUM( DECODE(OPER, 'A0402', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA2, SUM( DECODE(OPER, 'A0602', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB2 
                     , SUM( DECODE(OPER, 'A0403', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA3,SUM( DECODE(OPER, 'A0603', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB3 
                     , SUM( DECODE(OPER, 'A0404', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA4, SUM( DECODE(OPER, 'A0604', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB4 
                     , SUM( DECODE(OPER, 'A0405', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA5, SUM( DECODE(OPER, 'A0605', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB5 
                     , SUM( DECODE(OPER, 'A0406', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA6, SUM( DECODE(OPER, 'A0606', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB6 
                     , SUM( DECODE(OPER, 'A0407', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA7, SUM( DECODE(OPER, 'A0607', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB7 
                     , SUM( DECODE(OPER, 'A0408', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA8, SUM( DECODE(OPER, 'A0608', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB8 
                     , SUM( DECODE(OPER, 'A0409', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) DA9, SUM( DECODE(OPER, 'A0609', DECODE(V.V_COL,'RES', RES_CNT, RUN_CNT), 0)) WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_STS_2 MAT_ID, RES_GRP_6 RES_MODEL, RES_GRP_7 UPEH_GROUP, RES_STS_8 OPER , COUNT(RES_ID) RES_CNT, NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(LOT.LOT_ID, '-'), '-', 0, 1))), 0)  RUN_CNT 
                          FROM MRASRESDEF RAS 
                             , ( 
                                SELECT * 
                                  FROM MWIPLOTSTS LOT 
                                 WHERE LOT.FACTORY = 'HMKA1' 
                                   AND LOT.LOT_TYPE = 'W' AND LOT_DEL_FLAG = ' ' 
                                   AND LOT.LOT_CMF_5 LIKE 'P%' 
                                   AND (LOT.OPER LIKE 'A040%' OR LOT.OPER LIKE 'A060%' ) 
                                   AND LOT.LOT_STATUS = 'PROC' 
                               ) LOT 
                         WHERE RAS.FACTORY = 'HMKA1' 
                           AND RAS.FACTORY = LOT.FACTORY(+) 
                           AND RES_ID = LOT.START_RES_ID(+) 
                           AND RES_CMF_9 = 'Y' 
                           AND RES_CMF_7 = 'Y' 
                           AND DELETE_FLAG  = ' ' 
                           AND RES_TYPE  = 'EQUIPMENT' 
                           AND (RES_STS_8 LIKE 'A040%' OR RES_STS_8 LIKE 'A060%' ) 
                           AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RES_STS_2, RES_GRP_6, RES_GRP_7, RES_STS_8 
                       ) 
                     , (SELECT 'RES' V_COL FROM DUAL UNION ALL SELECT 'RUN' FROM DUAL) V 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY  MAT_ID, V.V_COL 
                 UNION ALL 
                SELECT '3_CAPA' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_DA_TTL 
                     , SUM( CASE WHEN  OPER LIKE 'A060%' THEN   RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE  ELSE 0  END ) RES_WB_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400',  'A0401' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END ) RES_CNT_DA1 
                     , SUM( CASE WHEN OPER IN ( 'A0600',  'A0601' ) THEN  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE ELSE 0 END )   RES_CNT_WB1 
                     , SUM( DECODE( OPER, 'A0402',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA2, SUM( DECODE( OPER, 'A0602', RES_CNT *  NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB2 
                     , SUM( DECODE( OPER, 'A0403',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA3, SUM( DECODE( OPER, 'A0603',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB3 
                     , SUM( DECODE( OPER, 'A0404',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA4, SUM( DECODE( OPER, 'A0604',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB4 
                     , SUM( DECODE( OPER, 'A0405',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA5, SUM( DECODE( OPER, 'A0605',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB5 
                     , SUM( DECODE( OPER, 'A0406',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA6, SUM( DECODE( OPER, 'A0606',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB6 
                     , SUM( DECODE( OPER, 'A0407',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA7, SUM( DECODE( OPER, 'A0607',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB7 
                     , SUM( DECODE( OPER, 'A0408',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA8, SUM( DECODE( OPER, 'A0608',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB8 
                     , SUM( DECODE( OPER, 'A0409',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0)) RES_CNT_DA9, SUM( DECODE( OPER, 'A0609',  RES_CNT * NVL(UPEH,0) * 24 * CONV_RATE, 0))  RES_CNT_WB9 
                  FROM ( 
                        SELECT RAS.FACTORY, RAS.RES_GRP_6 RES_MODEL, RAS.RES_STS_2 MAT_ID, RAS.RES_STS_8 OPER , COUNT(RES_ID) RES_CNT 
                             , MAX(DECODE(SUBSTR(RAS.RES_STS_8, 1, 3), 'A04', NVL(UPEH.UPEH, 0) * 0.68,  NVL(UPEH.UPEH, 0) * 0.71 )  ) UPEH 
                             , 1 CONV_RATE 
                          FROM MRASRESDEF RAS
                             , CRASUPHDEF UPEH
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE RAS.FACTORY = 'HMKA1' 
                           AND RAS.RES_CMF_9 = 'Y' 
                           AND RAS.RES_CMF_7 = 'Y' 
                           AND RAS.DELETE_FLAG  = ' ' 
                           AND RAS.RES_TYPE  = 'EQUIPMENT' 
                           AND (RAS.RES_STS_8 LIKE 'A040%' OR RAS.RES_STS_8 LIKE 'A060%') 
                           AND RAS.RES_STS_2 LIKE '%'
                           AND RAS.FACTORY = UPEH.FACTORY(+) 
                           AND RAS.RES_GRP_6 = UPEH.RES_MODEL(+) 
                           AND RAS.RES_STS_2 = UPEH.MAT_ID(+) 
                           AND RAS.RES_STS_8 = UPEH.OPER(+) 
                           AND RAS.RES_STS_2 = WIR.MAT_ID(+) 
                           AND RAS.RES_STS_8 = WIR.OPER(+) 
                           AND RAS.RES_STS_2 = GCM.MAT_ID(+) 
                           AND (RAS.RES_STS_1 NOT IN ('C200', 'B199') OR RAS.RES_UP_DOWN_FLAG = 'U') 
                         GROUP BY RAS.FACTORY, RAS.RES_GRP_6, RAS.RES_STS_2, RAS.RES_STS_8 
                       ) 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , WB_1+WB_2+WB_3+WB_4+WB_5+WB_6+WB_7+WB_8+WB_9 AS WB_WIP_TTL 
                     , DA_1 
                     , WB_1 
                     , DA_2 
                     , WB_2 
                     , DA_3 
                     , WB_3 
                     , DA_4 
                     , WB_4 
                     , DA_5 
                     , WB_5 
                     , DA_6 
                     , WB_6 
                     , DA_7 
                     , WB_7 
                     , DA_8 
                     , WB_8 
                     , DA_9 
                     , WB_9 
                  FROM ( 
                        SELECT '6_WIP_MAIN_M' AS GUBUN, LOT.MAT_ID 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('-', '1st') AND OPER IN ('A0250', 'A0400', 'A0401') THEN QTY_1 ELSE 0 END ) DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle', 'Merge' ) AND OPER = 'A0402' THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 1', 'Merge' ) AND OPER = 'A0403' THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 2', 'Merge' ) AND OPER = 'A0404' THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 3', 'Merge' ) AND OPER = 'A0405' THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 4', 'Merge' ) AND OPER = 'A0406' THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 5', 'Merge' ) AND OPER = 'A0407' THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 6', 'Merge' ) AND OPER = 'A0408' THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 IN ('Middle 7', 'Merge' ) AND OPER = 'A0409' THEN QTY_1 ELSE 0 END ) DA_9 
                             , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600', 'A0601') THEN QTY_1 ELSE 0 END ) WB_1 
                             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY_1 ELSE 0 END ) WB_2 
                             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY_1 ELSE 0 END ) WB_3 
                             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY_1 ELSE 0 END ) WB_4 
                             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY_1 ELSE 0 END ) WB_5 
                             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY_1 ELSE 0 END ) WB_6 
                             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY_1 ELSE 0 END ) WB_7 
                             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY_1 ELSE 0 END ) WB_8 
                             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY_1 ELSE 0 END ) WB_9 
                          FROM RWIPLOTSTS LOT 
                             , VWIPMATDEF MAT 
                         WHERE 1 = 1 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMKA1' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT GUBUN, MAT_ID 
                     , DA_1+DA_2+DA_3+DA_4+DA_5+DA_6+DA_7+DA_8+DA_9 AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , DA_1 
                     , 0 AS WB_1 
                     , DA_2 
                     , 0 AS WB_2 
                     , DA_3 
                     , 0 AS WB_3 
                     , DA_4 
                     , 0 AS WB_4 
                     , DA_5 
                     , 0 AS WB_5 
                     , DA_6 
                     , 0 AS WB_6 
                     , DA_7 
                     , 0 AS WB_7 
                     , DA_8 
                     , 0 AS WB_8 
                     , DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT '5_WIP_MAIN' AS GUBUN, LOT.MAT_ID 
                             , 0 AS DA_1 
                             , SUM(CASE WHEN MAT_GRP_5 = '1st' AND OPER IN ('A0402', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY_1 ELSE 0 END ) DA_2 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle' AND OPER IN ('A0403', 'A0502', 'A0532') THEN QTY_1 ELSE 0 END ) DA_3 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 1' AND OPER IN ('A0404', 'A0503', 'A0533') THEN QTY_1 ELSE 0 END ) DA_4 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 2' AND OPER IN ('A0405', 'A0504', 'A0534') THEN QTY_1 ELSE 0 END ) DA_5 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 3' AND OPER IN ('A0406', 'A0505', 'A0535') THEN QTY_1 ELSE 0 END ) DA_6 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 4' AND OPER IN ('A0407', 'A0506', 'A0536') THEN QTY_1 ELSE 0 END ) DA_7 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 5' AND OPER IN ('A0408', 'A0507', 'A0537') THEN QTY_1 ELSE 0 END ) DA_8 
                             , SUM(CASE WHEN MAT_GRP_5 = 'Middle 6' AND OPER IN ('A0409', 'A0508', 'A0538') THEN QTY_1 ELSE 0 END ) DA_9 
                          FROM RWIPLOTSTS LOT 
                             , VWIPMATDEF MAT 
                         WHERE 1 = 1 
                           AND LOT.FACTORY = MAT.FACTORY 
                           AND LOT.MAT_ID = MAT.MAT_ID 
                           AND LOT.FACTORY = 'HMKA1' 
                           AND LOT.LOT_TYPE = 'W' 
                           AND LOT.LOT_CMF_5 LIKE 'P%' 
                           AND LOT.LOT_DEL_FLAG = ' ' 
                           AND MAT.MAT_TYPE = 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                           AND MAT.MAT_GRP_2 <> '-' 
                           AND LOT.MAT_ID LIKE '%'
                         GROUP BY LOT.MAT_ID 
                       ) 
                 UNION ALL 
                SELECT '4_WIP_CHIP' GUBUN, MAT_ID 
                     , SUM(QTY_1) AS DA_WIP_TTL 
                     , 0 AS WB_WIP_TTL 
                     , 0 AS DA_1 
                     , 0 AS WB_1 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0402') AND MAT_GRP_5 = '2nd' THEN QTY_1 ELSE 0 END) AS DA_2 
                     , 0 AS WB_2 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0403') AND MAT_GRP_5 = '3rd' THEN QTY_1 ELSE 0 END) AS DA_3 
                     , 0 AS WB_3 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0404') AND MAT_GRP_5 = '4th' THEN QTY_1 ELSE 0 END) AS DA_4 
                     , 0 AS WB_4 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0405') AND MAT_GRP_5 = '5th' THEN QTY_1 ELSE 0 END) AS DA_5 
                     , 0 AS WB_5 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0406') AND MAT_GRP_5 = '6th' THEN QTY_1 ELSE 0 END) AS DA_6 
                     , 0 AS WB_6 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0407') AND MAT_GRP_5 = '7th' THEN QTY_1 ELSE 0 END) AS DA_7 
                     , 0 AS WB_7 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0408') AND MAT_GRP_5 = '8th' THEN QTY_1 ELSE 0 END) AS DA_8 
                     , 0 AS WB_8 
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0409') AND MAT_GRP_5 = '9th' THEN QTY_1 ELSE 0 END) AS DA_9 
                     , 0 AS WB_9 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, B.MAT_GRP_5, A.QTY_1 
                          FROM RWIPLOTSTS A, MWIPMATDEF B 
                         WHERE 1 = 1 
                           AND A.FACTORY = B.FACTORY 
                           AND A.MAT_ID = B.MAT_ID 
                           AND A.FACTORY = 'HMKA1' 
                           AND A.LOT_TYPE = 'W' 
                           AND A.LOT_CMF_5 LIKE 'P%' 
                           AND A.LOT_DEL_FLAG = ' ' 
                           AND A.OPER IN ('A0250', 'A0402', 'A0403', 'A0404', 'A0405', 'A0406', 'A0407', 'A0408', 'A0409') 
                           AND B.MAT_TYPE = 'FG' 
                           AND B.MAT_GRP_4 NOT IN ('-','FD','FU') 
                           AND B.MAT_GRP_5 IN ( '2nd',  '3rd', '4th', '5th', '6th',  '7th', '8th', '9th') 
                           AND B.DELETE_FLAG <> 'Y' 
                           AND B.MAT_GRP_2 <> '-' 
                       ) 
                 WHERE MAT_ID LIKE '%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT '7_실적' GUBUN, MAT_ID 
                     , SUM( CASE WHEN OPER LIKE 'A040%' THEN  QTY * CONV_RATE  ELSE 0  END ) DA_RST_TTL ,  SUM( CASE WHEN OPER LIKE 'A060%' THEN  QTY * CONV_RATE  ELSE 0  END ) WB_RST_TTL 
                     , SUM( CASE WHEN OPER IN ( 'A0400', 'A0401') THEN QTY * CONV_RATE  ELSE 0 END ) DA401 , SUM( CASE WHEN OPER IN ( 'A0600', 'A0601') THEN QTY * CONV_RATE ELSE 0 END )  WB601 
                     , SUM(DECODE(OPER, 'A0402', QTY * CONV_RATE,  0)) DA402  , SUM(DECODE(OPER, 'A0602', QTY * CONV_RATE,  0)) WB602 
                     , SUM(DECODE(OPER, 'A0403', QTY * CONV_RATE,  0)) DA403  , SUM(DECODE(OPER, 'A0603', QTY * CONV_RATE,  0)) WB603 
                     , SUM(DECODE(OPER, 'A0404', QTY * CONV_RATE,  0)) DA404  , SUM(DECODE(OPER, 'A0604', QTY * CONV_RATE,  0)) WB604 
                     , SUM(DECODE(OPER, 'A0405', QTY * CONV_RATE,  0)) DA405  , SUM(DECODE(OPER, 'A0605', QTY * CONV_RATE,  0)) WB605 
                     , SUM(DECODE(OPER, 'A0406', QTY * CONV_RATE,  0)) DA406  , SUM(DECODE(OPER, 'A0606', QTY * CONV_RATE,  0)) WB606 
                     , SUM(DECODE(OPER, 'A0407', QTY * CONV_RATE,  0)) DA407  , SUM(DECODE(OPER, 'A0607', QTY * CONV_RATE,  0)) WB607 
                     , SUM(DECODE(OPER, 'A0408', QTY * CONV_RATE,  0)) DA408  , SUM(DECODE(OPER, 'A0608', QTY * CONV_RATE,  0)) WB608 
                     , SUM(DECODE(OPER, 'A0409', QTY * CONV_RATE,  0)) DA409  , SUM(DECODE(OPER, 'A0609', QTY * CONV_RATE,  0)) WB609 
                  FROM ( 
                        SELECT A.MAT_ID, A.OPER, SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1 + S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1 ) QTY 
                             , 1 CONV_RATE 
                          FROM RSUMWIPMOV A 
                             , ( 
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT 
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND OPER LIKE 'A060%' 
                                   AND TCD_CMF_2 <> ' ' 
                                   AND SET_FLAG = 'Y' 
                               ) WIR 
                             , ( 
                                SELECT KEY_1 AS MAT_ID, DATA_1 
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMKA1' 
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') 
                               ) GCM 
                         WHERE 1=1 
                           AND A.FACTORY  = 'HMKA1' 
                           AND A.MAT_VER  = 1 
                           AND A.WORK_DATE = GET_WORK_DATE(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), 'D')
                           AND A.LOT_TYPE  = 'W' 
                           AND A.MAT_ID LIKE '%'
                           AND ( A.OPER LIKE  'A040%' OR  A.OPER LIKE  'A060%'  ) 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND A.MAT_ID = WIR.MAT_ID(+) 
                           AND A.OPER  = WIR.OPER(+) 
                           AND A.MAT_ID = GCM.MAT_ID(+) 
                         GROUP BY A.MAT_ID, A.OPER 
                       ) 
                 GROUP BY MAT_ID 
               ) A 
             , (SELECT * FROM MWIPMATDEF WHERE FACTORY = 'HMKA1'  AND MAT_TYPE = 'FG' AND MAT_VER =  1 AND  DELETE_FLAG <> 'Y' ) B 
         WHERE A.MAT_ID = B.MAT_ID(+) 
       ) A 
     , ( SELECT SEQ FROM HRTDSUMSEQ@RPTTOMES WHERE SEQ <= 8 ) C 
 WHERE 1 = 1 
   AND A.MAT_GRP_1 IS NOT NULL 
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ' 
        , DECODE(SEQ, 1, '설비대수', 2, 'RUN', 3, 'CAPA', 4, 'CHIP', 5, 'MAIN', 6, 'MAIN_M', 7, '실적', 8, 'CAPA 효율'), SEQ
) 
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = CUSTOMER)  CUSTOMER, FAMILY, PKG,  ' ',  ' ',  ' ' 
     , DECODE(GUBUN_SEQ, 1, '설비', 2, '설비', 3, 'CAPA', 4, '재공', 5, '재공', 6, '재공', 7, '실적', 8, 'CAPA 효율') AS GUBUN0 
     , GUBUN 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA_TTL, 2, DA_TTL, DA_TTL/1000)), '999,999,999'))) AS DA_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA1, 2, DA1, DA1/1000)), '999,999,999')) ) AS DA1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA2, 2, DA2, DA2/1000)), '999,999,999')) ) AS DA2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA3, 2, DA3, DA3/1000)), '999,999,999')) ) AS DA3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA4, 2, DA4, DA4/1000)), '999,999,999')) ) AS DA4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA5, 2, DA5, DA5/1000)), '999,999,999')) ) AS DA5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA6, 2, DA6, DA6/1000)), '999,999,999')) ) AS DA6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA7, 2, DA7, DA7/1000)), '999,999,999')) ) AS DA7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA8, 2, DA8, DA8/1000)), '999,999,999')) ) AS DA8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, DA9, 2, DA9, DA9/1000)), '999,999,999')) ) AS DA9 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999')),'0', '',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB_TTL, 2, WB_TTL, WB_TTL/1000)), '999,999,999'))) AS WB_TTL 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB1, 2, WB1, WB1/1000)), '999,999,999'))) AS WB1 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB2, 2, WB2, WB2/1000)), '999,999,999'))) AS WB2 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB3, 2, WB3, WB3/1000)), '999,999,999'))) AS WB3 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB4, 2, WB4, WB4/1000)), '999,999,999'))) AS WB4 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB5, 2, WB5, WB5/1000)), '999,999,999'))) AS WB5 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB6, 2, WB6, WB6/1000)), '999,999,999'))) AS WB6 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB7, 2, WB7, WB7/1000)), '999,999,999'))) AS WB7 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB8, 2, WB8, WB8/1000)), '999,999,999'))) AS WB8 
     , DECODE(TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999')),'0','',TRIM(TO_CHAR(SUM(DECODE(GUBUN_SEQ, 1, WB9, 2, WB9, WB9/1000)), '999,999,999'))) AS WB9 
  FROM TEMP_VIEW 
 GROUP BY GROUPING SETS((CUSTOMER, FAMILY, PKG, GUBUN, GUBUN_SEQ), (CUSTOMER, FAMILY, GUBUN, GUBUN_SEQ), (CUSTOMER, GUBUN, GUBUN_SEQ), (GUBUN, GUBUN_SEQ) ) 
 ORDER BY DECODE(TEMP_VIEW.CUSTOMER, NULL, 1, 'SE', 2, 'HX', 3, 'IM', 4, 'FC', 5, 6), TEMP_VIEW.CUSTOMER, FAMILY, PKG,GUBUN_SEQ 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020106'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202003' 
   AND SYS_DATE <= '20200326' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200326', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT B.PLAN_MONTH, A.PLAN_WEEK, A.GUBUN, B.CKD_WEEK, A.MAT_ID, A.WW_QTY, B.CNT
      , ROUND((A.WW_QTY / 7) * B.CNT, 0) AS REV_QTY
   FROM RWIPPLNWEK A
      , (
         SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_MONTH,2,'0')) PLAN_MONTH
              , MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK
              , COUNT(*) AS CNT
              , (SELECT MAX(TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0')) PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200326') AS CKD_WEEK
           FROM MWIPCALDEF
          WHERE 1=1
            AND CALENDAR_ID = 'OTD'
            AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') IN ('202003','202004','202005')
          GROUP BY PLAN_MONTH, PLAN_WEEK
        ) B
  WHERE 1=1
    AND A.PLAN_WEEK = B.PLAN_WEEK
    AND A.FACTORY = 'HMVA2' 
)
SELECT CUST_TYPE, NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER, MAT_GRP_9 AS MAJOR_CODE, MAT_GRP_2 AS FAMILY,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN * CONVERT_QTY) /1000,0) AS MON_PLN
     , ROUND(SUM(REV_PLN * CONVERT_QTY) /1000,0) AS REV_PLN
     , ROUND(SUM(SOP_PLN * CONVERT_QTY) /1000,0) AS SOP_PLN
     , ROUND(SUM(W0 * CONVERT_QTY) /1000,0) AS W0
     , ROUND(SUM(W1 * CONVERT_QTY) /1000,0) AS W1
     , ROUND(SUM(W2 * CONVERT_QTY) /1000,0) AS W2
     , ROUND(SUM(W3 * CONVERT_QTY) /1000,0) AS W3
     , ROUND(SUM(W4 * CONVERT_QTY) /1000,0) AS W4
     , ROUND(SUM(SHP_W0 * CONVERT_QTY) /1000,0) AS SHP_W0
     , ROUND(SUM(SHP_W1 * CONVERT_QTY) /1000,0) AS SHP_W1
     , ROUND(SUM(SHP_W2 * CONVERT_QTY) /1000,0) AS SHP_W2
     , ROUND(SUM(SHP_W3 * CONVERT_QTY) /1000,0) AS SHP_W3
     , ROUND(SUM(M1 * CONVERT_QTY) /1000,0) AS M1
     , ROUND(SUM(M2 * CONVERT_QTY) /1000,0) AS M2
  FROM (
        SELECT MAT.* 
             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMKA1' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.MON_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.MON_PLN END AS MON_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.REV_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.REV_PLN END AS REV_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M_PLN.SOP_PLN / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M_PLN.SOP_PLN END AS SOP_PLN
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W0 END AS W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W1 END AS W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W2 END AS W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W3 END AS W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN W4 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE W4 END AS W4
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W0 END AS SHP_W0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W1 END AS SHP_W1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W2 END AS SHP_W2
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN SHP_W3 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE SHP_W3 END AS SHP_W3
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M0 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M0 END AS M0
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M1 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M1 END AS M1
             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN M2 / TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)) ELSE M2 END AS M2
             , 1 AS CONVERT_QTY
          FROM MWIPMATDEF MAT
             , (
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                     , SUM(DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1)) AS REV_PLN
                     , SUM(DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3)) AS SOP_PLN
                  FROM CWIPPLNMON 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_MONTH = '202003'
                 GROUP BY MAT_ID
               ) M_PLN
             , (
                SELECT MAT_ID
                     , SUM(DECODE(PLAN_WEEK, '202010', SHP_QTY, 0)) AS SHP_W0 
                     , SUM(DECODE(PLAN_WEEK, '202011', SHP_QTY, 0)) AS SHP_W1 
                     , SUM(DECODE(PLAN_WEEK, '202012', SHP_QTY, 0)) AS SHP_W2 
                     , SUM(DECODE(PLAN_WEEK, '202013', SHP_QTY, 0)) AS SHP_W3 
                  FROM (
                        SELECT TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK, MAT_ID
                             , SUM(SHP_QTY_1) AS SHP_QTY
                          FROM VSUMWIPOUT A
                             , MWIPCALDEF B 
                         WHERE 1=1 
                           AND A.WORK_DATE = B.SYS_DATE(+) 
                           AND A.WORK_DATE LIKE '202003%'
                           AND A.LOT_TYPE = 'W' 
                           AND A.FACTORY = 'HMVA2' 
                           AND A.CM_KEY_2 = 'PROD' 
                           AND A.CM_KEY_3 LIKE 'P%'
                           AND B.CALENDAR_ID(+) = 'OTD'
                           AND B.PLAN_YEAR||LPAD(B.PLAN_WEEK,2,'0') <= '202013'
                         GROUP BY TRIM(TO_CHAR(PLAN_YEAR))||LPAD(PLAN_WEEK,2,'0'), MAT_ID 
                         UNION ALL 
                        SELECT PLAN_WEEK, MAT_ID, SUM(REV_QTY) 
                          FROM DT 
                         WHERE GUBUN = '3' 
                           AND PLAN_WEEK = '202013'
                           AND PLAN_MONTH = '202003'
                         GROUP BY PLAN_WEEK, MAT_ID 
                       )
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202010' THEN REV_QTY ELSE 0 END) AS W0 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202011' THEN REV_QTY ELSE 0 END) AS W1 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202012' THEN REV_QTY ELSE 0 END) AS W2 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202013' THEN REV_QTY ELSE 0 END) AS W3 
                     , SUM(CASE WHEN PLAN_MONTH = '202003' AND PLAN_WEEK = '202014' THEN REV_QTY ELSE 0 END) AS W4 
                     , SUM(CASE WHEN PLAN_WEEK >= CKD_WEEK THEN REV_QTY ELSE 0 END) AS W_LAST
                     , SUM(DECODE(PLAN_MONTH, '202003', REV_QTY, 0)) AS M0
                     , SUM(DECODE(PLAN_MONTH, '202004', REV_QTY, 0)) AS M1
                     , SUM(DECODE(PLAN_MONTH, '202005', REV_QTY, 0)) AS M2
                  FROM (
                        SELECT * FROM DT WHERE GUBUN = '3'
                       )
                 GROUP BY MAT_ID
               ) W_PLN
         WHERE 1=1
           AND MAT.MAT_ID = M_PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = W_PLN.MAT_ID(+)
           AND MAT.FACTORY = 'HMVA2'
           AND MAT.DELETE_FLAG = ' '
           AND MAT.MAT_TYPE = 'FG'
           AND MAT.MAT_ID LIKE '%'
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING SUM(NVL(MON_PLN,0) + NVL(REV_PLN,0) + NVL(SOP_PLN,0) +  + NVL(W0,0) + NVL(W1,0) + NVL(W2,0) + NVL(W3,0) + NVL(W4,0) + NVL(SHP_W0,0) + NVL(SHP_W1,0) + NVL(SHP_W2,0) + NVL(SHP_W3,0) + NVL(M0,0) + NVL(M1,0) + NVL(M2,0)) > 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9, MAT_GRP_2,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
