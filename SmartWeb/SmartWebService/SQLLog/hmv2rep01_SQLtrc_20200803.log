SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , SUM(ASSY_END_QTY59 ) VAL59
             , SUM(ASSY_END_QTY60 ) VAL60
             , SUM(ASSY_END_QTY61 ) VAL61
             , SUM(ASSY_END_QTY62 ) VAL62
             , SUM(ASSY_END_QTY63 ) VAL63
             , SUM(ASSY_END_QTY64 ) VAL64
             , SUM(ASSY_END_QTY65 ) VAL65
             , SUM(ASSY_END_QTY66 ) VAL66
             , SUM(ASSY_END_QTY67 ) VAL67
             , SUM(ASSY_END_QTY68 ) VAL68
             , SUM(ASSY_END_QTY69 ) VAL69
             , SUM(ASSY_END_QTY70 ) VAL70
             , SUM(ASSY_END_QTY71 ) VAL71
             , SUM(ASSY_END_QTY72 ) VAL72
             , SUM(ASSY_END_QTY73 ) VAL73
             , SUM(ASSY_END_QTY74 ) VAL74
             , SUM(ASSY_END_QTY75 ) VAL75
             , SUM(ASSY_END_QTY76 ) VAL76
             , SUM(ASSY_END_QTY77 ) VAL77
             , SUM(ASSY_END_QTY78 ) VAL78
             , SUM(ASSY_END_QTY79 ) VAL79
             , SUM(ASSY_END_QTY80 ) VAL80
             , SUM(ASSY_END_QTY81 ) VAL81
             , ROUND(SUM(TOTAL)/82, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200714', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200715', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200716', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200717', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200718', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200719', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200720', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200721', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200722', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200723', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200724', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200725', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200726', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200727', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200728', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200729', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200730', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200731', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200801', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200802', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200803', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200804', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200805', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200806', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200807', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200808', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200809', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200810', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200811', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200812', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200813', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200814', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200815', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200816', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200817', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200818', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200819', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200820', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200821', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200822', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200823', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200824', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200825', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200826', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200827', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200828', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200829', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200830', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200831', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200901', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200902', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200903', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200904', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200905', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200906', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200907', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200908', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200909', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200910', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , DECODE(WORK_DATE, '20200911', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY59
                    , DECODE(WORK_DATE, '20200912', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY60
                    , DECODE(WORK_DATE, '20200913', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY61
                    , DECODE(WORK_DATE, '20200914', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY62
                    , DECODE(WORK_DATE, '20200915', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY63
                    , DECODE(WORK_DATE, '20200916', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY64
                    , DECODE(WORK_DATE, '20200917', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY65
                    , DECODE(WORK_DATE, '20200918', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY66
                    , DECODE(WORK_DATE, '20200919', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY67
                    , DECODE(WORK_DATE, '20200920', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY68
                    , DECODE(WORK_DATE, '20200921', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY69
                    , DECODE(WORK_DATE, '20200922', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY70
                    , DECODE(WORK_DATE, '20200923', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY71
                    , DECODE(WORK_DATE, '20200924', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY72
                    , DECODE(WORK_DATE, '20200925', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY73
                    , DECODE(WORK_DATE, '20200926', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY74
                    , DECODE(WORK_DATE, '20200927', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY75
                    , DECODE(WORK_DATE, '20200928', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY76
                    , DECODE(WORK_DATE, '20200929', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY77
                    , DECODE(WORK_DATE, '20200930', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY78
                    , DECODE(WORK_DATE, '20201001', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY79
                    , DECODE(WORK_DATE, '20201002', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY80
                    , DECODE(WORK_DATE, '20201003', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY81
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200714' AND '20201003' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR, (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9, A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9, DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 3),CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010423'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER_GRP, (SELECT TO_NUMBER(DATA_1) FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_OPER_GRP_TARGET' AND KEY_1 = A.OPER_GRP) AS TARGET,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , B.GUBUN
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_0 ELSE WIP_0 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_0 ELSE END_0 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_0 ELSE EXP_0 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_0
                      WHEN B.GUBUN = 'RUN' THEN RUN_0
                 END), 0) AS D0
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_1 ELSE WIP_1 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_1 ELSE END_1 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_1 ELSE EXP_1 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_1
                      WHEN B.GUBUN = 'RUN' THEN RUN_1
                 END), 0) AS D1
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_2 ELSE WIP_2 / 1000 END) 
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_2 ELSE END_2 / 1000 END) 
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_2 ELSE EXP_2 / 1000 END) 
                      WHEN B.GUBUN = '설비대수' THEN RES_2
                      WHEN B.GUBUN = 'RUN' THEN RUN_2
                 END), 0) AS D2
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END), 0) AS TTL
     , ROUND(SUM(CASE WHEN B.GUBUN = '재공' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN WIP_TTL ELSE WIP_TTL / 1000 END)
                      WHEN B.GUBUN = '실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN END_TTL ELSE END_TTL / 1000 END)
                      WHEN B.GUBUN = '예상실적' THEN (CASE WHEN A.OPER_GRP IN ('STOCK', 'LAMI', 'Stealth Saw', 'BG', 'DDS', 'SAW') THEN EXP_TTL ELSE EXP_TTL / 1000 END)
                      WHEN B.GUBUN = '설비대수' THEN RES_TTL
                      WHEN B.GUBUN = 'RUN' THEN RUN_TTL
                 END) / 3, 0) AS AVG
  FROM (
        SELECT *
          FROM (
                SELECT *
                  FROM (
                        SELECT A.*
                             , B.*
                             , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = B.MAT_GRP_1), '-') AS CUST_TYPE
                             , (SELECT KEY_3 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_PKG_2D_CMOLD' AND KEY_1 = 'C-MOLD' AND KEY_2 = B.MAT_GRP_1 AND KEY_3 = B.MAT_CMF_11 AND (KEY_4 = '%' OR KEY_4 = B.MAT_ID)) AS KEY_3
                          FROM (
                                SELECT DECODE(LEVEL, 1, 'STOCK', 2, 'LAMI', 3, 'Stealth Saw', 4, 'BG', 5, 'DDS', 6, 'SAW', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 'HMK3') AS OPER_GRP
                                  FROM DUAL CONNECT BY LEVEL <= 12 
                               ) A 
                             , MWIPMATDEF B 
                         WHERE B.FACTORY = 'HMVA2'
                           AND B.MAT_TYPE = 'FG'
                           AND B.DELETE_FLAG = ' '
                       )
                 WHERE (OPER_GRP <> 'C-MOLD' OR KEY_3 IS NOT NULL)
               ) MAT
             , (
                SELECT MAT_ID AS END_MAT_ID
                     , OPER_GRP AS END_OPER_GRP
                     , SUM(CONV_END_QTY) AS END_TTL
                     , SUM(DECODE(WORK_DATE, '20200803', 0, CONV_END_QTY)) + (SUM(DECODE(WORK_DATE, '20200803', CONV_END_QTY , 0)) / 10.0745764282778 * 24) AS EXP_TTL
                     , SUM(DECODE(WORK_DATE, '20200801', CONV_END_QTY, 0)) AS END_0
                     , SUM(DECODE(WORK_DATE, '20200802', CONV_END_QTY, 0)) AS END_1
                     , SUM(DECODE(WORK_DATE, '20200803', CONV_END_QTY, 0)) AS END_2
                     , SUM(DECODE(WORK_DATE, '20200801', CONV_END_QTY, 0)) AS EXP_0
                     , SUM(DECODE(WORK_DATE, '20200802', CONV_END_QTY, 0)) AS EXP_1
                     , SUM(DECODE(WORK_DATE, '20200803', CONV_END_QTY, 0)) / 10.0745764282778 * 24 AS EXP_2
                  FROM (
                        SELECT A.MAT_ID
                             , A.WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER = 'A1000' THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.OPER LIKE 'A040%' AND E.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1)
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS END_QTY
                             , CASE WHEN A.OPER = 'A0000' THEN (S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2)
                                    WHEN A.OPER IN ('A0033', 'A0040', 'A0230', 'A0030', 'A0200', 'A0020') THEN (S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2)
                                    WHEN A.OPER LIKE 'A040%' AND B.MAT_ID LIKE 'SEK%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A040%' AND (B.MAT_GRP_5 IN ('1st', 'Merge') OR B.MAT_GRP_5 LIKE 'Middle%') THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * NVL(C.DATA_1,1)
                                    WHEN A.OPER LIKE 'A060%' THEN (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) * (CASE WHEN D.WIRE_CNT IS NOT NULL THEN D.WIRE_CNT
                                                                                           WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                           ELSE '1' END)
                                    WHEN A.OPER = 'AZ010' THEN DECODE(B.MAT_GRP_3, 'COB', 0, 'BGN', 0, (S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1))
                                    ELSE (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1)
                               END AS CONV_END_QTY
                          FROM RSUMWIPMOV A
                             , MWIPMATDEF B
                             , (
                                SELECT KEY_1 AS MAT_ID, DATA_1
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS')
                               ) C
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES 
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) D
                             , (
                                SELECT KEY_1 AS MAT_GRP_2, DATA_2 AS DA_TYPE
                                  FROM MGCMTBLDAT 
                                 WHERE FACTORY = 'HMVA2'
                                   AND TABLE_NAME = 'H_FAMILY'
                               ) E
                         WHERE 1=1
                           AND A.FACTORY = B.FACTORY
                           AND A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.MAT_ID = D.MAT_ID(+)
                           AND A.OPER = D.OPER(+)
                           AND B.MAT_GRP_2 = E.MAT_GRP_2(+)
                           AND A.FACTORY = 'HMVA2'
                           AND A.WORK_DATE BETWEEN '20200801' AND '20200803'
                           AND A.LOT_TYPE = 'W'
                           AND B.DELETE_FLAG = ' '
                           AND B.MAT_TYPE = 'FG'
                           AND A.FACTORY NOT IN ('RETURN') 
                           AND A.CM_KEY_3 LIKE 'P%' 
                           AND REGEXP_LIKE(A.OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0000|A0020|AZ010|A1825|A0200')
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) SHP
             , (
                SELECT MAT_ID AS WIP_MAT_ID
                     , OPER_GRP AS WIP_OPER_GRP
                     , SUM(CONV_WIP_QTY) AS WIP_TTL
                     , SUM(DECODE(WORK_DATE, '20200801', CONV_WIP_QTY, 0)) AS WIP_0
                     , SUM(DECODE(WORK_DATE, '20200802', CONV_WIP_QTY, 0)) AS WIP_1
                     , SUM(DECODE(WORK_DATE, '20200803', CONV_WIP_QTY, 0)) AS WIP_2
                  FROM (
                        SELECT A.MAT_ID, WORK_DATE
                             , CASE WHEN A.OPER = 'A0033' THEN 'Stealth Saw'
                                    WHEN A.OPER IN ('A0040', 'A0030') THEN 'BG'
                                    WHEN A.OPER = 'A0230' THEN 'DDS'
                                    WHEN A.OPER IN ('A1000', 'A0950') THEN 'C-MOLD'
                                    WHEN A.OPER LIKE 'A060%' OR A.OPER LIKE 'A055%' THEN 'WB'
                                    WHEN A.OPER IN ('A1750', 'A1825') THEN 'SST'
                                    WHEN A.OPER = 'A0200' THEN 'SAW'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN (A.OPER LIKE 'A040%' OR A.OPER = 'A0250') AND B.DA_TYPE = 'Epoxy' THEN 'DA(Epoxy)'
                                    WHEN A.OPER = 'A0000' THEN 'STOCK'
                                    WHEN A.OPER = 'A0020' THEN 'LAMI'
                                    WHEN A.OPER = 'AZ010' THEN 'HMK3'
                                    ELSE ''
                               END OPER_GRP
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END WIP_QTY
                             , CASE WHEN A.OPER IN ('A0033', 'A0040', 'A0030', 'A0230', 'A0200', 'A0000', 'A0020') THEN WIP_QTY_2
                                    WHEN A.OPER LIKE 'A040%' AND B.GUBUN = 'O' THEN WIP_QTY * COMP_CNT
                                    WHEN A.OPER LIKE 'A060%' AND B.GUBUN = 'O' THEN WIP_QTY * (CASE WHEN C.WIRE_CNT IS NOT NULL THEN C.WIRE_CNT
                                                                                                    WHEN B.MAT_GRP_6 NOT IN ('-','0') THEN B.MAT_GRP_6
                                                                                                    ELSE '1' END)
                                    WHEN B.GUBUN = 'O' THEN WIP_QTY
                                    ELSE 0
                               END AS CONV_WIP_QTY
                          FROM (
                                SELECT MAT_ID
                                     , '20200803' AS WORK_DATE
                                     , OPER
                                     , QTY_1 AS WIP_QTY
                                     , QTY_2 AS WIP_QTY_2
                                  FROM RWIPLOTSTS
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND LOT_DEL_FLAG = ' '
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825') 
                                   AND LOT_CMF_5 LIKE 'P%' 
                                 UNION ALL
                                SELECT MAT_ID
                                     , WORK_DATE
                                     , OPER
                                     , EOH_QTY_1 AS WIP_QTY
                                     , EOH_QTY_2 AS WIP_QTY_2
                                  FROM RSUMWIPEOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND LOT_TYPE = 'W'
                                   AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A0950|A060*|A1750|A0030|A0200|A0000|A0020|AZ010|A0250|A050*|A053*|A055*|A1825')
                                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                                   AND SHIFT = '3'
                                   AND CM_KEY_3 LIKE 'P%' 
                               ) A
                             , (
                                SELECT *
                                  FROM (
                                        SELECT MAT_ID, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_CMF_11
                                             , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                         THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN 'O' ELSE '' END)
                                                    WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 = '-' THEN '' 
                                                    ELSE 'O'
                                               END GUBUN
                                             , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                             , COMP_CNT
                                          FROM VWIPMATDEF
                                         WHERE FACTORY = 'HMVA2'
                                           AND MAT_TYPE = 'FG'
                                           AND DELETE_FLAG = ' '
                                           AND MAT_GRP_2 <> '-'
                                       )
                               ) B
                             , (
                                SELECT MAT_ID, OPER, TCD_CMF_2 AS WIRE_CNT
                                  FROM CWIPTCDDEF@RPTTOMES
                                 WHERE FACTORY = 'HMVA2'
                                   AND OPER LIKE 'A060%'
                                   AND SET_FLAG = 'Y'
                                   AND TCD_CMF_2 <> ' '
                               ) C
                         WHERE A.MAT_ID = B.MAT_ID
                           AND A.MAT_ID = C.MAT_ID(+)
                           AND A.OPER = C.OPER(+)
                       )
                 GROUP BY MAT_ID, OPER_GRP
               ) WIP
             , (
                SELECT RES_STS_2 AS RES_MAT_ID
                     , OPER_GRP AS RES_OPER_GRP 
                     , SUM(RES_CNT) AS RES_TTL
                     , SUM(RUN_CNT) AS RUN_TTL
                     , SUM(DECODE(WORK_DATE, '20200801', RES_CNT, 0)) AS RES_0
                     , SUM(DECODE(WORK_DATE, '20200802', RES_CNT, 0)) AS RES_1
                     , SUM(DECODE(WORK_DATE, '20200803', RES_CNT, 0)) AS RES_2
                     , SUM(DECODE(WORK_DATE, '20200801', RUN_CNT, 0)) AS RUN_0
                     , SUM(DECODE(WORK_DATE, '20200802', RUN_CNT, 0)) AS RUN_1
                     , SUM(DECODE(WORK_DATE, '20200803', RUN_CNT, 0)) AS RUN_2
                  FROM (
                        SELECT RES_STS_2
                             , WORK_DATE
                             , CASE WHEN A.RES_GRP_3 = 'SDBG' THEN 'Stealth Saw'
                                    WHEN A.RES_GRP_3 = 'BACK LAP' THEN 'BG'
                                    WHEN A.RES_GRP_3 = 'WAFER EXPANDING' THEN 'DDS'
                                    WHEN A.RES_GRP_3 = 'MOLD' THEN 'C-MOLD'
                                    WHEN A.RES_GRP_3 = 'WIRE BOND' THEN 'WB'
                                    WHEN A.RES_GRP_3 = 'SAW SORTER' THEN 'SST'
                                    WHEN A.RES_GRP_3 = 'SAW' THEN 'SAW'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND B.MAT_GRP_2 = 'DFN' THEN 'DA(DFN)'
                                    WHEN A.RES_GRP_3 = 'DIE ATTACH' AND REGEXP_LIKE(A.RES_GRP_6, 'ESEC2100SD|SDB-30UST|^DB*|^SPA*') THEN 'DA(Epoxy)'
                                    WHEN A.RES_GRP_3 = 'LAMINATION' THEN 'LAMI'
                                    ELSE 'DA'
                               END OPER_GRP
                             , RES_CNT
                             , RUN_CNT
                          FROM (
                                SELECT A.RES_STS_2
                                     , '20200803' AS WORK_DATE
                                     , A.RES_GRP_3
                                     , A.RES_GRP_6
                                     , COUNT(A.RES_ID) AS RES_CNT
                                     , NVL(SUM(DECODE(RES_UP_DOWN_FLAG, 'U', DECODE(NVL(B.START_RES_ID, '-'), '-', 0, 1))), 0) AS RUN_CNT
                                  FROM MRASRESDEF A
                                     , (
                                        SELECT DISTINCT START_RES_ID
                                          FROM MWIPLOTSTS
                                         WHERE FACTORY = 'HMVA2'
                                           AND LOT_TYPE = 'W'
                                           AND LOT_DEL_FLAG = ' '
                                           AND LOT_CMF_5 LIKE 'P%' 
                                           AND REGEXP_LIKE(OPER, 'A040*|A0033|A0040|A0230|A1000|A060*|A1750|A0030|A0200|A0020|A1825')
                                           AND LOT_STATUS = 'PROC'
                                       ) B
                                 WHERE 1=1
                                   AND A.RES_ID = B.START_RES_ID(+)
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.RES_CMF_9 = 'Y'
                                   AND A.RES_CMF_7 = 'Y'
                                   AND (A.RES_STS_1 NOT IN ('C200', 'B199') OR A.RES_UP_DOWN_FLAG = 'U') 
                                   AND A.DELETE_FLAG  = ' '
                                   AND A.RES_TYPE  = 'EQUIPMENT'
                                   AND (A.RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR A.RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY A.RES_STS_2, A.RES_GRP_3, A.RES_GRP_6
                                 UNION ALL
                                SELECT RES_STS_2
                                     , SUBSTR(CUTOFF_DT, 1, 8) AS WORK_DATE
                                     , RES_GRP_3
                                     , RES_GRP_6
                                     , COUNT(RES_ID) AS RES_CNT
                                     , SUM(DECODE(RES_UP_DOWN_FLAG, 'U', 1, 0)) AS RUN_CNT
                                  FROM MRASRESDEF_BOH
                                 WHERE FACTORY = 'HMVA2'
                                   AND CUTOFF_DT BETWEEN '2020080122' AND '2020080222'
                                   AND SUBSTR(CUTOFF_DT, -2) = '22'
                                   AND RES_CMF_9 = 'Y'
                                   AND RES_CMF_7 = 'Y'
                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                   AND DELETE_FLAG  = ' '
                                   AND RES_TYPE  = 'EQUIPMENT'
                                   AND (RES_GRP_3 IN ('SDBG','BACK LAP','WAFER EXPANDING','DIE ATTACH', 'WIRE BOND', 'SAW SORTER', 'SAW', 'LAMINATION') OR RES_ID IN ('M-A57','M-A59','M-A60'))
                                 GROUP BY RES_STS_2, SUBSTR(CUTOFF_DT, 1, 8), RES_GRP_3, RES_GRP_6
                               ) A
                             , (
                                SELECT MAT_ID, MAT_GRP_2
                                     , (SELECT DATA_2 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_FAMILY' AND KEY_1 = MAT_GRP_2) AS DA_TYPE
                                  FROM MWIPMATDEF
                                 WHERE FACTORY = 'HMVA2'
                                   AND MAT_TYPE = 'FG'
                               ) B
                 WHERE A.RES_STS_2 = B.MAT_ID(+)
                       )
                 GROUP BY RES_STS_2, OPER_GRP
               ) RES
         WHERE 1=1
           AND MAT.OPER_GRP = SHP.END_OPER_GRP(+)
           AND MAT.OPER_GRP = WIP.WIP_OPER_GRP(+)
           AND MAT.OPER_GRP = RES.RES_OPER_GRP(+)
           AND MAT.MAT_ID = SHP.END_MAT_ID(+)
           AND MAT.MAT_ID = WIP.WIP_MAT_ID(+)
           AND MAT.MAT_ID = RES.RES_MAT_ID(+)
           AND NVL(SHP.END_TTL,0) + NVL(WIP.WIP_TTL,0) + NVL(RES.RES_TTL,0) > 0
       ) A
     , (SELECT DECODE(LEVEL, 1, '재공', 2, '실적', 3, '예상실적', 4, '설비대수', 5, 'RUN') AS GUBUN FROM DUAL CONNECT BY LEVEL <= 5 ) B
 GROUP BY A.OPER_GRP, A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.GUBUN 
 ORDER BY DECODE(A.OPER_GRP, 'STOCK', 1, 'LAMI', 2, 'Stealth Saw', 3, 'BG', 4, 'DDS', 5, 'SAW', 6, 'DA', 7, 'DA(Epoxy)', 8, 'DA(DFN)', 9, 'WB', 10, 'C-MOLD', 11, 'SST', 12, 13), A.OPER_GRP,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(B.GUBUN, '재공', 1, '실적', 2, '예상실적', 3, '설비대수', 4, 5) 

-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , SUM(ASSY_END_QTY59 ) VAL59
             , SUM(ASSY_END_QTY60 ) VAL60
             , SUM(ASSY_END_QTY61 ) VAL61
             , SUM(ASSY_END_QTY62 ) VAL62
             , SUM(ASSY_END_QTY63 ) VAL63
             , SUM(ASSY_END_QTY64 ) VAL64
             , SUM(ASSY_END_QTY65 ) VAL65
             , SUM(ASSY_END_QTY66 ) VAL66
             , SUM(ASSY_END_QTY67 ) VAL67
             , SUM(ASSY_END_QTY68 ) VAL68
             , SUM(ASSY_END_QTY69 ) VAL69
             , SUM(ASSY_END_QTY70 ) VAL70
             , SUM(ASSY_END_QTY71 ) VAL71
             , SUM(ASSY_END_QTY72 ) VAL72
             , SUM(ASSY_END_QTY73 ) VAL73
             , SUM(ASSY_END_QTY74 ) VAL74
             , SUM(ASSY_END_QTY75 ) VAL75
             , SUM(ASSY_END_QTY76 ) VAL76
             , SUM(ASSY_END_QTY77 ) VAL77
             , SUM(ASSY_END_QTY78 ) VAL78
             , SUM(ASSY_END_QTY79 ) VAL79
             , SUM(ASSY_END_QTY80 ) VAL80
             , SUM(ASSY_END_QTY81 ) VAL81
             , ROUND(SUM(TOTAL)/82, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200714', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200715', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200716', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200717', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200718', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200719', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200720', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200721', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200722', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200723', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200724', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200725', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200726', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200727', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200728', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200729', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200730', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200731', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200801', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200802', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200803', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200804', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200805', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200806', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200807', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200808', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200809', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200810', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200811', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200812', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200813', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200814', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200815', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200816', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200817', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200818', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200819', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200820', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200821', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200822', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200823', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200824', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200825', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200826', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200827', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200828', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200829', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200830', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200831', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200901', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200902', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200903', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200904', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200905', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200906', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200907', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200908', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200909', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200910', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , DECODE(WORK_DATE, '20200911', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY59
                    , DECODE(WORK_DATE, '20200912', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY60
                    , DECODE(WORK_DATE, '20200913', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY61
                    , DECODE(WORK_DATE, '20200914', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY62
                    , DECODE(WORK_DATE, '20200915', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY63
                    , DECODE(WORK_DATE, '20200916', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY64
                    , DECODE(WORK_DATE, '20200917', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY65
                    , DECODE(WORK_DATE, '20200918', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY66
                    , DECODE(WORK_DATE, '20200919', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY67
                    , DECODE(WORK_DATE, '20200920', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY68
                    , DECODE(WORK_DATE, '20200921', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY69
                    , DECODE(WORK_DATE, '20200922', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY70
                    , DECODE(WORK_DATE, '20200923', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY71
                    , DECODE(WORK_DATE, '20200924', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY72
                    , DECODE(WORK_DATE, '20200925', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY73
                    , DECODE(WORK_DATE, '20200926', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY74
                    , DECODE(WORK_DATE, '20200927', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY75
                    , DECODE(WORK_DATE, '20200928', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY76
                    , DECODE(WORK_DATE, '20200929', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY77
                    , DECODE(WORK_DATE, '20200930', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY78
                    , DECODE(WORK_DATE, '20201001', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY79
                    , DECODE(WORK_DATE, '20201002', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY80
                    , DECODE(WORK_DATE, '20201003', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY81
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('A1000')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200714' AND '20201003' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010312'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS This_Week_First_Day 
     , MAX(SYS_DATE) AS This_Week_Last_Day
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'SE'
   AND (PLAN_YEAR,PLAN_WEEK) IN (
                                 SELECT PLAN_YEAR,PLAN_WEEK 
                                   FROM MWIPCALDEF 
                                  WHERE 1=1
                                    AND CALENDAR_ID = 'SE'
                                    AND SYS_DATE = '20200802')

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10 AS PIN_TYPE,  ' ', MAT.MAT_ID AS PRODUCT,  ' ',  ' ' 
     , ROUND(SUM(TOTAL)/1,0) AS TOTAL 
     , ROUND(SUM(V0)/1,0) AS  Val0
     , ROUND(SUM(V1)/1,0) AS  Val1
     , ROUND(SUM(V2)/1,0) AS  Val2
     , ROUND(SUM(V3)/1,0) AS  Val3
     , ROUND(SUM(V4)/1,0) AS  Val4
     , ROUND(SUM(V5)/1,0) AS  Val5
     , ROUND(SUM(V6)/1,0) AS  Val6
     , ROUND(SUM(V7)/1,0) AS  Val7
     , ROUND(SUM(V8)/1,0) AS  Val8
     , ROUND(SUM(V9)/1,0) AS  Val9
     , ROUND(SUM(V10)/1,0) AS  Val10
     , ROUND(SUM(V11)/1,0) AS  Val11
     , ROUND(SUM(V12)/1,0) AS  Val12
     , ROUND(SUM(V13)/1,0) AS  Val13
     , ROUND(SUM(V14)/1,0) AS  Val14
     , ROUND(SUM(V15)/1,0) AS  Val15
     , ROUND(SUM(V16)/1,0) AS  Val16
     , ROUND(SUM(V17)/1,0) AS  Val17
     , ROUND(SUM(V18)/1,0) AS  Val18
     , ROUND(SUM(V19)/1,0) AS  Val19
     , ROUND(SUM(V20)/1,0) AS  Val20
     , ROUND(SUM(V21)/1,0) AS  Val21
     , ROUND(SUM(V22)/1,0) AS  Val22
     , ROUND(SUM(V23)/1,0) AS  Val23
     , ROUND(SUM(V24)/1,0) AS  Val24
     , ROUND(SUM(V25)/1,0) AS  Val25
     , ROUND(SUM(V26)/1,0) AS  Val26
     , ROUND(SUM(V27)/1,0) AS  Val27
     , ROUND(SUM(V28)/1,0) AS  Val28
     , ROUND(SUM(V29)/1,0) AS  Val29
     , ROUND(SUM(V30)/1,0) AS  Val30
     , ROUND(SUM(V31)/1,0) AS  Val31
     , ROUND(SUM(V32)/1,0) AS  Val32
     , ROUND(SUM(V33)/1,0) AS  Val33
     , ROUND(SUM(V34)/1,0) AS  Val34
     , ROUND(SUM(V35)/1,0) AS  Val35
     , ROUND(SUM(V36)/1,0) AS  Val36
     , ROUND(SUM(V37)/1,0) AS  Val37
     , ROUND(SUM(V38)/1,0) AS  Val38
     , ROUND(SUM(V39)/1,0) AS  Val39
     , ROUND(SUM(V40)/1,0) AS  Val40
     , ROUND(SUM(V41)/1,0) AS  Val41
     , ROUND(SUM(V42)/1,0) AS  Val42
     , ROUND(SUM(V43)/1,0) AS  Val43
     , ROUND(SUM(V44)/1,0) AS  Val44
     , ROUND(SUM(V45)/1,0) AS  Val45
     , ROUND(SUM(V46)/1,0) AS  Val46
     , ROUND(SUM(V47)/1,0) AS  Val47
     , ROUND(SUM(V48)/1,0) AS  Val48
     , ROUND(SUM(V49)/1,0) AS  Val49
     , ROUND(SUM(V50)/1,0) AS  Val50
     , ROUND(SUM(V51)/1,0) AS  Val51
     , ROUND(SUM(V52)/1,0) AS  Val52
     , ROUND(SUM(V53)/1,0) AS  Val53
     , ROUND(SUM(V54)/1,0) AS  Val54
     , ROUND(SUM(V55)/1,0) AS  Val55
     , ROUND(SUM(V56)/1,0) AS  Val56
     , ROUND(SUM(V57)/1,0) AS  Val57
     , ROUND(SUM(V58)/1,0) AS  Val58
     , ROUND(SUM(V59)/1,0) AS  Val59
     , ROUND(SUM(V60)/1,0) AS  Val60
     , ROUND(SUM(V61)/1,0) AS  Val61
     , ROUND(SUM(V62)/1,0) AS  Val62
     , ROUND(SUM(V63)/1,0) AS  Val63
     , ROUND(SUM(V64)/1,0) AS  Val64
     , ROUND(SUM(V65)/1,0) AS  Val65
     , ROUND(SUM(V66)/1,0) AS  Val66
     , ROUND(SUM(V67)/1,0) AS  Val67
     , ROUND(SUM(V68)/1,0) AS  Val68
     , ROUND(SUM(V69)/1,0) AS  Val69
     , ROUND(SUM(V70)/1,0) AS  Val70
     , ROUND(SUM(V71)/1,0) AS  Val71
     , ROUND(SUM(V72)/1,0) AS  Val72
     , ROUND(SUM(V73)/1,0) AS  Val73
     , ROUND(SUM(V74)/1,0) AS  Val74
     , ROUND(SUM(V75)/1,0) AS  Val75
     , ROUND(SUM(V76)/1,0) AS  Val76
     , ROUND(SUM(V77)/1,0) AS  Val77
     , ROUND(SUM(V78)/1,0) AS  Val78
     , ROUND(SUM(V79)/1,0) AS  Val79
     , ROUND(SUM(V80)/1,0) AS  Val80
     , ROUND(SUM(V81)/1,0) AS  Val81
     , ROUND(SUM(V82)/1,0) AS  Val82
     , ROUND(SUM(V83)/1,0) AS  Val83
     , ROUND(SUM(V84)/1,0) AS  Val84
     , ROUND(SUM(V85)/1,0) AS  Val85
     , ROUND(SUM(V86)/1,0) AS  Val86
     , ROUND(SUM(V87)/1,0) AS  Val87
     , ROUND(SUM(V88)/1,0) AS  Val88
     , ROUND(SUM(V89)/1,0) AS  Val89
     , ROUND(SUM(V90)/1,0) AS  Val90
     , ROUND(SUM(V91)/1,0) AS  Val91
     , ROUND(SUM(V92)/1,0) AS  Val92
     , ROUND(SUM(V93)/1,0) AS  Val93
     , ROUND(SUM(V94)/1,0) AS  Val94
     , ROUND(SUM(V95)/1,0) AS  Val95
     , ROUND(SUM(V96)/1,0) AS  Val96
     , ROUND(SUM(V97)/1,0) AS  Val97
     , ROUND(SUM(V98)/1,0) AS  Val98
     , ROUND(SUM(V99)/1,0) AS  Val99
     , ROUND(SUM(V100)/1,0) AS  Val100
     , ROUND(SUM(V101)/1,0) AS  Val101
     , ROUND(SUM(V102)/1,0) AS  Val102
     , ROUND(SUM(V103)/1,0) AS  Val103
     , ROUND(SUM(V104)/1,0) AS  Val104
     , ROUND(SUM(V105)/1,0) AS  Val105
     , ROUND(SUM(V106)/1,0) AS  Val106
     , ROUND(SUM(V107)/1,0) AS  Val107
     , ROUND(SUM(V108)/1,0) AS  Val108
     , ROUND(SUM(V109)/1,0) AS  Val109
     , ROUND(SUM(V110)/1,0) AS  Val110
     , ROUND(SUM(V111)/1,0) AS  Val111
     , ROUND(SUM(V112)/1,0) AS  Val112
     , ROUND(SUM(V113)/1,0) AS  Val113
     , ROUND(SUM(V114)/1,0) AS  Val114
     , ROUND(SUM(V115)/1,0) AS  Val115
     , ROUND(SUM(V116)/1,0) AS  Val116
     , ROUND(SUM(V117)/1,0) AS  Val117
     , ROUND(SUM(V118)/1,0) AS  Val118
     , ROUND(SUM(V119)/1,0) AS  Val119
     , ROUND(SUM(V120)/1,0) AS  Val120
     , ROUND(SUM(V121)/1,0) AS  Val121
     , ROUND(SUM(V122)/1,0) AS  Val122
     , ROUND(SUM(V123)/1,0) AS  Val123
     , ROUND(SUM(V124)/1,0) AS  Val124
     , ROUND(SUM(V125)/1,0) AS  Val125
     , ROUND(SUM(V126)/1,0) AS  Val126
     , ROUND(SUM(V127)/1,0) AS  Val127
     , ROUND(SUM(V128)/1,0) AS  Val128
     , ROUND(SUM(V129)/1,0) AS  Val129
     , ROUND(SUM(V130)/1,0) AS  Val130
     , ROUND(SUM(V131)/1,0) AS  Val131
     , ROUND(SUM(V132)/1,0) AS  Val132
     , ROUND(SUM(V133)/1,0) AS  Val133
     , ROUND(SUM(V134)/1,0) AS  Val134
     , ROUND(SUM(V135)/1,0) AS  Val135
     , ROUND(SUM(V136)/1,0) AS  Val136
     , ROUND(SUM(V137)/1,0) AS  Val137
     , ROUND(SUM(V138)/1,0) AS  Val138
     , ROUND(SUM(V139)/1,0) AS  Val139
     , ROUND(SUM(V140)/1,0) AS  Val140
     , ROUND(SUM(V141)/1,0) AS  Val141
     , ROUND(SUM(V142)/1,0) AS  Val142
     , ROUND(SUM(V143)/1,0) AS  Val143
     , ROUND(SUM(V144)/1,0) AS  Val144
     , ROUND(SUM(V145)/1,0) AS  Val145
     , ROUND(SUM(V146)/1,0) AS  Val146
     , ROUND(SUM(V147)/1,0) AS  Val147
     , ROUND(SUM(V148)/1,0) AS  Val148
     , ROUND(SUM(V149)/1,0) AS  Val149
     , ROUND(SUM(V150)/1,0) AS  Val150
     , ROUND(SUM(V151)/1,0) AS  Val151
     , ROUND(SUM(V152)/1,0) AS  Val152
     , ROUND(SUM(V153)/1,0) AS  Val153
     , ROUND(SUM(V154)/1,0) AS  Val154
     , ROUND(SUM(V155)/1,0) AS  Val155
     , ROUND(SUM(V156)/1,0) AS  Val156
     , ROUND(SUM(V157)/1,0) AS  Val157
     , ROUND(SUM(V158)/1,0) AS  Val158
     , ROUND(SUM(V159)/1,0) AS  Val159
     , ROUND(SUM(V160)/1,0) AS  Val160
     , ROUND(SUM(V161)/1,0) AS  Val161
     , ROUND(SUM(V162)/1,0) AS  Val162
     , ROUND(SUM(V163)/1,0) AS  Val163
     , ROUND(SUM(V164)/1,0) AS  Val164
     , ROUND(SUM(V165)/1,0) AS  Val165
     , ROUND(SUM(V166)/1,0) AS  Val166
     , ROUND(SUM(V167)/1,0) AS  Val167
     , ROUND(SUM(V168)/1,0) AS  Val168
     , ROUND(SUM(V169)/1,0) AS  Val169
     , ROUND(SUM(V170)/1,0) AS  Val170
     , ROUND(SUM(V171)/1,0) AS  Val171
     , ROUND(SUM(V172)/1,0) AS  Val172
     , ROUND(SUM(V173)/1,0) AS  Val173
     , ROUND(SUM(V174)/1,0) AS  Val174
     , ROUND(SUM(V175)/1,0) AS  Val175
     , ROUND(SUM(V176)/1,0) AS  Val176
     , ROUND(SUM(V177)/1,0) AS  Val177
     , ROUND(SUM(V178)/1,0) AS  Val178
     , ROUND(SUM(V179)/1,0) AS  Val179
     , ROUND(SUM(V180)/1,0) AS  Val180
     , ROUND(SUM(V181)/1,0) AS  Val181
     , ROUND(SUM(V182)/1,0) AS  Val182
     , ROUND(SUM(V183)/1,0) AS  Val183
     , ROUND(SUM(V184)/1,0) AS  Val184
     , ROUND(SUM(V185)/1,0) AS  Val185
     , ROUND(SUM(V186)/1,0) AS  Val186
     , ROUND(SUM(V187)/1,0) AS  Val187
     , ROUND(SUM(V188)/1,0) AS  Val188
     , ROUND(SUM(V189)/1,0) AS  Val189
     , ROUND(SUM(V190)/1,0) AS  Val190
     , ROUND(SUM(V191)/1,0) AS  Val191
     , ROUND(SUM(V192)/1,0) AS  Val192
     , ROUND(SUM(V193)/1,0) AS  Val193
     , ROUND(SUM(V194)/1,0) AS  Val194
     , ROUND(SUM(V195)/1,0) AS  Val195
     , ROUND(SUM(V196)/1,0) AS  Val196
     , ROUND(SUM(V197)/1,0) AS  Val197
     , ROUND(SUM(V198)/1,0) AS  Val198
     , ROUND(SUM(V199)/1,0) AS  Val199
     , ROUND(SUM(V200)/1,0) AS  Val200
     , ROUND(SUM(V201)/1,0) AS  Val201
     , ROUND(SUM(V202)/1,0) AS  Val202
     , ROUND(SUM(V203)/1,0) AS  Val203
     , ROUND(SUM(V204)/1,0) AS  Val204
     , ROUND(SUM(V205)/1,0) AS  Val205
     , ROUND(SUM(V206)/1,0) AS  Val206
     , ROUND(SUM(V207)/1,0) AS  Val207
     , ROUND(SUM(V208)/1,0) AS  Val208
     , ROUND(SUM(V209)/1,0) AS  Val209
     , ROUND(SUM(V210)/1,0) AS  Val210
     , ROUND(SUM(V211)/1,0) AS  Val211
     , ROUND(SUM(V212)/1,0) AS  Val212
     , ROUND(SUM(V213)/1,0) AS  Val213
     , ROUND(SUM(V214)/1,0) AS  Val214
     , ROUND(SUM(V215)/1,0) AS  Val215
     , ROUND(SUM(V216)/1,0) AS  Val216
     , ROUND(SUM(V217)/1,0) AS  Val217
     , ROUND(SUM(V218)/1,0) AS  Val218
     , ROUND(SUM(V219)/1,0) AS  Val219
     , ROUND(SUM(V220)/1,0) AS  Val220
     , ROUND(SUM(V221)/1,0) AS  Val221
     , ROUND(SUM(V222)/1,0) AS  Val222
     , ROUND(SUM(V223)/1,0) AS  Val223
     , ROUND(SUM(V224)/1,0) AS  Val224
     , ROUND(SUM(V225)/1,0) AS  Val225
     , ROUND(SUM(V226)/1,0) AS  Val226
     , ROUND(SUM(V227)/1,0) AS  Val227
     , ROUND(SUM(V228)/1,0) AS  Val228
     , ROUND(SUM(V229)/1,0) AS  Val229
     , ROUND(SUM(V230)/1,0) AS  Val230
     , ROUND(SUM(V231)/1,0) AS  Val231
     , ROUND(SUM(V232)/1,0) AS  Val232
     , ROUND(SUM(V233)/1,0) AS  Val233
     , ROUND(SUM(V234)/1,0) AS  Val234
     , ROUND(SUM(V235)/1,0) AS  Val235
     , ROUND(SUM(V236)/1,0) AS  Val236
     , ROUND(SUM(V237)/1,0) AS  Val237
     , ROUND(SUM(V238)/1,0) AS  Val238
     , ROUND(SUM(V239)/1,0) AS  Val239
     , ROUND(SUM(V240)/1,0) AS  Val240
     , ROUND(SUM(V241)/1,0) AS  Val241
     , ROUND(SUM(V242)/1,0) AS  Val242
     , ROUND(SUM(V243)/1,0) AS  Val243
     , ROUND(SUM(V244)/1,0) AS  Val244
     , ROUND(SUM(V245)/1,0) AS  Val245
     , ROUND(SUM(V246)/1,0) AS  Val246
     , ROUND(SUM(V247)/1,0) AS  Val247
     , ROUND(SUM(V248)/1,0) AS  Val248
     , ROUND(SUM(V249)/1,0) AS  Val249
     , ROUND(SUM(V250)/1,0) AS  Val250
     , ROUND(SUM(V251)/1,0) AS  Val251
     , ROUND(SUM(V252)/1,0) AS  Val252
     , ROUND(SUM(V253)/1,0) AS  Val253
     , ROUND(SUM(V254)/1,0) AS  Val254
     , ROUND(SUM(V255)/1,0) AS  Val255
     , ROUND(SUM(V256)/1,0) AS  Val256
     , ROUND(SUM(V257)/1,0) AS  Val257
     , ROUND(SUM(V258)/1,0) AS  Val258
     , ROUND(SUM(V259)/1,0) AS  Val259
     , ROUND(SUM(V260)/1,0) AS  Val260
     , ROUND(SUM(V261)/1,0) AS  Val261
     , ROUND(SUM(V262)/1,0) AS  Val262
     , ROUND(SUM(V263)/1,0) AS  Val263
     , ROUND(SUM(V264)/1,0) AS  Val264
     , ROUND(SUM(V265)/1,0) AS  Val265
     , ROUND(SUM(V266)/1,0) AS  Val266
     , ROUND(SUM(V267)/1,0) AS  Val267
     , ROUND(SUM(V268)/1,0) AS  Val268
     , ROUND(SUM(V269)/1,0) AS  Val269
     , ROUND(SUM(V270)/1,0) AS  Val270
     , ROUND(SUM(V271)/1,0) AS  Val271
     , ROUND(SUM(V272)/1,0) AS  Val272
     , ROUND(SUM(V273)/1,0) AS  Val273
     , ROUND(SUM(V274)/1,0) AS  Val274
     , ROUND(SUM(V275)/1,0) AS  Val275
     , TRUNC(SUM(SHP_QTY)/1,0) AS SHP_QTY 
     , ROUND(DECODE(TO_CHAR(TO_DATE('20200802','YYYYMMDD'),'D'), 2, SUM(NVL(PLN.PLAN_W1,0)), 3, SUM(NVL(PLN.PLAN_W1,0)), SUM(NVL(PLN.PLAN_W2,0)) + SUM(NVL(SHP1.ASSY_MONDAY,0)))/1,0) AS PLAN_W1
     , ROUND(SUM(NVL(SHP1.ASSY_WEEK,0))/1,0)
     , ROUND((DECODE(TO_CHAR(TO_DATE('20200802','YYYYMMDD'),'D'), 2, SUM(NVL(PLN.PLAN_W1,0)), 3, SUM(NVL(PLN.PLAN_W1,0)), SUM(NVL(PLN.PLAN_W2,0)) + SUM(NVL(SHP1.ASSY_MONDAY,0)))) - SUM(NVL(SHP1.ASSY_WEEK,0))/1,0) AS LACK_WEEK
  FROM MWIPMATDEF MAT 
     , ( 
        SELECT A.MAT_ID, MAX(B.EMC_1) AS EMC_1 
             , SUM(QTY_1) AS TOTAL 
             , MAX((SELECT ATTR_VALUE FROM MATRNAMSTS WHERE FACTORY = 'HMVA2' AND ATTR_TYPE = 'MAT_ETC' AND ATTR_NAME = DECODE(LOT_CMF_2, 'SE', 'SEC_VERSION', 'HX', 'HX_VERSION') AND ATTR_KEY = A.MAT_ID)) AS VERSION 
             , SUM(DECODE(A.OPER, 'A0000', QTY_1,0)) V0
             , SUM(DECODE(A.OPER, 'A0005', QTY_1,0)) V1
             , SUM(DECODE(A.OPER, 'A000N', QTY_1,0)) V2
             , SUM(DECODE(A.OPER, 'A0010', QTY_1,0)) V3
             , SUM(DECODE(A.OPER, 'A0012', QTY_1,0)) V4
             , SUM(DECODE(A.OPER, 'A0013', QTY_1,0)) V5
             , SUM(DECODE(A.OPER, 'A0015', QTY_1,0)) V6
             , SUM(DECODE(A.OPER, 'A0020', QTY_1,0)) V7
             , SUM(DECODE(A.OPER, 'A0055', QTY_1,0)) V8
             , SUM(DECODE(A.OPER, 'A0023', QTY_1,0)) V9
             , SUM(DECODE(A.OPER, 'A0025', QTY_1,0)) V10
             , SUM(DECODE(A.OPER, 'A0030', QTY_1,0)) V11
             , SUM(DECODE(A.OPER, 'A0190', QTY_1,0)) V12
             , SUM(DECODE(A.OPER, 'A0033', QTY_1,0)) V13
             , SUM(DECODE(A.OPER, 'A0040', QTY_1,0)) V14
             , SUM(DECODE(A.OPER, 'A0041', QTY_1,0)) V15
             , SUM(DECODE(A.OPER, 'A0042', QTY_1,0)) V16
             , SUM(DECODE(A.OPER, 'A0045', QTY_1,0)) V17
             , SUM(DECODE(A.OPER, 'A0050', QTY_1,0)) V18
             , SUM(DECODE(A.OPER, 'A0060', QTY_1,0)) V19
             , SUM(DECODE(A.OPER, 'A0070', QTY_1,0)) V20
             , SUM(DECODE(A.OPER, 'A0080', QTY_1,0)) V21
             , SUM(DECODE(A.OPER, 'A0090', QTY_1,0)) V22
             , SUM(DECODE(A.OPER, 'A0095', QTY_1,0)) V23
             , SUM(DECODE(A.OPER, 'A0110', QTY_1,0)) V24
             , SUM(DECODE(A.OPER, 'A0120', QTY_1,0)) V25
             , SUM(DECODE(A.OPER, 'A0130', QTY_1,0)) V26
             , SUM(DECODE(A.OPER, 'A0140', QTY_1,0)) V27
             , SUM(DECODE(A.OPER, 'A0160', QTY_1,0)) V28
             , SUM(DECODE(A.OPER, 'A0161', QTY_1,0)) V29
             , SUM(DECODE(A.OPER, 'A0165', QTY_1,0)) V30
             , SUM(DECODE(A.OPER, 'A0065', QTY_1,0)) V31
             , SUM(DECODE(A.OPER, 'A0100', QTY_1,0)) V32
             , SUM(DECODE(A.OPER, 'A0150', QTY_1,0)) V33
             , SUM(DECODE(A.OPER, 'A0175', QTY_1,0)) V34
             , SUM(DECODE(A.OPER, 'A0176', QTY_1,0)) V35
             , SUM(DECODE(A.OPER, 'A0170', QTY_1,0)) V36
             , SUM(DECODE(A.OPER, 'A0180', QTY_1,0)) V37
             , SUM(DECODE(A.OPER, 'A0200', QTY_1,0)) V38
             , SUM(DECODE(A.OPER, 'A0201', QTY_1,0)) V39
             , SUM(DECODE(A.OPER, 'A0202', QTY_1,0)) V40
             , SUM(DECODE(A.OPER, 'A0210', QTY_1,0)) V41
             , SUM(DECODE(A.OPER, 'A0215', QTY_1,0)) V42
             , SUM(DECODE(A.OPER, 'A0220', QTY_1,0)) V43
             , SUM(DECODE(A.OPER, 'A0230', QTY_1,0)) V44
             , SUM(DECODE(A.OPER, 'A0300', QTY_1,0)) V45
             , SUM(DECODE(A.OPER, 'A0250', QTY_1,0)) V46
             , SUM(DECODE(A.OPER, 'A0305', QTY_1,0)) V47
             , SUM(DECODE(A.OPER, 'A0240', QTY_1,0)) V48
             , SUM(DECODE(A.OPER, 'A0260', QTY_1,0)) V49
             , SUM(DECODE(A.OPER, 'A0270', QTY_1,0)) V50
             , SUM(DECODE(A.OPER, 'A0290', QTY_1,0)) V51
             , SUM(DECODE(A.OPER, 'A0295', QTY_1,0)) V52
             , SUM(DECODE(A.OPER, 'A0280', QTY_1,0)) V53
             , SUM(DECODE(A.OPER, 'A0306', QTY_1,0)) V54
             , SUM(DECODE(A.OPER, 'A0307', QTY_1,0)) V55
             , SUM(DECODE(A.OPER, 'A0308', QTY_1,0)) V56
             , SUM(DECODE(A.OPER, 'A0310', QTY_1,0)) V57
             , SUM(DECODE(A.OPER, 'A0320', QTY_1,0)) V58
             , SUM(DECODE(A.OPER, 'A0330', QTY_1,0)) V59
             , SUM(DECODE(A.OPER, 'A1280', QTY_1,0)) V60
             , SUM(DECODE(A.OPER, 'A0333', QTY_1,0)) V61
             , SUM(DECODE(A.OPER, 'A0335', QTY_1,0)) V62
             , SUM(DECODE(A.OPER, 'A0337', QTY_1,0)) V63
             , SUM(DECODE(A.OPER, 'A0372', QTY_1,0)) V64
             , SUM(DECODE(A.OPER, 'A0395', QTY_1,0)) V65
             , SUM(DECODE(A.OPER, 'A0397', QTY_1,0)) V66
             , SUM(DECODE(A.OPER, 'A0340', QTY_1,0)) V67
             , SUM(DECODE(A.OPER, 'A0345', QTY_1,0)) V68
             , SUM(DECODE(A.OPER, 'A0350', QTY_1,0)) V69
             , SUM(DECODE(A.OPER, 'A0360', QTY_1,0)) V70
             , SUM(DECODE(A.OPER, 'A0370', QTY_1,0)) V71
             , SUM(DECODE(A.OPER, 'A0375', QTY_1,0)) V72
             , SUM(DECODE(A.OPER, 'A0380', QTY_1,0)) V73
             , SUM(DECODE(A.OPER, 'A0381', QTY_1,0)) V74
             , SUM(DECODE(A.OPER, 'A0382', QTY_1,0)) V75
             , SUM(DECODE(A.OPER, 'A0383', QTY_1,0)) V76
             , SUM(DECODE(A.OPER, 'A0385', QTY_1,0)) V77
             , SUM(DECODE(A.OPER, 'A0391', QTY_1,0)) V78
             , SUM(DECODE(A.OPER, 'A0399', QTY_1,0)) V79
             , SUM(DECODE(A.OPER, 'A0390', QTY_1,0)) V80
             , SUM(DECODE(A.OPER, 'A0400', QTY_1,0)) V81
             , SUM(DECODE(A.OPER, 'A0401', QTY_1,0)) V82
             , SUM(DECODE(A.OPER, 'A0500', QTY_1,0)) V83
             , SUM(DECODE(A.OPER, 'A0530', QTY_1,0)) V84
             , SUM(DECODE(A.OPER, 'A0531', QTY_1,0)) V85
             , SUM(DECODE(A.OPER, 'A0501', QTY_1,0)) V86
             , SUM(DECODE(A.OPER, 'A0540', QTY_1,0)) V87
             , SUM(DECODE(A.OPER, 'A0550', QTY_1,0)) V88
             , SUM(DECODE(A.OPER, 'A0600', QTY_1,0)) V89
             , SUM(DECODE(A.OPER, 'A0620', QTY_1,0)) V90
             , SUM(DECODE(A.OPER, 'A0660', QTY_1,0)) V91
             , SUM(DECODE(A.OPER, 'A0630', QTY_1,0)) V92
             , SUM(DECODE(A.OPER, 'A0650', QTY_1,0)) V93
             , SUM(DECODE(A.OPER, 'A0670', QTY_1,0)) V94
             , SUM(DECODE(A.OPER, 'A0720', QTY_1,0)) V95
             , SUM(DECODE(A.OPER, 'A0700', QTY_1,0)) V96
             , SUM(DECODE(A.OPER, 'A0339', QTY_1,0)) V97
             , SUM(DECODE(A.OPER, 'A0541', QTY_1,0)) V98
             , SUM(DECODE(A.OPER, 'A0551', QTY_1,0)) V99
             , SUM(DECODE(A.OPER, 'A0561', QTY_1,0)) V100
             , SUM(DECODE(A.OPER, 'A0601', QTY_1,0)) V101
             , SUM(DECODE(A.OPER, 'A0710', QTY_1,0)) V102
             , SUM(DECODE(A.OPER, 'A0800', QTY_1,0)) V103
             , SUM(DECODE(A.OPER, 'A0402', QTY_1,0)) V104
             , SUM(DECODE(A.OPER, 'A0502', QTY_1,0)) V105
             , SUM(DECODE(A.OPER, 'A0532', QTY_1,0)) V106
             , SUM(DECODE(A.OPER, 'A0801', QTY_1,0)) V107
             , SUM(DECODE(A.OPER, 'A0542', QTY_1,0)) V108
             , SUM(DECODE(A.OPER, 'A0552', QTY_1,0)) V109
             , SUM(DECODE(A.OPER, 'A0562', QTY_1,0)) V110
             , SUM(DECODE(A.OPER, 'A0602', QTY_1,0)) V111
             , SUM(DECODE(A.OPER, 'A0711', QTY_1,0)) V112
             , SUM(DECODE(A.OPER, 'A0802', QTY_1,0)) V113
             , SUM(DECODE(A.OPER, 'A0403', QTY_1,0)) V114
             , SUM(DECODE(A.OPER, 'A0503', QTY_1,0)) V115
             , SUM(DECODE(A.OPER, 'A0533', QTY_1,0)) V116
             , SUM(DECODE(A.OPER, 'A0543', QTY_1,0)) V117
             , SUM(DECODE(A.OPER, 'A0553', QTY_1,0)) V118
             , SUM(DECODE(A.OPER, 'A0563', QTY_1,0)) V119
             , SUM(DECODE(A.OPER, 'A0603', QTY_1,0)) V120
             , SUM(DECODE(A.OPER, 'A0712', QTY_1,0)) V121
             , SUM(DECODE(A.OPER, 'A0713', QTY_1,0)) V122
             , SUM(DECODE(A.OPER, 'A0803', QTY_1,0)) V123
             , SUM(DECODE(A.OPER, 'A0404', QTY_1,0)) V124
             , SUM(DECODE(A.OPER, 'A0504', QTY_1,0)) V125
             , SUM(DECODE(A.OPER, 'A0534', QTY_1,0)) V126
             , SUM(DECODE(A.OPER, 'A0544', QTY_1,0)) V127
             , SUM(DECODE(A.OPER, 'A0554', QTY_1,0)) V128
             , SUM(DECODE(A.OPER, 'A0564', QTY_1,0)) V129
             , SUM(DECODE(A.OPER, 'A0604', QTY_1,0)) V130
             , SUM(DECODE(A.OPER, 'A0714', QTY_1,0)) V131
             , SUM(DECODE(A.OPER, 'A0804', QTY_1,0)) V132
             , SUM(DECODE(A.OPER, 'A0405', QTY_1,0)) V133
             , SUM(DECODE(A.OPER, 'A0505', QTY_1,0)) V134
             , SUM(DECODE(A.OPER, 'A0535', QTY_1,0)) V135
             , SUM(DECODE(A.OPER, 'A0545', QTY_1,0)) V136
             , SUM(DECODE(A.OPER, 'A0555', QTY_1,0)) V137
             , SUM(DECODE(A.OPER, 'A0565', QTY_1,0)) V138
             , SUM(DECODE(A.OPER, 'A0605', QTY_1,0)) V139
             , SUM(DECODE(A.OPER, 'A0715', QTY_1,0)) V140
             , SUM(DECODE(A.OPER, 'A0805', QTY_1,0)) V141
             , SUM(DECODE(A.OPER, 'A0406', QTY_1,0)) V142
             , SUM(DECODE(A.OPER, 'A0506', QTY_1,0)) V143
             , SUM(DECODE(A.OPER, 'A0536', QTY_1,0)) V144
             , SUM(DECODE(A.OPER, 'A0546', QTY_1,0)) V145
             , SUM(DECODE(A.OPER, 'A0556', QTY_1,0)) V146
             , SUM(DECODE(A.OPER, 'A0566', QTY_1,0)) V147
             , SUM(DECODE(A.OPER, 'A0606', QTY_1,0)) V148
             , SUM(DECODE(A.OPER, 'A0716', QTY_1,0)) V149
             , SUM(DECODE(A.OPER, 'A0806', QTY_1,0)) V150
             , SUM(DECODE(A.OPER, 'A0407', QTY_1,0)) V151
             , SUM(DECODE(A.OPER, 'A0507', QTY_1,0)) V152
             , SUM(DECODE(A.OPER, 'A0537', QTY_1,0)) V153
             , SUM(DECODE(A.OPER, 'A0547', QTY_1,0)) V154
             , SUM(DECODE(A.OPER, 'A0557', QTY_1,0)) V155
             , SUM(DECODE(A.OPER, 'A0567', QTY_1,0)) V156
             , SUM(DECODE(A.OPER, 'A0607', QTY_1,0)) V157
             , SUM(DECODE(A.OPER, 'A0717', QTY_1,0)) V158
             , SUM(DECODE(A.OPER, 'A0807', QTY_1,0)) V159
             , SUM(DECODE(A.OPER, 'A0408', QTY_1,0)) V160
             , SUM(DECODE(A.OPER, 'A0508', QTY_1,0)) V161
             , SUM(DECODE(A.OPER, 'A0538', QTY_1,0)) V162
             , SUM(DECODE(A.OPER, 'A0558', QTY_1,0)) V163
             , SUM(DECODE(A.OPER, 'A0568', QTY_1,0)) V164
             , SUM(DECODE(A.OPER, 'A0608', QTY_1,0)) V165
             , SUM(DECODE(A.OPER, 'A0808', QTY_1,0)) V166
             , SUM(DECODE(A.OPER, 'A0409', QTY_1,0)) V167
             , SUM(DECODE(A.OPER, 'A0509', QTY_1,0)) V168
             , SUM(DECODE(A.OPER, 'A0539', QTY_1,0)) V169
             , SUM(DECODE(A.OPER, 'A0559', QTY_1,0)) V170
             , SUM(DECODE(A.OPER, 'A0569', QTY_1,0)) V171
             , SUM(DECODE(A.OPER, 'A0609', QTY_1,0)) V172
             , SUM(DECODE(A.OPER, 'A0809', QTY_1,0)) V173
             , SUM(DECODE(A.OPER, 'A080A', QTY_1,0)) V174
             , SUM(DECODE(A.OPER, 'A0890', QTY_1,0)) V175
             , SUM(DECODE(A.OPER, 'A0900', QTY_1,0)) V176
             , SUM(DECODE(A.OPER, 'A0910', QTY_1,0)) V177
             , SUM(DECODE(A.OPER, 'A0920', QTY_1,0)) V178
             , SUM(DECODE(A.OPER, 'A0930', QTY_1,0)) V179
             , SUM(DECODE(A.OPER, 'A0935', QTY_1,0)) V180
             , SUM(DECODE(A.OPER, 'A040A', QTY_1,0)) V181
             , SUM(DECODE(A.OPER, 'A0950', QTY_1,0)) V182
             , SUM(DECODE(A.OPER, 'A053A', QTY_1,0)) V183
             , SUM(DECODE(A.OPER, 'A0970', QTY_1,0)) V184
             , SUM(DECODE(A.OPER, 'A0940', QTY_1,0)) V185
             , SUM(DECODE(A.OPER, 'A0980', QTY_1,0)) V186
             , SUM(DECODE(A.OPER, 'A1000', QTY_1,0)) V187
             , SUM(DECODE(A.OPER, 'A055A', QTY_1,0)) V188
             , SUM(DECODE(A.OPER, 'A060A', QTY_1,0)) V189
             , SUM(DECODE(A.OPER, 'A1040', QTY_1,0)) V190
             , SUM(DECODE(A.OPER, 'A1070', QTY_1,0)) V191
             , SUM(DECODE(A.OPER, 'A1020', QTY_1,0)) V192
             , SUM(DECODE(A.OPER, 'A1100', QTY_1,0)) V193
             , SUM(DECODE(A.OPER, 'A1110', QTY_1,0)) V194
             , SUM(DECODE(A.OPER, 'A1120', QTY_1,0)) V195
             , SUM(DECODE(A.OPER, 'A1130', QTY_1,0)) V196
             , SUM(DECODE(A.OPER, 'A1140', QTY_1,0)) V197
             , SUM(DECODE(A.OPER, 'A1150', QTY_1,0)) V198
             , SUM(DECODE(A.OPER, 'A1600', QTY_1,0)) V199
             , SUM(DECODE(A.OPER, 'A1650', QTY_1,0)) V200
             , SUM(DECODE(A.OPER, 'A1170', QTY_1,0)) V201
             , SUM(DECODE(A.OPER, 'A1180', QTY_1,0)) V202
             , SUM(DECODE(A.OPER, 'A1200', QTY_1,0)) V203
             , SUM(DECODE(A.OPER, 'A1230', QTY_1,0)) V204
             , SUM(DECODE(A.OPER, 'A1240', QTY_1,0)) V205
             , SUM(DECODE(A.OPER, 'A1250', QTY_1,0)) V206
             , SUM(DECODE(A.OPER, 'A1260', QTY_1,0)) V207
             , SUM(DECODE(A.OPER, 'A1270', QTY_1,0)) V208
             , SUM(DECODE(A.OPER, 'A1300', QTY_1,0)) V209
             , SUM(DECODE(A.OPER, 'A1350', QTY_1,0)) V210
             , SUM(DECODE(A.OPER, 'A1370', QTY_1,0)) V211
             , SUM(DECODE(A.OPER, 'A1380', QTY_1,0)) V212
             , SUM(DECODE(A.OPER, 'A1050', QTY_1,0)) V213
             , SUM(DECODE(A.OPER, 'A1420', QTY_1,0)) V214
             , SUM(DECODE(A.OPER, 'A1440', QTY_1,0)) V215
             , SUM(DECODE(A.OPER, 'A1450', QTY_1,0)) V216
             , SUM(DECODE(A.OPER, 'A1821', QTY_1,0)) V217
             , SUM(DECODE(A.OPER, 'A1460', QTY_1,0)) V218
             , SUM(DECODE(A.OPER, 'A1470', QTY_1,0)) V219
             , SUM(DECODE(A.OPER, 'A1500', QTY_1,0)) V220
             , SUM(DECODE(A.OPER, 'A1550', QTY_1,0)) V221
             , SUM(DECODE(A.OPER, 'A1610', QTY_1,0)) V222
             , SUM(DECODE(A.OPER, 'A1560', QTY_1,0)) V223
             , SUM(DECODE(A.OPER, 'A1720', QTY_1,0)) V224
             , SUM(DECODE(A.OPER, 'A1730', QTY_1,0)) V225
             , SUM(DECODE(A.OPER, 'A1740', QTY_1,0)) V226
             , SUM(DECODE(A.OPER, 'A1750', QTY_1,0)) V227
             , SUM(DECODE(A.OPER, 'A1755', QTY_1,0)) V228
             , SUM(DECODE(A.OPER, 'A1760', QTY_1,0)) V229
             , SUM(DECODE(A.OPER, 'A1765', QTY_1,0)) V230
             , SUM(DECODE(A.OPER, 'A1766', QTY_1,0)) V231
             , SUM(DECODE(A.OPER, 'A1763', QTY_1,0)) V232
             , SUM(DECODE(A.OPER, 'A1770', QTY_1,0)) V233
             , SUM(DECODE(A.OPER, 'A1780', QTY_1,0)) V234
             , SUM(DECODE(A.OPER, 'A1790', QTY_1,0)) V235
             , SUM(DECODE(A.OPER, 'A1795', QTY_1,0)) V236
             , SUM(DECODE(A.OPER, 'A1860', QTY_1,0)) V237
             , SUM(DECODE(A.OPER, 'A1850', QTY_1,0)) V238
             , SUM(DECODE(A.OPER, 'A1390', QTY_1,0)) V239
             , SUM(DECODE(A.OPER, 'A1800', QTY_1,0)) V240
             , SUM(DECODE(A.OPER, 'A1805', QTY_1,0)) V241
             , SUM(DECODE(A.OPER, 'A1810', QTY_1,0)) V242
             , SUM(DECODE(A.OPER, 'A1811', QTY_1,0)) V243
             , SUM(DECODE(A.OPER, 'A1812', QTY_1,0)) V244
             , SUM(DECODE(A.OPER, 'A1816', QTY_1,0)) V245
             , SUM(DECODE(A.OPER, 'A1820', QTY_1,0)) V246
             , SUM(DECODE(A.OPER, 'A1825', QTY_1,0)) V247
             , SUM(DECODE(A.OPER, 'A1826', QTY_1,0)) V248
             , SUM(DECODE(A.OPER, 'A1920', QTY_1,0)) V249
             , SUM(DECODE(A.OPER, 'A1960', QTY_1,0)) V250
             , SUM(DECODE(A.OPER, 'A1815', QTY_1,0)) V251
             , SUM(DECODE(A.OPER, 'A1830', QTY_1,0)) V252
             , SUM(DECODE(A.OPER, 'A1710', QTY_1,0)) V253
             , SUM(DECODE(A.OPER, 'A1840', QTY_1,0)) V254
             , SUM(DECODE(A.OPER, 'A1900', QTY_1,0)) V255
             , SUM(DECODE(A.OPER, 'A1910', QTY_1,0)) V256
             , SUM(DECODE(A.OPER, 'A1950', QTY_1,0)) V257
             , SUM(DECODE(A.OPER, 'A2000', QTY_1,0)) V258
             , SUM(DECODE(A.OPER, 'A2010', QTY_1,0)) V259
             , SUM(DECODE(A.OPER, 'A2020', QTY_1,0)) V260
             , SUM(DECODE(A.OPER, 'A2025', QTY_1,0)) V261
             , SUM(DECODE(A.OPER, 'A1819', QTY_1,0)) V262
             , SUM(DECODE(A.OPER, 'A2030', QTY_1,0)) V263
             , SUM(DECODE(A.OPER, 'A2040', QTY_1,0)) V264
             , SUM(DECODE(A.OPER, 'A2041', QTY_1,0)) V265
             , SUM(DECODE(A.OPER, 'A2042', QTY_1,0)) V266
             , SUM(DECODE(A.OPER, 'A2070', QTY_1,0)) V267
             , SUM(DECODE(A.OPER, 'A2050', QTY_1,0)) V268
             , SUM(DECODE(A.OPER, 'A2150', QTY_1,0)) V269
             , SUM(DECODE(A.OPER, 'A2200', QTY_1,0)) V270
             , SUM(DECODE(A.OPER, 'A2100', QTY_1,0)) V271
             , SUM(DECODE(A.OPER, 'A2300', QTY_1,0)) V272
             , SUM(DECODE(A.OPER, 'A2350', QTY_1,0)) V273
             , SUM(DECODE(A.OPER, 'AZ009', QTY_1,0)) V274
             , SUM(DECODE(A.OPER, 'AZ010', QTY_1,0)) V275
          FROM RWIPLOTSTS_BOH A, CLOTCRDDAT@RPTTOMES B 
         WHERE 1=1 
           AND A.CUTOFF_DT = '2020080222' 
           AND A.FACTORY = B.FACTORY(+) 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.LOT_DEL_FLAG = ' ' 
           AND A.LOT_TYPE = 'W' 
           AND A.MAT_ID LIKE '%' 
           AND A.FACTORY = 'HMVA2' 
           AND A.OPER BETWEEN 'A0000' AND 'AZ010' 
         GROUP BY A.MAT_ID 
       ) WIP 
     , ( 
        SELECT MAT_ID 
             , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY  
          FROM RSUMFACMOV
         WHERE CM_KEY_1 = 'HMVA2' 
           AND MAT_ID LIKE '%' 
           AND WORK_DATE = '20200802'
           AND FACTORY NOT IN ('RETURN')
           AND LOT_TYPE = 'W'
         GROUP BY MAT_ID 
       ) SHP 
     , ( 
        SELECT MAT_ID 
             , SUM(DECODE(WORK_DATE, '20200727', NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0), 0)) AS ASSY_MONDAY  
             , SUM(NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0)) AS ASSY_WEEK 
          FROM RSUMFACMOV 
         WHERE CM_KEY_1 = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND CM_KEY_2 = 'PROD' 
           AND CM_KEY_3 LIKE 'P%' 
           AND MAT_ID LIKE 'SES%' 
           AND WORK_DATE BETWEEN '20200727' AND '20200802'
         GROUP BY MAT_ID 
       ) SHP1 
     , ( 
        SELECT MAT_ID 
             , SUM(PLAN_QTY) PLAN_W1 
             , SUM(DECODE(PLAN_DAY, '20200727', 0, PLAN_QTY)) AS PLAN_W2 
          FROM ( 
                SELECT * 
                  FROM CWIPPLNDAY 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND PLAN_DAY BETWEEN '20200727' AND '20200802'
                   AND IN_OUT_FLAG = 'OUT'
                   AND CLASS = 'ASSY'
               ) B
         GROUP BY MAT_ID 
       ) PLN 
 WHERE 1=1 
   AND MAT.MAT_ID = WIP.MAT_ID(+) 
   AND MAT.MAT_ID = SHP.MAT_ID(+) 
   AND MAT.MAT_ID = SHP1.MAT_ID(+) 
   AND MAT.MAT_ID = PLN.MAT_ID(+) 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.MAT_ID LIKE '%' 
 GROUP BY MAT.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10,  ' ', MAT.MAT_ID,  ' ',  ' '
HAVING (NVL(SUM(TOTAL),0) + NVL(SUM(SHP_QTY),0)  + NVL(SUM(ASSY_WEEK),0) + NVL(SUM(PLAN_W1),0)) > 0     
 ORDER BY MAT.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_CMF_10,  ' ', MAT.MAT_ID,  ' ',  ' ' 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PQC030106'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT * FROM MGCMTBLDAT WHERE FACTORY =:FACTORY AND TABLE_NAME=:TABLE_NAME
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS Code, OPER_DESC AS Data FROM MWIPOPRDEF
 WHERE FACTORY = 'HMVA2' 
   AND OPER_GRP_1 <> '-' 
 ORDER BY OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER AS Code, OPER_DESC AS Data FROM MWIPOPRDEF
 WHERE FACTORY = 'HMVA2' 
   AND OPER_GRP_1 <> '-' 
 ORDER BY OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT.MAT_CMF_10 AS PIN_TYPE, MAT.MAT_GRP_3 AS PACKAGE,  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID AS PRODUCT 
     , SUBSTR(STS.ABR_NO, 1, 3) AS ABR_TYPE 
     , STS.ABR_NO 
     , STEP10_TIME 
     , OPER_1 
     , (SELECT OPER_DESC FROM MWIPOPRDEF WHERE FACTORY = STS.FACTORY AND OPER = OPER_1) AS OPER_1_DEC 
     , OPER_2 
     , (SELECT OPER_DESC FROM MWIPOPRDEF WHERE FACTORY = STS.FACTORY AND OPER = OPER_2) AS OPER_2_DEC 
     , (SELECT DEFECT_CODE FROM CABRDFTDEF@RPTTOMES WHERE DEL_FLAG=' ' AND FACTORY = 'HMVA2' AND DEFECT_CODE = STS.DEFECT_CODE) AS DEFECT_CODE 
     , (SELECT DESC_1 FROM CABRDFTDEF@RPTTOMES WHERE DEL_FLAG=' ' AND FACTORY = 'HMVA2' AND DEFECT_CODE = STS.DEFECT_CODE) AS DEFECT_CODE 
     , RES_ID 
     , LOT_ID 
     , QTY_1 
     , FAIL_QTY 
     , INSP_QTY 
     , DECODE(INSP_QTY, 0, 0, ROUND((FAIL_QTY / INSP_QTY) * 1000000, 2)) AS LOSS_PER 
     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_ABR_STEP' AND FACTORY = STS.FACTORY AND KEY_1 = STS.CUR_STEP) AS CUR_STEP 
     , CLOSE_TIME 
     , TRUNC(DECODE(CLOSE_TIME, ' ', SYSDATE, TO_DATE(CLOSE_TIME, 'YYYYMMDDHH24MISS')) - TO_DATE(STEP10_TIME, 'YYYYMMDDHH24MISS'), 2) AS TAT 
     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_DEPARTMENT' AND FACTORY = STS.FACTORY AND KEY_1 = STS.STEP10_DEPT) AS DEP 
     , (SELECT USER_DESC || '(' || USER_ID || ')' FROM RWEBUSRDEF WHERE USER_ID = STS.STEP10_USER) AS QC_USER 
     , (SELECT USER_DESC || '(' || USER_ID || ')' FROM RWEBUSRDEF WHERE USER_ID = STS.QA_OPER) AS OPER_USER 
     , DAT.MAN 
     , DAT.MAT 
     , DAT.MCN 
     , DAT.MTD 
     , DAT.ENV 
     , DAT2.MAN 
     , DAT2.MAT 
     , DAT2.MCN 
     , DAT2.MTD 
     , DAT2.ENV 
  FROM CABRLOTSTS@RPTTOMES STS 
     , MWIPMATDEF MAT 
     , (  
        SELECT ABR_NO
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAN, '|')), '|'), ' | ', '') AS MAN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAT, '|')), '|'), ' | ', '') AS MAT
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MCN, '|')), '|'), ' | ', '') AS MCN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MTD, '|')), '|'), ' | ', '') AS MTD
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (ENV, '|')), '|'), ' | ', '') AS ENV
          FROM (
                SELECT FACTORY
                     , ABR_NO
                     , MAN_CONTENTS AS MAN
                     , MAT_CONTENTS AS MAT
                     , MCN_CONTENTS AS MCN
                     , MTD_CONTENTS AS MTD
                     , ENV_CONTENTS AS ENV
                     , ROW_NUMBER () OVER (PARTITION BY ABR_NO ORDER BY UPDATE_TIME) AS RNUM 
                  FROM CABR4MPDAT@RPTTOMES
                 WHERE FACTORY = 'HMVA2' 
                   AND SUB_TYPE = 'TYPE_AN'
                   AND ABR_NO IN (SELECT ABR_NO 
                                    FROM CABRLOTSTS@RPTTOMES 
                                   WHERE FACTORY = 'HMVA2'
                                     AND STEP10_TIME BETWEEN '20200731220000' AND '20200802215959'
                                     AND SUBSTR(ABR_NO, 0, 3) LIKE '%'
                                     AND DEFECT_CODE LIKE '%'
                                     AND CUR_STEP LIKE '%'
                                     AND OPER_1 BETWEEN 'A0000'AND 'AZ010'
                                     AND DEL_FLAG <> 'Y' 
                                  )
               )         
         WHERE ABR_NO = ABR_NO
         START WITH RNUM = 1
       CONNECT BY PRIOR ABR_NO = ABR_NO 
           AND RNUM = (RNUM - 1) 
         GROUP BY ABR_NO
       ) DAT 
     , ( 
        SELECT ABR_NO
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAN, '|')), '|'), ' | ', '') AS MAN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MAT, '|')), '|'), ' | ', '') AS MAT
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MCN, '|')), '|'), ' | ', '') AS MCN
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (MTD, '|')), '|'), ' | ', '') AS MTD
             , REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH (ENV, '|')), '|'), ' | ', '') AS ENV             
          FROM (
                SELECT FACTORY
                     , ABR_NO
                     , MAN_CONTENTS AS MAN
                     , MAT_CONTENTS AS MAT
                     , MCN_CONTENTS AS MCN
                     , MTD_CONTENTS AS MTD
                     , ENV_CONTENTS AS ENV
                     , ROW_NUMBER () OVER (PARTITION BY ABR_NO ORDER BY UPDATE_TIME) AS RNUM                   
                  FROM CABR4MPDAT@RPTTOMES
                 WHERE FACTORY = 'HMVA2' 
                   AND SUB_TYPE = 'TYPE_MS'
                   AND ABR_NO IN (SELECT ABR_NO 
                                    FROM CABRLOTSTS@RPTTOMES 
                                   WHERE FACTORY = 'HMVA2'
                                     AND STEP10_TIME BETWEEN '20200731220000' AND '20200802215959'
                                     AND SUBSTR(ABR_NO, 0, 3) LIKE '%'
                                     AND DEFECT_CODE LIKE '%'
                                     AND CUR_STEP LIKE '%'
                                     AND OPER_1 BETWEEN 'A0000'AND 'AZ010'
                                     AND DEL_FLAG <> 'Y' 
                                  )
               )        
         WHERE ABR_NO = ABR_NO
         START WITH RNUM = 1
       CONNECT BY PRIOR ABR_NO = ABR_NO 
           AND RNUM = (RNUM - 1) 
         GROUP BY ABR_NO
       ) DAT2
 WHERE 1=1 
   AND STS.FACTORY = MAT.FACTORY 
   AND STS.MAT_ID = MAT.MAT_ID 
   AND STS.ABR_NO = DAT.ABR_NO(+) 
   AND STS.ABR_NO = DAT2.ABR_NO(+) 
   AND STS.FACTORY = 'HMVA2'
   AND STEP10_TIME BETWEEN '20200731220000' AND '20200802215959'
   AND SUBSTR(STS.ABR_NO, 0, 3) LIKE '%'
   AND STS.DEFECT_CODE LIKE '%'
   AND STS.CUR_STEP LIKE '%'
   AND STS.OPER_1 BETWEEN 'A0000'AND 'AZ010'
   AND STS.DEL_FLAG <> 'Y' 
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_CMF_10, MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ABR_TYPE, COUNT(ABR_TYPE) AS CNT, ROUND(AVG(TAT), 2) AS TAT 
  FROM ( 
        SELECT SUBSTR(ABR_NO,1,3) AS ABR_TYPE 
             , TRUNC(DECODE(CLOSE_TIME, ' ', SYSDATE, TO_DATE(CLOSE_TIME, 'YYYYMMDDHH24MISS')) - TO_DATE(STEP10_TIME, 'YYYYMMDDHH24MISS'), 2) AS TAT
          FROM CABRLOTSTS@RPTTOMES STS 
             , MWIPMATDEF MAT 
 WHERE 1=1 
   AND STS.FACTORY = 'HMVA2'
   AND STS.FACTORY = MAT.FACTORY 
   AND STS.MAT_ID = MAT.MAT_ID 
   AND STEP10_TIME BETWEEN '20200731220000' AND '20200802215959'
   AND SUBSTR(STS.ABR_NO, 0, 3) LIKE '%'
   AND STS.DEFECT_CODE LIKE '%'
   AND STS.CUR_STEP LIKE '%'
   AND STS.OPER_1 BETWEEN 'A0000'AND 'AZ010'
       )
 GROUP BY ABR_TYPE 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR, (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) AS CUSTOMER, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9, A.MAT_GRP_1, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9, DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 3),CUSTOMER, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR, (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) AS CUSTOMER, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 3, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((3 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 28.4790587469965 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200803', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200803'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200803', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200803'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200803'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200803'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9, A.MAT_GRP_1, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9, DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 3),CUSTOMER, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR, (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) AS CUSTOMER, A.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9, A.MAT_GRP_1, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9, DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 3),CUSTOMER, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT SYS_DATE     , SUBSTR(SYS_DATE, 5, 2)||'월 '||SUBSTR(SYS_DATE, 7, 2)||'일' AS CONV     , TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'DY') AS DY     , TO_CHAR(TO_DATE(SYS_DATE, 'YYYYMMDD'), 'DY') AS DY2  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')  ORDER BY SYS_DATE
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011012'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT SYS_DATE     , SUBSTR(SYS_DATE, 5, 2)||'월 '||SUBSTR(SYS_DATE, 7, 2)||'일' AS CONV     , TO_CHAR(TO_DATE('20200802', 'YYYYMMDD'), 'DY') AS DY     , TO_CHAR(TO_DATE(SYS_DATE, 'YYYYMMDD'), 'DY') AS DY2  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND (PLAN_YEAR, PLAN_WEEK) = (SELECT PLAN_YEAR, PLAN_WEEK FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200802')  ORDER BY SYS_DATE
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200802')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200802', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT MAT_ID
      , SUM(DECODE(WORK_DATE, '20200801', SHP_QTY, 0)) AS D0_SHP
      , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY, 0)) AS D1_SHP
      , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY, 0)) AS D2_SHP
      , SUM(DECODE(WORK_DATE, '20200804', SHP_QTY, 0)) AS D3_SHP
      , SUM(DECODE(WORK_DATE, '20200805', SHP_QTY, 0)) AS D4_SHP
      , SUM(DECODE(WORK_DATE, '20200806', SHP_QTY, 0)) AS D5_SHP
      , SUM(DECODE(WORK_DATE, '20200807', SHP_QTY, 0)) AS D6_SHP
      , SUM(SHP_QTY) AS WW_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200801' THEN SHP_QTY ELSE 0 END) AS SUM_D0_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200802' THEN SHP_QTY ELSE 0 END) AS SUM_D1_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200803' THEN SHP_QTY ELSE 0 END) AS SUM_D2_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200804' THEN SHP_QTY ELSE 0 END) AS SUM_D3_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200805' THEN SHP_QTY ELSE 0 END) AS SUM_D4_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200806' THEN SHP_QTY ELSE 0 END) AS SUM_D5_SHP
      , SUM(CASE WHEN WORK_DATE <= '20200807' THEN SHP_QTY ELSE 0 END) AS SUM_D6_SHP
   FROM (
         SELECT WORK_DATE, MAT_ID
              , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY 
           FROM RSUMFACMOV
          WHERE 1=1
            AND WORK_DATE BETWEEN '20200801' AND '20200802'
            AND LOT_TYPE = 'W' 
            AND CM_KEY_1 = 'HMVA2'
            AND FACTORY NOT IN ('RETURN') 
            AND MAT_ID NOT LIKE 'HX%'
          GROUP BY WORK_DATE, MAT_ID
          UNION ALL
         SELECT WORK_DATE, MAT_ID
              , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS SHP_QTY 
           FROM CSUMFACMOV
          WHERE 1=1
            AND WORK_DATE BETWEEN '20200801' AND '20200802'
            AND LOT_TYPE = 'W' 
            AND CM_KEY_1 = 'HMVA2'
            AND FACTORY NOT IN ('RETURN') 
            AND MAT_ID LIKE 'HX%'
          GROUP BY WORK_DATE, MAT_ID
        ) 
  GROUP BY MAT_ID
)
SELECT CUST_TYPE, (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER, MAT_GRP_9,  ' ',  ' ',  ' ',  ' ', CONV_MAT_ID,  ' ', ' ' 
     , ROUND(SUM(D0_PLN) / 1000, 0) AS D0_PLN
     , ROUND(SUM(D1_PLN) / 1000, 0) AS D1_PLN
     , ROUND(SUM(D2_PLN) / 1000, 0) AS D2_PLN
     , ROUND(SUM(D3_PLN) / 1000, 0) AS D3_PLN
     , ROUND(SUM(D4_PLN) / 1000, 0) AS D4_PLN
     , ROUND(SUM(D5_PLN) / 1000, 0) AS D5_PLN
     , ROUND(SUM(D6_PLN) / 1000, 0) AS D6_PLN
     , ROUND(SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN) / 1000, 0) AS WW_PLN_1
     , ROUND(SUM(WW_PLN_2) / 1000, 0) AS WW_PLN_2
     , ROUND(SUM(D0_SHP) / 1000, 0) AS D0_SHP
     , ROUND(SUM(D1_SHP) / 1000, 0) AS D1_SHP
     , ROUND(SUM(D2_SHP) / 1000, 0) AS D2_SHP
     , ROUND(SUM(D3_SHP) / 1000, 0) AS D3_SHP
     , ROUND(SUM(D4_SHP) / 1000, 0) AS D4_SHP
     , ROUND(SUM(D5_SHP) / 1000, 0) AS D5_SHP
     , ROUND(SUM(D6_SHP) / 1000, 0) AS D6_SHP
     , ROUND(SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP + D6_SHP) / 1000, 0) AS WW_SHP_1
     , ROUND(SUM(WW_SHP_2) / 1000, 0) AS WW_SHP_2
     , ROUND(CASE WHEN SUM(D0_PLN) <= 0 AND SUM(D0_SHP) = 0 THEN 0
                  WHEN SUM(D0_PLN) <= 0 THEN 100
                  ELSE SUM(D0_SHP) / SUM(D0_PLN) * 100
             END, 0) AS D0_PER
     , ROUND(CASE WHEN SUM(D1_PLN) <= 0 AND SUM(D1_SHP) = 0 THEN 0
                  WHEN SUM(D1_PLN) <= 0 THEN 100
                  ELSE SUM(D1_SHP) / SUM(D1_PLN) * 100
             END, 0) AS D1_PER
     , ROUND(CASE WHEN SUM(D2_PLN) <= 0 AND SUM(D2_SHP) = 0 THEN 0
                  WHEN SUM(D2_PLN) <= 0 THEN 100
                  ELSE SUM(D2_SHP) / SUM(D2_PLN) * 100
             END, 0) AS D2_PER
     , ROUND(CASE WHEN SUM(D3_PLN) <= 0 AND SUM(D3_SHP) = 0 THEN 0
                  WHEN SUM(D3_PLN) <= 0 THEN 100
                  ELSE SUM(D3_SHP) / SUM(D3_PLN) * 100
             END, 0) AS D3_PER
     , ROUND(CASE WHEN SUM(D4_PLN) <= 0 AND SUM(D4_SHP) = 0 THEN 0
                  WHEN SUM(D4_PLN) <= 0 THEN 100
                  ELSE SUM(D4_SHP) / SUM(D4_PLN) * 100
             END, 0) AS D4_PER
     , ROUND(CASE WHEN SUM(D5_PLN) <= 0 AND SUM(D5_SHP) = 0 THEN 0
                  WHEN SUM(D5_PLN) <= 0 THEN 100
                  ELSE SUM(D5_SHP) / SUM(D5_PLN) * 100
             END, 0) AS D5_PER
     , ROUND(CASE WHEN SUM(D6_PLN) <= 0 AND SUM(D6_SHP) = 0 THEN 0
                  WHEN SUM(D6_PLN) <= 0 THEN 100
                  ELSE SUM(D6_SHP) / SUM(D6_PLN) * 100
             END, 0) AS D6_PER
     , ROUND(CASE WHEN SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN) <= 0 AND SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP + D6_SHP) = 0 THEN 0
                  WHEN SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN) <= 0 THEN 100
                  ELSE SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP + D6_SHP) / SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN) * 100
             END, 0) AS WW_PER_1
     , ROUND(CASE WHEN SUM(WW_PLN_2) <= 0 AND SUM(WW_SHP_2) = 0 THEN 0
                  WHEN SUM(WW_PLN_2) <= 0 THEN 100
                  ELSE SUM(WW_SHP_2) / SUM(WW_PLN_2) * 100
             END, 0) AS WW_PER_2
     , ROUND((SUM(D0_SHP) - SUM(D0_PLN)) / 1000, 0) AS SUM_D0_DEF
     , ROUND((SUM(D0_SHP + D1_SHP) - SUM(D0_PLN + D1_PLN)) / 1000, 0) AS SUM_D1_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN)) / 1000, 0) AS SUM_D2_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN)) / 1000, 0) AS SUM_D3_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN)) / 1000, 0) AS SUM_D4_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN)) / 1000, 0) AS SUM_D5_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP + D6_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN)) / 1000, 0) AS SUM_D6_DEF
     , ROUND((SUM(D0_SHP + D1_SHP + D2_SHP + D3_SHP + D4_SHP + D5_SHP + D6_SHP) - SUM(D0_PLN + D1_PLN + D2_PLN + D3_PLN + D4_PLN + D5_PLN + D6_PLN)) / 1000, 0) AS WW_DEF_1
     , ROUND((SUM(WW_SHP_2) - SUM(WW_PLN_2)) / 1000, 0) AS WW_DEF_2
  FROM (
        SELECT CUST_TYPE, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_6, MAT_GRP_9, MAT_GRP_10, MAT_CMF_11, CONV_MAT_ID
             , SUM(NVL(D0_PLN,0)) AS D0_PLN
             , CASE WHEN 20200801 > 20200802 THEN SUM(NVL(D1_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D1_PLN,0) - NVL(SUM_D0_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D1_PLN,0) - NVL(SUM_D0_SHP,0)) 
                          END
                END AS D1_PLN
             , CASE WHEN 20200802 > 20200802 THEN SUM(NVL(D2_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D2_PLN,0) - NVL(SUM_D1_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D2_PLN,0) - NVL(SUM_D1_SHP,0)) 
                          END
                END AS D2_PLN
             , CASE WHEN 20200803 > 20200802 THEN SUM(NVL(D3_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D3_PLN,0) - NVL(SUM_D2_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D3_PLN,0) - NVL(SUM_D2_SHP,0)) 
                          END
                END AS D3_PLN
             , CASE WHEN 20200804 > 20200802 THEN SUM(NVL(D4_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D4_PLN,0) - NVL(SUM_D3_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D4_PLN,0) - NVL(SUM_D3_SHP,0)) 
                          END
                END AS D4_PLN
             , CASE WHEN 20200805 > 20200802 THEN SUM(NVL(D5_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D5_PLN,0) - NVL(SUM_D4_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D5_PLN,0) - NVL(SUM_D4_SHP,0)) 
                          END
                END AS D5_PLN
             , CASE WHEN 20200806 > 20200802 THEN SUM(NVL(D6_PLN,0))
                    ELSE CASE WHEN SUM(NVL(SUM_D6_PLN,0) - NVL(SUM_D5_SHP,0)) <= 0 THEN 0
                              ELSE SUM(NVL(SUM_D6_PLN,0) - NVL(SUM_D5_SHP,0)) 
                          END
                END AS D6_PLN
             , SUM(WW_PLN) AS WW_PLN_2
             , CASE WHEN SUM(NVL(D0_PLN,0)) <= SUM(NVL(D0_SHP,0)) THEN SUM(NVL(D0_PLN,0)) ELSE SUM(NVL(D0_SHP,0)) END AS D0_SHP
             , CASE WHEN SUM(NVL(SUM_D1_PLN,0)) - SUM(NVL(SUM_D0_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D1_PLN,0)) - SUM(NVL(SUM_D0_SHP,0)) <= SUM(NVL(D1_SHP,0)) THEN SUM(NVL(SUM_D1_PLN,0)) - SUM(NVL(SUM_D0_SHP,0)) 
                    ELSE SUM(NVL(D1_SHP,0)) END AS D1_SHP 
             , CASE WHEN SUM(NVL(SUM_D2_PLN,0)) - SUM(NVL(SUM_D1_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D2_PLN,0)) - SUM(NVL(SUM_D1_SHP,0)) <= SUM(NVL(D2_SHP,0)) THEN SUM(NVL(SUM_D2_PLN,0)) - SUM(NVL(SUM_D1_SHP,0)) 
                    ELSE SUM(NVL(D2_SHP,0)) END AS D2_SHP 
             , CASE WHEN SUM(NVL(SUM_D3_PLN,0)) - SUM(NVL(SUM_D2_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D3_PLN,0)) - SUM(NVL(SUM_D2_SHP,0)) <= SUM(NVL(D3_SHP,0)) THEN SUM(NVL(SUM_D3_PLN,0)) - SUM(NVL(SUM_D2_SHP,0)) 
                    ELSE SUM(NVL(D3_SHP,0)) END AS D3_SHP 
             , CASE WHEN SUM(NVL(SUM_D4_PLN,0)) - SUM(NVL(SUM_D3_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D4_PLN,0)) - SUM(NVL(SUM_D3_SHP,0)) <= SUM(NVL(D4_SHP,0)) THEN SUM(NVL(SUM_D4_PLN,0)) - SUM(NVL(SUM_D3_SHP,0)) 
                    ELSE SUM(NVL(D4_SHP,0)) END AS D4_SHP 
             , CASE WHEN SUM(NVL(SUM_D5_PLN,0)) - SUM(NVL(SUM_D4_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D5_PLN,0)) - SUM(NVL(SUM_D4_SHP,0)) <= SUM(NVL(D5_SHP,0)) THEN SUM(NVL(SUM_D5_PLN,0)) - SUM(NVL(SUM_D4_SHP,0)) 
                    ELSE SUM(NVL(D5_SHP,0)) END AS D5_SHP 
             , CASE WHEN SUM(NVL(SUM_D6_PLN,0)) - SUM(NVL(SUM_D5_SHP,0)) <= 0 THEN 0 
                    WHEN SUM(NVL(SUM_D6_PLN,0)) - SUM(NVL(SUM_D5_SHP,0)) <= SUM(NVL(D6_SHP,0)) THEN SUM(NVL(SUM_D6_PLN,0)) - SUM(NVL(SUM_D5_SHP,0)) 
                    ELSE SUM(NVL(D6_SHP,0)) END AS D6_SHP 
             , CASE WHEN SUM(NVL(WW_PLN,0)) <= SUM(NVL(SUM_D6_SHP,0)) THEN SUM(NVL(WW_PLN,0)) ELSE SUM(NVL(SUM_D6_SHP,0)) END AS WW_SHP_2
          FROM (
                SELECT A.*
                     , CASE WHEN A.FACTORY = 'HMKT1' AND A.MAT_GRP_1 = 'FC' AND INSTR(A.MAT_ID, '-') = 0 THEN A.MAT_ID
                            WHEN A.FACTORY = 'HMKT1' AND A.MAT_GRP_1 = 'FC' THEN SUBSTR(A.MAT_ID, 1, INSTR(A.MAT_ID, '-')-1) || A.MAT_CMF_11
                            WHEN A.FACTORY = 'HMKT1' AND A.MAT_GRP_1 = 'FS' THEN SUBSTR(A.MAT_ID, 1, 5) || SUBSTR(A.MAT_ID, -3)
                            WHEN A.FACTORY = 'HMKT1' THEN A.MAT_CMF_7
                            WHEN A.MAT_GRP_1 = 'SE' AND A.MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3)
                            WHEN A.MAT_GRP_1 = 'HX' THEN A.MAT_CMF_10
                            WHEN A.MAT_GRP_1 = 'CC' THEN A.MAT_CMF_8
                            ELSE A.MAT_ID
                       END CONV_MAT_ID
                     , NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE 
                     , B.*, C.*
                  FROM MWIPMATDEF A
                     , DT B
                     , (
                        SELECT MAT_ID, D0_QTY AS D0_PLN, D1_QTY AS D1_PLN, D2_QTY AS D2_PLN
                             , D3_QTY AS D3_PLN, D4_QTY AS D4_PLN, D5_QTY AS D5_PLN, D6_QTY AS D6_PLN
                             , D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY + D6_QTY AS WW_PLN
                             , D0_QTY + D1_QTY AS SUM_D1_PLN
                             , D0_QTY + D1_QTY + D2_QTY AS SUM_D2_PLN
                             , D0_QTY + D1_QTY + D2_QTY + D3_QTY AS SUM_D3_PLN
                             , D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY AS SUM_D4_PLN
                             , D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY AS SUM_D5_PLN
                             , D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY + D6_QTY AS SUM_D6_PLN
                          FROM (
                                SELECT MAT_ID, D0_QTY, D1_QTY, D2_QTY, D3_QTY, D4_QTY, D5_QTY, D6_QTY
                                  FROM RWIPPLNWEK
                                 WHERE FACTORY = 'HMVA2'
                                   AND PLAN_WEEK = '202032'
                                   AND GUBUN = '3'
                                   AND MAT_ID NOT LIKE 'SES%'
                                 UNION ALL
                                SELECT MAT_ID
                                     , SUM(DECODE(PLAN_WEEK, '202031', D5_QTY, 0)) AS D0_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202031', D6_QTY, 0)) AS D1_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D2_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D3_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D4_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D5_QTY
                                     , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D6_QTY
                                  FROM RWIPPLNWEK
                                 WHERE FACTORY = 'HMVA2'
                                   AND PLAN_WEEK IN ('202031', '202032')
                                   AND GUBUN = '3'
                                   AND MAT_ID LIKE 'SES%'
                                 GROUP BY MAT_ID 
                               )
                       ) C
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.FACTORY = 'HMVA2'
                   AND A.MAT_TYPE = 'FG'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_GRP_3 <> 'COB'
                   AND A.MAT_ID LIKE '%'
               )
         GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_6, MAT_GRP_9, MAT_GRP_10, MAT_CMF_11, CONV_MAT_ID
       )
 GROUP BY CUST_TYPE, MAT_GRP_1, MAT_GRP_9,  ' ',  ' ',  ' ',  ' ', CONV_MAT_ID,  ' '
HAVING SUM(NVL(D0_PLN,0) + NVL(D1_PLN,0) + NVL(D2_PLN,0) + NVL(D3_PLN,0) + NVL(D4_PLN,0) + NVL(D5_PLN,0) + NVL(D6_PLN,0) + NVL(WW_PLN_2,0) + NVL(WW_SHP_2,0)) > 0 
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), MAT_GRP_1, MAT_GRP_9,  ' ',  ' ',  ' ',  ' ', CONV_MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = '' 
        AND TABLE_NAME='LOSS_CODE' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'YLD040601'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT * 
   FROM CWIPLOTEND 
  WHERE 1=1 
    AND TRAN_TIME BETWEEN '20200801220000' AND '20200802215959' 
    AND TRAN_CODE = 'END' 
    AND LOT_TYPE = 'W' 
    AND FACTORY = 'HMVA2' 
    AND HIST_DEL_FLAG = ' ' 
    AND TRAN_CMF_1 = 'CLOSE' 
)
SELECT  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
     , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME 
     , SUMMERY.TAT AS TAT 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0) AS IL_IN 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS IL_OUT 
     , ROUND(((SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0))/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0)))*100,3)||'%' AS IL_YIELD 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS BE_IN 
     , SUMMERY.BE_OUT 
     , ROUND((SUMMERY.BE_OUT/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0)))*100,3)||'%' AS BE_YIELD 
     , SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0) AS IN_QTY  
     , SUMMERY.OUT_QTY 
     , ROUND(SUMMERY.OUT_QTY/(SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0))*100,3)||'%' AS YIELD 
     , '' AS BONUS 
     , NVL(SUM(LOSS.LOSS_QTY),0) AS LOSS_QTY 
     , SUM(DECODE(LOSS.LOSS_CODE,'80',LOSS.LOSS_QTY,0))  LOSS0
     , SUM(DECODE(LOSS.LOSS_CODE,'81',LOSS.LOSS_QTY,0))  LOSS1
     , SUM(DECODE(LOSS.LOSS_CODE,'82',LOSS.LOSS_QTY,0))  LOSS2
     , SUM(DECODE(LOSS.LOSS_CODE,'83',LOSS.LOSS_QTY,0))  LOSS3
     , SUM(DECODE(LOSS.LOSS_CODE,'84',LOSS.LOSS_QTY,0))  LOSS4
     , SUM(DECODE(LOSS.LOSS_CODE,'85',LOSS.LOSS_QTY,0))  LOSS5
     , SUM(DECODE(LOSS.LOSS_CODE,'86',LOSS.LOSS_QTY,0))  LOSS6
     , SUM(DECODE(LOSS.LOSS_CODE,'87',LOSS.LOSS_QTY,0))  LOSS7
     , SUM(DECODE(LOSS.LOSS_CODE,'88',LOSS.LOSS_QTY,0))  LOSS8
     , SUM(DECODE(LOSS.LOSS_CODE,'100',LOSS.LOSS_QTY,0))  LOSS9
     , SUM(DECODE(LOSS.LOSS_CODE,'102',LOSS.LOSS_QTY,0))  LOSS10
     , SUM(DECODE(LOSS.LOSS_CODE,'104',LOSS.LOSS_QTY,0))  LOSS11
     , SUM(DECODE(LOSS.LOSS_CODE,'105',LOSS.LOSS_QTY,0))  LOSS12
     , SUM(DECODE(LOSS.LOSS_CODE,'106',LOSS.LOSS_QTY,0))  LOSS13
     , SUM(DECODE(LOSS.LOSS_CODE,'107',LOSS.LOSS_QTY,0))  LOSS14
     , SUM(DECODE(LOSS.LOSS_CODE,'110',LOSS.LOSS_QTY,0))  LOSS15
     , SUM(DECODE(LOSS.LOSS_CODE,'111',LOSS.LOSS_QTY,0))  LOSS16
     , SUM(DECODE(LOSS.LOSS_CODE,'112',LOSS.LOSS_QTY,0))  LOSS17
     , SUM(DECODE(LOSS.LOSS_CODE,'114',LOSS.LOSS_QTY,0))  LOSS18
     , SUM(DECODE(LOSS.LOSS_CODE,'115',LOSS.LOSS_QTY,0))  LOSS19
     , SUM(DECODE(LOSS.LOSS_CODE,'116',LOSS.LOSS_QTY,0))  LOSS20
     , SUM(DECODE(LOSS.LOSS_CODE,'119',LOSS.LOSS_QTY,0))  LOSS21
     , SUM(DECODE(LOSS.LOSS_CODE,'120',LOSS.LOSS_QTY,0))  LOSS22
     , SUM(DECODE(LOSS.LOSS_CODE,'121',LOSS.LOSS_QTY,0))  LOSS23
     , SUM(DECODE(LOSS.LOSS_CODE,'122',LOSS.LOSS_QTY,0))  LOSS24
     , SUM(DECODE(LOSS.LOSS_CODE,'123',LOSS.LOSS_QTY,0))  LOSS25
     , SUM(DECODE(LOSS.LOSS_CODE,'124',LOSS.LOSS_QTY,0))  LOSS26
     , SUM(DECODE(LOSS.LOSS_CODE,'125',LOSS.LOSS_QTY,0))  LOSS27
     , SUM(DECODE(LOSS.LOSS_CODE,'127',LOSS.LOSS_QTY,0))  LOSS28
     , SUM(DECODE(LOSS.LOSS_CODE,'128',LOSS.LOSS_QTY,0))  LOSS29
     , SUM(DECODE(LOSS.LOSS_CODE,'200',LOSS.LOSS_QTY,0))  LOSS30
     , SUM(DECODE(LOSS.LOSS_CODE,'202',LOSS.LOSS_QTY,0))  LOSS31
     , SUM(DECODE(LOSS.LOSS_CODE,'203',LOSS.LOSS_QTY,0))  LOSS32
     , SUM(DECODE(LOSS.LOSS_CODE,'204',LOSS.LOSS_QTY,0))  LOSS33
     , SUM(DECODE(LOSS.LOSS_CODE,'205',LOSS.LOSS_QTY,0))  LOSS34
     , SUM(DECODE(LOSS.LOSS_CODE,'206',LOSS.LOSS_QTY,0))  LOSS35
     , SUM(DECODE(LOSS.LOSS_CODE,'207',LOSS.LOSS_QTY,0))  LOSS36
     , SUM(DECODE(LOSS.LOSS_CODE,'208',LOSS.LOSS_QTY,0))  LOSS37
     , SUM(DECODE(LOSS.LOSS_CODE,'209',LOSS.LOSS_QTY,0))  LOSS38
     , SUM(DECODE(LOSS.LOSS_CODE,'210',LOSS.LOSS_QTY,0))  LOSS39
     , SUM(DECODE(LOSS.LOSS_CODE,'211',LOSS.LOSS_QTY,0))  LOSS40
     , SUM(DECODE(LOSS.LOSS_CODE,'212',LOSS.LOSS_QTY,0))  LOSS41
     , SUM(DECODE(LOSS.LOSS_CODE,'213',LOSS.LOSS_QTY,0))  LOSS42
     , SUM(DECODE(LOSS.LOSS_CODE,'214',LOSS.LOSS_QTY,0))  LOSS43
     , SUM(DECODE(LOSS.LOSS_CODE,'215',LOSS.LOSS_QTY,0))  LOSS44
     , SUM(DECODE(LOSS.LOSS_CODE,'216',LOSS.LOSS_QTY,0))  LOSS45
     , SUM(DECODE(LOSS.LOSS_CODE,'217',LOSS.LOSS_QTY,0))  LOSS46
     , SUM(DECODE(LOSS.LOSS_CODE,'218',LOSS.LOSS_QTY,0))  LOSS47
     , SUM(DECODE(LOSS.LOSS_CODE,'219',LOSS.LOSS_QTY,0))  LOSS48
     , SUM(DECODE(LOSS.LOSS_CODE,'222',LOSS.LOSS_QTY,0))  LOSS49
     , SUM(DECODE(LOSS.LOSS_CODE,'224',LOSS.LOSS_QTY,0))  LOSS50
     , SUM(DECODE(LOSS.LOSS_CODE,'225',LOSS.LOSS_QTY,0))  LOSS51
     , SUM(DECODE(LOSS.LOSS_CODE,'250',LOSS.LOSS_QTY,0))  LOSS52
     , SUM(DECODE(LOSS.LOSS_CODE,'251',LOSS.LOSS_QTY,0))  LOSS53
     , SUM(DECODE(LOSS.LOSS_CODE,'265',LOSS.LOSS_QTY,0))  LOSS54
     , SUM(DECODE(LOSS.LOSS_CODE,'270',LOSS.LOSS_QTY,0))  LOSS55
     , SUM(DECODE(LOSS.LOSS_CODE,'291',LOSS.LOSS_QTY,0))  LOSS56
     , SUM(DECODE(LOSS.LOSS_CODE,'299',LOSS.LOSS_QTY,0))  LOSS57
     , SUM(DECODE(LOSS.LOSS_CODE,'302',LOSS.LOSS_QTY,0))  LOSS58
     , SUM(DECODE(LOSS.LOSS_CODE,'303',LOSS.LOSS_QTY,0))  LOSS59
     , SUM(DECODE(LOSS.LOSS_CODE,'304',LOSS.LOSS_QTY,0))  LOSS60
     , SUM(DECODE(LOSS.LOSS_CODE,'305',LOSS.LOSS_QTY,0))  LOSS61
     , SUM(DECODE(LOSS.LOSS_CODE,'306',LOSS.LOSS_QTY,0))  LOSS62
     , SUM(DECODE(LOSS.LOSS_CODE,'307',LOSS.LOSS_QTY,0))  LOSS63
     , SUM(DECODE(LOSS.LOSS_CODE,'308',LOSS.LOSS_QTY,0))  LOSS64
     , SUM(DECODE(LOSS.LOSS_CODE,'311',LOSS.LOSS_QTY,0))  LOSS65
     , SUM(DECODE(LOSS.LOSS_CODE,'312',LOSS.LOSS_QTY,0))  LOSS66
     , SUM(DECODE(LOSS.LOSS_CODE,'313',LOSS.LOSS_QTY,0))  LOSS67
     , SUM(DECODE(LOSS.LOSS_CODE,'314',LOSS.LOSS_QTY,0))  LOSS68
     , SUM(DECODE(LOSS.LOSS_CODE,'315',LOSS.LOSS_QTY,0))  LOSS69
     , SUM(DECODE(LOSS.LOSS_CODE,'316',LOSS.LOSS_QTY,0))  LOSS70
     , SUM(DECODE(LOSS.LOSS_CODE,'317',LOSS.LOSS_QTY,0))  LOSS71
     , SUM(DECODE(LOSS.LOSS_CODE,'318',LOSS.LOSS_QTY,0))  LOSS72
     , SUM(DECODE(LOSS.LOSS_CODE,'319',LOSS.LOSS_QTY,0))  LOSS73
     , SUM(DECODE(LOSS.LOSS_CODE,'320',LOSS.LOSS_QTY,0))  LOSS74
     , SUM(DECODE(LOSS.LOSS_CODE,'321',LOSS.LOSS_QTY,0))  LOSS75
     , SUM(DECODE(LOSS.LOSS_CODE,'322',LOSS.LOSS_QTY,0))  LOSS76
     , SUM(DECODE(LOSS.LOSS_CODE,'323',LOSS.LOSS_QTY,0))  LOSS77
     , SUM(DECODE(LOSS.LOSS_CODE,'324',LOSS.LOSS_QTY,0))  LOSS78
     , SUM(DECODE(LOSS.LOSS_CODE,'326',LOSS.LOSS_QTY,0))  LOSS79
     , SUM(DECODE(LOSS.LOSS_CODE,'330',LOSS.LOSS_QTY,0))  LOSS80
     , SUM(DECODE(LOSS.LOSS_CODE,'331',LOSS.LOSS_QTY,0))  LOSS81
     , SUM(DECODE(LOSS.LOSS_CODE,'332',LOSS.LOSS_QTY,0))  LOSS82
     , SUM(DECODE(LOSS.LOSS_CODE,'333',LOSS.LOSS_QTY,0))  LOSS83
     , SUM(DECODE(LOSS.LOSS_CODE,'368',LOSS.LOSS_QTY,0))  LOSS84
     , SUM(DECODE(LOSS.LOSS_CODE,'371',LOSS.LOSS_QTY,0))  LOSS85
     , SUM(DECODE(LOSS.LOSS_CODE,'373',LOSS.LOSS_QTY,0))  LOSS86
     , SUM(DECODE(LOSS.LOSS_CODE,'388',LOSS.LOSS_QTY,0))  LOSS87
     , SUM(DECODE(LOSS.LOSS_CODE,'392',LOSS.LOSS_QTY,0))  LOSS88
     , SUM(DECODE(LOSS.LOSS_CODE,'395',LOSS.LOSS_QTY,0))  LOSS89
     , SUM(DECODE(LOSS.LOSS_CODE,'402',LOSS.LOSS_QTY,0))  LOSS90
     , SUM(DECODE(LOSS.LOSS_CODE,'403',LOSS.LOSS_QTY,0))  LOSS91
     , SUM(DECODE(LOSS.LOSS_CODE,'404',LOSS.LOSS_QTY,0))  LOSS92
     , SUM(DECODE(LOSS.LOSS_CODE,'405',LOSS.LOSS_QTY,0))  LOSS93
     , SUM(DECODE(LOSS.LOSS_CODE,'406',LOSS.LOSS_QTY,0))  LOSS94
     , SUM(DECODE(LOSS.LOSS_CODE,'407',LOSS.LOSS_QTY,0))  LOSS95
     , SUM(DECODE(LOSS.LOSS_CODE,'408',LOSS.LOSS_QTY,0))  LOSS96
     , SUM(DECODE(LOSS.LOSS_CODE,'409',LOSS.LOSS_QTY,0))  LOSS97
     , SUM(DECODE(LOSS.LOSS_CODE,'410',LOSS.LOSS_QTY,0))  LOSS98
     , SUM(DECODE(LOSS.LOSS_CODE,'411',LOSS.LOSS_QTY,0))  LOSS99
     , SUM(DECODE(LOSS.LOSS_CODE,'412',LOSS.LOSS_QTY,0))  LOSS100
     , SUM(DECODE(LOSS.LOSS_CODE,'413',LOSS.LOSS_QTY,0))  LOSS101
     , SUM(DECODE(LOSS.LOSS_CODE,'414',LOSS.LOSS_QTY,0))  LOSS102
     , SUM(DECODE(LOSS.LOSS_CODE,'415',LOSS.LOSS_QTY,0))  LOSS103
     , SUM(DECODE(LOSS.LOSS_CODE,'417',LOSS.LOSS_QTY,0))  LOSS104
     , SUM(DECODE(LOSS.LOSS_CODE,'418',LOSS.LOSS_QTY,0))  LOSS105
     , SUM(DECODE(LOSS.LOSS_CODE,'419',LOSS.LOSS_QTY,0))  LOSS106
     , SUM(DECODE(LOSS.LOSS_CODE,'420',LOSS.LOSS_QTY,0))  LOSS107
     , SUM(DECODE(LOSS.LOSS_CODE,'421',LOSS.LOSS_QTY,0))  LOSS108
     , SUM(DECODE(LOSS.LOSS_CODE,'422',LOSS.LOSS_QTY,0))  LOSS109
     , SUM(DECODE(LOSS.LOSS_CODE,'423',LOSS.LOSS_QTY,0))  LOSS110
     , SUM(DECODE(LOSS.LOSS_CODE,'424',LOSS.LOSS_QTY,0))  LOSS111
     , SUM(DECODE(LOSS.LOSS_CODE,'425',LOSS.LOSS_QTY,0))  LOSS112
     , SUM(DECODE(LOSS.LOSS_CODE,'426',LOSS.LOSS_QTY,0))  LOSS113
     , SUM(DECODE(LOSS.LOSS_CODE,'427',LOSS.LOSS_QTY,0))  LOSS114
     , SUM(DECODE(LOSS.LOSS_CODE,'440',LOSS.LOSS_QTY,0))  LOSS115
     , SUM(DECODE(LOSS.LOSS_CODE,'472',LOSS.LOSS_QTY,0))  LOSS116
     , SUM(DECODE(LOSS.LOSS_CODE,'430',LOSS.LOSS_QTY,0))  LOSS117
     , SUM(DECODE(LOSS.LOSS_CODE,'473',LOSS.LOSS_QTY,0))  LOSS118
     , SUM(DECODE(LOSS.LOSS_CODE,'474',LOSS.LOSS_QTY,0))  LOSS119
     , SUM(DECODE(LOSS.LOSS_CODE,'475',LOSS.LOSS_QTY,0))  LOSS120
     , SUM(DECODE(LOSS.LOSS_CODE,'476',LOSS.LOSS_QTY,0))  LOSS121
     , SUM(DECODE(LOSS.LOSS_CODE,'477',LOSS.LOSS_QTY,0))  LOSS122
     , SUM(DECODE(LOSS.LOSS_CODE,'478',LOSS.LOSS_QTY,0))  LOSS123
     , SUM(DECODE(LOSS.LOSS_CODE,'479',LOSS.LOSS_QTY,0))  LOSS124
     , SUM(DECODE(LOSS.LOSS_CODE,'480',LOSS.LOSS_QTY,0))  LOSS125
     , SUM(DECODE(LOSS.LOSS_CODE,'481',LOSS.LOSS_QTY,0))  LOSS126
     , SUM(DECODE(LOSS.LOSS_CODE,'491',LOSS.LOSS_QTY,0))  LOSS127
     , SUM(DECODE(LOSS.LOSS_CODE,'492',LOSS.LOSS_QTY,0))  LOSS128
     , SUM(DECODE(LOSS.LOSS_CODE,'493',LOSS.LOSS_QTY,0))  LOSS129
     , SUM(DECODE(LOSS.LOSS_CODE,'494',LOSS.LOSS_QTY,0))  LOSS130
     , SUM(DECODE(LOSS.LOSS_CODE,'495',LOSS.LOSS_QTY,0))  LOSS131
     , SUM(DECODE(LOSS.LOSS_CODE,'503',LOSS.LOSS_QTY,0))  LOSS132
     , SUM(DECODE(LOSS.LOSS_CODE,'504',LOSS.LOSS_QTY,0))  LOSS133
     , SUM(DECODE(LOSS.LOSS_CODE,'508',LOSS.LOSS_QTY,0))  LOSS134
     , SUM(DECODE(LOSS.LOSS_CODE,'510',LOSS.LOSS_QTY,0))  LOSS135
     , SUM(DECODE(LOSS.LOSS_CODE,'512',LOSS.LOSS_QTY,0))  LOSS136
     , SUM(DECODE(LOSS.LOSS_CODE,'513',LOSS.LOSS_QTY,0))  LOSS137
     , SUM(DECODE(LOSS.LOSS_CODE,'514',LOSS.LOSS_QTY,0))  LOSS138
     , SUM(DECODE(LOSS.LOSS_CODE,'517',LOSS.LOSS_QTY,0))  LOSS139
     , SUM(DECODE(LOSS.LOSS_CODE,'520',LOSS.LOSS_QTY,0))  LOSS140
     , SUM(DECODE(LOSS.LOSS_CODE,'531',LOSS.LOSS_QTY,0))  LOSS141
     , SUM(DECODE(LOSS.LOSS_CODE,'538',LOSS.LOSS_QTY,0))  LOSS142
     , SUM(DECODE(LOSS.LOSS_CODE,'539',LOSS.LOSS_QTY,0))  LOSS143
     , SUM(DECODE(LOSS.LOSS_CODE,'563',LOSS.LOSS_QTY,0))  LOSS144
     , SUM(DECODE(LOSS.LOSS_CODE,'564',LOSS.LOSS_QTY,0))  LOSS145
     , SUM(DECODE(LOSS.LOSS_CODE,'565',LOSS.LOSS_QTY,0))  LOSS146
     , SUM(DECODE(LOSS.LOSS_CODE,'566',LOSS.LOSS_QTY,0))  LOSS147
     , SUM(DECODE(LOSS.LOSS_CODE,'567',LOSS.LOSS_QTY,0))  LOSS148
     , SUM(DECODE(LOSS.LOSS_CODE,'568',LOSS.LOSS_QTY,0))  LOSS149
     , SUM(DECODE(LOSS.LOSS_CODE,'571',LOSS.LOSS_QTY,0))  LOSS150
     , SUM(DECODE(LOSS.LOSS_CODE,'572',LOSS.LOSS_QTY,0))  LOSS151
     , SUM(DECODE(LOSS.LOSS_CODE,'573',LOSS.LOSS_QTY,0))  LOSS152
     , SUM(DECODE(LOSS.LOSS_CODE,'602',LOSS.LOSS_QTY,0))  LOSS153
     , SUM(DECODE(LOSS.LOSS_CODE,'603',LOSS.LOSS_QTY,0))  LOSS154
     , SUM(DECODE(LOSS.LOSS_CODE,'604',LOSS.LOSS_QTY,0))  LOSS155
     , SUM(DECODE(LOSS.LOSS_CODE,'605',LOSS.LOSS_QTY,0))  LOSS156
     , SUM(DECODE(LOSS.LOSS_CODE,'606',LOSS.LOSS_QTY,0))  LOSS157
     , SUM(DECODE(LOSS.LOSS_CODE,'607',LOSS.LOSS_QTY,0))  LOSS158
     , SUM(DECODE(LOSS.LOSS_CODE,'608',LOSS.LOSS_QTY,0))  LOSS159
     , SUM(DECODE(LOSS.LOSS_CODE,'609',LOSS.LOSS_QTY,0))  LOSS160
     , SUM(DECODE(LOSS.LOSS_CODE,'610',LOSS.LOSS_QTY,0))  LOSS161
     , SUM(DECODE(LOSS.LOSS_CODE,'611',LOSS.LOSS_QTY,0))  LOSS162
     , SUM(DECODE(LOSS.LOSS_CODE,'612',LOSS.LOSS_QTY,0))  LOSS163
     , SUM(DECODE(LOSS.LOSS_CODE,'613',LOSS.LOSS_QTY,0))  LOSS164
     , SUM(DECODE(LOSS.LOSS_CODE,'614',LOSS.LOSS_QTY,0))  LOSS165
     , SUM(DECODE(LOSS.LOSS_CODE,'615',LOSS.LOSS_QTY,0))  LOSS166
     , SUM(DECODE(LOSS.LOSS_CODE,'616',LOSS.LOSS_QTY,0))  LOSS167
     , SUM(DECODE(LOSS.LOSS_CODE,'619',LOSS.LOSS_QTY,0))  LOSS168
     , SUM(DECODE(LOSS.LOSS_CODE,'620',LOSS.LOSS_QTY,0))  LOSS169
     , SUM(DECODE(LOSS.LOSS_CODE,'621',LOSS.LOSS_QTY,0))  LOSS170
     , SUM(DECODE(LOSS.LOSS_CODE,'631',LOSS.LOSS_QTY,0))  LOSS171
     , SUM(DECODE(LOSS.LOSS_CODE,'633',LOSS.LOSS_QTY,0))  LOSS172
     , SUM(DECODE(LOSS.LOSS_CODE,'632',LOSS.LOSS_QTY,0))  LOSS173
     , SUM(DECODE(LOSS.LOSS_CODE,'702',LOSS.LOSS_QTY,0))  LOSS174
     , SUM(DECODE(LOSS.LOSS_CODE,'703',LOSS.LOSS_QTY,0))  LOSS175
     , SUM(DECODE(LOSS.LOSS_CODE,'704',LOSS.LOSS_QTY,0))  LOSS176
     , SUM(DECODE(LOSS.LOSS_CODE,'705',LOSS.LOSS_QTY,0))  LOSS177
     , SUM(DECODE(LOSS.LOSS_CODE,'706',LOSS.LOSS_QTY,0))  LOSS178
     , SUM(DECODE(LOSS.LOSS_CODE,'707',LOSS.LOSS_QTY,0))  LOSS179
     , SUM(DECODE(LOSS.LOSS_CODE,'708',LOSS.LOSS_QTY,0))  LOSS180
     , SUM(DECODE(LOSS.LOSS_CODE,'709',LOSS.LOSS_QTY,0))  LOSS181
     , SUM(DECODE(LOSS.LOSS_CODE,'710',LOSS.LOSS_QTY,0))  LOSS182
     , SUM(DECODE(LOSS.LOSS_CODE,'711',LOSS.LOSS_QTY,0))  LOSS183
     , SUM(DECODE(LOSS.LOSS_CODE,'712',LOSS.LOSS_QTY,0))  LOSS184
     , SUM(DECODE(LOSS.LOSS_CODE,'713',LOSS.LOSS_QTY,0))  LOSS185
     , SUM(DECODE(LOSS.LOSS_CODE,'714',LOSS.LOSS_QTY,0))  LOSS186
     , SUM(DECODE(LOSS.LOSS_CODE,'715',LOSS.LOSS_QTY,0))  LOSS187
     , SUM(DECODE(LOSS.LOSS_CODE,'716',LOSS.LOSS_QTY,0))  LOSS188
     , SUM(DECODE(LOSS.LOSS_CODE,'718',LOSS.LOSS_QTY,0))  LOSS189
     , SUM(DECODE(LOSS.LOSS_CODE,'719',LOSS.LOSS_QTY,0))  LOSS190
     , SUM(DECODE(LOSS.LOSS_CODE,'720',LOSS.LOSS_QTY,0))  LOSS191
     , SUM(DECODE(LOSS.LOSS_CODE,'721',LOSS.LOSS_QTY,0))  LOSS192
     , SUM(DECODE(LOSS.LOSS_CODE,'722',LOSS.LOSS_QTY,0))  LOSS193
     , SUM(DECODE(LOSS.LOSS_CODE,'760',LOSS.LOSS_QTY,0))  LOSS194
     , SUM(DECODE(LOSS.LOSS_CODE,'802',LOSS.LOSS_QTY,0))  LOSS195
     , SUM(DECODE(LOSS.LOSS_CODE,'803',LOSS.LOSS_QTY,0))  LOSS196
     , SUM(DECODE(LOSS.LOSS_CODE,'804',LOSS.LOSS_QTY,0))  LOSS197
     , SUM(DECODE(LOSS.LOSS_CODE,'805',LOSS.LOSS_QTY,0))  LOSS198
     , SUM(DECODE(LOSS.LOSS_CODE,'808',LOSS.LOSS_QTY,0))  LOSS199
     , SUM(DECODE(LOSS.LOSS_CODE,'809',LOSS.LOSS_QTY,0))  LOSS200
     , SUM(DECODE(LOSS.LOSS_CODE,'810',LOSS.LOSS_QTY,0))  LOSS201
     , SUM(DECODE(LOSS.LOSS_CODE,'811',LOSS.LOSS_QTY,0))  LOSS202
     , SUM(DECODE(LOSS.LOSS_CODE,'812',LOSS.LOSS_QTY,0))  LOSS203
     , SUM(DECODE(LOSS.LOSS_CODE,'813',LOSS.LOSS_QTY,0))  LOSS204
     , SUM(DECODE(LOSS.LOSS_CODE,'815',LOSS.LOSS_QTY,0))  LOSS205
     , SUM(DECODE(LOSS.LOSS_CODE,'816',LOSS.LOSS_QTY,0))  LOSS206
     , SUM(DECODE(LOSS.LOSS_CODE,'818',LOSS.LOSS_QTY,0))  LOSS207
     , SUM(DECODE(LOSS.LOSS_CODE,'819',LOSS.LOSS_QTY,0))  LOSS208
     , SUM(DECODE(LOSS.LOSS_CODE,'820',LOSS.LOSS_QTY,0))  LOSS209
     , SUM(DECODE(LOSS.LOSS_CODE,'821',LOSS.LOSS_QTY,0))  LOSS210
     , SUM(DECODE(LOSS.LOSS_CODE,'822',LOSS.LOSS_QTY,0))  LOSS211
     , SUM(DECODE(LOSS.LOSS_CODE,'823',LOSS.LOSS_QTY,0))  LOSS212
     , SUM(DECODE(LOSS.LOSS_CODE,'829',LOSS.LOSS_QTY,0))  LOSS213
     , SUM(DECODE(LOSS.LOSS_CODE,'830',LOSS.LOSS_QTY,0))  LOSS214
     , SUM(DECODE(LOSS.LOSS_CODE,'862',LOSS.LOSS_QTY,0))  LOSS215
     , SUM(DECODE(LOSS.LOSS_CODE,'866',LOSS.LOSS_QTY,0))  LOSS216
     , SUM(DECODE(LOSS.LOSS_CODE,'867',LOSS.LOSS_QTY,0))  LOSS217
     , SUM(DECODE(LOSS.LOSS_CODE,'889',LOSS.LOSS_QTY,0))  LOSS218
     , SUM(DECODE(LOSS.LOSS_CODE,'890',LOSS.LOSS_QTY,0))  LOSS219
     , SUM(DECODE(LOSS.LOSS_CODE,'891',LOSS.LOSS_QTY,0))  LOSS220
     , SUM(DECODE(LOSS.LOSS_CODE,'892',LOSS.LOSS_QTY,0))  LOSS221
     , SUM(DECODE(LOSS.LOSS_CODE,'893',LOSS.LOSS_QTY,0))  LOSS222
     , SUM(DECODE(LOSS.LOSS_CODE,'894',LOSS.LOSS_QTY,0))  LOSS223
     , SUM(DECODE(LOSS.LOSS_CODE,'903',LOSS.LOSS_QTY,0))  LOSS224
     , SUM(DECODE(LOSS.LOSS_CODE,'904',LOSS.LOSS_QTY,0))  LOSS225
     , SUM(DECODE(LOSS.LOSS_CODE,'905',LOSS.LOSS_QTY,0))  LOSS226
     , SUM(DECODE(LOSS.LOSS_CODE,'924',LOSS.LOSS_QTY,0))  LOSS227
     , SUM(DECODE(LOSS.LOSS_CODE,'925',LOSS.LOSS_QTY,0))  LOSS228
     , SUM(DECODE(LOSS.LOSS_CODE,'929',LOSS.LOSS_QTY,0))  LOSS229
     , SUM(DECODE(LOSS.LOSS_CODE,'930',LOSS.LOSS_QTY,0))  LOSS230
     , SUM(DECODE(LOSS.LOSS_CODE,'931',LOSS.LOSS_QTY,0))  LOSS231
     , SUM(DECODE(LOSS.LOSS_CODE,'932',LOSS.LOSS_QTY,0))  LOSS232
     , SUM(DECODE(LOSS.LOSS_CODE,'935',LOSS.LOSS_QTY,0))  LOSS233
     , SUM(DECODE(LOSS.LOSS_CODE,'936',LOSS.LOSS_QTY,0))  LOSS234
     , SUM(DECODE(LOSS.LOSS_CODE,'937',LOSS.LOSS_QTY,0))  LOSS235
     , SUM(DECODE(LOSS.LOSS_CODE,'940',LOSS.LOSS_QTY,0))  LOSS236
     , SUM(DECODE(LOSS.LOSS_CODE,'944',LOSS.LOSS_QTY,0))  LOSS237
     , SUM(DECODE(LOSS.LOSS_CODE,'945',LOSS.LOSS_QTY,0))  LOSS238
     , SUM(DECODE(LOSS.LOSS_CODE,'947',LOSS.LOSS_QTY,0))  LOSS239
     , SUM(DECODE(LOSS.LOSS_CODE,'948',LOSS.LOSS_QTY,0))  LOSS240
     , SUM(DECODE(LOSS.LOSS_CODE,'949',LOSS.LOSS_QTY,0))  LOSS241
     , SUM(DECODE(LOSS.LOSS_CODE,'950',LOSS.LOSS_QTY,0))  LOSS242
     , SUM(DECODE(LOSS.LOSS_CODE,'951',LOSS.LOSS_QTY,0))  LOSS243
     , SUM(DECODE(LOSS.LOSS_CODE,'953',LOSS.LOSS_QTY,0))  LOSS244
     , SUM(DECODE(LOSS.LOSS_CODE,'954',LOSS.LOSS_QTY,0))  LOSS245
     , SUM(DECODE(LOSS.LOSS_CODE,'955',LOSS.LOSS_QTY,0))  LOSS246
     , SUM(DECODE(LOSS.LOSS_CODE,'956',LOSS.LOSS_QTY,0))  LOSS247
     , SUM(DECODE(LOSS.LOSS_CODE,'957',LOSS.LOSS_QTY,0))  LOSS248
     , SUM(DECODE(LOSS.LOSS_CODE,'958',LOSS.LOSS_QTY,0))  LOSS249
     , SUM(DECODE(LOSS.LOSS_CODE,'962',LOSS.LOSS_QTY,0))  LOSS250
     , SUM(DECODE(LOSS.LOSS_CODE,'970',LOSS.LOSS_QTY,0))  LOSS251
     , SUM(DECODE(LOSS.LOSS_CODE,'971',LOSS.LOSS_QTY,0))  LOSS252
     , SUM(DECODE(LOSS.LOSS_CODE,'991',LOSS.LOSS_QTY,0))  LOSS253
     , SUM(DECODE(LOSS.LOSS_CODE,'992',LOSS.LOSS_QTY,0))  LOSS254
     , SUM(DECODE(LOSS.LOSS_CODE,'995',LOSS.LOSS_QTY,0))  LOSS255
     , SUM(DECODE(LOSS.LOSS_CODE,'996',LOSS.LOSS_QTY,0))  LOSS256
     , SUM(DECODE(LOSS.LOSS_CODE,'997',LOSS.LOSS_QTY,0))  LOSS257
     , SUM(DECODE(LOSS.LOSS_CODE,'129',LOSS.LOSS_QTY,0))  LOSS258
     , SUM(DECODE(LOSS.LOSS_CODE,'130',LOSS.LOSS_QTY,0))  LOSS259
     , SUM(DECODE(LOSS.LOSS_CODE,'131',LOSS.LOSS_QTY,0))  LOSS260
     , SUM(DECODE(LOSS.LOSS_CODE,'132',LOSS.LOSS_QTY,0))  LOSS261
     , SUM(DECODE(LOSS.LOSS_CODE,'133',LOSS.LOSS_QTY,0))  LOSS262
     , SUM(DECODE(LOSS.LOSS_CODE,'1001',LOSS.LOSS_QTY,0))  LOSS263
     , SUM(DECODE(LOSS.LOSS_CODE,'1002',LOSS.LOSS_QTY,0))  LOSS264
     , SUM(DECODE(LOSS.LOSS_CODE,'1003',LOSS.LOSS_QTY,0))  LOSS265
     , SUM(DECODE(LOSS.LOSS_CODE,'1004',LOSS.LOSS_QTY,0))  LOSS266
     , SUM(DECODE(LOSS.LOSS_CODE,'1005',LOSS.LOSS_QTY,0))  LOSS267
     , SUM(DECODE(LOSS.LOSS_CODE,'1006',LOSS.LOSS_QTY,0))  LOSS268
     , SUM(DECODE(LOSS.LOSS_CODE,'1007',LOSS.LOSS_QTY,0))  LOSS269
     , SUM(DECODE(LOSS.LOSS_CODE,'1008',LOSS.LOSS_QTY,0))  LOSS270
     , SUM(DECODE(LOSS.LOSS_CODE,'1009',LOSS.LOSS_QTY,0))  LOSS271
     , SUM(DECODE(LOSS.LOSS_CODE,'1010',LOSS.LOSS_QTY,0))  LOSS272
     , SUM(DECODE(LOSS.LOSS_CODE,'1011',LOSS.LOSS_QTY,0))  LOSS273
     , SUM(DECODE(LOSS.LOSS_CODE,'1012',LOSS.LOSS_QTY,0))  LOSS274
     , SUM(DECODE(LOSS.LOSS_CODE,'1021',LOSS.LOSS_QTY,0))  LOSS275
     , SUM(DECODE(LOSS.LOSS_CODE,'1022',LOSS.LOSS_QTY,0))  LOSS276
     , SUM(DECODE(LOSS.LOSS_CODE,'1023',LOSS.LOSS_QTY,0))  LOSS277
     , SUM(DECODE(LOSS.LOSS_CODE,'1024',LOSS.LOSS_QTY,0))  LOSS278
     , SUM(DECODE(LOSS.LOSS_CODE,'1025',LOSS.LOSS_QTY,0))  LOSS279
     , SUM(DECODE(LOSS.LOSS_CODE,'1026',LOSS.LOSS_QTY,0))  LOSS280
     , SUM(DECODE(LOSS.LOSS_CODE,'1027',LOSS.LOSS_QTY,0))  LOSS281
     , SUM(DECODE(LOSS.LOSS_CODE,'1028',LOSS.LOSS_QTY,0))  LOSS282
     , SUM(DECODE(LOSS.LOSS_CODE,'1029',LOSS.LOSS_QTY,0))  LOSS283
     , SUM(DECODE(LOSS.LOSS_CODE,'1031',LOSS.LOSS_QTY,0))  LOSS284
     , SUM(DECODE(LOSS.LOSS_CODE,'1032',LOSS.LOSS_QTY,0))  LOSS285
     , SUM(DECODE(LOSS.LOSS_CODE,'1033',LOSS.LOSS_QTY,0))  LOSS286
     , SUM(DECODE(LOSS.LOSS_CODE,'1034',LOSS.LOSS_QTY,0))  LOSS287
     , SUM(DECODE(LOSS.LOSS_CODE,'1035',LOSS.LOSS_QTY,0))  LOSS288
     , SUM(DECODE(LOSS.LOSS_CODE,'1099',LOSS.LOSS_QTY,0))  LOSS289
     , SUM(DECODE(LOSS.LOSS_CODE,'1101',LOSS.LOSS_QTY,0))  LOSS290
     , SUM(DECODE(LOSS.LOSS_CODE,'1102',LOSS.LOSS_QTY,0))  LOSS291
     , SUM(DECODE(LOSS.LOSS_CODE,'1103',LOSS.LOSS_QTY,0))  LOSS292
     , SUM(DECODE(LOSS.LOSS_CODE,'1111',LOSS.LOSS_QTY,0))  LOSS293
     , SUM(DECODE(LOSS.LOSS_CODE,'1112',LOSS.LOSS_QTY,0))  LOSS294
     , SUM(DECODE(LOSS.LOSS_CODE,'1113',LOSS.LOSS_QTY,0))  LOSS295
     , SUM(DECODE(LOSS.LOSS_CODE,'1114',LOSS.LOSS_QTY,0))  LOSS296
     , SUM(DECODE(LOSS.LOSS_CODE,'1115',LOSS.LOSS_QTY,0))  LOSS297
     , SUM(DECODE(LOSS.LOSS_CODE,'1116',LOSS.LOSS_QTY,0))  LOSS298
     , SUM(DECODE(LOSS.LOSS_CODE,'1117',LOSS.LOSS_QTY,0))  LOSS299
     , SUM(DECODE(LOSS.LOSS_CODE,'1118',LOSS.LOSS_QTY,0))  LOSS300
     , SUM(DECODE(LOSS.LOSS_CODE,'1119',LOSS.LOSS_QTY,0))  LOSS301
     , SUM(DECODE(LOSS.LOSS_CODE,'1131',LOSS.LOSS_QTY,0))  LOSS302
     , SUM(DECODE(LOSS.LOSS_CODE,'1132',LOSS.LOSS_QTY,0))  LOSS303
     , SUM(DECODE(LOSS.LOSS_CODE,'1133',LOSS.LOSS_QTY,0))  LOSS304
     , SUM(DECODE(LOSS.LOSS_CODE,'1134',LOSS.LOSS_QTY,0))  LOSS305
     , SUM(DECODE(LOSS.LOSS_CODE,'1135',LOSS.LOSS_QTY,0))  LOSS306
     , SUM(DECODE(LOSS.LOSS_CODE,'1201',LOSS.LOSS_QTY,0))  LOSS307
     , SUM(DECODE(LOSS.LOSS_CODE,'1202',LOSS.LOSS_QTY,0))  LOSS308
     , SUM(DECODE(LOSS.LOSS_CODE,'1203',LOSS.LOSS_QTY,0))  LOSS309
     , SUM(DECODE(LOSS.LOSS_CODE,'1204',LOSS.LOSS_QTY,0))  LOSS310
     , SUM(DECODE(LOSS.LOSS_CODE,'1205',LOSS.LOSS_QTY,0))  LOSS311
     , SUM(DECODE(LOSS.LOSS_CODE,'1206',LOSS.LOSS_QTY,0))  LOSS312
     , SUM(DECODE(LOSS.LOSS_CODE,'1207',LOSS.LOSS_QTY,0))  LOSS313
     , SUM(DECODE(LOSS.LOSS_CODE,'1208',LOSS.LOSS_QTY,0))  LOSS314
     , SUM(DECODE(LOSS.LOSS_CODE,'1209',LOSS.LOSS_QTY,0))  LOSS315
     , SUM(DECODE(LOSS.LOSS_CODE,'1210',LOSS.LOSS_QTY,0))  LOSS316
     , SUM(DECODE(LOSS.LOSS_CODE,'1211',LOSS.LOSS_QTY,0))  LOSS317
     , SUM(DECODE(LOSS.LOSS_CODE,'9500',LOSS.LOSS_QTY,0))  LOSS318
     , SUM(DECODE(LOSS.LOSS_CODE,'9100',LOSS.LOSS_QTY,0))  LOSS319
     , SUM(DECODE(LOSS.LOSS_CODE,'9000',LOSS.LOSS_QTY,0))  LOSS320
     , SUM(DECODE(LOSS.LOSS_CODE,'9501',LOSS.LOSS_QTY,0))  LOSS321
     , SUM(DECODE(LOSS.LOSS_CODE,'1076',LOSS.LOSS_QTY,0))  LOSS322
     , SUM(DECODE(LOSS.LOSS_CODE,'1077',LOSS.LOSS_QTY,0))  LOSS323
     , SUM(DECODE(LOSS.LOSS_CODE,'1078',LOSS.LOSS_QTY,0))  LOSS324
     , SUM(DECODE(LOSS.LOSS_CODE,'1079',LOSS.LOSS_QTY,0))  LOSS325
     , SUM(DECODE(LOSS.LOSS_CODE,'1080',LOSS.LOSS_QTY,0))  LOSS326
     , SUM(DECODE(LOSS.LOSS_CODE,'1081',LOSS.LOSS_QTY,0))  LOSS327
     , SUM(DECODE(LOSS.LOSS_CODE,'1082',LOSS.LOSS_QTY,0))  LOSS328
     , SUM(DECODE(LOSS.LOSS_CODE,'1083',LOSS.LOSS_QTY,0))  LOSS329
     , SUM(DECODE(LOSS.LOSS_CODE,'1084',LOSS.LOSS_QTY,0))  LOSS330
     , SUM(DECODE(LOSS.LOSS_CODE,'1085',LOSS.LOSS_QTY,0))  LOSS331
     , SUM(DECODE(LOSS.LOSS_CODE,'1086',LOSS.LOSS_QTY,0))  LOSS332
     , SUM(DECODE(LOSS.LOSS_CODE,'1087',LOSS.LOSS_QTY,0))  LOSS333
     , SUM(DECODE(LOSS.LOSS_CODE,'1088',LOSS.LOSS_QTY,0))  LOSS334
     , SUM(DECODE(LOSS.LOSS_CODE,'1089',LOSS.LOSS_QTY,0))  LOSS335
     , SUM(DECODE(LOSS.LOSS_CODE,'1801',LOSS.LOSS_QTY,0))  LOSS336
     , SUM(DECODE(LOSS.LOSS_CODE,'1802',LOSS.LOSS_QTY,0))  LOSS337
     , SUM(DECODE(LOSS.LOSS_CODE,'1803',LOSS.LOSS_QTY,0))  LOSS338
     , SUM(DECODE(LOSS.LOSS_CODE,'1804',LOSS.LOSS_QTY,0))  LOSS339
     , SUM(DECODE(LOSS.LOSS_CODE,'1805',LOSS.LOSS_QTY,0))  LOSS340
     , SUM(DECODE(LOSS.LOSS_CODE,'1806',LOSS.LOSS_QTY,0))  LOSS341
     , SUM(DECODE(LOSS.LOSS_CODE,'1807',LOSS.LOSS_QTY,0))  LOSS342
     , SUM(DECODE(LOSS.LOSS_CODE,'1075',LOSS.LOSS_QTY,0))  LOSS343
     , SUM(DECODE(LOSS.LOSS_CODE,'1074',LOSS.LOSS_QTY,0))  LOSS344
     , SUM(DECODE(LOSS.LOSS_CODE,'1073',LOSS.LOSS_QTY,0))  LOSS345
     , SUM(DECODE(LOSS.LOSS_CODE,'1071',LOSS.LOSS_QTY,0))  LOSS346
     , SUM(DECODE(LOSS.LOSS_CODE,'1072',LOSS.LOSS_QTY,0))  LOSS347
     , SUM(DECODE(LOSS.LOSS_CODE,'1090',LOSS.LOSS_QTY,0))  LOSS348

  FROM ( 
        SELECT  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', A.MAT_ID
             , A.LOT_ID AS LOT_ID 
             , TO_CHAR(TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')) AS IN_TIME 
             , TO_CHAR(TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss')) AS SHIP_TIME 
             , ROUND((TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss') - TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')),2) AS TAT 
             , (  
                SELECT MIN(QTY_1)   
                  FROM RWIPLOTHIS  
                 WHERE FACTORY = 'HMVA2'  
                   AND OLD_OPER >= 'A1000'  
                   AND LOT_ID=A.LOT_ID  
                   AND TRAN_CODE IN ('END','SHIP')    
                   AND HIST_DEL_FLAG = ' '               
               ) AS BE_OUT 
             , A.QTY_1 AS OUT_QTY 
          FROM DT A
             , MWIPMATDEF MAT
             , RWIPLOTSTS C 
         WHERE 1=1
           AND A.MAT_ID=MAT.MAT_ID 
           AND A.LOT_ID=C.LOT_ID 
           AND MAT.FACTORY = 'HMVA2' 
       ) SUMMERY
     , (
        SELECT LOT_ID
             , LOSS_CODE
             , SUM(LOSS_QTY) AS LOSS_QTY 
             , SUM(CASE WHEN OPER < 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) IL_LOSS_QTY 
             , SUM(CASE WHEN OPER >= 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) BE_LOSS_QTY 
          FROM (
                SELECT LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
                   AND LOT_ID IN ( 
                                  SELECT LOT_ID 
                                    FROM DT 
                                 ) 
                UNION ALL 
                SELECT /*+ INDEX (LSM, RWIPLOTLSM_IDX02) */SPL.FROM_TO_LOT_ID AS LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM LSM
                     , (
                        SELECT LOT_ID, FROM_TO_LOT_ID 
                          FROM RWIPLOTSTS 
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'  
                           AND LOT_TYPE = 'W' 
                           AND ADD_ORDER_ID_2 = 'MULTIEQP' 
                           AND FROM_TO_LOT_ID IN ( 
                                                  SELECT LOT_ID 
                                                    FROM DT 
                                                 ) 
                       ) SPL
                 WHERE 1=1
                   AND LSM.LOT_ID = SPL.LOT_ID
                   AND LSM.FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
               )
         GROUP BY LOT_ID,LOSS_CODE,LOSS_QTY
       ) LOSS
 WHERE SUMMERY.LOT_ID=LOSS.LOT_ID(+)
 GROUP BY  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
        , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME, SUMMERY.TAT 
        , SUMMERY.BE_OUT, SUMMERY.OUT_QTY 
 ORDER BY   ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID,SUMMERY.LOT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  KEY_1,DATA_3,DATA_4  
FROM    MGCMTBLDAT  
WHERE   1=1 
        AND FACTORY = 'HMVA2' 
        AND TABLE_NAME='LOSS_CODE' 
        AND DATA_3='Y'  
ORDER BY TO_NUMBER(DATA_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
WITH DT AS
(
 SELECT * 
   FROM CWIPLOTEND 
  WHERE 1=1 
    AND TRAN_TIME BETWEEN '20200731220000' AND '20200802215959' 
    AND TRAN_CODE = 'END' 
    AND LOT_TYPE = 'W' 
    AND FACTORY = 'HMVA2' 
    AND HIST_DEL_FLAG = ' ' 
    AND TRAN_CMF_1 = 'CLOSE' 
)
SELECT  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
     , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME 
     , SUMMERY.TAT AS TAT 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0) AS IL_IN 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS IL_OUT 
     , ROUND(((SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0))/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) + NVL(SUM(LOSS.IL_LOSS_QTY),0)))*100,3)||'%' AS IL_YIELD 
     , SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0) AS BE_IN 
     , SUMMERY.BE_OUT 
     , ROUND((SUMMERY.BE_OUT/(SUMMERY.BE_OUT + NVL(SUM(LOSS.BE_LOSS_QTY),0)))*100,3)||'%' AS BE_YIELD 
     , SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0) AS IN_QTY  
     , SUMMERY.OUT_QTY 
     , ROUND(SUMMERY.OUT_QTY/(SUMMERY.OUT_QTY + NVL(SUM(LOSS.LOSS_QTY),0))*100,3)||'%' AS YIELD 
     , '' AS BONUS 
     , NVL(SUM(LOSS.LOSS_QTY),0) AS LOSS_QTY 
     , SUM(DECODE(LOSS.LOSS_CODE,'80',LOSS.LOSS_QTY,0))  LOSS0
     , SUM(DECODE(LOSS.LOSS_CODE,'81',LOSS.LOSS_QTY,0))  LOSS1
     , SUM(DECODE(LOSS.LOSS_CODE,'82',LOSS.LOSS_QTY,0))  LOSS2
     , SUM(DECODE(LOSS.LOSS_CODE,'83',LOSS.LOSS_QTY,0))  LOSS3
     , SUM(DECODE(LOSS.LOSS_CODE,'84',LOSS.LOSS_QTY,0))  LOSS4
     , SUM(DECODE(LOSS.LOSS_CODE,'85',LOSS.LOSS_QTY,0))  LOSS5
     , SUM(DECODE(LOSS.LOSS_CODE,'86',LOSS.LOSS_QTY,0))  LOSS6
     , SUM(DECODE(LOSS.LOSS_CODE,'87',LOSS.LOSS_QTY,0))  LOSS7
     , SUM(DECODE(LOSS.LOSS_CODE,'88',LOSS.LOSS_QTY,0))  LOSS8
     , SUM(DECODE(LOSS.LOSS_CODE,'100',LOSS.LOSS_QTY,0))  LOSS9
     , SUM(DECODE(LOSS.LOSS_CODE,'102',LOSS.LOSS_QTY,0))  LOSS10
     , SUM(DECODE(LOSS.LOSS_CODE,'104',LOSS.LOSS_QTY,0))  LOSS11
     , SUM(DECODE(LOSS.LOSS_CODE,'105',LOSS.LOSS_QTY,0))  LOSS12
     , SUM(DECODE(LOSS.LOSS_CODE,'106',LOSS.LOSS_QTY,0))  LOSS13
     , SUM(DECODE(LOSS.LOSS_CODE,'107',LOSS.LOSS_QTY,0))  LOSS14
     , SUM(DECODE(LOSS.LOSS_CODE,'110',LOSS.LOSS_QTY,0))  LOSS15
     , SUM(DECODE(LOSS.LOSS_CODE,'111',LOSS.LOSS_QTY,0))  LOSS16
     , SUM(DECODE(LOSS.LOSS_CODE,'112',LOSS.LOSS_QTY,0))  LOSS17
     , SUM(DECODE(LOSS.LOSS_CODE,'114',LOSS.LOSS_QTY,0))  LOSS18
     , SUM(DECODE(LOSS.LOSS_CODE,'115',LOSS.LOSS_QTY,0))  LOSS19
     , SUM(DECODE(LOSS.LOSS_CODE,'116',LOSS.LOSS_QTY,0))  LOSS20
     , SUM(DECODE(LOSS.LOSS_CODE,'119',LOSS.LOSS_QTY,0))  LOSS21
     , SUM(DECODE(LOSS.LOSS_CODE,'120',LOSS.LOSS_QTY,0))  LOSS22
     , SUM(DECODE(LOSS.LOSS_CODE,'121',LOSS.LOSS_QTY,0))  LOSS23
     , SUM(DECODE(LOSS.LOSS_CODE,'122',LOSS.LOSS_QTY,0))  LOSS24
     , SUM(DECODE(LOSS.LOSS_CODE,'123',LOSS.LOSS_QTY,0))  LOSS25
     , SUM(DECODE(LOSS.LOSS_CODE,'124',LOSS.LOSS_QTY,0))  LOSS26
     , SUM(DECODE(LOSS.LOSS_CODE,'125',LOSS.LOSS_QTY,0))  LOSS27
     , SUM(DECODE(LOSS.LOSS_CODE,'127',LOSS.LOSS_QTY,0))  LOSS28
     , SUM(DECODE(LOSS.LOSS_CODE,'128',LOSS.LOSS_QTY,0))  LOSS29
     , SUM(DECODE(LOSS.LOSS_CODE,'200',LOSS.LOSS_QTY,0))  LOSS30
     , SUM(DECODE(LOSS.LOSS_CODE,'202',LOSS.LOSS_QTY,0))  LOSS31
     , SUM(DECODE(LOSS.LOSS_CODE,'203',LOSS.LOSS_QTY,0))  LOSS32
     , SUM(DECODE(LOSS.LOSS_CODE,'204',LOSS.LOSS_QTY,0))  LOSS33
     , SUM(DECODE(LOSS.LOSS_CODE,'205',LOSS.LOSS_QTY,0))  LOSS34
     , SUM(DECODE(LOSS.LOSS_CODE,'206',LOSS.LOSS_QTY,0))  LOSS35
     , SUM(DECODE(LOSS.LOSS_CODE,'207',LOSS.LOSS_QTY,0))  LOSS36
     , SUM(DECODE(LOSS.LOSS_CODE,'208',LOSS.LOSS_QTY,0))  LOSS37
     , SUM(DECODE(LOSS.LOSS_CODE,'209',LOSS.LOSS_QTY,0))  LOSS38
     , SUM(DECODE(LOSS.LOSS_CODE,'210',LOSS.LOSS_QTY,0))  LOSS39
     , SUM(DECODE(LOSS.LOSS_CODE,'211',LOSS.LOSS_QTY,0))  LOSS40
     , SUM(DECODE(LOSS.LOSS_CODE,'212',LOSS.LOSS_QTY,0))  LOSS41
     , SUM(DECODE(LOSS.LOSS_CODE,'213',LOSS.LOSS_QTY,0))  LOSS42
     , SUM(DECODE(LOSS.LOSS_CODE,'214',LOSS.LOSS_QTY,0))  LOSS43
     , SUM(DECODE(LOSS.LOSS_CODE,'215',LOSS.LOSS_QTY,0))  LOSS44
     , SUM(DECODE(LOSS.LOSS_CODE,'216',LOSS.LOSS_QTY,0))  LOSS45
     , SUM(DECODE(LOSS.LOSS_CODE,'217',LOSS.LOSS_QTY,0))  LOSS46
     , SUM(DECODE(LOSS.LOSS_CODE,'218',LOSS.LOSS_QTY,0))  LOSS47
     , SUM(DECODE(LOSS.LOSS_CODE,'219',LOSS.LOSS_QTY,0))  LOSS48
     , SUM(DECODE(LOSS.LOSS_CODE,'222',LOSS.LOSS_QTY,0))  LOSS49
     , SUM(DECODE(LOSS.LOSS_CODE,'224',LOSS.LOSS_QTY,0))  LOSS50
     , SUM(DECODE(LOSS.LOSS_CODE,'225',LOSS.LOSS_QTY,0))  LOSS51
     , SUM(DECODE(LOSS.LOSS_CODE,'250',LOSS.LOSS_QTY,0))  LOSS52
     , SUM(DECODE(LOSS.LOSS_CODE,'251',LOSS.LOSS_QTY,0))  LOSS53
     , SUM(DECODE(LOSS.LOSS_CODE,'265',LOSS.LOSS_QTY,0))  LOSS54
     , SUM(DECODE(LOSS.LOSS_CODE,'270',LOSS.LOSS_QTY,0))  LOSS55
     , SUM(DECODE(LOSS.LOSS_CODE,'291',LOSS.LOSS_QTY,0))  LOSS56
     , SUM(DECODE(LOSS.LOSS_CODE,'299',LOSS.LOSS_QTY,0))  LOSS57
     , SUM(DECODE(LOSS.LOSS_CODE,'302',LOSS.LOSS_QTY,0))  LOSS58
     , SUM(DECODE(LOSS.LOSS_CODE,'303',LOSS.LOSS_QTY,0))  LOSS59
     , SUM(DECODE(LOSS.LOSS_CODE,'304',LOSS.LOSS_QTY,0))  LOSS60
     , SUM(DECODE(LOSS.LOSS_CODE,'305',LOSS.LOSS_QTY,0))  LOSS61
     , SUM(DECODE(LOSS.LOSS_CODE,'306',LOSS.LOSS_QTY,0))  LOSS62
     , SUM(DECODE(LOSS.LOSS_CODE,'307',LOSS.LOSS_QTY,0))  LOSS63
     , SUM(DECODE(LOSS.LOSS_CODE,'308',LOSS.LOSS_QTY,0))  LOSS64
     , SUM(DECODE(LOSS.LOSS_CODE,'311',LOSS.LOSS_QTY,0))  LOSS65
     , SUM(DECODE(LOSS.LOSS_CODE,'312',LOSS.LOSS_QTY,0))  LOSS66
     , SUM(DECODE(LOSS.LOSS_CODE,'313',LOSS.LOSS_QTY,0))  LOSS67
     , SUM(DECODE(LOSS.LOSS_CODE,'314',LOSS.LOSS_QTY,0))  LOSS68
     , SUM(DECODE(LOSS.LOSS_CODE,'315',LOSS.LOSS_QTY,0))  LOSS69
     , SUM(DECODE(LOSS.LOSS_CODE,'316',LOSS.LOSS_QTY,0))  LOSS70
     , SUM(DECODE(LOSS.LOSS_CODE,'317',LOSS.LOSS_QTY,0))  LOSS71
     , SUM(DECODE(LOSS.LOSS_CODE,'318',LOSS.LOSS_QTY,0))  LOSS72
     , SUM(DECODE(LOSS.LOSS_CODE,'319',LOSS.LOSS_QTY,0))  LOSS73
     , SUM(DECODE(LOSS.LOSS_CODE,'320',LOSS.LOSS_QTY,0))  LOSS74
     , SUM(DECODE(LOSS.LOSS_CODE,'321',LOSS.LOSS_QTY,0))  LOSS75
     , SUM(DECODE(LOSS.LOSS_CODE,'322',LOSS.LOSS_QTY,0))  LOSS76
     , SUM(DECODE(LOSS.LOSS_CODE,'323',LOSS.LOSS_QTY,0))  LOSS77
     , SUM(DECODE(LOSS.LOSS_CODE,'324',LOSS.LOSS_QTY,0))  LOSS78
     , SUM(DECODE(LOSS.LOSS_CODE,'326',LOSS.LOSS_QTY,0))  LOSS79
     , SUM(DECODE(LOSS.LOSS_CODE,'330',LOSS.LOSS_QTY,0))  LOSS80
     , SUM(DECODE(LOSS.LOSS_CODE,'331',LOSS.LOSS_QTY,0))  LOSS81
     , SUM(DECODE(LOSS.LOSS_CODE,'332',LOSS.LOSS_QTY,0))  LOSS82
     , SUM(DECODE(LOSS.LOSS_CODE,'333',LOSS.LOSS_QTY,0))  LOSS83
     , SUM(DECODE(LOSS.LOSS_CODE,'368',LOSS.LOSS_QTY,0))  LOSS84
     , SUM(DECODE(LOSS.LOSS_CODE,'371',LOSS.LOSS_QTY,0))  LOSS85
     , SUM(DECODE(LOSS.LOSS_CODE,'373',LOSS.LOSS_QTY,0))  LOSS86
     , SUM(DECODE(LOSS.LOSS_CODE,'388',LOSS.LOSS_QTY,0))  LOSS87
     , SUM(DECODE(LOSS.LOSS_CODE,'392',LOSS.LOSS_QTY,0))  LOSS88
     , SUM(DECODE(LOSS.LOSS_CODE,'395',LOSS.LOSS_QTY,0))  LOSS89
     , SUM(DECODE(LOSS.LOSS_CODE,'402',LOSS.LOSS_QTY,0))  LOSS90
     , SUM(DECODE(LOSS.LOSS_CODE,'403',LOSS.LOSS_QTY,0))  LOSS91
     , SUM(DECODE(LOSS.LOSS_CODE,'404',LOSS.LOSS_QTY,0))  LOSS92
     , SUM(DECODE(LOSS.LOSS_CODE,'405',LOSS.LOSS_QTY,0))  LOSS93
     , SUM(DECODE(LOSS.LOSS_CODE,'406',LOSS.LOSS_QTY,0))  LOSS94
     , SUM(DECODE(LOSS.LOSS_CODE,'407',LOSS.LOSS_QTY,0))  LOSS95
     , SUM(DECODE(LOSS.LOSS_CODE,'408',LOSS.LOSS_QTY,0))  LOSS96
     , SUM(DECODE(LOSS.LOSS_CODE,'409',LOSS.LOSS_QTY,0))  LOSS97
     , SUM(DECODE(LOSS.LOSS_CODE,'410',LOSS.LOSS_QTY,0))  LOSS98
     , SUM(DECODE(LOSS.LOSS_CODE,'411',LOSS.LOSS_QTY,0))  LOSS99
     , SUM(DECODE(LOSS.LOSS_CODE,'412',LOSS.LOSS_QTY,0))  LOSS100
     , SUM(DECODE(LOSS.LOSS_CODE,'413',LOSS.LOSS_QTY,0))  LOSS101
     , SUM(DECODE(LOSS.LOSS_CODE,'414',LOSS.LOSS_QTY,0))  LOSS102
     , SUM(DECODE(LOSS.LOSS_CODE,'415',LOSS.LOSS_QTY,0))  LOSS103
     , SUM(DECODE(LOSS.LOSS_CODE,'417',LOSS.LOSS_QTY,0))  LOSS104
     , SUM(DECODE(LOSS.LOSS_CODE,'418',LOSS.LOSS_QTY,0))  LOSS105
     , SUM(DECODE(LOSS.LOSS_CODE,'419',LOSS.LOSS_QTY,0))  LOSS106
     , SUM(DECODE(LOSS.LOSS_CODE,'420',LOSS.LOSS_QTY,0))  LOSS107
     , SUM(DECODE(LOSS.LOSS_CODE,'421',LOSS.LOSS_QTY,0))  LOSS108
     , SUM(DECODE(LOSS.LOSS_CODE,'422',LOSS.LOSS_QTY,0))  LOSS109
     , SUM(DECODE(LOSS.LOSS_CODE,'423',LOSS.LOSS_QTY,0))  LOSS110
     , SUM(DECODE(LOSS.LOSS_CODE,'424',LOSS.LOSS_QTY,0))  LOSS111
     , SUM(DECODE(LOSS.LOSS_CODE,'425',LOSS.LOSS_QTY,0))  LOSS112
     , SUM(DECODE(LOSS.LOSS_CODE,'426',LOSS.LOSS_QTY,0))  LOSS113
     , SUM(DECODE(LOSS.LOSS_CODE,'427',LOSS.LOSS_QTY,0))  LOSS114
     , SUM(DECODE(LOSS.LOSS_CODE,'440',LOSS.LOSS_QTY,0))  LOSS115
     , SUM(DECODE(LOSS.LOSS_CODE,'472',LOSS.LOSS_QTY,0))  LOSS116
     , SUM(DECODE(LOSS.LOSS_CODE,'430',LOSS.LOSS_QTY,0))  LOSS117
     , SUM(DECODE(LOSS.LOSS_CODE,'473',LOSS.LOSS_QTY,0))  LOSS118
     , SUM(DECODE(LOSS.LOSS_CODE,'474',LOSS.LOSS_QTY,0))  LOSS119
     , SUM(DECODE(LOSS.LOSS_CODE,'475',LOSS.LOSS_QTY,0))  LOSS120
     , SUM(DECODE(LOSS.LOSS_CODE,'476',LOSS.LOSS_QTY,0))  LOSS121
     , SUM(DECODE(LOSS.LOSS_CODE,'477',LOSS.LOSS_QTY,0))  LOSS122
     , SUM(DECODE(LOSS.LOSS_CODE,'478',LOSS.LOSS_QTY,0))  LOSS123
     , SUM(DECODE(LOSS.LOSS_CODE,'479',LOSS.LOSS_QTY,0))  LOSS124
     , SUM(DECODE(LOSS.LOSS_CODE,'480',LOSS.LOSS_QTY,0))  LOSS125
     , SUM(DECODE(LOSS.LOSS_CODE,'481',LOSS.LOSS_QTY,0))  LOSS126
     , SUM(DECODE(LOSS.LOSS_CODE,'491',LOSS.LOSS_QTY,0))  LOSS127
     , SUM(DECODE(LOSS.LOSS_CODE,'492',LOSS.LOSS_QTY,0))  LOSS128
     , SUM(DECODE(LOSS.LOSS_CODE,'493',LOSS.LOSS_QTY,0))  LOSS129
     , SUM(DECODE(LOSS.LOSS_CODE,'494',LOSS.LOSS_QTY,0))  LOSS130
     , SUM(DECODE(LOSS.LOSS_CODE,'495',LOSS.LOSS_QTY,0))  LOSS131
     , SUM(DECODE(LOSS.LOSS_CODE,'503',LOSS.LOSS_QTY,0))  LOSS132
     , SUM(DECODE(LOSS.LOSS_CODE,'504',LOSS.LOSS_QTY,0))  LOSS133
     , SUM(DECODE(LOSS.LOSS_CODE,'508',LOSS.LOSS_QTY,0))  LOSS134
     , SUM(DECODE(LOSS.LOSS_CODE,'510',LOSS.LOSS_QTY,0))  LOSS135
     , SUM(DECODE(LOSS.LOSS_CODE,'512',LOSS.LOSS_QTY,0))  LOSS136
     , SUM(DECODE(LOSS.LOSS_CODE,'513',LOSS.LOSS_QTY,0))  LOSS137
     , SUM(DECODE(LOSS.LOSS_CODE,'514',LOSS.LOSS_QTY,0))  LOSS138
     , SUM(DECODE(LOSS.LOSS_CODE,'517',LOSS.LOSS_QTY,0))  LOSS139
     , SUM(DECODE(LOSS.LOSS_CODE,'520',LOSS.LOSS_QTY,0))  LOSS140
     , SUM(DECODE(LOSS.LOSS_CODE,'531',LOSS.LOSS_QTY,0))  LOSS141
     , SUM(DECODE(LOSS.LOSS_CODE,'538',LOSS.LOSS_QTY,0))  LOSS142
     , SUM(DECODE(LOSS.LOSS_CODE,'539',LOSS.LOSS_QTY,0))  LOSS143
     , SUM(DECODE(LOSS.LOSS_CODE,'563',LOSS.LOSS_QTY,0))  LOSS144
     , SUM(DECODE(LOSS.LOSS_CODE,'564',LOSS.LOSS_QTY,0))  LOSS145
     , SUM(DECODE(LOSS.LOSS_CODE,'565',LOSS.LOSS_QTY,0))  LOSS146
     , SUM(DECODE(LOSS.LOSS_CODE,'566',LOSS.LOSS_QTY,0))  LOSS147
     , SUM(DECODE(LOSS.LOSS_CODE,'567',LOSS.LOSS_QTY,0))  LOSS148
     , SUM(DECODE(LOSS.LOSS_CODE,'568',LOSS.LOSS_QTY,0))  LOSS149
     , SUM(DECODE(LOSS.LOSS_CODE,'571',LOSS.LOSS_QTY,0))  LOSS150
     , SUM(DECODE(LOSS.LOSS_CODE,'572',LOSS.LOSS_QTY,0))  LOSS151
     , SUM(DECODE(LOSS.LOSS_CODE,'573',LOSS.LOSS_QTY,0))  LOSS152
     , SUM(DECODE(LOSS.LOSS_CODE,'602',LOSS.LOSS_QTY,0))  LOSS153
     , SUM(DECODE(LOSS.LOSS_CODE,'603',LOSS.LOSS_QTY,0))  LOSS154
     , SUM(DECODE(LOSS.LOSS_CODE,'604',LOSS.LOSS_QTY,0))  LOSS155
     , SUM(DECODE(LOSS.LOSS_CODE,'605',LOSS.LOSS_QTY,0))  LOSS156
     , SUM(DECODE(LOSS.LOSS_CODE,'606',LOSS.LOSS_QTY,0))  LOSS157
     , SUM(DECODE(LOSS.LOSS_CODE,'607',LOSS.LOSS_QTY,0))  LOSS158
     , SUM(DECODE(LOSS.LOSS_CODE,'608',LOSS.LOSS_QTY,0))  LOSS159
     , SUM(DECODE(LOSS.LOSS_CODE,'609',LOSS.LOSS_QTY,0))  LOSS160
     , SUM(DECODE(LOSS.LOSS_CODE,'610',LOSS.LOSS_QTY,0))  LOSS161
     , SUM(DECODE(LOSS.LOSS_CODE,'611',LOSS.LOSS_QTY,0))  LOSS162
     , SUM(DECODE(LOSS.LOSS_CODE,'612',LOSS.LOSS_QTY,0))  LOSS163
     , SUM(DECODE(LOSS.LOSS_CODE,'613',LOSS.LOSS_QTY,0))  LOSS164
     , SUM(DECODE(LOSS.LOSS_CODE,'614',LOSS.LOSS_QTY,0))  LOSS165
     , SUM(DECODE(LOSS.LOSS_CODE,'615',LOSS.LOSS_QTY,0))  LOSS166
     , SUM(DECODE(LOSS.LOSS_CODE,'616',LOSS.LOSS_QTY,0))  LOSS167
     , SUM(DECODE(LOSS.LOSS_CODE,'619',LOSS.LOSS_QTY,0))  LOSS168
     , SUM(DECODE(LOSS.LOSS_CODE,'620',LOSS.LOSS_QTY,0))  LOSS169
     , SUM(DECODE(LOSS.LOSS_CODE,'621',LOSS.LOSS_QTY,0))  LOSS170
     , SUM(DECODE(LOSS.LOSS_CODE,'631',LOSS.LOSS_QTY,0))  LOSS171
     , SUM(DECODE(LOSS.LOSS_CODE,'633',LOSS.LOSS_QTY,0))  LOSS172
     , SUM(DECODE(LOSS.LOSS_CODE,'632',LOSS.LOSS_QTY,0))  LOSS173
     , SUM(DECODE(LOSS.LOSS_CODE,'702',LOSS.LOSS_QTY,0))  LOSS174
     , SUM(DECODE(LOSS.LOSS_CODE,'703',LOSS.LOSS_QTY,0))  LOSS175
     , SUM(DECODE(LOSS.LOSS_CODE,'704',LOSS.LOSS_QTY,0))  LOSS176
     , SUM(DECODE(LOSS.LOSS_CODE,'705',LOSS.LOSS_QTY,0))  LOSS177
     , SUM(DECODE(LOSS.LOSS_CODE,'706',LOSS.LOSS_QTY,0))  LOSS178
     , SUM(DECODE(LOSS.LOSS_CODE,'707',LOSS.LOSS_QTY,0))  LOSS179
     , SUM(DECODE(LOSS.LOSS_CODE,'708',LOSS.LOSS_QTY,0))  LOSS180
     , SUM(DECODE(LOSS.LOSS_CODE,'709',LOSS.LOSS_QTY,0))  LOSS181
     , SUM(DECODE(LOSS.LOSS_CODE,'710',LOSS.LOSS_QTY,0))  LOSS182
     , SUM(DECODE(LOSS.LOSS_CODE,'711',LOSS.LOSS_QTY,0))  LOSS183
     , SUM(DECODE(LOSS.LOSS_CODE,'712',LOSS.LOSS_QTY,0))  LOSS184
     , SUM(DECODE(LOSS.LOSS_CODE,'713',LOSS.LOSS_QTY,0))  LOSS185
     , SUM(DECODE(LOSS.LOSS_CODE,'714',LOSS.LOSS_QTY,0))  LOSS186
     , SUM(DECODE(LOSS.LOSS_CODE,'715',LOSS.LOSS_QTY,0))  LOSS187
     , SUM(DECODE(LOSS.LOSS_CODE,'716',LOSS.LOSS_QTY,0))  LOSS188
     , SUM(DECODE(LOSS.LOSS_CODE,'718',LOSS.LOSS_QTY,0))  LOSS189
     , SUM(DECODE(LOSS.LOSS_CODE,'719',LOSS.LOSS_QTY,0))  LOSS190
     , SUM(DECODE(LOSS.LOSS_CODE,'720',LOSS.LOSS_QTY,0))  LOSS191
     , SUM(DECODE(LOSS.LOSS_CODE,'721',LOSS.LOSS_QTY,0))  LOSS192
     , SUM(DECODE(LOSS.LOSS_CODE,'722',LOSS.LOSS_QTY,0))  LOSS193
     , SUM(DECODE(LOSS.LOSS_CODE,'760',LOSS.LOSS_QTY,0))  LOSS194
     , SUM(DECODE(LOSS.LOSS_CODE,'802',LOSS.LOSS_QTY,0))  LOSS195
     , SUM(DECODE(LOSS.LOSS_CODE,'803',LOSS.LOSS_QTY,0))  LOSS196
     , SUM(DECODE(LOSS.LOSS_CODE,'804',LOSS.LOSS_QTY,0))  LOSS197
     , SUM(DECODE(LOSS.LOSS_CODE,'805',LOSS.LOSS_QTY,0))  LOSS198
     , SUM(DECODE(LOSS.LOSS_CODE,'808',LOSS.LOSS_QTY,0))  LOSS199
     , SUM(DECODE(LOSS.LOSS_CODE,'809',LOSS.LOSS_QTY,0))  LOSS200
     , SUM(DECODE(LOSS.LOSS_CODE,'810',LOSS.LOSS_QTY,0))  LOSS201
     , SUM(DECODE(LOSS.LOSS_CODE,'811',LOSS.LOSS_QTY,0))  LOSS202
     , SUM(DECODE(LOSS.LOSS_CODE,'812',LOSS.LOSS_QTY,0))  LOSS203
     , SUM(DECODE(LOSS.LOSS_CODE,'813',LOSS.LOSS_QTY,0))  LOSS204
     , SUM(DECODE(LOSS.LOSS_CODE,'815',LOSS.LOSS_QTY,0))  LOSS205
     , SUM(DECODE(LOSS.LOSS_CODE,'816',LOSS.LOSS_QTY,0))  LOSS206
     , SUM(DECODE(LOSS.LOSS_CODE,'818',LOSS.LOSS_QTY,0))  LOSS207
     , SUM(DECODE(LOSS.LOSS_CODE,'819',LOSS.LOSS_QTY,0))  LOSS208
     , SUM(DECODE(LOSS.LOSS_CODE,'820',LOSS.LOSS_QTY,0))  LOSS209
     , SUM(DECODE(LOSS.LOSS_CODE,'821',LOSS.LOSS_QTY,0))  LOSS210
     , SUM(DECODE(LOSS.LOSS_CODE,'822',LOSS.LOSS_QTY,0))  LOSS211
     , SUM(DECODE(LOSS.LOSS_CODE,'823',LOSS.LOSS_QTY,0))  LOSS212
     , SUM(DECODE(LOSS.LOSS_CODE,'829',LOSS.LOSS_QTY,0))  LOSS213
     , SUM(DECODE(LOSS.LOSS_CODE,'830',LOSS.LOSS_QTY,0))  LOSS214
     , SUM(DECODE(LOSS.LOSS_CODE,'862',LOSS.LOSS_QTY,0))  LOSS215
     , SUM(DECODE(LOSS.LOSS_CODE,'866',LOSS.LOSS_QTY,0))  LOSS216
     , SUM(DECODE(LOSS.LOSS_CODE,'867',LOSS.LOSS_QTY,0))  LOSS217
     , SUM(DECODE(LOSS.LOSS_CODE,'889',LOSS.LOSS_QTY,0))  LOSS218
     , SUM(DECODE(LOSS.LOSS_CODE,'890',LOSS.LOSS_QTY,0))  LOSS219
     , SUM(DECODE(LOSS.LOSS_CODE,'891',LOSS.LOSS_QTY,0))  LOSS220
     , SUM(DECODE(LOSS.LOSS_CODE,'892',LOSS.LOSS_QTY,0))  LOSS221
     , SUM(DECODE(LOSS.LOSS_CODE,'893',LOSS.LOSS_QTY,0))  LOSS222
     , SUM(DECODE(LOSS.LOSS_CODE,'894',LOSS.LOSS_QTY,0))  LOSS223
     , SUM(DECODE(LOSS.LOSS_CODE,'903',LOSS.LOSS_QTY,0))  LOSS224
     , SUM(DECODE(LOSS.LOSS_CODE,'904',LOSS.LOSS_QTY,0))  LOSS225
     , SUM(DECODE(LOSS.LOSS_CODE,'905',LOSS.LOSS_QTY,0))  LOSS226
     , SUM(DECODE(LOSS.LOSS_CODE,'924',LOSS.LOSS_QTY,0))  LOSS227
     , SUM(DECODE(LOSS.LOSS_CODE,'925',LOSS.LOSS_QTY,0))  LOSS228
     , SUM(DECODE(LOSS.LOSS_CODE,'929',LOSS.LOSS_QTY,0))  LOSS229
     , SUM(DECODE(LOSS.LOSS_CODE,'930',LOSS.LOSS_QTY,0))  LOSS230
     , SUM(DECODE(LOSS.LOSS_CODE,'931',LOSS.LOSS_QTY,0))  LOSS231
     , SUM(DECODE(LOSS.LOSS_CODE,'932',LOSS.LOSS_QTY,0))  LOSS232
     , SUM(DECODE(LOSS.LOSS_CODE,'935',LOSS.LOSS_QTY,0))  LOSS233
     , SUM(DECODE(LOSS.LOSS_CODE,'936',LOSS.LOSS_QTY,0))  LOSS234
     , SUM(DECODE(LOSS.LOSS_CODE,'937',LOSS.LOSS_QTY,0))  LOSS235
     , SUM(DECODE(LOSS.LOSS_CODE,'940',LOSS.LOSS_QTY,0))  LOSS236
     , SUM(DECODE(LOSS.LOSS_CODE,'944',LOSS.LOSS_QTY,0))  LOSS237
     , SUM(DECODE(LOSS.LOSS_CODE,'945',LOSS.LOSS_QTY,0))  LOSS238
     , SUM(DECODE(LOSS.LOSS_CODE,'947',LOSS.LOSS_QTY,0))  LOSS239
     , SUM(DECODE(LOSS.LOSS_CODE,'948',LOSS.LOSS_QTY,0))  LOSS240
     , SUM(DECODE(LOSS.LOSS_CODE,'949',LOSS.LOSS_QTY,0))  LOSS241
     , SUM(DECODE(LOSS.LOSS_CODE,'950',LOSS.LOSS_QTY,0))  LOSS242
     , SUM(DECODE(LOSS.LOSS_CODE,'951',LOSS.LOSS_QTY,0))  LOSS243
     , SUM(DECODE(LOSS.LOSS_CODE,'953',LOSS.LOSS_QTY,0))  LOSS244
     , SUM(DECODE(LOSS.LOSS_CODE,'954',LOSS.LOSS_QTY,0))  LOSS245
     , SUM(DECODE(LOSS.LOSS_CODE,'955',LOSS.LOSS_QTY,0))  LOSS246
     , SUM(DECODE(LOSS.LOSS_CODE,'956',LOSS.LOSS_QTY,0))  LOSS247
     , SUM(DECODE(LOSS.LOSS_CODE,'957',LOSS.LOSS_QTY,0))  LOSS248
     , SUM(DECODE(LOSS.LOSS_CODE,'958',LOSS.LOSS_QTY,0))  LOSS249
     , SUM(DECODE(LOSS.LOSS_CODE,'962',LOSS.LOSS_QTY,0))  LOSS250
     , SUM(DECODE(LOSS.LOSS_CODE,'970',LOSS.LOSS_QTY,0))  LOSS251
     , SUM(DECODE(LOSS.LOSS_CODE,'971',LOSS.LOSS_QTY,0))  LOSS252
     , SUM(DECODE(LOSS.LOSS_CODE,'991',LOSS.LOSS_QTY,0))  LOSS253
     , SUM(DECODE(LOSS.LOSS_CODE,'992',LOSS.LOSS_QTY,0))  LOSS254
     , SUM(DECODE(LOSS.LOSS_CODE,'995',LOSS.LOSS_QTY,0))  LOSS255
     , SUM(DECODE(LOSS.LOSS_CODE,'996',LOSS.LOSS_QTY,0))  LOSS256
     , SUM(DECODE(LOSS.LOSS_CODE,'997',LOSS.LOSS_QTY,0))  LOSS257
     , SUM(DECODE(LOSS.LOSS_CODE,'129',LOSS.LOSS_QTY,0))  LOSS258
     , SUM(DECODE(LOSS.LOSS_CODE,'130',LOSS.LOSS_QTY,0))  LOSS259
     , SUM(DECODE(LOSS.LOSS_CODE,'131',LOSS.LOSS_QTY,0))  LOSS260
     , SUM(DECODE(LOSS.LOSS_CODE,'132',LOSS.LOSS_QTY,0))  LOSS261
     , SUM(DECODE(LOSS.LOSS_CODE,'133',LOSS.LOSS_QTY,0))  LOSS262
     , SUM(DECODE(LOSS.LOSS_CODE,'1001',LOSS.LOSS_QTY,0))  LOSS263
     , SUM(DECODE(LOSS.LOSS_CODE,'1002',LOSS.LOSS_QTY,0))  LOSS264
     , SUM(DECODE(LOSS.LOSS_CODE,'1003',LOSS.LOSS_QTY,0))  LOSS265
     , SUM(DECODE(LOSS.LOSS_CODE,'1004',LOSS.LOSS_QTY,0))  LOSS266
     , SUM(DECODE(LOSS.LOSS_CODE,'1005',LOSS.LOSS_QTY,0))  LOSS267
     , SUM(DECODE(LOSS.LOSS_CODE,'1006',LOSS.LOSS_QTY,0))  LOSS268
     , SUM(DECODE(LOSS.LOSS_CODE,'1007',LOSS.LOSS_QTY,0))  LOSS269
     , SUM(DECODE(LOSS.LOSS_CODE,'1008',LOSS.LOSS_QTY,0))  LOSS270
     , SUM(DECODE(LOSS.LOSS_CODE,'1009',LOSS.LOSS_QTY,0))  LOSS271
     , SUM(DECODE(LOSS.LOSS_CODE,'1010',LOSS.LOSS_QTY,0))  LOSS272
     , SUM(DECODE(LOSS.LOSS_CODE,'1011',LOSS.LOSS_QTY,0))  LOSS273
     , SUM(DECODE(LOSS.LOSS_CODE,'1012',LOSS.LOSS_QTY,0))  LOSS274
     , SUM(DECODE(LOSS.LOSS_CODE,'1021',LOSS.LOSS_QTY,0))  LOSS275
     , SUM(DECODE(LOSS.LOSS_CODE,'1022',LOSS.LOSS_QTY,0))  LOSS276
     , SUM(DECODE(LOSS.LOSS_CODE,'1023',LOSS.LOSS_QTY,0))  LOSS277
     , SUM(DECODE(LOSS.LOSS_CODE,'1024',LOSS.LOSS_QTY,0))  LOSS278
     , SUM(DECODE(LOSS.LOSS_CODE,'1025',LOSS.LOSS_QTY,0))  LOSS279
     , SUM(DECODE(LOSS.LOSS_CODE,'1026',LOSS.LOSS_QTY,0))  LOSS280
     , SUM(DECODE(LOSS.LOSS_CODE,'1027',LOSS.LOSS_QTY,0))  LOSS281
     , SUM(DECODE(LOSS.LOSS_CODE,'1028',LOSS.LOSS_QTY,0))  LOSS282
     , SUM(DECODE(LOSS.LOSS_CODE,'1029',LOSS.LOSS_QTY,0))  LOSS283
     , SUM(DECODE(LOSS.LOSS_CODE,'1031',LOSS.LOSS_QTY,0))  LOSS284
     , SUM(DECODE(LOSS.LOSS_CODE,'1032',LOSS.LOSS_QTY,0))  LOSS285
     , SUM(DECODE(LOSS.LOSS_CODE,'1033',LOSS.LOSS_QTY,0))  LOSS286
     , SUM(DECODE(LOSS.LOSS_CODE,'1034',LOSS.LOSS_QTY,0))  LOSS287
     , SUM(DECODE(LOSS.LOSS_CODE,'1035',LOSS.LOSS_QTY,0))  LOSS288
     , SUM(DECODE(LOSS.LOSS_CODE,'1099',LOSS.LOSS_QTY,0))  LOSS289
     , SUM(DECODE(LOSS.LOSS_CODE,'1101',LOSS.LOSS_QTY,0))  LOSS290
     , SUM(DECODE(LOSS.LOSS_CODE,'1102',LOSS.LOSS_QTY,0))  LOSS291
     , SUM(DECODE(LOSS.LOSS_CODE,'1103',LOSS.LOSS_QTY,0))  LOSS292
     , SUM(DECODE(LOSS.LOSS_CODE,'1111',LOSS.LOSS_QTY,0))  LOSS293
     , SUM(DECODE(LOSS.LOSS_CODE,'1112',LOSS.LOSS_QTY,0))  LOSS294
     , SUM(DECODE(LOSS.LOSS_CODE,'1113',LOSS.LOSS_QTY,0))  LOSS295
     , SUM(DECODE(LOSS.LOSS_CODE,'1114',LOSS.LOSS_QTY,0))  LOSS296
     , SUM(DECODE(LOSS.LOSS_CODE,'1115',LOSS.LOSS_QTY,0))  LOSS297
     , SUM(DECODE(LOSS.LOSS_CODE,'1116',LOSS.LOSS_QTY,0))  LOSS298
     , SUM(DECODE(LOSS.LOSS_CODE,'1117',LOSS.LOSS_QTY,0))  LOSS299
     , SUM(DECODE(LOSS.LOSS_CODE,'1118',LOSS.LOSS_QTY,0))  LOSS300
     , SUM(DECODE(LOSS.LOSS_CODE,'1119',LOSS.LOSS_QTY,0))  LOSS301
     , SUM(DECODE(LOSS.LOSS_CODE,'1131',LOSS.LOSS_QTY,0))  LOSS302
     , SUM(DECODE(LOSS.LOSS_CODE,'1132',LOSS.LOSS_QTY,0))  LOSS303
     , SUM(DECODE(LOSS.LOSS_CODE,'1133',LOSS.LOSS_QTY,0))  LOSS304
     , SUM(DECODE(LOSS.LOSS_CODE,'1134',LOSS.LOSS_QTY,0))  LOSS305
     , SUM(DECODE(LOSS.LOSS_CODE,'1135',LOSS.LOSS_QTY,0))  LOSS306
     , SUM(DECODE(LOSS.LOSS_CODE,'1201',LOSS.LOSS_QTY,0))  LOSS307
     , SUM(DECODE(LOSS.LOSS_CODE,'1202',LOSS.LOSS_QTY,0))  LOSS308
     , SUM(DECODE(LOSS.LOSS_CODE,'1203',LOSS.LOSS_QTY,0))  LOSS309
     , SUM(DECODE(LOSS.LOSS_CODE,'1204',LOSS.LOSS_QTY,0))  LOSS310
     , SUM(DECODE(LOSS.LOSS_CODE,'1205',LOSS.LOSS_QTY,0))  LOSS311
     , SUM(DECODE(LOSS.LOSS_CODE,'1206',LOSS.LOSS_QTY,0))  LOSS312
     , SUM(DECODE(LOSS.LOSS_CODE,'1207',LOSS.LOSS_QTY,0))  LOSS313
     , SUM(DECODE(LOSS.LOSS_CODE,'1208',LOSS.LOSS_QTY,0))  LOSS314
     , SUM(DECODE(LOSS.LOSS_CODE,'1209',LOSS.LOSS_QTY,0))  LOSS315
     , SUM(DECODE(LOSS.LOSS_CODE,'1210',LOSS.LOSS_QTY,0))  LOSS316
     , SUM(DECODE(LOSS.LOSS_CODE,'1211',LOSS.LOSS_QTY,0))  LOSS317
     , SUM(DECODE(LOSS.LOSS_CODE,'9500',LOSS.LOSS_QTY,0))  LOSS318
     , SUM(DECODE(LOSS.LOSS_CODE,'9100',LOSS.LOSS_QTY,0))  LOSS319
     , SUM(DECODE(LOSS.LOSS_CODE,'9000',LOSS.LOSS_QTY,0))  LOSS320
     , SUM(DECODE(LOSS.LOSS_CODE,'9501',LOSS.LOSS_QTY,0))  LOSS321
     , SUM(DECODE(LOSS.LOSS_CODE,'1076',LOSS.LOSS_QTY,0))  LOSS322
     , SUM(DECODE(LOSS.LOSS_CODE,'1077',LOSS.LOSS_QTY,0))  LOSS323
     , SUM(DECODE(LOSS.LOSS_CODE,'1078',LOSS.LOSS_QTY,0))  LOSS324
     , SUM(DECODE(LOSS.LOSS_CODE,'1079',LOSS.LOSS_QTY,0))  LOSS325
     , SUM(DECODE(LOSS.LOSS_CODE,'1080',LOSS.LOSS_QTY,0))  LOSS326
     , SUM(DECODE(LOSS.LOSS_CODE,'1081',LOSS.LOSS_QTY,0))  LOSS327
     , SUM(DECODE(LOSS.LOSS_CODE,'1082',LOSS.LOSS_QTY,0))  LOSS328
     , SUM(DECODE(LOSS.LOSS_CODE,'1083',LOSS.LOSS_QTY,0))  LOSS329
     , SUM(DECODE(LOSS.LOSS_CODE,'1084',LOSS.LOSS_QTY,0))  LOSS330
     , SUM(DECODE(LOSS.LOSS_CODE,'1085',LOSS.LOSS_QTY,0))  LOSS331
     , SUM(DECODE(LOSS.LOSS_CODE,'1086',LOSS.LOSS_QTY,0))  LOSS332
     , SUM(DECODE(LOSS.LOSS_CODE,'1087',LOSS.LOSS_QTY,0))  LOSS333
     , SUM(DECODE(LOSS.LOSS_CODE,'1088',LOSS.LOSS_QTY,0))  LOSS334
     , SUM(DECODE(LOSS.LOSS_CODE,'1089',LOSS.LOSS_QTY,0))  LOSS335
     , SUM(DECODE(LOSS.LOSS_CODE,'1801',LOSS.LOSS_QTY,0))  LOSS336
     , SUM(DECODE(LOSS.LOSS_CODE,'1802',LOSS.LOSS_QTY,0))  LOSS337
     , SUM(DECODE(LOSS.LOSS_CODE,'1803',LOSS.LOSS_QTY,0))  LOSS338
     , SUM(DECODE(LOSS.LOSS_CODE,'1804',LOSS.LOSS_QTY,0))  LOSS339
     , SUM(DECODE(LOSS.LOSS_CODE,'1805',LOSS.LOSS_QTY,0))  LOSS340
     , SUM(DECODE(LOSS.LOSS_CODE,'1806',LOSS.LOSS_QTY,0))  LOSS341
     , SUM(DECODE(LOSS.LOSS_CODE,'1807',LOSS.LOSS_QTY,0))  LOSS342
     , SUM(DECODE(LOSS.LOSS_CODE,'1075',LOSS.LOSS_QTY,0))  LOSS343
     , SUM(DECODE(LOSS.LOSS_CODE,'1074',LOSS.LOSS_QTY,0))  LOSS344
     , SUM(DECODE(LOSS.LOSS_CODE,'1073',LOSS.LOSS_QTY,0))  LOSS345
     , SUM(DECODE(LOSS.LOSS_CODE,'1071',LOSS.LOSS_QTY,0))  LOSS346
     , SUM(DECODE(LOSS.LOSS_CODE,'1072',LOSS.LOSS_QTY,0))  LOSS347
     , SUM(DECODE(LOSS.LOSS_CODE,'1090',LOSS.LOSS_QTY,0))  LOSS348

  FROM ( 
        SELECT  ' ',  ' ', MAT.MAT_GRP_6, MAT.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', A.MAT_ID
             , A.LOT_ID AS LOT_ID 
             , TO_CHAR(TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')) AS IN_TIME 
             , TO_CHAR(TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss')) AS SHIP_TIME 
             , ROUND((TO_DATE(A.TRAN_TIME,'yyyymmddhh24miss') - TO_DATE(C.CREATE_TIME,'yyyymmddhh24miss')),2) AS TAT 
             , (  
                SELECT MIN(QTY_1)   
                  FROM RWIPLOTHIS  
                 WHERE FACTORY = 'HMVA2'  
                   AND OLD_OPER >= 'A1000'  
                   AND LOT_ID=A.LOT_ID  
                   AND TRAN_CODE IN ('END','SHIP')    
                   AND HIST_DEL_FLAG = ' '               
               ) AS BE_OUT 
             , A.QTY_1 AS OUT_QTY 
          FROM DT A
             , MWIPMATDEF MAT
             , RWIPLOTSTS C 
         WHERE 1=1
           AND A.MAT_ID=MAT.MAT_ID 
           AND A.LOT_ID=C.LOT_ID 
           AND MAT.FACTORY = 'HMVA2' 
       ) SUMMERY
     , (
        SELECT LOT_ID
             , LOSS_CODE
             , SUM(LOSS_QTY) AS LOSS_QTY 
             , SUM(CASE WHEN OPER < 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) IL_LOSS_QTY 
             , SUM(CASE WHEN OPER >= 'A1000' THEN LOSS_QTY 
                        ELSE 0 
                   END) BE_LOSS_QTY 
          FROM (
                SELECT LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
                   AND LOT_ID IN ( 
                                  SELECT LOT_ID 
                                    FROM DT 
                                 ) 
                UNION ALL 
                SELECT /*+ INDEX (LSM, RWIPLOTLSM_IDX02) */SPL.FROM_TO_LOT_ID AS LOT_ID, OPER, LOSS_CODE, LOSS_QTY
                  FROM RWIPLOTLSM LSM
                     , (
                        SELECT LOT_ID, FROM_TO_LOT_ID 
                          FROM RWIPLOTSTS 
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'  
                           AND LOT_TYPE = 'W' 
                           AND ADD_ORDER_ID_2 = 'MULTIEQP' 
                           AND FROM_TO_LOT_ID IN ( 
                                                  SELECT LOT_ID 
                                                    FROM DT 
                                                 ) 
                       ) SPL
                 WHERE 1=1
                   AND LSM.LOT_ID = SPL.LOT_ID
                   AND LSM.FACTORY = 'HMVA2'  
                   AND HIST_DEL_FLAG = ' '
               )
         GROUP BY LOT_ID,LOSS_CODE,LOSS_QTY
       ) LOSS
 WHERE SUMMERY.LOT_ID=LOSS.LOT_ID(+)
 GROUP BY  ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID
        , SUMMERY.LOT_ID,SUMMERY.IN_TIME,SUMMERY.SHIP_TIME, SUMMERY.TAT 
        , SUMMERY.BE_OUT, SUMMERY.OUT_QTY 
 ORDER BY   ' ',  ' ', SUMMERY.MAT_GRP_6, SUMMERY.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ', SUMMERY.MAT_ID,SUMMERY.LOT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1 
  FROM MWIPOPRDEF 
 WHERE 1=1 
   AND FACTORY='HMVA2'
   AND DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)) BETWEEN (SELECT OPER_CMF_2 FROM MWIPOPRDEF WHERE OPER = 'A0005') AND (SELECT OPER_CMF_2 FROM MWIPOPRDEF WHERE OPER = 'A2350') 
   AND OPER_CMF_4 <> ' ' 
 GROUP BY OPER_GRP_1
 ORDER BY TO_NUMBER(MIN(OPER_CMF_4)) ASC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DAT.OPER 
     , DAT.TOT_TAT 
 FROM( 
       SELECT TAT.OPER 
            , ROUND(SUM(TAT.TOTAL_TAT_QTY)/SUM(SHIP.SHIP_QTY),2) AS TOT_TAT 
        FROM( 
              SELECT TAT.MAT_ID 
                   , TAT.SHIP_DATE 
                   , OPR.OPER_GRP_1 AS OPER 
                   , SUM(TOTAL_TAT_QTY) AS TOTAL_TAT_QTY 
                FROM CSUMTATMAT@RPTTOMES TAT 
                   , MWIPOPRDEF OPR 
                   , MWIPMATDEF MAT 
               WHERE TAT.FACTORY = 'HMVA2'
                 AND TAT.FACTORY = MAT.FACTORY
                 AND TAT.MAT_ID = MAT.MAT_ID
                 AND MAT.MAT_VER = 1
                 AND TAT.TOTAL_TIME <> 0
                 AND OPR.OPER_GRP_1 NOT IN (' ')
                 AND TAT.FACTORY = OPR.FACTORY
                 AND OPR.OPER = TAT.OPER
                 AND TAT.OPER BETWEEN 'A0005' AND 'A2350'  
                 AND TAT.SHIP_DATE BETWEEN '20200801' AND '20200803' 
               GROUP BY TAT.MAT_ID, TAT.SHIP_DATE, OPR.OPER_GRP_1 
            ) TAT
          , (
              SELECT TAT.FACTORY 
                   , TAT.MAT_ID 
                   , TAT.SHIP_DATE AS WORK_DATE 
                   , SHIP_QTY 
                FROM CSUMTATMAT@RPTTOMES TAT 
                   , MWIPMATDEF MAT 
               WHERE 1=1      
                 AND TAT.FACTORY='HMVA2'      
                 AND TAT.FACTORY = MAT.FACTORY      
                 AND TAT.MAT_ID = MAT.MAT_ID      
                 AND MAT.DELETE_FLAG = ' '      
                 AND OPER ='AZ010'      
                 AND TAT.SHIP_DATE BETWEEN '20200801' AND '20200803' 
            ) SHIP     
        WHERE 1=1 
          AND TAT.MAT_ID = SHIP.MAT_ID 
          AND TAT.SHIP_DATE = SHIP.WORK_DATE 
        GROUP BY TAT.OPER 
     ) DAT
   , (
       SELECT * 
        FROM(  
              SELECT OPER_GRP_1 
                   , TO_NUMBER(OPER_CMF_4) 
                   , ROW_NUMBER() OVER(PARTITION BY TO_NUMBER(OPER_CMF_4) ORDER BY TO_NUMBER(OPER_CMF_4)) AS RN 
                FROM MWIPOPRDEF 
               WHERE OPER_CMF_4 != ' ' 
                 AND FACTORY = 'HMVA2' 
            )  
        WHERE RN=1  
     ) SORT
 WHERE DAT.OPER = SORT.OPER_GRP_1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '  
     , ROUND(SUM(CTOT),2) AS  CTOT 
     , ROUND(SUM(C0),2) AS C0
     , ROUND(SUM(CTAT_QTY0),2) AS CTAT_QTY0
     , ROUND(SUM(CSHIP_QTY0),2) AS CSHIP_QTY0
     , ROUND(SUM(C1),2) AS C1
     , ROUND(SUM(CTAT_QTY1),2) AS CTAT_QTY1
     , ROUND(SUM(CSHIP_QTY1),2) AS CSHIP_QTY1
     , ROUND(SUM(C2),2) AS C2
     , ROUND(SUM(CTAT_QTY2),2) AS CTAT_QTY2
     , ROUND(SUM(CSHIP_QTY2),2) AS CSHIP_QTY2
     , ROUND(SUM(C3),2) AS C3
     , ROUND(SUM(CTAT_QTY3),2) AS CTAT_QTY3
     , ROUND(SUM(CSHIP_QTY3),2) AS CSHIP_QTY3
     , ROUND(SUM(C4),2) AS C4
     , ROUND(SUM(CTAT_QTY4),2) AS CTAT_QTY4
     , ROUND(SUM(CSHIP_QTY4),2) AS CSHIP_QTY4
     , ROUND(SUM(C5),2) AS C5
     , ROUND(SUM(CTAT_QTY5),2) AS CTAT_QTY5
     , ROUND(SUM(CSHIP_QTY5),2) AS CSHIP_QTY5
     , ROUND(SUM(C6),2) AS C6
     , ROUND(SUM(CTAT_QTY6),2) AS CTAT_QTY6
     , ROUND(SUM(CSHIP_QTY6),2) AS CSHIP_QTY6
     , ROUND(SUM(C7),2) AS C7
     , ROUND(SUM(CTAT_QTY7),2) AS CTAT_QTY7
     , ROUND(SUM(CSHIP_QTY7),2) AS CSHIP_QTY7
     , ROUND(SUM(C8),2) AS C8
     , ROUND(SUM(CTAT_QTY8),2) AS CTAT_QTY8
     , ROUND(SUM(CSHIP_QTY8),2) AS CSHIP_QTY8
     , ROUND(SUM(C9),2) AS C9
     , ROUND(SUM(CTAT_QTY9),2) AS CTAT_QTY9
     , ROUND(SUM(CSHIP_QTY9),2) AS CSHIP_QTY9
     , ROUND(SUM(C10),2) AS C10
     , ROUND(SUM(CTAT_QTY10),2) AS CTAT_QTY10
     , ROUND(SUM(CSHIP_QTY10),2) AS CSHIP_QTY10
     , ROUND(SUM(C11),2) AS C11
     , ROUND(SUM(CTAT_QTY11),2) AS CTAT_QTY11
     , ROUND(SUM(CSHIP_QTY11),2) AS CSHIP_QTY11
     , ROUND(SUM(C12),2) AS C12
     , ROUND(SUM(CTAT_QTY12),2) AS CTAT_QTY12
     , ROUND(SUM(CSHIP_QTY12),2) AS CSHIP_QTY12
     , ROUND(SUM(C13),2) AS C13
     , ROUND(SUM(CTAT_QTY13),2) AS CTAT_QTY13
     , ROUND(SUM(CSHIP_QTY13),2) AS CSHIP_QTY13
     , ROUND(SUM(C14),2) AS C14
     , ROUND(SUM(CTAT_QTY14),2) AS CTAT_QTY14
     , ROUND(SUM(CSHIP_QTY14),2) AS CSHIP_QTY14
     , ROUND(SUM(C15),2) AS C15
     , ROUND(SUM(CTAT_QTY15),2) AS CTAT_QTY15
     , ROUND(SUM(CSHIP_QTY15),2) AS CSHIP_QTY15
     , ROUND(SUM(C16),2) AS C16
     , ROUND(SUM(CTAT_QTY16),2) AS CTAT_QTY16
     , ROUND(SUM(CSHIP_QTY16),2) AS CSHIP_QTY16
     , ROUND(SUM(C17),2) AS C17
     , ROUND(SUM(CTAT_QTY17),2) AS CTAT_QTY17
     , ROUND(SUM(CSHIP_QTY17),2) AS CSHIP_QTY17
  FROM ( 
        SELECT SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
             , ROUND(SUM(DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY)),2) AS  CTOT   
             , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C0
             , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', TAT_QTY, 0)), 2) AS CTAT_QTY0
             , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', SHIP_QTY, 0)), 2) AS CSHIP_QTY0
             , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C1
             , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', TAT_QTY, 0)), 2) AS CTAT_QTY1
             , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', SHIP_QTY, 0)), 2) AS CSHIP_QTY1
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C2
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', TAT_QTY, 0)), 2) AS CTAT_QTY2
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', SHIP_QTY, 0)), 2) AS CSHIP_QTY2
             , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C3
             , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', TAT_QTY, 0)), 2) AS CTAT_QTY3
             , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', SHIP_QTY, 0)), 2) AS CSHIP_QTY3
             , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C4
             , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', TAT_QTY, 0)), 2) AS CTAT_QTY4
             , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', SHIP_QTY, 0)), 2) AS CSHIP_QTY4
             , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C5
             , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', TAT_QTY, 0)), 2) AS CTAT_QTY5
             , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', SHIP_QTY, 0)), 2) AS CSHIP_QTY5
             , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C6
             , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', TAT_QTY, 0)), 2) AS CTAT_QTY6
             , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', SHIP_QTY, 0)), 2) AS CSHIP_QTY6
             , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C7
             , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', TAT_QTY, 0)), 2) AS CTAT_QTY7
             , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', SHIP_QTY, 0)), 2) AS CSHIP_QTY7
             , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C8
             , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', TAT_QTY, 0)), 2) AS CTAT_QTY8
             , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', SHIP_QTY, 0)), 2) AS CSHIP_QTY8
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C9
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', TAT_QTY, 0)), 2) AS CTAT_QTY9
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', SHIP_QTY, 0)), 2) AS CSHIP_QTY9
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C10
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', TAT_QTY, 0)), 2) AS CTAT_QTY10
             , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', SHIP_QTY, 0)), 2) AS CSHIP_QTY10
             , ROUND(SUM(DECODE(OPER_GRP_1, '-', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C11
             , ROUND(SUM(DECODE(OPER_GRP_1, '-', TAT_QTY, 0)), 2) AS CTAT_QTY11
             , ROUND(SUM(DECODE(OPER_GRP_1, '-', SHIP_QTY, 0)), 2) AS CSHIP_QTY11
             , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C12
             , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', TAT_QTY, 0)), 2) AS CTAT_QTY12
             , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', SHIP_QTY, 0)), 2) AS CSHIP_QTY12
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C13
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', TAT_QTY, 0)), 2) AS CTAT_QTY13
             , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', SHIP_QTY, 0)), 2) AS CSHIP_QTY13
             , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C14
             , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', TAT_QTY, 0)), 2) AS CTAT_QTY14
             , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', SHIP_QTY, 0)), 2) AS CSHIP_QTY14
             , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C15
             , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', TAT_QTY, 0)), 2) AS CTAT_QTY15
             , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', SHIP_QTY, 0)), 2) AS CSHIP_QTY15
             , ROUND(SUM(DECODE(OPER_GRP_1, 'BAKE', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C16
             , ROUND(SUM(DECODE(OPER_GRP_1, 'BAKE', TAT_QTY, 0)), 2) AS CTAT_QTY16
             , ROUND(SUM(DECODE(OPER_GRP_1, 'BAKE', SHIP_QTY, 0)), 2) AS CSHIP_QTY16
             , ROUND(SUM(DECODE(OPER_GRP_1, 'QC GATE', DECODE(SHIP_QTY, 0, 0, TAT_QTY/SHIP_QTY), 0)), 2) AS C17
             , ROUND(SUM(DECODE(OPER_GRP_1, 'QC GATE', TAT_QTY, 0)), 2) AS CTAT_QTY17
             , ROUND(SUM(DECODE(OPER_GRP_1, 'QC GATE', SHIP_QTY, 0)), 2) AS CSHIP_QTY17
          FROM (
                SELECT SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
                     , OPER_GRP_1 
                     , SUM(TAT_QTY) AS TAT_QTY 
                     , SUM(WAIT_TAT_QTY) AS WAIT_TAT_QTY 
                     , SUM(PROC_TAT_QTY) AS PROC_TAT_QTY 
                     , SUM(SHIP_QTY) AS SHIP_QTY 
                  FROM ( 
                        SELECT SHIP_DATE, (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1, TAT_QTY, WAIT_TAT_QTY, PROC_TAT_QTY, SHIP_QTY 
                          FROM ( 
                                SELECT SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
                                     , MAT.MAT_ID
                                     , OPR.OPER_GRP_1
                                     , SUM(TOTAL_TAT_QTY) AS TAT_QTY
                                     , SUM(WAIT_TAT_QTY) AS WAIT_TAT_QTY
                                     , SUM(PROC_TAT_QTY) AS PROC_TAT_QTY
                                  FROM CSUMTATMAT@RPTTOMES TAT 
                                     , MWIPMATDEF MAT 
                                     , MWIPOPRDEF OPR 
                                 WHERE 1=1 
                                   AND TAT.FACTORY = MAT.FACTORY    
                                   AND TAT.MAT_ID = MAT.MAT_ID      
                                   AND TAT.FACTORY = OPR.FACTORY     
                                   AND TAT.OPER = OPR.OPER     
                                   AND MAT.MAT_VER = 1     
                                   AND MAT.MAT_TYPE = 'FG' 
                                   AND MAT.DELETE_FLAG <> 'Y' 
                                   AND TAT.TOTAL_TIME <> 0     
                                   AND TAT.FACTORY = 'HMVA2'        
                                   AND OPR.OPER_GRP_1 NOT IN (' ')     
                                   AND TAT.OPER BETWEEN 'A0005' AND 'A2350' 
                                   AND TAT.SHIP_DATE BETWEEN '20200801' AND '20200803' 
                                 GROUP BY SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID, OPER_GRP_1  
                               ) TAT    
                             , (      
                                SELECT TAT.FACTORY 
                                     , TAT.MAT_ID 
                                     , TAT.SHIP_DATE AS WORK_DATE 
                                     , SHIP_QTY 
                                  FROM CSUMTATMAT@RPTTOMES TAT     
                                 WHERE 1=1      
                                   AND TAT.FACTORY='HMVA2'      
                                   AND OPER ='AZ010'      
                                   AND TAT.SHIP_DATE BETWEEN '20200801' AND '20200803' 
                               ) B      
                         WHERE 1=1     
                           AND TAT.MAT_ID = B.MAT_ID     
                           AND TAT.SHIP_DATE = B.WORK_DATE     
                       ) 
                 GROUP BY SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
               ) 
         GROUP BY SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
       ) 
 GROUP BY SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 ORDER BY SHIP_DATE, MAT_GRP_1, MAT_CMF_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200801220000' AND '20200802215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200801220000' AND '20200802215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520E_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR, (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 2, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((2 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 29 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(RESV_FIELD1) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200802', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200802' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200802', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200802'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS_BOH A 
                                     , MWIPOPRDEF B 
                                     , VWIPMATDEF C 
                                 WHERE A.CUTOFF_DT = '2020080222' 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200802'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9, A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9, DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 3),CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520L_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520E_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.CUST_TYPE, A.MAT_GRP_9 AS MAJOR,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(MON_PLN) / 1000, 0) AS MON_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND((SUM(SHP_TTL) / (SUM(MON_PLN) / 31)) - 3, 1)
       END AS SHP_JINDO
     , ROUND((SUM(SHP_TTL) + SUM(WIP_TTL)) / 1000, 0) AS RCV_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(( ((SUM(SHP_TTL) + SUM(WIP_TTL)) / SUM(MON_PLN)) - ((3 + 5) / 31) ) * 31, 1)
       END AS RCV_JINDO
     , ROUND(SUM(WIP_TTL) / 1000, 0) AS WIP_TTL
     , CASE WHEN SUM(MON_PLN) = 0 THEN 0
            ELSE ROUND(SUM(WIP_TTL) / (SUM(MON_PLN) / 31), 1)
       END AS WIP_DAY
     , ROUND((SUM(MON_PLN) - SUM(SHP_TTL)) / 28.5357750142292 / 1000, 0) AS TARGET_QTY
     , ROUND(SUM(RCV_TODAY) / 1000, 0) AS RCV_TODAY
     , ROUND(SUM(OUT_DP) / 1000, 0) AS OUT_DP
     , ROUND(SUM(OUT_DA) / 1000, 0) AS OUT_DA
     , ROUND(SUM(OUT_WB) / 1000, 0) AS OUT_WB
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
  FROM (
        SELECT NVL((SELECT DATA_10 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND FACTORY = 'HMVA2' AND  KEY_1 = MAT_GRP_1), '-') AS CUST_TYPE
             , MAT.CONV_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
             , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.MON_PLN/MAT.NET_DIE,0) ELSE PLN.MON_PLN END, 0) * PRICE AS MON_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL 
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TTL/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TTL,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TTL
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_TODAY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_TODAY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_TODAY
             , NVL(WIP.WIP_TTL,0) * PRICE AS WIP_TTL
             , NVL(WIP.WIP_AZ010,0) * PRICE AS WIP_AZ010
             , NVL(OUT_DP,0) * PRICE AS OUT_DP
             , NVL(OUT_DA,0) * PRICE AS OUT_DA
             , NVL(OUT_WB,0) * PRICE AS OUT_WB
             , NVL(OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 NOT IN ('-', 'PW') 
               ) MAT
             , (                
                SELECT MAT_ID
                     , SUM(PLAN_QTY_ASSY) AS MON_PLN
                  FROM (
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                          FROM CWIPPLNMON 
                         WHERE 1=1 
                           AND FACTORY = 'HMVA2'
                           AND PLAN_MONTH = '202008'
                         GROUP BY MAT_ID 
                       ) 
                 GROUP BY MAT_ID
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(SHP_QTY_1) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) SHP
             , (
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200803', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200803'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID
                 UNION ALL
                SELECT MAT_ID
                     , SUM(RCV_QTY_1) AS RCV_TTL
                     , SUM(DECODE(WORK_DATE, '20200803', RCV_QTY_1, 0)) AS RCV_TODAY
                  FROM VSUMWIPRCV_HX
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE BETWEEN '20200801' AND '20200803'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER, 'AZ010', QTY, 0)) AS WIP_AZ010
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                     , A.HOLD_CODE 
                                     , CASE WHEN A.HOLD_CODE = 'H72' AND A.OPER = 'A0000' THEN 'Y' ELSE 'N' END AS CK_STOCK_H72 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' '
                                   AND A.HOLD_CODE NOT IN ('H71','H54') 
                               )
                         WHERE CK_STOCK_H72 = 'N'
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN QTY
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA                     
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN QTY ELSE 0 END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200803'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID NOT LIKE 'HX%'
                                         UNION ALL
                                        SELECT A.OPER
                                             , (S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1) AS END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200803'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%' 
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0200|A0230|A0333|A040*|A060*|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                           AND A.MAT_ID LIKE 'HX%'
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
       ) A
 GROUP BY A.CUST_TYPE, A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
 HAVING SUM(MON_PLN) + SUM(SHP_TTL) + SUM(WIP_TTL) + SUM(RCV_TODAY) + SUM(OUT_DP) + SUM(OUT_DA) + SUM(OUT_WB) + SUM(OUT_CLOSE) + SUM(SHP_TODAY) <> 0
 ORDER BY DECODE(CUST_TYPE, 'SEC', 1, 'Hynix', 2, 'Fabless', 3, 4), A.MAT_GRP_9,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , ROUND(SUM(TOTAL)/1, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_MONTH, '202006', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_MONTH,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('AZ010')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_MONTH BETWEEN '202006' AND '202006' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , ROUND(SUM(TOTAL)/1, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_MONTH, '202006', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_MONTH,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('AZ010')
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'E%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_MONTH BETWEEN '202006' AND '202006' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , ROUND(SUM(TOTAL)/1, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_MONTH, '202006', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_MONTH,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_MONTH, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('AZ010')
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_MONTH BETWEEN '202006' AND '202006' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011011'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200726220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200726220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520E_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ', CONV_MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , ROUND(SUM(PLAN)/1,0) AS PLAN 
     , ROUND(SUM(SHP)/1,0) AS SHP 
     , ROUND(SUM(DEF)/1,0) AS DEF 
     , GUBUN 
     , ROUND(SUM(HMK3A)/1,0) AS HMK3A 
     , ROUND(SUM(QC_GATE)/1,0) AS QC_GATE 
     , ROUND(SUM(PVI)/1,0) AS PVI 
     , ROUND(SUM(AVI)/1,0) AS AVI 
     , ROUND(SUM(SIG)/1,0) AS SIG 
     , ROUND(SUM(SBA)/1,0) AS SBA 
     , ROUND(SUM(TIN)/1,0) AS TIN 
     , ROUND(SUM(TRIM)/1,0) AS TRIM 
     , ROUND(SUM(MK)/1,0) AS MK 
     , ROUND(SUM(CURE)/1,0) AS CURE 
     , ROUND(SUM(MOLD)/1,0) AS MOLD 
     , ROUND(SUM(GATE)/1,0) AS GATE 
     , ROUND(SUM(WB9)/1,0) AS WB9 
     , ROUND(SUM(DA9)/1,0) AS DA9 
     , ROUND(SUM(WB8)/1,0) AS WB8 
     , ROUND(SUM(DA8)/1,0) AS DA8 
     , ROUND(SUM(WB7)/1,0) AS WB7 
     , ROUND(SUM(DA7)/1,0) AS DA7 
     , ROUND(SUM(WB6)/1,0) AS WB6 
     , ROUND(SUM(DA6)/1,0) AS DA6 
     , ROUND(SUM(WB5)/1,0) AS WB5 
     , ROUND(SUM(DA5)/1,0) AS DA5 
     , ROUND(SUM(WB4)/1,0) AS WB4 
     , ROUND(SUM(DA4)/1,0) AS DA4 
     , ROUND(SUM(WB3)/1,0) AS WB3 
     , ROUND(SUM(DA3)/1,0) AS DA3 
     , ROUND(SUM(WB2)/1,0) AS WB2 
     , ROUND(SUM(DA2)/1,0) AS DA2 
     , ROUND(SUM(WB1)/1,0) AS WB1 
     , ROUND(SUM(DA1)/1,0) AS DA1 
     , ROUND(SUM(SP)/1,0) AS SP 
     , ROUND(SUM(SAW)/1,0) AS SAW 
     , ROUND(SUM(BG)/1,0) AS BG 
     , ROUND(SUM(HMK2A)/1,0) AS HMK2A 
     , ROUND(SUM(WIP_DEF)/1,0) AS WIP_DEF 
  FROM (  
        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
             , MAX(PLAN) AS PLAN 
             , MAX(SHP) AS SHP 
             , MAX(DEF) AS DEF 
             , SUM(DECODE(OPER_GRP_1, 'HMK3A', SUM_DEF, 0)) AS HMK3A 
             , SUM(DECODE(OPER_GRP_1, 'QC_GATE', SUM_DEF, 0)) AS QC_GATE 
             , SUM(DECODE(OPER_GRP_1, 'PVI', SUM_DEF, 0)) AS PVI 
             , SUM(DECODE(OPER_GRP_1, 'AVI', SUM_DEF, 0)) AS AVI 
             , SUM(DECODE(OPER_GRP_1, 'SIG', SUM_DEF, 0)) AS SIG 
             , SUM(DECODE(OPER_GRP_1, 'SBA', SUM_DEF, 0)) AS SBA 
             , SUM(DECODE(OPER_GRP_1, 'TIN', SUM_DEF, 0)) AS TIN 
             , SUM(DECODE(OPER_GRP_1, 'TRIM', SUM_DEF, 0)) AS TRIM 
             , SUM(DECODE(OPER_GRP_1, 'MK', SUM_DEF, 0)) AS MK 
             , SUM(DECODE(OPER_GRP_1, 'CURE', SUM_DEF, 0)) AS CURE 
             , SUM(DECODE(OPER_GRP_1, 'MOLD', SUM_DEF, 0)) AS MOLD 
             , SUM(DECODE(OPER_GRP_1, 'GATE', SUM_DEF, 0)) AS GATE 
             , SUM(DECODE(OPER_GRP_1, 'WB9', SUM_DEF, 0)) AS WB9 
             , SUM(DECODE(OPER_GRP_1, 'DA9', SUM_DEF, 0)) AS DA9 
             , SUM(DECODE(OPER_GRP_1, 'WB8', SUM_DEF, 0)) AS WB8 
             , SUM(DECODE(OPER_GRP_1, 'DA8', SUM_DEF, 0)) AS DA8 
             , SUM(DECODE(OPER_GRP_1, 'WB7', SUM_DEF, 0)) AS WB7 
             , SUM(DECODE(OPER_GRP_1, 'DA7', SUM_DEF, 0)) AS DA7 
             , SUM(DECODE(OPER_GRP_1, 'WB6', SUM_DEF, 0)) AS WB6 
             , SUM(DECODE(OPER_GRP_1, 'DA6', SUM_DEF, 0)) AS DA6 
             , SUM(DECODE(OPER_GRP_1, 'WB5', SUM_DEF, 0)) AS WB5 
             , SUM(DECODE(OPER_GRP_1, 'DA5', SUM_DEF, 0)) AS DA5 
             , SUM(DECODE(OPER_GRP_1, 'WB4', SUM_DEF, 0)) AS WB4 
             , SUM(DECODE(OPER_GRP_1, 'DA4', SUM_DEF, 0)) AS DA4 
             , SUM(DECODE(OPER_GRP_1, 'WB3', SUM_DEF, 0)) AS WB3 
             , SUM(DECODE(OPER_GRP_1, 'DA3', SUM_DEF, 0)) AS DA3 
             , SUM(DECODE(OPER_GRP_1, 'WB2', SUM_DEF, 0)) AS WB2 
             , SUM(DECODE(OPER_GRP_1, 'DA2', SUM_DEF, 0)) AS DA2 
             , SUM(DECODE(OPER_GRP_1, 'WB1', SUM_DEF, 0)) AS WB1 
             , SUM(DECODE(OPER_GRP_1, 'DA1', SUM_DEF, 0)) AS DA1 
             , SUM(DECODE(OPER_GRP_1, 'SP', SUM_DEF, 0)) AS SP 
             , SUM(DECODE(OPER_GRP_1, 'SAW', SUM_DEF, 0)) AS SAW 
             , SUM(DECODE(OPER_GRP_1, 'BG', SUM_DEF, 0)) AS BG 
             , SUM(DECODE(OPER_GRP_1, 'HMK2A',SUM_DEF, 0)) AS HMK2A 
             , MAX(WIP_TTL) AS WIP_TTL 
             , MAX(DEF) - MAX(WIP_TTL) AS WIP_DEF 
          FROM ( 
                SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
                     , OPER_GRP_1 
                     , DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') AS GUBUN 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_PLAN, 6, D1_PLAN, 7, D2_PLAN, 8, WEEK_PLAN, 9, WEEK2_PLAN, 10, MON_PLAN)) AS PLAN  
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, SHP_TODAY, 6, SHP_D1, 7, SHP_D2, 8, SHP_WEEK, 9, SHP2_WEEK, 10, SHP_MONTH)) AS SHP 
                     , SUM(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, 5, D0_DEF, 6, D1_DEF, 7, D2_DEF, 8, WEEK_DEF, 9, WEEK2_DEF, 10, MONTH_DEF)) AS DEF 
                     , SUM(DECODE(SEQ, 1, WIP_QTY, 2, RES_CNT, 3, RES_CAPA, 4, ASSY_END_QTY, 5, D0_SUM_QUANTITY, 6, D1_SUM_QUANTITY, 7, D2_SUM_QUANTITY, 8, WEEK_SUM_QUANTITY, 9, WEEK2_SUM_QUANTITY, 10, MONTH_SUM_QUANTITY)) AS SUM_DEF 
                     , MAX(DECODE(SEQ, 1, 0, 2, 0, 3, 0, 4, 0, WIP_TTL)) AS WIP_TTL 
                  FROM ( 
                        SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                             , SUM(NVL(D0_PLAN,0)) AS D0_PLAN, SUM(NVL(SHP_TODAY,0)) AS SHP_TODAY, SUM(NVL(D0_DEF,0)) AS D0_DEF 
                             , SUM(NVL(D1_PLAN,0)) AS D1_PLAN, SUM(NVL(SHP_D1,0)) AS SHP_D1, SUM(NVL(D1_DEF,0)) AS D1_DEF 
                             , SUM(NVL(D2_PLAN,0)) AS D2_PLAN, SUM(NVL(SHP_D2,0)) AS SHP_D2, SUM(NVL(D2_DEF,0)) AS D2_DEF 
                             , SUM(NVL(WEEK_PLAN,0)) AS WEEK_PLAN, SUM(NVL(SHP_WEEK,0)) AS SHP_WEEK, SUM(NVL(WEEK_DEF,0)) AS WEEK_DEF 
                             , SUM(NVL(WEEK2_PLAN,0)) AS WEEK2_PLAN, SUM(NVL(SHP2_WEEK,0)) AS SHP2_WEEK, SUM(NVL(WEEK2_DEF,0)) AS WEEK2_DEF 
                             , SUM(NVL(MON_PLAN,0)) AS MON_PLAN, SUM(NVL(SHP_MONTH,0)) AS SHP_MONTH, SUM(NVL(MONTH_DEF,0)) AS MONTH_DEF 
                             , SUM(NVL(ASSY_END_QTY,0)) AS ASSY_END_QTY 
                             , SUM(NVL(WIP_QTY,0)) AS WIP_QTY 
                             , SUM(SUM(WIP_QTY)) OVER(PARTITION BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS WIP_TTL 
                             , SUM(RES_CNT) AS RES_CNT 
                             , SUM(RES_CAPA) AS RES_CAPA 
                             , SUM(NVL(D0_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D0_SUM_QUANTITY 
                             , SUM(NVL(D1_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D1_SUM_QUANTITY 
                             , SUM(NVL(D2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS D2_SUM_QUANTITY 
                             , SUM(NVL(WEEK_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK_SUM_QUANTITY 
                             , SUM(NVL(WEEK2_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS WEEK2_SUM_QUANTITY 
                             , SUM(NVL(MONTH_DEF-WIP_SUM_QUANTITY+WIP_QTY,0)) AS MONTH_SUM_QUANTITY 
                          FROM ( 
                                SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_CMF_7, MAT.MAT_CMF_8, MAT.MAT_CMF_11, MAT.MAT_ID, MAT.CONV_MAT_ID, MAT.OPER_GRP_1 
                                     , A.D0_PLAN, A.SHP_TODAY, A.D0_DEF 
                                     , A.D1_PLAN, A.SHP_D1, A.D1_DEF 
                                     , A.D2_PLAN, A.SHP_D2, A.D2_DEF 
                                     , A.WEEK_PLAN, A.SHP_WEEK, A.WEEK_DEF 
                                     , A.WEEK2_PLAN, A.SHP2_WEEK, A.WEEK2_DEF 
                                     , A.MON_PLAN, A.SHP_MONTH, A.MONTH_DEF 
                                     , A.D0_ORI_PLAN 
                                     , NVL(B.ASSY_END_QTY,0) AS ASSY_END_QTY 
                                     , MAX(NVL(B.ASSY_END_QTY,0)) OVER(PARTITION BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ') AS CHK_ASSY_END_QTY 
                                     , NVL(WIP.QTY,0) AS WIP_QTY 
                                     , RES_CNT 
                                     , RES_CAPA 
                                     , SUM(NVL(WIP.QTY,0)) OVER(PARTITION BY A.MAT_ID ORDER BY MAT.MAT_ID, DECODE(MAT.OPER_GRP_1, 'HMK3A', 1, 'QC_GATE', 2, 'PVI', 3, 'AVI', 4, 'SIG', 5, 'SBA', 6, 'TIN', 7, 'TRIM', 8, 'MK', 9, 'CURE', 10, 'MOLD', 11, 'GATE', 12 
                                                                                                                                , 'WB9', 13, 'DA9', 14, 'WB8', 15, 'DA8', 16, 'WB7', 17, 'DA7', 18, 'WB6', 19, 'DA6', 20, 'WB5', 21, 'DA5', 22, 'WB4', 23, 'DA4', 24 
                                                                                                                                , 'WB3', 25, 'DA3', 26, 'WB2', 27, 'DA2', 28, 'WB1', 29, 'DA1', 30, 'SP', 31, 'SAW', 32, 'BG', 33, 'HMK2A',34, 35)) AS WIP_SUM_QUANTITY 
                                  FROM ( 
                                        SELECT MAT_GRP_1, MAT_GRP_2, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_7, MAT_CMF_8, MAT_CMF_11, MAT_ID, OPER_GRP_1 
                                             , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT_ID, -3) 
                                                    WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                                                    ELSE MAT_ID 
                                                END CONV_MAT_ID 
                                          FROM ( 
                                                SELECT * 
                                                  FROM (
                                                        SELECT A.* 
                                                          FROM MWIPMATDEF A
                                                         WHERE 1=1 
                                                           AND FACTORY = 'HMVA2' 
                                                           AND DELETE_FLAG = ' ' 
                                                           AND MAT_TYPE = 'FG' 
                                                           AND MAT_ID LIKE '%' 
                                                           AND MAT_GRP_10 NOT LIKE 'COB%' 
                                                       ) 
                                               ) 
                                             , ( 
                                                SELECT DECODE(LEVEL, 1, 'HMK3A', 2, 'QC_GATE', 3, 'PVI', 4, 'AVI', 5, 'SIG', 6, 'SBA', 7, 'TIN', 8, 'TRIM', 9, 'MK', 10, 'CURE', 11, 'MOLD', 12, 'GATE' 
                                                                   , 13, 'WB9', 14, 'DA9', 15, 'WB8', 16, 'DA8', 17, 'WB7', 18, 'DA7', 19, 'WB6', 20, 'DA6', 21, 'WB5', 22, 'DA5', 23, 'WB4', 24, 'DA4'
                                                                   , 25, 'WB3', 26, 'DA3', 27, 'WB2', 28, 'DA2', 29, 'WB1', 30, 'DA1', 31, 'SP', 32, 'SAW', 33, 'BG', 34, 'HMK2A' 
                                                             ) OPER_GRP_1 
                                                  FROM DUAL CONNECT BY LEVEL <= 34 
                                               ) 
                                       ) MAT 
                                     , ( 
                                        SELECT MAT.MAT_ID 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) AS D0_PLAN 
                                             , SUM(NVL(D0_PLAN, 0)) AS D0_ORI_PLAN 
                                             , SUM(NVL(SHP_TODAY, 0)) AS SHP_TODAY 
                                             , SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D0_DEF 
                                             , SUM(NVL(D1_PLAN, 0)) AS D1_PLAN 
                                             , 0 AS SHP_D1 
                                             , SUM(NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D1_DEF 
                                             , SUM(NVL(D2_PLAN, 0)) AS D2_PLAN 
                                             , 0 AS SHP_D2 
                                             , SUM(NVL(D2_PLAN, 0) + NVL(D1_PLAN, 0) + NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) AS D2_DEF 
                                             , SUM(NVL(WEEK1_PLAN, 0)) AS WEEK_PLAN 
                                             , SUM(NVL(SHP_WEEK, 0)) AS SHP_WEEK 
                                             , SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK_DEF 
                                             , SUM(NVL(WEEK2_PLAN, 0)) AS WEEK2_PLAN 
                                             , 0 AS SHP2_WEEK 
                                             , SUM(NVL(WEEK2_PLAN, 0) + NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) AS WEEK2_DEF 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(MON.RESV_FIELD1/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0) 
                                                    ELSE MON.RESV_FIELD1 
                                                END,0)) MON_PLAN 
                                             , SUM(NVL(SHP_MONTH, 0)) AS SHP_MONTH 
                                             , SUM(NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(NVL(MON.RESV_FIELD1,0)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)-NVL(SHP_MONTH, 0) 
                                                    ELSE NVL(MON.RESV_FIELD1, 0)-NVL(SHP_MONTH, 0) 
                                                END,0)) MONTH_DEF 
                                          FROM MWIPMATDEF MAT 
                                             , ( 
                                                SELECT FACTORY, MAT_ID 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                                                ELSE 0 
                                                           END) AS WEEK1_TTL 
                                                     , SUM(W1_QTY) AS WEEK1_PLAN 
                                                     , SUM(W2_QTY) AS WEEK2_PLAN 
                                                     , SUM(NVL(W1_QTY,0) + NVL(W2_QTY,0)) AS WEEK_TTL 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D6_QTY 
                                                                ELSE 0 
                                                           END) AS D0_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D1_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D7_QTY 
                                                                ELSE 0 
                                                           END) AS D1_PLAN 
                                                     , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D8_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D7_QTY 
                                                                WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D8_QTY 
                                                                ELSE 0 
                                                           END) AS D2_PLAN 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, 'OTD' AS CALENDAR_ID 
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID NOT LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202032','202033') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                         UNION ALL 
                                                        SELECT FACTORY, MAT_ID, 'SE' AS CALENDAR_ID  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D0_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D2_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D3_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D4_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D5_QTY, 0)) AS D5_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', D6_QTY, 0)) AS D6_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D0_QTY, 0)) AS D7_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D1_QTY, 0)) AS D8_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D2_QTY, 0)) AS D9_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D3_QTY, 0)) AS D10_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D4_QTY, 0)) AS D11_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D5_QTY, 0)) AS D12_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', D6_QTY, 0)) AS D13_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS W1_QTY  
                                                             , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS W2_QTY  
                                                          FROM RWIPPLNWEK  
                                                         WHERE 1=1  
                                                           AND FACTORY = 'HMVA2'  
                                                           AND GUBUN = '3'  
                                                           AND MAT_ID LIKE 'SES%' 
                                                           AND PLAN_WEEK IN ('202032','202033') 
                                                         GROUP BY FACTORY, MAT_ID  
                                                       )  
                                                 GROUP BY FACTORY, MAT_ID  
                                               ) PLN 
                                             , (  
                                                SELECT FACTORY,MAT_ID, RESV_FIELD1  
                                                  FROM (  
                                                        SELECT FACTORY, MAT_ID, SUM(RESV_FIELD1) AS RESV_FIELD1   
                                                          FROM (  
                                                                SELECT FACTORY, MAT_ID, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1  
                                                                  FROM CWIPPLNMON  
                                                                 WHERE 1=1  
                                                                   AND FACTORY = 'HMVA2'  
                                                                   AND PLAN_MONTH = '202008' 
                                                                 GROUP BY FACTORY, MAT_ID 
                                                               )  
                                                         GROUP BY FACTORY, MAT_ID 
                                                       ) 
                                               ) MON 
                                             , (  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200803' AND '20200803' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) 
                                                                ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200803' AND '20200802' THEN NVL(SHP_QTY_1, 0)  
                                                                WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200801' AND '20200802' THEN NVL(SHP_QTY_1, 0)  
                                                                ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID NOT LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN LEAST('20200801', '20200801', '20200803') AND '20200803' 
                                                 GROUP BY MAT_ID  
                                                 UNION ALL  
                                                SELECT MAT_ID  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK  
                                                     , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200801' AND '20200802' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK_TTL  
                                                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
                                                  FROM VSUMWIPOUT_06 
                                                 WHERE 1=1  
                                                   AND FACTORY  = 'HMVA2'  
                                                   AND LOT_TYPE = 'W'  
                                                   AND CM_KEY_2 = 'PROD'  
                                                   AND CM_KEY_3 LIKE 'P%'
                                                   AND MAT_ID LIKE 'HX%'  
                                                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                                                 GROUP BY MAT_ID 
                                               ) SHP 
                                         WHERE 1=1 
                                           AND MAT.FACTORY = 'HMVA2' 
                                           AND MAT.MAT_TYPE = 'FG' 
                                           AND MAT.DELETE_FLAG = ' ' 
                                           AND MAT.MAT_ID = PLN.MAT_ID(+) 
                                           AND MAT.MAT_ID = MON.MAT_ID(+) 
                                           AND MAT.MAT_ID = SHP.MAT_ID(+) 
                                         GROUP BY MAT.MAT_ID 
                                         ORDER BY MAT.MAT_ID 
                                       ) A 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1 
                                             , SUM(ASSY_END_QTY) AS ASSY_END_QTY 
                                          FROM ( 
                                                SELECT B.MAT_ID 
                                                     , CASE WHEN OPER IN ('A0000', 'A000N') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'HMK2A' 
                                                            WHEN OPER IN ('A0040') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'BG' 
                                                            WHEN OPER IN ('A0200', 'A0230') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'SAW' 
                                                            WHEN OPER IN ('A0400', 'A0401', 'A0333') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA1' 
                                                            WHEN OPER IN ('A0402') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA2' 
                                                            WHEN OPER IN ('A0403') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA3' 
                                                            WHEN OPER IN ('A0404') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA4' 
                                                            WHEN OPER IN ('A0405') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA5' 
                                                            WHEN OPER IN ('A0406') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA6' 
                                                            WHEN OPER IN ('A0407') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA7' 
                                                            WHEN OPER IN ('A0408') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA8' 
                                                            WHEN OPER IN ('A0409') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'DA9' 
                                                            WHEN OPER IN ('A0600','A0601') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB1' 
                                                            WHEN OPER IN ('A0602') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB2' 
                                                            WHEN OPER IN ('A0603') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB3' 
                                                            WHEN OPER IN ('A0604') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB4' 
                                                            WHEN OPER IN ('A0605') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB5' 
                                                            WHEN OPER IN ('A0606') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB6' 
                                                            WHEN OPER IN ('A0607') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB7' 
                                                            WHEN OPER IN ('A0608') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB8' 
                                                            WHEN OPER IN ('A0609') AND (MAT_GRP_5 IN ('-', '1st', 'Merge') OR MAT_GRP_5 LIKE 'Middle%') THEN 'WB9' 
                                                            WHEN OPER IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') AND MAT_GRP_5 IN ('-', 'Merge') THEN 'GATE' 
                                                            WHEN OPER IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN OPER IN ('A1100') THEN 'CURE' 
                                                            WHEN OPER IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN OPER IN ('A1200') THEN 'TRIM' 
                                                            WHEN OPER IN ('A1450') THEN 'TIN' 
                                                            WHEN OPER IN ('A1300') THEN 'SBA' 
                                                            WHEN OPER IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN OPER IN ('A2000') THEN 'AVI' 
                                                            WHEN OPER IN ('A2050') THEN 'PVI' 
                                                            WHEN OPER IN ('A2100') THEN 'QC_GATE' 
                                                            WHEN OPER IN ('AZ010') THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                     , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) ASSY_END_QTY 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                             , SUM(END_LOT) AS END_LOT 
                                                             , SUM(END_QTY_1) AS END_QTY_1 
                                                             , SUM(END_QTY_2) AS END_QTY_2 
                                                             , SUM(CASE WHEN SHIP_QTY_1 > 0 THEN SHIP_QTY_1 ELSE 0 END) AS SHIP_QTY_1 
                                                             , SUM(CASE WHEN SHIP_QTY_2 > 0 THEN SHIP_QTY_2 ELSE 0 END) AS SHIP_QTY_2 
                                                          FROM ( 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM RSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID NOT LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1 
                                                                     , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2 
                                                                     , 0 SHIP_QTY_1 
                                                                     , 0 SHIP_QTY_2 
                                                                  FROM CSUMWIPMOV 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND OPER NOT IN ('AZ010') 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                 UNION ALL 
                                                                SELECT FACTORY, MAT_ID 
                                                                     , 'AZ010' AS OPER 
                                                                     , LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                                     , 0 END_LOT 
                                                                     , 0 END_QTY_1 
                                                                     , 0 END_QTY_2 
                                                                     , SUM(SHP_QTY_1) SHIP_QTY_1 
                                                                     , SUM(SHP_QTY_2) SHIP_QTY_2 
                                                                  FROM VSUMWIPOUT_06 
                                                                 WHERE FACTORY = 'HMVA2' 
                                                                   AND MAT_ID LIKE 'HX%' 
                                                                 GROUP BY FACTORY, MAT_ID, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                               ) 
                                                         GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, WORK_DATE, CM_KEY_3 
                                                       ) A 
                                                     , MWIPMATDEF B 
                                                 WHERE 1=1 
                                                   AND A.FACTORY  = 'HMVA2' 
                                                   AND A.FACTORY = B.FACTORY 
                                                   AND A.MAT_ID = B.MAT_ID 
                                                   AND B.MAT_TYPE = 'FG' 
                                                   AND A.MAT_ID LIKE '%' 
                                                   AND A.CM_KEY_3 LIKE 'P%'
                                                   AND A.OPER NOT IN ('00001','00002') 
                                                   AND A.WORK_DATE = '20200803' 
                                                 ) 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(ASSY_END_QTY) > 0 
                                       ) B 
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1, SUM(NVL(QTY,0)) QTY 
                                          FROM (  
                                                SELECT MAT_ID 
                                                     , QTY 
                                                     , CASE WHEN OPER_GRP_8 = 'HMK2A' THEN 'HMK2A' 
                                                            WHEN OPER_GRP_8 = 'B/G' THEN 'BG' 
                                                            WHEN OPER_GRP_8 = 'SAW' THEN 'SAW' 
                                                            WHEN OPER_GRP_8 = 'S/P' THEN 'SP' 
                                                            WHEN OPER_GRP_8 IN ('D/A1', 'D/A1 CURE') THEN 'DA1' 
                                                            WHEN OPER_GRP_8 IN ('D/A2', 'D/A2 CURE') THEN 'DA2' 
                                                            WHEN OPER_GRP_8 IN ('D/A3', 'D/A3 CURE') THEN 'DA3' 
                                                            WHEN OPER_GRP_8 IN ('D/A4', 'D/A4 CURE') THEN 'DA4' 
                                                            WHEN OPER_GRP_8 IN ('D/A5', 'D/A5 CURE') THEN 'DA5' 
                                                            WHEN OPER_GRP_8 IN ('D/A6', 'D/A6 CURE') THEN 'DA6' 
                                                            WHEN OPER_GRP_8 IN ('D/A7', 'D/A7 CURE') THEN 'DA7' 
                                                            WHEN OPER_GRP_8 IN ('D/A8', 'D/A8 CURE') THEN 'DA8' 
                                                            WHEN OPER_GRP_8 IN ('D/A9', 'D/A9 CURE') THEN 'DA9' 
                                                            WHEN OPER_GRP_8 = 'W/B1' THEN 'WB1' 
                                                            WHEN OPER_GRP_8 = 'W/B2' THEN 'WB2' 
                                                            WHEN OPER_GRP_8 = 'W/B3' THEN 'WB3' 
                                                            WHEN OPER_GRP_8 = 'W/B4' THEN 'WB4' 
                                                            WHEN OPER_GRP_8 = 'W/B5' THEN 'WB5' 
                                                            WHEN OPER_GRP_8 = 'W/B6' THEN 'WB6' 
                                                            WHEN OPER_GRP_8 = 'W/B7' THEN 'WB7' 
                                                            WHEN OPER_GRP_8 = 'W/B8' THEN 'WB8' 
                                                            WHEN OPER_GRP_8 = 'W/B9' THEN 'WB9' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_5 = '-' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 = 'HX' THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'GATE' AND MAT_GRP_1 NOT IN ('SE','HX') AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN 'GATE' 
                                                            WHEN OPER_GRP_8 = 'MOLD' THEN 'MOLD' 
                                                            WHEN OPER_GRP_8 = 'CURE' THEN 'CURE' 
                                                            WHEN OPER_GRP_8 = 'M/K' THEN 'MK' 
                                                            WHEN OPER_GRP_8 = 'TRIM' THEN 'TRIM' 
                                                            WHEN OPER_GRP_8 = 'TIN' THEN 'TIN' 
                                                            WHEN OPER_GRP_8 = 'S/B/A' THEN 'SBA' 
                                                            WHEN OPER_GRP_8 = 'SIG' THEN 'SIG' 
                                                            WHEN OPER_GRP_8 = 'AVI' THEN 'AVI' 
                                                            WHEN OPER_GRP_8 = 'V/I' THEN 'PVI' 
                                                            WHEN OPER_GRP_8 = 'QC GATE' THEN 'QC_GATE' 
                                                            WHEN OPER_GRP_8 = 'HMK3A' THEN 'HMK3A' 
                                                            ELSE ' ' 
                                                        END OPER_GRP_1 
                                                  FROM ( 
                                                        SELECT MAT_ID, OPER, OPER_GRP_8, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_10 
                                                             , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                                         WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                                         ELSE QTY_1 END)
                                                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                                                    ELSE QTY_1 
                                                               END QTY 
                                                          FROM ( 
                                                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_8, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, C.MAT_GRP_10 
                                                                     , CASE WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END 
                                                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/TO_NUMBER(DECODE(MAT_CMF_13, ' ', 1, '-', 1, MAT_CMF_13)),0) 
                                                                            ELSE QTY_1 
                                                                       END AS QTY_1 
                                                                     , COMP_CNT  
                                                                     , HX_COMP_MIN, HX_COMP_MAX 
                                                                  FROM RWIPLOTSTS A   
                                                                     , MWIPOPRDEF B   
                                                                     , VWIPMATDEF C 
                                                                 WHERE 1 = 1  
                                                                   AND A.FACTORY = B.FACTORY 
                                                                   AND A.FACTORY = C.FACTORY 
                                                                   AND A.OPER = B.OPER 
                                                                   AND A.MAT_ID = C.MAT_ID 
                                                                   AND A.FACTORY = 'HMVA2'   
                                                                   AND A.LOT_TYPE = 'W'  
                                                                   AND A.LOT_CMF_5 LIKE 'P%'
                                                                   AND A.LOT_DEL_FLAG = ' '  
                                                                   AND C.MAT_GRP_2 <> '-' 
                                                                   AND C.DELETE_FLAG = ' '  
                                                               ) 
                                                       ) 
                                               ) 
                                         WHERE 1=1 
                                           AND OPER_GRP_1 <> ' ' 
                                         GROUP BY MAT_ID, OPER_GRP_1 
                                        HAVING SUM(NVL(QTY,0)) > 0 
                                       ) WIP 
                                     , ( 
                                        SELECT A.RES_STS_2 AS MAT_ID 
                                             , A.OPER_GRP_1 
                                             , SUM(A.RES_CNT) AS RES_CNT 
                                             , SUM(TRUNC(NVL(NVL(B.UPEH,0) * 24 * A.PERCENT * A.RES_CNT, 0))) AS RES_CAPA 
                                          FROM ( 
                                                SELECT FACTORY, RES_STS_2, RES_STS_8 AS OPER, RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RES_CNT 
                                                     , CASE WHEN RES_STS_8 LIKE 'A06%' THEN 0.71
                                                            WHEN RES_STS_8 LIKE 'A04%' THEN 0.68
                                                            WHEN RES_STS_8 = 'A0333' THEN 0.68
                                                            ELSE 0.7
                                                       END PERCENT 
                                                     , CASE WHEN RES_STS_8 IN ('A0040') THEN 'BG' 
                                                            WHEN RES_STS_8 IN ('A0200', 'A0230') THEN 'SAW' 
                                                            WHEN RES_STS_8 IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                                                            WHEN RES_STS_8 IN ('A0402') THEN 'DA2' 
                                                            WHEN RES_STS_8 IN ('A0403') THEN 'DA3' 
                                                            WHEN RES_STS_8 IN ('A0404') THEN 'DA4' 
                                                            WHEN RES_STS_8 IN ('A0405') THEN 'DA5' 
                                                            WHEN RES_STS_8 IN ('A0406') THEN 'DA6' 
                                                            WHEN RES_STS_8 IN ('A0407') THEN 'DA7' 
                                                            WHEN RES_STS_8 IN ('A0408') THEN 'DA8' 
                                                            WHEN RES_STS_8 IN ('A0409') THEN 'DA9' 
                                                            WHEN RES_STS_8 IN ('A0600','A0601') THEN 'WB1' 
                                                            WHEN RES_STS_8 IN ('A0602') THEN 'WB2' 
                                                            WHEN RES_STS_8 IN ('A0603') THEN 'WB3' 
                                                            WHEN RES_STS_8 IN ('A0604') THEN 'WB4' 
                                                            WHEN RES_STS_8 IN ('A0605') THEN 'WB5' 
                                                            WHEN RES_STS_8 IN ('A0606') THEN 'WB6' 
                                                            WHEN RES_STS_8 IN ('A0607') THEN 'WB7' 
                                                            WHEN RES_STS_8 IN ('A0608') THEN 'WB8' 
                                                            WHEN RES_STS_8 IN ('A0609') THEN 'WB9' 
                                                            WHEN RES_STS_8 IN ('A0800', 'A0801', 'A0802', 'A0803', 'A0804', 'A0805', 'A0806', 'A0807', 'A0808', 'A0809') THEN 'GATE' 
                                                            WHEN RES_STS_8 IN ('A1000', 'A0910') THEN 'MOLD' 
                                                            WHEN RES_STS_8 IN ('A1100') THEN 'CURE' 
                                                            WHEN RES_STS_8 IN ('A1150', 'A1500') THEN 'MK' 
                                                            WHEN RES_STS_8 IN ('A1200') THEN 'TRIM' 
                                                            WHEN RES_STS_8 IN ('A1450') THEN 'TIN' 
                                                            WHEN RES_STS_8 IN ('A1300') THEN 'SBA' 
                                                            WHEN RES_STS_8 IN ('A1750', 'A1800', 'A1900', 'A1825') THEN 'SIG' 
                                                            WHEN RES_STS_8 IN ('A2000') THEN 'AVI' 
                                                            WHEN RES_STS_8 IN ('A2050') THEN 'PVI' 
                                                            WHEN RES_STS_8 IN ('A2100') THEN 'QC_GATE' 
                                                            ELSE ' ' 
                                                       END OPER_GRP_1 
                                                  FROM MRASRESDEF 
                                                 WHERE 1 = 1  
                                                   AND FACTORY  = 'HMVA2' 
                                                   AND RES_CMF_9 = 'Y' 
                                                   AND RES_CMF_7 = 'Y' 
                                                   AND DELETE_FLAG = ' ' 
                                                   AND RES_TYPE='EQUIPMENT' 
                                                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7  
                                               ) A 
                                             , CRASUPHDEF B 
                                         WHERE 1=1 
                                           AND A.FACTORY = B.FACTORY(+) 
                                           AND A.OPER = B.OPER(+) 
                                           AND A.RES_MODEL = B.RES_MODEL(+) 
                                           AND A.UPEH_GRP = B.UPEH_GRP(+) 
                                           AND A.RES_STS_2 = B.MAT_ID(+) 
                                           AND A.FACTORY  = 'HMVA2' 
                                           AND A.OPER NOT IN ('00001','00002') 
                                           AND A.OPER_GRP_1 <> ' ' 
                                         GROUP BY A.RES_STS_2, A.OPER_GRP_1 
                                       ) RES 
                                 WHERE 1=1 
                                   AND MAT.MAT_ID = A.MAT_ID(+) 
                                   AND MAT.MAT_ID = B.MAT_ID(+) 
                                   AND MAT.MAT_ID = WIP.MAT_ID(+) 
                                   AND MAT.MAT_ID = RES.MAT_ID(+) 
                                   AND MAT.OPER_GRP_1 = B.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = WIP.OPER_GRP_1(+) 
                                   AND MAT.OPER_GRP_1 = RES.OPER_GRP_1(+) 
                               ) 
                         GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1 
                        HAVING ( 
                                SUM(NVL(D0_ORI_PLAN,0))+SUM(NVL(D1_PLAN,0))+SUM(NVL(D2_PLAN,0))+SUM(NVL(WEEK_PLAN,0))+SUM(NVL(WEEK2_PLAN,0))+SUM(NVL(MON_PLAN,0))+SUM(NVL(WIP_QTY,0)) 
                              + SUM(NVL(D0_PLAN,0))+SUM(NVL(SHP_WEEK,0))+SUM(NVL(SHP_MONTH,0))+SUM(NVL(ASSY_END_QTY,0)) 
                               ) > 0 
                      ) 
                    , (SELECT LEVEL AS SEQ FROM DUAL CONNECT BY LEVEL <= 10) 
                 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP_1, DECODE(SEQ, 1, 'WIP', 2, '설비대수', 3, 'CAPA현황', 4, '당일 실적', 5, 'D0 잔량', 6, 'D1 잔량', 7, 'D2 잔량', 8, '당주 잔량', 9, '차주 잔량', 10, '월간 잔량') 
               ) 
         GROUP BY  MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
       ) A 
 WHERE 1=1 
 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6, MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', GUBUN 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ', PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', DECODE(GUBUN, 'WIP', 1, '설비대수', 2, 'CAPA현황', 3, '당일 실적', 4, 'D0 잔량', 5, 'D1 잔량', 6, 'D2 잔량', 7, '당주 잔량', 8, '차주 잔량', 9, '월간 잔량', 10) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1) AS CUSTOMER, MAT_GRP_9 AS MAJOR, MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, MAT_CMF_11 AS PKG_CODE,  ' ', CONV_MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , MAX(DECODE(OPER_GRP_1, 'HMK3A', 'T', '', 'F', 'F')) AS HMK3A 
     , MAX(DECODE(OPER_GRP_1, 'QC_GATE', 'T', '', 'F', 'F')) AS QC_GATE 
     , MAX(DECODE(OPER_GRP_1, 'PVI', 'T', '', 'F', 'F')) AS PVI 
     , MAX(DECODE(OPER_GRP_1, 'AVI', 'T', '', 'F', 'F')) AS AVI 
     , MAX(DECODE(OPER_GRP_1, 'SIG', 'T', '', 'F', 'F')) AS SIG 
     , MAX(DECODE(OPER_GRP_1, 'SBA', 'T', '', 'F', 'F')) AS SBA 
     , MAX(DECODE(OPER_GRP_1, 'TIN', 'T', '', 'F', 'F')) AS TIN 
     , MAX(DECODE(OPER_GRP_1, 'TRIM', 'T', '', 'F', 'F')) AS TRIM 
     , MAX(DECODE(OPER_GRP_1, 'MK', 'T', '', 'F', 'F')) AS MK 
     , MAX(DECODE(OPER_GRP_1, 'CURE', 'T', '', 'F', 'F')) AS CURE 
     , MAX(DECODE(OPER_GRP_1, 'MOLD', 'T', '', 'F', 'F')) AS MOLD 
     , MAX(DECODE(OPER_GRP_1, 'GATE', 'T', '', 'F', 'F')) AS GATE 
     , MAX(DECODE(OPER_GRP_1, 'WB9', 'T', '', 'F', 'F')) AS WB9 
     , MAX(DECODE(OPER_GRP_1, 'DA9', 'T', '', 'F', 'F')) AS DA9 
     , MAX(DECODE(OPER_GRP_1, 'WB8', 'T', '', 'F', 'F')) AS WB8 
     , MAX(DECODE(OPER_GRP_1, 'DA8', 'T', '', 'F', 'F')) AS DA8 
     , MAX(DECODE(OPER_GRP_1, 'WB7', 'T', '', 'F', 'F')) AS WB7 
     , MAX(DECODE(OPER_GRP_1, 'DA7', 'T', '', 'F', 'F')) AS DA7 
     , MAX(DECODE(OPER_GRP_1, 'WB6', 'T', '', 'F', 'F')) AS WB6 
     , MAX(DECODE(OPER_GRP_1, 'DA6', 'T', '', 'F', 'F')) AS DA6 
     , MAX(DECODE(OPER_GRP_1, 'WB5', 'T', '', 'F', 'F')) AS WB5 
     , MAX(DECODE(OPER_GRP_1, 'DA5', 'T', '', 'F', 'F')) AS DA5 
     , MAX(DECODE(OPER_GRP_1, 'WB4', 'T', '', 'F', 'F')) AS WB4 
     , MAX(DECODE(OPER_GRP_1, 'DA4', 'T', '', 'F', 'F')) AS DA4 
     , MAX(DECODE(OPER_GRP_1, 'WB3', 'T', '', 'F', 'F')) AS WB3 
     , MAX(DECODE(OPER_GRP_1, 'DA3', 'T', '', 'F', 'F')) AS DA3  
     , MAX(DECODE(OPER_GRP_1, 'WB2', 'T', '', 'F', 'F')) AS WB2 
     , MAX(DECODE(OPER_GRP_1, 'DA2', 'T', '', 'F', 'F')) AS DA2 
     , MAX(DECODE(OPER_GRP_1, 'WB1', 'T', '', 'F', 'F')) AS WB1 
     , MAX(DECODE(OPER_GRP_1, 'DA1', 'T', '', 'F', 'F')) AS DA1 
     , MAX(DECODE(OPER_GRP_1, 'SP', 'T', '', 'F', 'F')) AS SP 
     , MAX(DECODE(OPER_GRP_1, 'SAW', 'T', '', 'F', 'F')) AS SAW 
     , MAX(DECODE(OPER_GRP_1, 'BG', 'T', '', 'F', 'F')) AS BG 
     , MAX(DECODE(OPER_GRP_1, 'HMK2A','T', '', 'F', 'F')) AS HMK2A 
  FROM ( 
        SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.MAT_ID, MAT.DELETE_FLAG 
             , CASE WHEN MAT.MAT_GRP_1 = 'SE' AND MAT.MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(MAT.MAT_ID, -3) 
                                                                    WHEN MAT.MAT_GRP_1 = 'HX' THEN MAT.MAT_CMF_10 
                                                                    ELSE MAT_ID 
                                                               END CONV_MAT_ID 
          FROM MWIPMATDEF MAT 
       ) MAT 
     , ( 
        SELECT A.MAT_ID 
                     , CASE WHEN B.OPER IN ('A0400', 'A0401', 'A0333') THEN 'DA1' 
                            WHEN B.OPER IN ('A0402') THEN 'DA2' 
                            WHEN B.OPER IN ('A0403') THEN 'DA3' 
                            WHEN B.OPER IN ('A0404') THEN 'DA4' 
                            WHEN B.OPER IN ('A0405') THEN 'DA5' 
                            WHEN B.OPER IN ('A0406') THEN 'DA6' 
                            WHEN B.OPER IN ('A0407') THEN 'DA7' 
                            WHEN B.OPER IN ('A0408') THEN 'DA8' 
                            WHEN B.OPER IN ('A0409') THEN 'DA9' 
                            WHEN B.OPER IN ('A0600', 'A0601') THEN 'WB1' 
                            WHEN B.OPER IN ('A0602') THEN 'WB2' 
                            WHEN B.OPER IN ('A0603') THEN 'WB3' 
                            WHEN B.OPER IN ('A0604') THEN 'WB4' 
                            WHEN B.OPER IN ('A0605') THEN 'WB5' 
                            WHEN B.OPER IN ('A0606') THEN 'WB6' 
                            WHEN B.OPER IN ('A0607') THEN 'WB7' 
                            WHEN B.OPER IN ('A0608') THEN 'WB8' 
                            WHEN B.OPER IN ('A0609') THEN 'WB9' 
                            ELSE ' ' 
                        END OPER_GRP_1 
          FROM MWIPMATDEF A 
             , MWIPFLWOPR@RPTTOMES B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.FIRST_FLOW = B.FLOW 
           AND A.FACTORY = 'HMVA2' 
           AND A.DELETE_FLAG = ' ' 
           AND A.MAT_TYPE = 'FG' 
           AND A.MAT_GRP_5 IN ('-', 'Merge') 
           AND A.MAT_ID LIKE '%' 
       ) A 
 WHERE 1=1 
   AND MAT.FACTORY = 'HMVA2' 
   AND MAT.DELETE_FLAG = ' ' 
   AND MAT.MAT_ID = A.MAT_ID  
 GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_GRP_6, MAT.MAT_CMF_11,  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
 ORDER BY DECODE(MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5, 6), CUSTOMER, MAJOR, PKG, LD_COUNT, PKG_CODE,  ' ', PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , SUM(ASSY_END_QTY59 ) VAL59
             , SUM(ASSY_END_QTY60 ) VAL60
             , SUM(ASSY_END_QTY61 ) VAL61
             , SUM(ASSY_END_QTY62 ) VAL62
             , SUM(ASSY_END_QTY63 ) VAL63
             , SUM(ASSY_END_QTY64 ) VAL64
             , SUM(ASSY_END_QTY65 ) VAL65
             , SUM(ASSY_END_QTY66 ) VAL66
             , SUM(ASSY_END_QTY67 ) VAL67
             , SUM(ASSY_END_QTY68 ) VAL68
             , SUM(ASSY_END_QTY69 ) VAL69
             , SUM(ASSY_END_QTY70 ) VAL70
             , SUM(ASSY_END_QTY71 ) VAL71
             , SUM(ASSY_END_QTY72 ) VAL72
             , SUM(ASSY_END_QTY73 ) VAL73
             , SUM(ASSY_END_QTY74 ) VAL74
             , SUM(ASSY_END_QTY75 ) VAL75
             , SUM(ASSY_END_QTY76 ) VAL76
             , SUM(ASSY_END_QTY77 ) VAL77
             , SUM(ASSY_END_QTY78 ) VAL78
             , SUM(ASSY_END_QTY79 ) VAL79
             , SUM(ASSY_END_QTY80 ) VAL80
             , SUM(ASSY_END_QTY81 ) VAL81
             , ROUND(SUM(TOTAL)/82, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200714', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200715', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200716', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200717', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200718', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200719', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200720', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200721', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200722', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200723', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200724', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200725', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200726', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200727', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200728', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200729', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200730', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200731', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200801', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200802', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200803', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200804', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200805', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200806', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200807', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200808', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200809', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200810', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200811', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200812', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200813', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200814', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200815', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200816', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200817', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200818', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200819', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200820', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200821', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200822', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200823', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200824', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200825', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200826', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200827', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200828', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200829', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200830', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200831', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200901', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200902', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200903', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200904', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200905', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200906', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200907', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200908', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200909', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200910', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , DECODE(WORK_DATE, '20200911', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY59
                    , DECODE(WORK_DATE, '20200912', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY60
                    , DECODE(WORK_DATE, '20200913', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY61
                    , DECODE(WORK_DATE, '20200914', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY62
                    , DECODE(WORK_DATE, '20200915', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY63
                    , DECODE(WORK_DATE, '20200916', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY64
                    , DECODE(WORK_DATE, '20200917', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY65
                    , DECODE(WORK_DATE, '20200918', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY66
                    , DECODE(WORK_DATE, '20200919', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY67
                    , DECODE(WORK_DATE, '20200920', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY68
                    , DECODE(WORK_DATE, '20200921', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY69
                    , DECODE(WORK_DATE, '20200922', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY70
                    , DECODE(WORK_DATE, '20200923', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY71
                    , DECODE(WORK_DATE, '20200924', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY72
                    , DECODE(WORK_DATE, '20200925', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY73
                    , DECODE(WORK_DATE, '20200926', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY74
                    , DECODE(WORK_DATE, '20200927', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY75
                    , DECODE(WORK_DATE, '20200928', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY76
                    , DECODE(WORK_DATE, '20200929', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY77
                    , DECODE(WORK_DATE, '20200930', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY78
                    , DECODE(WORK_DATE, '20201001', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY79
                    , DECODE(WORK_DATE, '20201002', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY80
                    , DECODE(WORK_DATE, '20201003', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY81
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER IN ('AZ010')
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200714' AND '20201003' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010216'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT CUSTOMER,  ' ', MAT_GRP_2, MAT_GRP_3, MAT_GRP_4,  ' ', MAT_GRP_6,  ' ',  ' ',  ' ', CONV_MAT_ID,  ' ',  ' ',  ' ' 
     , WEEK_PLAN, SHP_WEEK, WEEK_DEF, REMAIN_MOLD, REMAIN_WB, REMAIN_DA, REMAIN_BG, REMAIN_INPUT, REMAIN_WF, DA_CAPA, WB_CAPA
     , D0_PLAN2, D0_DEF, SHP_TODAY, HMK3A, QC_GATE, PVI, BAKE, AVI, DC2, DC1, SIG, SBA, TRIM, MK, TIN, CURE, MOLD, PLASMA, GATE
     , WB9, DA9, WB8, DA8, WB7, DA7, WB6, DA6, WB5, DA5, WB4, DA4, WB3, DA3, WB2, DA2, WB1, DA1, SP, SAW, BG, HMK2A
     , D0_PLAN, D1_PLAN, D2_PLAN, D3_PLAN, D4_PLAN, DA1_CAPA, WB1_CAPA, DA2_CAPA, WB2_CAPA, DA3_CAPA, WB3_CAPA, DA4_CAPA, WB4_CAPA, DA5_CAPA, WB5_CAPA
     , DA6_CAPA, WB6_CAPA, DA7_CAPA, WB7_CAPA, DA8_CAPA, WB8_CAPA, DA9_CAPA, WB9_CAPA, WEEK2_PLAN, WEEK3_PLAN, WEEK4_PLAN, WEEK5_PLAN, ORI_PLAN, SHP_MONTH, MONTH_DEF, REV_PLAN, PER
  FROM(
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4,  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.CONV_MAT_ID,  ' ',  ' ',  ' ' 
     , ROUND(SUM(NVL(WEEK1_PLAN, 0)) / 1, 0) AS WEEK_PLAN
     , ROUND(SUM(NVL(SHP_WEEK, 0)) / 1, 0) AS SHP_WEEK
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0)) / 1, 0) END AS WEEK_DEF
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_MOLD, 0)) < 0 THEN 0 
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_MOLD, 0)) / 1, 0) END AS REMAIN_MOLD
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_WB, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_WB, 0)) / 1, 0) END AS REMAIN_WB
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_DA, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_DA, 0)) / 1, 0) END AS REMAIN_DA
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_BG, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_BG, 0)) / 1, 0) END AS REMAIN_BG
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_ISSUE, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(W_ISSUE, 0)) / 1, 0) END AS REMAIN_INPUT
     , CASE WHEN SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(TOTAL, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(WEEK1_PLAN, 0) - NVL(SHP_WEEK, 0) - NVL(TOTAL, 0)) / 1, 0) END AS REMAIN_WF
     , ROUND(SUM(NVL(DA_CAPA, 0)) / 1, 0) AS DA_CAPA
     , ROUND(SUM(NVL(WB_CAPA, 0)) / 1, 0) AS WB_CAPA
     , CASE WHEN SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) < 0 THEN 0
            ELSE ROUND(SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) / 1, 0) END AS D0_PLAN2
     , CASE WHEN SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) < 0 THEN 0
            ELSE ROUND(SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0)) - NVL(SHP_TODAY, 0)) / 1, 0) END AS D0_DEF
     , ROUND(SUM(NVL(SHP_TODAY, 0)) / 1, 0) AS SHP_TODAY
     , ROUND(SUM(NVL(WIP.HMK3A, 0)) / 1, 0) AS HMK3A
     , ROUND(SUM(NVL(WIP.QC_GATE, 0)) / 1, 0) AS QC_GATE
     , ROUND(SUM(NVL(WIP.PVI, 0)) / 1, 0) AS PVI
     , ROUND(SUM(NVL(WIP.BAKE,0)) / 1, 0) AS BAKE
     , ROUND(SUM(NVL(WIP.AVI,0)) / 1, 0) AS AVI
     , ROUND(SUM(NVL(WIP.DC2,0)) / 1, 0) AS DC2
     , ROUND(SUM(NVL(WIP.DC1,0)) / 1, 0) AS DC1
     , ROUND(SUM(NVL(WIP.SIG,0)) / 1, 0) AS SIG
     , ROUND(SUM(NVL(WIP.SBA,0)) / 1, 0) AS SBA
     , ROUND(SUM(NVL(WIP.TIN,0)) / 1, 0) AS TIN
     , ROUND(SUM(NVL(WIP.TRIM,0)) / 1, 0) AS TRIM
     , ROUND(SUM(NVL(WIP.MK,0)) / 1, 0) AS MK
     , ROUND(SUM(NVL(WIP.CURE,0)) / 1, 0) AS CURE
     , ROUND(SUM(NVL(WIP.MOLD,0)) / 1, 0) AS MOLD
     , ROUND(SUM(NVL(WIP.PLASMA,0)) / 1, 0) AS PLASMA
     , ROUND(SUM(NVL(WIP.GATE,0)) / 1, 0) AS GATE
     , ROUND(SUM(NVL(WIP.WB9,0)) / 1, 0) AS WB9
     , ROUND(SUM(NVL(WIP.DA9,0)) / 1, 0) AS DA9
     , ROUND(SUM(NVL(WIP.WB8,0)) / 1, 0) AS WB8
     , ROUND(SUM(NVL(WIP.DA8,0)) / 1, 0) AS DA8
     , ROUND(SUM(NVL(WIP.WB7,0)) / 1, 0) AS WB7
     , ROUND(SUM(NVL(WIP.DA7,0)) / 1, 0) AS DA7
     , ROUND(SUM(NVL(WIP.WB6,0)) / 1, 0) AS WB6
     , ROUND(SUM(NVL(WIP.DA6,0)) / 1, 0) AS DA6
     , ROUND(SUM(NVL(WIP.WB5,0)) / 1, 0) AS WB5
     , ROUND(SUM(NVL(WIP.DA5,0)) / 1, 0) AS DA5
     , ROUND(SUM(NVL(WIP.WB4,0)) / 1, 0) AS WB4
     , ROUND(SUM(NVL(WIP.DA4,0)) / 1, 0) AS DA4
     , ROUND(SUM(NVL(WIP.WB3,0)) / 1, 0) AS WB3
     , ROUND(SUM(NVL(WIP.DA3,0)) / 1, 0) AS DA3
     , ROUND(SUM(NVL(WIP.WB2,0)) / 1, 0) AS WB2
     , ROUND(SUM(NVL(WIP.DA2,0)) / 1, 0) AS DA2
     , ROUND(SUM(NVL(WIP.WB1,0)) / 1, 0) AS WB1
     , ROUND(SUM(NVL(WIP.DA1,0)) / 1, 0) AS DA1
     , ROUND(SUM(NVL(WIP.SP,0)) / 1, 0) AS SP
     , ROUND(SUM(NVL(WIP.SAW,0)) / 1, 0) AS SAW
     , ROUND(SUM(NVL(WIP.BG,0)) / 1, 0) AS BG
     , ROUND(SUM(NVL(WIP.HMK2A,0)) / 1, 0) AS HMK2A
     , ROUND(SUM(NVL(D0_PLAN, 0) + (NVL(WEEK1_TTL, 0) - NVL(SHP_WEEK_TTL, 0))) / 1, 0) AS D0_PLAN
     , ROUND(SUM(NVL(D1_PLAN, 0)) / 1, 0) AS D1_PLAN
     , ROUND(SUM(NVL(D2_PLAN, 0)) / 1, 0) AS D2_PLAN
     , ROUND(SUM(NVL(D3_PLAN, 0)) / 1, 0) AS D3_PLAN
     , ROUND(SUM(NVL(D4_PLAN, 0)) / 1, 0) AS D4_PLAN
     , ROUND(SUM(NVL(DA1_CAPA, 0)) / 1, 0) AS DA1_CAPA
     , ROUND(SUM(NVL(WB1_CAPA, 0)) / 1, 0) AS WB1_CAPA
     , ROUND(SUM(NVL(DA2_CAPA, 0)) / 1, 0) AS DA2_CAPA
     , ROUND(SUM(NVL(WB2_CAPA, 0)) / 1, 0) AS WB2_CAPA
     , ROUND(SUM(NVL(DA3_CAPA, 0)) / 1, 0) AS DA3_CAPA
     , ROUND(SUM(NVL(WB3_CAPA, 0)) / 1, 0) AS WB3_CAPA
     , ROUND(SUM(NVL(DA4_CAPA, 0)) / 1, 0) AS DA4_CAPA
     , ROUND(SUM(NVL(WB4_CAPA, 0)) / 1, 0) AS WB4_CAPA
     , ROUND(SUM(NVL(DA5_CAPA, 0)) / 1, 0) AS DA5_CAPA
     , ROUND(SUM(NVL(WB5_CAPA, 0)) / 1, 0) AS WB5_CAPA
     , ROUND(SUM(NVL(DA6_CAPA, 0)) / 1, 0) AS DA6_CAPA
     , ROUND(SUM(NVL(WB6_CAPA, 0)) / 1, 0) AS WB6_CAPA
     , ROUND(SUM(NVL(DA7_CAPA, 0)) / 1, 0) AS DA7_CAPA
     , ROUND(SUM(NVL(WB7_CAPA, 0)) / 1, 0) AS WB7_CAPA
     , ROUND(SUM(NVL(DA8_CAPA, 0)) / 1, 0) AS DA8_CAPA
     , ROUND(SUM(NVL(WB8_CAPA, 0)) / 1, 0) AS WB8_CAPA
     , ROUND(SUM(NVL(DA9_CAPA, 0)) / 1, 0) AS DA9_CAPA
     , ROUND(SUM(NVL(WB9_CAPA, 0)) / 1, 0) AS WB9_CAPA
     , ROUND(SUM(NVL(WEEK2_PLAN, 0)) / 1, 0) AS WEEK2_PLAN
     , ROUND(SUM(NVL(WEEK3_PLAN, 0)) / 1, 0) AS WEEK3_PLAN
     , ROUND(SUM(NVL(WEEK4_PLAN, 0)) / 1, 0) AS WEEK4_PLAN
     , ROUND(SUM(NVL(WEEK5_PLAN, 0)) / 1, 0) AS WEEK5_PLAN
     , ROUND(SUM(NVL(ORI_PLAN, 0)) / 1, 0) AS ORI_PLAN
     , ROUND(SUM(NVL(SHP_MONTH, 0)) / 1, 0) AS SHP_MONTH
     , ROUND(SUM(NVL(ORI_PLAN, 0) - NVL(SHP_MONTH, 0)) / 1, 0) AS MONTH_DEF
     , ROUND(SUM(NVL(REV_PLAN, 0)) / 1, 0) AS REV_PLAN
     , CASE WHEN SUM(NVL(ORI_PLAN, 0)) = 0 THEN 0
            ELSE ROUND(SUM(NVL(REV_PLAN, 0)) / SUM(NVL(ORI_PLAN, 0)) * 100, 0)
       END PER
     , ROUND(SUM(NVL(W_MOLD, 0)) / 1, 0) AS W_MOLD 
     , ROUND(SUM(NVL(W_WB, 0)) / 1, 0) AS W_WB
     , ROUND(SUM(NVL(W_DA, 0)) / 1, 0) AS W_DA
     , ROUND(SUM(NVL(W_BG, 0)) / 1, 0) AS W_BG
     , ROUND(SUM(NVL(W_ISSUE, 0)) / 1, 0) AS W_ISSUE
     , ROUND(SUM(NVL(TOTAL, 0)) / 1, 0) AS TOTAL
  FROM (
        SELECT MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6
             , MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_7, MAT_CMF_10, MAT_ID, MAT_CMF_11
             , CASE WHEN MAT_GRP_9 = 'MEMORY' AND MAT_GRP_1 = 'HX' AND INSTR(MAT_ID, '_') = 0 THEN SUBSTR(MAT_ID, 1, 12) || '%' || SUBSTR(MAT_ID, -3)
                    WHEN MAT_GRP_9 = 'MEMORY' AND MAT_GRP_1 = 'HX' AND INSTR(MAT_ID, '_') > 0 THEN SUBSTR(MAT_ID, 1, INSTR(MAT_ID, '_')) || '%' || SUBSTR(MAT_ID, -3)
                    WHEN MAT_GRP_9 = 'MEMORY' AND MAT_GRP_1 = 'SE' THEN 'SEK_________-___' || SUBSTR(MAT_ID, -3)
                    ELSE MAT_ID
               END CONV_MAT_ID
             , VENDOR_ID AS SAP_CODE
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2'
           AND MAT_TYPE = 'FG' 
           AND DELETE_FLAG = ' ' 
           AND (MAT_GRP_5 IN ('1st','Merge', '-') OR MAT_GRP_5 LIKE 'Middle%') 
           AND MAT_GRP_3 <> 'COB' 
           AND MAT_ID LIKE '%'
       ) MAT 
     , ( 
        SELECT FACTORY, MAT_ID 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                        ELSE 0
                   END) AS WEEK1_TTL 
             , SUM(W1_QTY) AS WEEK1_PLAN 
             , SUM(W2_QTY) AS WEEK2_PLAN 
             , SUM(W3_QTY) AS WEEK3_PLAN 
             , SUM(W4_QTY) AS WEEK4_PLAN 
             , SUM(W5_QTY) AS WEEK5_PLAN 
             , SUM(NVL(W1_QTY,0) + NVL(W2_QTY,0)) AS WEEK_TTL 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D1_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D1_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D2_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D3_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D5_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D6_QTY 
                        ELSE 0
                   END) AS D0_PLAN 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D1_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D2_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D3_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D5_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D6_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D7_QTY 
                        ELSE 0
                   END) AS D1_PLAN 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D2_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D3_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D5_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D6_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D7_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D8_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D2_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D3_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D5_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D6_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D7_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D8_QTY 
                        ELSE 0
                   END) AS D2_PLAN 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D3_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D5_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D6_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D7_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D8_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D9_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D8_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D9_QTY 
                        ELSE 0
                   END) AS D3_PLAN 
             , SUM(CASE WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D4_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D5_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D6_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D7_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D8_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D9_QTY
                        WHEN CALENDAR_ID = 'OTD' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D10_QTY
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D4_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D5_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D6_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D7_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D8_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D9_QTY 
                        WHEN CALENDAR_ID = 'SE' AND TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D10_QTY 
                        ELSE 0
                   END) AS D4_PLAN 
          FROM ( 
                SELECT FACTORY, MAT_ID, 'OTD' AS CALENDAR_ID 
                     , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D0_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D1_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D2_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D3_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D4_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D5_QTY, 0)) AS D5_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D6_QTY, 0)) AS D6_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D0_QTY, 0)) AS D7_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D1_QTY, 0)) AS D8_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D2_QTY, 0)) AS D9_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D3_QTY, 0)) AS D10_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D4_QTY, 0)) AS D11_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D5_QTY, 0)) AS D12_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D6_QTY, 0)) AS D13_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS W1_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS W2_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202034', WW_QTY, 0)) AS W3_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202035', WW_QTY, 0)) AS W4_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202036', WW_QTY, 0)) AS W5_QTY 
                  FROM RWIPPLNWEK 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND GUBUN = '3' 
                   AND MAT_ID NOT LIKE 'SES%' 
                   AND PLAN_WEEK IN ('202032','202033','202034','202035','202036')
                 GROUP BY FACTORY, MAT_ID 
                 UNION ALL 
                SELECT FACTORY, MAT_ID, 'SE' AS CALENDAR_ID 
                     , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D0_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D1_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D2_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D3_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D4_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D5_QTY, 0)) AS D5_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', D6_QTY, 0)) AS D6_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D0_QTY, 0)) AS D7_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D1_QTY, 0)) AS D8_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D2_QTY, 0)) AS D9_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D3_QTY, 0)) AS D10_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D4_QTY, 0)) AS D11_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D5_QTY, 0)) AS D12_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', D6_QTY, 0)) AS D13_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS W1_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS W2_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202034', WW_QTY, 0)) AS W3_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202035', WW_QTY, 0)) AS W4_QTY 
                     , SUM(DECODE(PLAN_WEEK, '202036', WW_QTY, 0)) AS W5_QTY 
                  FROM RWIPPLNWEK 
                 WHERE 1=1 
                   AND FACTORY = 'HMVA2' 
                   AND GUBUN = '3' 
                   AND MAT_ID LIKE 'SES%' 
                   AND PLAN_WEEK IN ('202032','202033','202034','202035','202036')
                 GROUP BY FACTORY, MAT_ID 
               ) 
         GROUP BY FACTORY, MAT_ID 
       ) PLN 
     , ( 
        SELECT MAT_ID 
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY 
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200803' AND '20200803' THEN NVL(SHP_QTY_1, 0)  
                        WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) 
                        ELSE 0 END) AS SHP_WEEK  
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND MAT_ID LIKE 'SES%' AND WORK_DATE BETWEEN '20200803' AND '20200802' THEN NVL(SHP_QTY_1, 0) 
                        WHEN SHP_QTY_1 > 0 AND MAT_ID NOT LIKE 'SES%' AND WORK_DATE BETWEEN '20200801' AND '20200802' THEN NVL(SHP_QTY_1, 0) 
                        ELSE 0 END) AS SHP_WEEK_TTL  
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH  
          FROM VSUMWIPOUT
         WHERE 1=1 
           AND FACTORY  = 'HMVA2' 
           AND CM_KEY_2 = 'PROD' 
           AND CM_KEY_3 LIKE 'P%' 
           AND LOT_TYPE = 'W' 
           AND MAT_ID NOT LIKE 'HX%' 
           AND WORK_DATE BETWEEN LEAST('20200801', '20200801', '20200803') AND '20200803' 
         GROUP BY MAT_ID 
         UNION ALL 
        SELECT MAT_ID 
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE = '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_TODAY 
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK 
             , SUM(CASE WHEN SHP_QTY_1 > 0 AND WORK_DATE BETWEEN '20200801' AND '20200802' THEN NVL(SHP_QTY_1, 0) ELSE 0 END) AS SHP_WEEK_TTL 
             , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN NVL(SHP_QTY_1, 0) END) AS SHP_MONTH 
          FROM VSUMWIPOUT_06
         WHERE 1=1 
           AND FACTORY  = 'HMVA2' 
           AND CM_KEY_2 = 'PROD' 
           AND CM_KEY_3 LIKE 'P%' 
           AND LOT_TYPE = 'W' 
           AND MAT_ID LIKE 'HX%' 
           AND WORK_DATE BETWEEN '20200801' AND '20200803' 
         GROUP BY MAT_ID 
       ) SHP 
     , ( 
        SELECT MAT_ID
             , SUM(QTY) TOTAL
             , SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)) AS HMK2A
             , SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)) AS BG
             , SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)) AS SAW
             , SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)) AS SP
             , SUM(CASE WHEN OPER IN ('A0250','A0310','A0333','A0340','A0401','A0501', 'A0400', 'A0500', 'A0530', 'A0531', 'A0370', 'A0380', 'A0395') THEN QTY 
                        WHEN OPER_GRP_1 = 'SMT' THEN QTY 
                        ELSE 0 END) AS DA1 
             , SUM(CASE WHEN OPER IN ('A0402','A0502', 'A0532') THEN QTY ELSE 0 END) AS DA2 
             , SUM(CASE WHEN OPER IN ('A0403','A0503', 'A0533') THEN QTY ELSE 0 END) AS DA3 
             , SUM(CASE WHEN OPER IN ('A0404','A0504', 'A0534') THEN QTY ELSE 0 END) AS DA4 
             , SUM(CASE WHEN OPER IN ('A0405','A0505', 'A0535') THEN QTY ELSE 0 END) AS DA5 
             , SUM(CASE WHEN OPER IN ('A0406','A0506', 'A0536') THEN QTY ELSE 0 END) AS DA6 
             , SUM(CASE WHEN OPER IN ('A0407','A0507', 'A0537') THEN QTY ELSE 0 END) AS DA7 
             , SUM(CASE WHEN OPER IN ('A0408','A0508', 'A0538') THEN QTY ELSE 0 END) AS DA8 
             , SUM(CASE WHEN OPER IN ('A0409','A0509', 'A0539') THEN QTY ELSE 0 END) AS DA9 
             , SUM(CASE WHEN OPER IN ('A0551', 'A0601', 'A0550', 'A0600') THEN QTY
                        WHEN OPER = 'A0801' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0801' AND MAT_GRP_1 <> 'SE' THEN QTY 
                        ELSE 0 END) AS WB1 
             , SUM(CASE WHEN OPER IN ('A0552', 'A0602') THEN QTY
                        WHEN OPER = 'A0802' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0802' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, QTY) 
                        ELSE 0 END) AS WB2 
             , SUM(CASE WHEN OPER IN ('A0553', 'A0603') THEN QTY
                        WHEN OPER = 'A0803' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY  
                        WHEN OPER = 'A0803' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, QTY) 
                        ELSE 0 END) AS WB3 
             , SUM(CASE WHEN OPER IN ('A0554', 'A0604') THEN QTY
                        WHEN OPER = 'A0804' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0804' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, QTY) 
                        ELSE 0 END) AS WB4 
             , SUM(CASE WHEN OPER IN ('A0555', 'A0605') THEN QTY
                        WHEN OPER = 'A0805' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0805' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, '5', 0, QTY) 
                        ELSE 0 END) AS WB5 
             , SUM(CASE WHEN OPER IN ('A0556', 'A0606') THEN QTY
                        WHEN OPER = 'A0806' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0806' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, '5', 0, '6', 0, QTY) 
                        ELSE 0 END) AS WB6 
             , SUM(CASE WHEN OPER IN ('A0557', 'A0607') THEN QTY
                        WHEN OPER = 'A0807' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0807' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, '5', 0, '6', 0, '7', 0, QTY) 
                        ELSE 0 END) AS WB7 
             , SUM(CASE WHEN OPER IN ('A0558', 'A0608') THEN QTY
                        WHEN OPER = 'A0808' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0808' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, '5', 0, '6', 0, '7', 0, '8', 0, QTY) 
                        ELSE 0 END) AS WB8 
             , SUM(CASE WHEN OPER IN ('A0559', 'A0609') THEN QTY
                        WHEN OPER = 'A0809' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                        WHEN OPER = 'A0809' AND MAT_GRP_1 <> 'SE' THEN DECODE(SUBSTR(MAT_GRP_4,-1), '2', 0, '3', 0, '4', 0, '5', 0, '6', 0, '7', 0, '8', 0, '9', 0, QTY) 
                        ELSE 0 END) AS WB9 
             , SUM(CASE WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_5 = '-' THEN QTY 
                        WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN QTY 
                        WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN QTY 
                        ELSE 0 END) AS GATE 
             , SUM(CASE WHEN OPER IN ('A0950','A0900', 'A0910', 'A0920', 'A0930') THEN QTY ELSE 0 END) AS PLASMA 
             , SUM(CASE WHEN OPER IN ('A1000','A0980') THEN QTY ELSE 0 END) AS MOLD 
             , SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)) AS CURE
             , SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)) AS MK
             , SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)) AS TRIM
             , SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)) AS TIN
             , SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)) AS SBA
             , SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)) AS SIG
             , SUM(DECODE(OPER, 'A1790', QTY, 0)) AS DC1
             , SUM(DECODE(OPER, 'A1795', QTY, 0)) AS DC2
             , SUM(CASE WHEN OPER_GRP_1 = 'AVI' AND OPER NOT IN ('A1790', 'A1795') THEN QTY ELSE 0 END) AS AVI
             , SUM(CASE WHEN OPER = 'A2030' THEN QTY ELSE 0 END) AS BAKE
             , SUM(CASE WHEN OPER IN ('A2050') THEN QTY ELSE 0 END) AS PVI
             , SUM(CASE WHEN OPER IN ('A2100','A2300') THEN QTY ELSE 0 END) AS QC_GATE 
             , SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)) AS HMK3A
             , SUM(DECODE(OPER_GRP_1, 'HMK2A', 0, QTY)) AS W_ISSUE
             , SUM(CASE WHEN OPER_GRP_1 IN ('HMK2A', 'B/G') THEN 0 ELSE QTY END) AS W_BG
             , SUM(CASE WHEN OPER_GRP_1 IN ('HMK2A', 'B/G', 'SAW', 'SMT', 'S/P', 'D/A') THEN 0 
                        WHEN OPER_GRP_1 = 'W/B' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> 'Merge' THEN 0 
                        ELSE QTY END) AS W_DA 
             , SUM(CASE WHEN OPER_GRP_1 IN ('HMK2A', 'B/G', 'SAW', 'SMT', 'S/P', 'D/A', 'W/B') THEN 0 ELSE QTY END) AS W_WB
             , SUM(CASE WHEN OPER_GRP_1 IN ('HMK2A', 'B/G', 'SAW', 'SMT', 'S/P', 'D/A', 'W/B', 'GATE', 'MOLD') THEN 0 ELSE QTY END) AS W_MOLD
          FROM (
                SELECT A.MAT_ID, A.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5, QTY_1
                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'HX' AND HX_COMP_MIN IS NOT NULL
                                 THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND A.OPER > HX_COMP_MIN AND A.OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                            WHEN A.OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                            ELSE QTY_1 END)
                            WHEN A.OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                            ELSE QTY_1 
                       END QTY 
                  FROM RWIPLOTSTS A 
                     , MWIPOPRDEF B
                     , VWIPMATDEF C
                 WHERE 1=1 
                   AND A.FACTORY = B.FACTORY 
                   AND A.FACTORY = C.FACTORY 
                   AND A.OPER = B.OPER
                   AND A.MAT_ID = C.MAT_ID
                   AND A.FACTORY  = 'HMVA2' 
                   AND A.LOT_DEL_FLAG = ' '
                   AND A.LOT_TYPE = 'W'
                   AND A.LOT_CMF_5 LIKE 'P%' 
                   AND C.DELETE_FLAG = ' ' 
               )
         GROUP BY MAT_ID
       ) WIP  
     , ( 
        SELECT MAT.MAT_ID
             , SUM(CASE WHEN GUBUN ='DA' AND MAT.MAT_GRP_5 IN ('Merge', '-') THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA_CAPA
             , SUM(CASE WHEN GUBUN ='WB' AND MAT.MAT_GRP_5 IN ('Merge', '-') THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB_CAPA
             , SUM(CASE WHEN RES.OPER IN ('A0333','A0400', 'A0401') THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA1_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0402' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA2_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0403' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA3_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0404' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA4_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0405' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA5_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0406' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA6_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0407' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA7_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0408' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA8_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0409' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0)) ELSE 0 END) AS DA9_CAPA
             , SUM(CASE WHEN RES.OPER IN ('A0600', 'A0601') THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB1_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0602' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB2_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0603' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB3_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0604' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB4_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0605' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB5_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0606' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB6_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0607' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB7_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0608' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB8_CAPA
             , SUM(CASE WHEN RES.OPER = 'A0609' THEN TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.71 * RES.RAS_CNT, 0)) ELSE 0 END) AS WB9_CAPA
          FROM ( 
                SELECT FACTORY, RES_STS_2, RES_STS_8 AS OPER 
                     , CASE WHEN RES_STS_8 LIKE 'A06%' THEN 'WB' ELSE 'DA' END AS GUBUN 
                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                  FROM MRASRESDEF 
                 WHERE FACTORY  = 'HMVA2' 
                   AND RES_CMF_9 = 'Y' 
                   AND RES_CMF_7 = 'Y' 
                   AND DELETE_FLAG = ' ' 
                   AND (RES_STS_8 LIKE 'A04%' OR RES_STS_8 LIKE 'A06%' OR RES_STS_8 = 'A0333')
                   AND (RES_STS_1 NOT IN ('C200', 'B199') OR RES_UP_DOWN_FLAG = 'U') 
                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
               ) RES 
             , CRASUPHDEF UPH 
             , MWIPMATDEF MAT 
         WHERE 1 = 1 
           AND RES.FACTORY = UPH.FACTORY(+) 
           AND RES.FACTORY = MAT.FACTORY 
           AND RES.OPER = UPH.OPER(+) 
           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
           AND RES.RES_STS_2 = UPH.MAT_ID(+) 
           AND RES.RES_STS_2 = MAT.MAT_ID 
           AND MAT.DELETE_FLAG = ' ' 
         GROUP BY MAT.MAT_ID 
       ) CAP  
     , ( 
        SELECT MAT_ID 
             , DECODE(RESV_FIELD1, ' ', 0, RESV_FIELD1) AS ORI_PLAN 
             , DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3) AS REV_PLAN 
          FROM CWIPPLNMON 
         WHERE FACTORY  = 'HMVA2' 
           AND PLAN_MONTH = '202008' 
           AND PLAN_QTY_ASSY + DECODE(RESV_FIELD3, ' ', 0, RESV_FIELD3) > 0 
       ) MON  
 WHERE 1 = 1  
   AND MAT.MAT_ID = PLN.MAT_ID(+) 
   AND MAT.MAT_ID = SHP.MAT_ID(+) 
   AND MAT.MAT_ID = WIP.MAT_ID(+) 
   AND MAT.MAT_ID = CAP.MAT_ID(+) 
   AND MAT.MAT_ID = MON.MAT_ID(+) 
 GROUP BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4,  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.CONV_MAT_ID,  ' ',  ' ',  ' ' 
HAVING SUM(NVL(WEEK1_PLAN, 0) + NVL(SHP_WEEK, 0) + NVL(TOTAL, 0) + NVL(DA_CAPA, 0) + NVL(WB_CAPA, 0) + NVL(ORI_PLAN, 0) + NVL(REV_PLAN, 0) + NVL(SHP_MONTH, 0)) > 0
 ORDER BY MAT.MAT_GRP_1,  ' ', MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4,  ' ', MAT.MAT_GRP_6,  ' ',  ' ',  ' ', MAT.CONV_MAT_ID,  ' ',  ' ',  ' '
 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010305'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER AS STEP, A.MAT_CMF_10 AS PIN_TYPE, A.MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , A.LOT_ID 
     , A.LOT_CMF_5 
     , A.STATUS 
     , A.HOLD_CODE 
     , A.HOLD_DESC 
     , A.CREATE_DAYDIFF 
     , A.ISSUE_DAYDIFF 
     , A.OPER_IN_DAYDIFF 
     , A.QTY_1 
     , A.LOT_CMF_14 
     , A.ISSUE_TIME 
     , A.OPER_IN_TIME 
     , A.LAST_COMMENT 
     , A.LOT_CMF_7 
     , CASE WHEN A.S_TIME IS NOT NULL AND A.S_TIME <= A.E_TIME THEN TRUNC(TO_DATE(A.E_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.S_TIME, 'YYYYMMDDHH24MISS'), 2) END AS DA_DAYDIFF
  FROM ( 
        SELECT C.* 
             , A.OPER  
             , A.LOT_ID  
             , A.LOT_CMF_5  
             , CASE WHEN HOLD_FLAG = 'Y' THEN 'HOLD'
                    ELSE DECODE(A.LOT_STATUS, 'PROC', 'RUN', A.LOT_STATUS)   
               END AS STATUS 
             , A.HOLD_CODE 
             , DECODE(A.HOLD_CODE, ' ', ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY=A.FACTORY AND TABLE_NAME = 'HOLD_CODE' AND KEY_1 = A.HOLD_CODE AND ROWNUM=1)) HOLD_DESC 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - DECODE(A.LOT_CMF_14, ' ', TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS')), 2) AS CREATE_DAYDIFF 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - DECODE(A.RESV_FIELD_1, ' ', SYSDATE, TO_DATE(A.RESV_FIELD_1,'YYYYMMDDHH24MISS')), 2) AS ISSUE_DAYDIFF 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_IN_DAYDIFF 
             , A.QTY_1  
             , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS') AS LOT_CMF_14 
             , DECODE(A.RESV_FIELD_1, ' ', ' ', TO_CHAR(TO_DATE(A.RESV_FIELD_1, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS ISSUE_TIME 
             , DECODE(A.OPER_IN_TIME, ' ', ' ', TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS OPER_IN_TIME 
             , A.LAST_COMMENT
             , A.LOT_CMF_7
             , (SELECT TRAN_TIME FROM RWIPLOTHIS WHERE FACTORY = 'HMVA2' AND HIST_DEL_FLAG = ' ' AND TRAN_CODE = 'END' AND OLD_OPER = 'A0250' AND LOT_ID = DECODE(D.FROM_TO_LOT_ID, NULL, A.LOT_ID, D.FROM_TO_LOT_ID)) AS S_TIME 
             , A.CREATE_TIME AS E_TIME 
          FROM RWIPLOTSTS_BOH A, MWIPMATDEF C 
             , (SELECT * FROM RWIPLOTSPL WHERE FACTORY = 'HMVA2' AND (OPER LIKE 'A04%' OR OPER = 'A0333') AND FROM_TO_FLAG = 'T') D
         WHERE A.CUTOFF_DT = '2020080222'
           AND A.FACTORY = C.FACTORY 
           AND A.MAT_ID = C.MAT_ID 
           AND A.LOT_ID = D.LOT_ID(+) 
           AND A.FACTORY  = 'HMVA2'  
           AND A.OPER NOT IN ('00001','00002') 
           AND A.MAT_VER = 1
           AND A.LOT_DEL_FLAG = ' ' 
           AND A.LOT_TYPE = 'W' 
           AND A.OPER IN ('A0040')
           AND TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) > 2
       ) A 
ORDER BY A.OPER, A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.LOT_ID, A.LOT_CMF_5, A.STATUS, A.HOLD_CODE, A.LOT_CMF_14, A.OPER_IN_TIME, A.LAST_COMMENT, A.LOT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.OPER AS STEP, A.MAT_CMF_10 AS PIN_TYPE, A.MAT_ID AS PRODUCT,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
     , A.LOT_ID 
     , A.LOT_CMF_5 
     , A.STATUS 
     , A.HOLD_CODE 
     , A.HOLD_DESC 
     , A.CREATE_DAYDIFF 
     , A.ISSUE_DAYDIFF 
     , A.OPER_IN_DAYDIFF 
     , A.QTY_1 
     , A.LOT_CMF_14 
     , A.ISSUE_TIME 
     , A.OPER_IN_TIME 
     , A.LAST_COMMENT 
     , A.LOT_CMF_7 
     , CASE WHEN A.S_TIME IS NOT NULL AND A.S_TIME <= A.E_TIME THEN TRUNC(TO_DATE(A.E_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.S_TIME, 'YYYYMMDDHH24MISS'), 2) END AS DA_DAYDIFF
  FROM ( 
        SELECT C.* 
             , A.OPER  
             , A.LOT_ID  
             , A.LOT_CMF_5  
             , CASE WHEN HOLD_FLAG = 'Y' THEN 'HOLD'
                    ELSE DECODE(A.LOT_STATUS, 'PROC', 'RUN', A.LOT_STATUS)   
               END AS STATUS 
             , A.HOLD_CODE 
             , DECODE(A.HOLD_CODE, ' ', ' ', (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY=A.FACTORY AND TABLE_NAME = 'HOLD_CODE' AND KEY_1 = A.HOLD_CODE AND ROWNUM=1)) HOLD_DESC 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - DECODE(A.LOT_CMF_14, ' ', TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS'), TO_DATE(A.LOT_CMF_14,'YYYYMMDDHH24MISS')), 2) AS CREATE_DAYDIFF 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - DECODE(A.RESV_FIELD_1, ' ', SYSDATE, TO_DATE(A.RESV_FIELD_1,'YYYYMMDDHH24MISS')), 2) AS ISSUE_DAYDIFF 
             , TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) AS OPER_IN_DAYDIFF 
             , A.QTY_1  
             , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS') AS LOT_CMF_14 
             , DECODE(A.RESV_FIELD_1, ' ', ' ', TO_CHAR(TO_DATE(A.RESV_FIELD_1, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS ISSUE_TIME 
             , DECODE(A.OPER_IN_TIME, ' ', ' ', TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'), 'YY/MM/DD HH24:MI:SS')) AS OPER_IN_TIME 
             , A.LAST_COMMENT
             , A.LOT_CMF_7
             , (SELECT TRAN_TIME FROM RWIPLOTHIS WHERE FACTORY = 'HMVA2' AND HIST_DEL_FLAG = ' ' AND TRAN_CODE = 'END' AND OLD_OPER = 'A0250' AND LOT_ID = DECODE(D.FROM_TO_LOT_ID, NULL, A.LOT_ID, D.FROM_TO_LOT_ID)) AS S_TIME 
             , A.CREATE_TIME AS E_TIME 
          FROM RWIPLOTSTS_BOH A, MWIPMATDEF C 
             , (SELECT * FROM RWIPLOTSPL WHERE FACTORY = 'HMVA2' AND (OPER LIKE 'A04%' OR OPER = 'A0333') AND FROM_TO_FLAG = 'T') D
         WHERE A.CUTOFF_DT = '2020080222'
           AND A.FACTORY = C.FACTORY 
           AND A.MAT_ID = C.MAT_ID 
           AND A.LOT_ID = D.LOT_ID(+) 
           AND A.FACTORY  = 'HMVA2'  
           AND A.OPER NOT IN ('00001','00002') 
           AND A.MAT_VER = 1
           AND A.LOT_DEL_FLAG = ' ' 
           AND A.LOT_TYPE = 'W' 
           AND A.OPER IN ('A0040')
           AND TRUNC(TO_DATE('20200802220000','YYYYMMDDHH24MISS') - TO_DATE(A.OPER_IN_TIME,'YYYYMMDDHH24MISS'), 2) > 2
       ) A 
ORDER BY A.OPER, A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.LOT_ID, A.LOT_CMF_5, A.STATUS, A.HOLD_CODE, A.LOT_CMF_14, A.OPER_IN_TIME, A.LAST_COMMENT, A.LOT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010412'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.*
     , (BOH + INPUT + R_OUT + PART_CHANGE_IN + ADAPT_BONUS + ADAPT_OPER_IN + LOTTYPE_CHNAGE_E_P + REPAIR_END_OPER_IN) - (R_IN + OUTPUT + SHIP + LOSS + CV_QTY + TERMINATE_QTY + BUFFER_LOSS + COMBINE_TRANSFER + PART_CHANGE_OUT + ADAPT_LOSS + ADAPT_OPER_OUT + LOTTYPE_CHNAGE_P_E + REPAIR_END_OPER_OUT + EOH) AS DIFF
  FROM (
        SELECT NVL((SELECT MAX(MCP_TO_PART) FROM RWIPMCPBOM WHERE FACTORY = A.FACTORY AND MAT_ID = A.MAT_ID), A.MAT_ID) AS MCP_TO_PART
             , A.MAT_ID
             , A.BASE_MAT_ID AS SAP_CODE
             , A.OPER
             , SUM(CASE WHEN BASE_DATE BETWEEN '20200701' AND '20200731' THEN A.BOH ELSE 0 END) AS BOH
             , SUM(A.RET_HM_CO) AS R_IN
             , SUM(A.OPER_IN - A.BOH_OPER_IN_HIS_DEL - A.BOH_ETC_TRAN_IN_HIS_DEL) AS INPUT
             , SUM(CASE WHEN A.OPER LIKE '%Z010' THEN A.MOVE_QTY - A.SHIP_CUSTOMER
                        WHEN A.OPER LIKE '%0000' THEN A.MOVE_QTY - A.RET_HM_CO
                        ELSE A.MOVE_QTY END) AS OUTPUT
             , SUM(0) AS R_OUT
             , SUM(A.SHIP_CUSTOMER) AS SHIP
             , SUM(NVL(A.LOSS,0)) - SUM(NVL(C.BUFFER_LOSS,0)) AS LOSS
             , SUM(A.CV_QTY) AS CV_QTY
             , SUM(A.TERMINATE_QTY) AS TERMINATE_QTY
             , SUM(NVL(C.BUFFER_LOSS,0)) AS BUFFER_LOSS
             , SUM(A.TERMINATE_COMBINE) AS COMBINE_TRANSFER
             , SUM(A.PART_CHANGE_IN) AS PART_CHANGE_IN
             , SUM(A.PART_CHANGE_OUT) AS PART_CHANGE_OUT
             , SUM(A.ADAPT_BONUS) AS ADAPT_BONUS
             , SUM(A.ADAPT_LOSS) AS ADAPT_LOSS
             , SUM(A.ADAPT_OPER_IN) AS ADAPT_OPER_IN
             , SUM(A.ADAPT_OPER_OUT) AS ADAPT_OPER_OUT
             , SUM(A.LOTTYPE_CHNAGE_E_P) AS LOTTYPE_CHNAGE_E_P
             , SUM(A.LOTTYPE_CHNAGE_P_E) AS LOTTYPE_CHNAGE_P_E
             , SUM(A.REPAIR_END_OPER_IN) AS REPAIR_END_OPER_IN 
             , SUM(A.EOH_REPAIR_OUT) AS REPAIR_END_OPER_OUT
             , SUM(CASE WHEN BASE_DATE BETWEEN '20200701' AND '20200731' THEN A.EOH ELSE 0 END) AS EOH 
             , SUM(DIFF_ADJUSTMENT) AS DIFF_ADJUSTMENT
          FROM RSAPMESSBL A 
             , MWIPMATDEF B 
             , (
                SELECT MAT_ID, OPER, SUM(LOSS_QTY) AS BUFFER_LOSS
                  FROM RWIPLOTLSM
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND TRAN_TIME BETWEEN '20200630220000' AND '20200731215959'
                   AND HIST_DEL_FLAG = ' '
                   AND OPER IN ('A0015', 'A0395')
                   AND LOSS_CODE = 'N01'
                 GROUP BY MAT_ID, OPER
               ) C
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.MAT_ID = B.MAT_ID 
           AND A.MAT_ID = C.MAT_ID(+)
           AND A.OPER = C.OPER(+)
           AND A.FACTORY = 'HMVA2'
           AND A.BASE_DATE BETWEEN '20200701' AND '20200731'
           AND A.CUTOFF_TIME = '22 '
           AND A.MAT_ID LIKE '%'
           AND B.MAT_TYPE = 'FG' 
         GROUP BY A.FACTORY, A.MAT_ID, A.BASE_MAT_ID, A.OPER
       ) A
 ORDER BY MCP_TO_PART, MAT_ID, SAP_CODE, OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010425'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202005', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'SEC1101'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY= :FACTORY ORDER BY USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
DELETE FROM RWEBUSRDEF WHERE FACTORY= :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010425'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202004', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200101' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200101' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200101' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202001', 'YYYYMM')), 'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200131' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20191201' AND '20191231'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20191201') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20191231' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20191201') - 1, 'YYYYMMDD') || '220000' AND '20191231' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20191201') - 1, 'YYYYMMDD') || '220000' AND '20191231' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20191201' AND '20191231'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20191201' AND '20191231'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200131' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200229' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200331' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE 'P%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE 'P%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE 'P%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE 'P%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200726220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200726220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT  FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010425'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010403'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010425'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200131' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200229' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520L_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520E_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200731220000' AND '20200801215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET523_WIN2_87CNNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520L_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET520E_A20_87CUNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET523_M31S_87CNNKN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ' 
     , A.INVOICE_NO
     , A.LOT_CMF_11 
     , A.LOT_ID
     , A.TRAN_TIME             
     , A.WORK_DATE
     , A.LOT_CMF_5
     , SUM(NVL(A.QTY_1,0)) +  SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS IN_QTY 
     , NVL(SUM(A.QTY_1),0) AS SHIP_QTY  
     , DECODE( NVL(SUM(A.QTY_1), 0), 0, 0, ROUND((SUM(A.QTY_1)/   (SUM(NVL(A.QTY_1,0)) + SUM(NVL(LOSS_QTY,0)) - SUM(NVL(D.TOTAL_BONUS_QTY,0))))*100,3)) AS YIELD
     , NVL(ROUND(SUM(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS')) * 1,2), 0) AS TAT
     , 0 AS WAFER_QTY 
     , SUM(NVL(C.LOSS_QTY,0)) 
     , SUM(NVL(C.CV100,0))
     , SUM(NVL(C.CV200,0))
     , SUM(NVL(C.CV991,0))
     , SUM(NVL(C.BCV,0))
     , SUM(NVL(C.ECV,0))
     , SUM(NVL(C.HBCV,0))
     , SUM(NVL(C.HDCV,0))
     , SUM(NVL(C.HECV,0))
     , SUM(NVL(C.HQCV,0))
     , SUM(NVL(C.HSCV,0))
     , SUM(NVL(D.TOTAL_BONUS_QTY,0)) AS BONUS
     , A.NCF
     , A.NCH
     , A.LOT_CMF_10
     , DECODE(A.CREATE_CODE,'PROD', '','Y') AS RETN
     , A.LOT_CMF_3
  FROM (
        SELECT B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7, A.LOT_CMF_4 
             , A.FACTORY
             , A.INVOICE_NO
             , A.LOT_CMF_10 
             , A.LOT_CMF_11 
             , A.LOT_CMF_14 
             , A.LOT_ID
             , NVL(SUM(A.QTY_1),0) QTY_1
             , NVL(SUM(A.QTY_2),0) QTY_2
             , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS WAFER_QTY
             , GET_WORK_DATE(A.TRAN_TIME,'D') AS WORK_DATE
             , A.TRAN_TIME     
             , A.LOT_CMF_5     
             , NVL(SUM(A.IN_QTY),0) IN_QTY
             , MESMGR.F_GET_MCP_NCF_SINGLE@RPTTOMES(A.LOT_ID) AS NCF
             , MESMGR.F_GET_SEC_NCX@RPTTOMES(A.FACTORY, 'NCHCODE', A.LOT_ID, 'V') AS NCH
             , A.CREATE_CODE
             , A.CREATE_TIME
             , A.RESV_FIELD_1
             , A.LOT_CMF_3
          FROM (
                SELECT FROM_FACTORY AS FACTORY
                     , INVOICE_NO
                     , MAT_ID
                     , LOT_ID
                     , SHIP_QTY_1 AS QTY_1
                     , SHIP_QTY_2 AS QTY_2 
                     , TRAN_TIME   
                     , LOT_CMF_3   
                     , LOT_CMF_4   
                     , LOT_CMF_5   
                     , LOT_CMF_10   
                     , LOT_CMF_11   
                     , LOT_CMF_14   
                     , IN_QTY 
                     , CREATE_CODE 
                     , CREATE_TIME 
                     , RESV_FIELD_1 
                  FROM VWIPSHPLOT   
                 WHERE 1=1   
                   AND FROM_FACTORY  = 'HMVA2' 
                   AND OWNER_CODE = 'PROD' 
                   AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                   AND LOT_TYPE = 'W' 
                   AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                   AND LOT_CMF_5 LIKE 'P%'
             ) A 
             , MWIPMATDEF@RPTTOMES B 
         WHERE 1=1 
           AND A.MAT_ID = B.MAT_ID(+) 
           AND A.FACTORY = B.FACTORY(+) 
           AND B.MAT_VER(+) = 1 
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_2, B.MAT_GRP_3, B.MAT_GRP_4, B.MAT_GRP_5, B.MAT_GRP_6, B.MAT_GRP_7, B.MAT_GRP_8, B.MAT_CMF_10, A.MAT_ID, B.MAT_CMF_7
                , A.FACTORY, A.INVOICE_NO, A.LOT_CMF_10, A.LOT_CMF_11, A.LOT_CMF_14, A.LOT_ID, A.TRAN_TIME,  A.LOT_CMF_4, A.LOT_CMF_5, A.CREATE_CODE, A.CREATE_TIME, A.RESV_FIELD_1, A.LOT_CMF_3
       ) A
       , ( 
          SELECT FACTORY, MAT_VER, LOT_ID, SUM(LOSS_QTY) AS LOSS_QTY, SUM(CV100) CV100, SUM(CV200) CV200, SUM(CV991) CV991 , SUM(BCV) BCV, SUM(ECV) ECV, SUM(HBCV) HBCV, SUM(HDCV) HDCV, SUM(HECV) HECV, SUM(HQCV) HQCV, SUM(HSCV) HSCV
            FROM ( 
                  SELECT FACTORY, MAT_ID, MAT_VER, LOT_ID   
                       , SUM(DECODE(LOSS_CODE, '100', LOSS_QTY, 0)) AS CV100  
                       , SUM(DECODE(LOSS_CODE, '200', LOSS_QTY, 0)) AS CV200  
                       , SUM(DECODE(LOSS_CODE, '991', LOSS_QTY, 0)) AS CV991  
                       , SUM(DECODE(LOSS_CODE, '992-BCV', LOSS_QTY, 0)) AS BCV  
                       , SUM(DECODE(LOSS_CODE, '992-ECV', LOSS_QTY, 0)) AS ECV  
                       , SUM(DECODE(LOSS_CODE, '992-HBCV', LOSS_QTY, 0)) AS HBCV  
                       , SUM(DECODE(LOSS_CODE, '992-HDCV', LOSS_QTY, 0)) AS HDCV  
                       , SUM(DECODE(LOSS_CODE, '992-HECV', LOSS_QTY, 0)) AS HECV  
                       , SUM(DECODE(LOSS_CODE, '992-HQCV', LOSS_QTY, 0)) AS HQCV  
                       , SUM(DECODE(LOSS_CODE, '992-HSCV', LOSS_QTY, 0)) AS HSCV  
                       , SUM(LOSS_QTY) AS LOSS_QTY  
                    FROM RWIPLOTLSM  
                   WHERE HIST_DEL_FLAG= ' '  
                     AND LOT_ID IN ( 
                                    SELECT LOT_ID
                                      FROM VWIPSHPLOT   
                                     WHERE 1=1   
                                       AND FROM_FACTORY  = 'HMVA2' 
                                       AND OWNER_CODE = 'PROD' 
                                       AND TO_FACTORY IN ('CUSTOMER', 'HMKT1') 
                                       AND LOT_TYPE = 'W' 
                                       AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010','SZ010','F0000', 'BZ010')
                                       AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
                                       AND LOT_CMF_5 LIKE 'P%'
                                   ) 
                   GROUP BY FACTORY, MAT_ID, MAT_VER, LOT_ID 
                 )  
           GROUP BY FACTORY, MAT_VER, LOT_ID
         ) C  
         , RWIPLOTBNS D 
     WHERE 1=1  
       AND A.FACTORY  = 'HMVA2' 
       AND A.FACTORY = C.FACTORY(+)  
       AND A.FACTORY = D.FACTORY(+) 
       AND A.LOT_ID = C.LOT_ID(+) 
       AND A.LOT_ID = D.LOT_ID(+) 
       AND C.MAT_VER(+)=1   
       AND D.MAT_VER(+)=1  
       AND A.MAT_ID LIKE 'DRET523_M31S_KN7'  
 GROUP BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10,A.CREATE_CODE, A.LOT_CMF_3  
 ORDER BY A.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', A.MAT_CMF_10, A.MAT_ID,  ' ',  ' ', A.MAT_ID 
        , A.INVOICE_NO, A.LOT_CMF_11, A.LOT_ID, A.TRAN_TIME, A.WORK_DATE, A.LOT_CMF_5, A.NCF, A.NCH, A.LOT_CMF_10  

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200803', '20200810', '20200817', '20200824', '20200831')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070505'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,0) AS WEEK
  FROM MWIPCALDEF
 WHERE CALENDAR_ID = 'OTD'
   AND SYS_DATE IN ('20200803', '20200810', '20200817', '20200824', '20200831')
 ORDER BY PLAN_YEAR || LPAD(PLAN_WEEK,2,0)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '
     , ROUND(SUM(PLN_W1) / 1, 0) AS PLN_W1
     , ROUND(SUM(SMT) / 1, 0) AS SMT_END
     , ROUND(SUM(AO_QTY) / 1, 0) AS AO_QTY
     , ROUND(SUM(AFTER_DA1) / 1, 0) AS AFTER_DA1
     , ROUND(SUM(SMT_DEF) / 1, 0) AS SMT_DEF
     , ROUND(SUM(SMT_DEF2) / 1, 0) AS SMT_DEF2
     , ROUND(SUM(SMT_DEF3) / 1, 0) AS SMT_DEF3
     , ROUND(SUM(SMT_OUT_TODAY) / 1, 0) AS SMT_OUT_TODAY
     , ROUND(SUM(SMT_OUT_YESTERDAY) / 1, 0) AS SMT_OUT_YESTERDAY
     , ROUND(SUM(SMT_TARGET) / 1, 0) AS SMT_TARGET
     , ROUND(SUM(DA1_CAPA) / 1, 0) AS DA1_CAPA
     , ROUND(SUM(BEFORE_DA1) / 1, 0) AS BEFORE_DA1
     , ROUND(SUM(DA_SMT) / 1, 0) AS DA_SMT
     , ROUND(SUM(PCB_SCH) / 1, 0) AS PCB_SCH
     , CASE WHEN SUM(PCB_SCH) = 0 THEN 0
            ELSE ROW_NUMBER() OVER(ORDER BY DECODE(SUM(PCB_SCH),0, 999, SUM(PCB_SCH)))
       END AS RNK
     , ROUND(SUM(TTL_WIP) / 1, 0) AS TTL_WIP
     , ROUND(SUM(SMT) / 1, 0) AS SMT
     , ROUND(SUM(SMT_WAIT) / 1, 0) AS SMT_WAIT
     , ROUND(SUM(WIK_WIP) / 1, 0) AS WIK_WIP
     , ROUND(SUM(INV_L_QTY) / 1, 0) AS INV_L_QTY
     , ROUND(SUM(INV_QTY) / 1, 0) AS INV_QTY
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > SUM(SMT_TARGET) THEN SUM(SMT_TARGET) ELSE SUM(TTL_WAIT) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > SUM(DA1_CAPA) THEN SUM(DA1_CAPA) ELSE SUM(TTL_WAIT) END)
       END / 1, 0) AS GUIDE_D1
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 2) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - SUM(SMT_TARGET) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - SUM(SMT_TARGET) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 2) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - SUM(DA1_CAPA) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - SUM(DA1_CAPA) END)
       END / 1, 0) AS GUIDE_D2
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 3) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 2) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 3) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 2) END)
       END / 1, 0) AS GUIDE_D3
     , ROUND(CASE WHEN SUM(SMT_TARGET) > SUM(DA1_CAPA) THEN (CASE WHEN SUM(TTL_WAIT) > (SUM(SMT_TARGET) * 4) THEN SUM(SMT_TARGET) 
                                                                  WHEN SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) <= 0 THEN 0
                                                                  ELSE SUM(TTL_WAIT) - (SUM(SMT_TARGET) * 3) END)
                  ELSE (CASE WHEN SUM(TTL_WAIT) > (SUM(DA1_CAPA) * 4) THEN SUM(DA1_CAPA) 
                             WHEN SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) <= 0 THEN 0
                             ELSE SUM(TTL_WAIT) - (SUM(DA1_CAPA) * 3) END)
       END / 1, 0) AS GUIDE_D4
     , ROUND(SUM(ORDER_QTY) / 1, 0) AS ORDER_QTY
     , ROUND(SUM(PLN_W2) / 1, 0) AS PLN_W2
     , ROUND(SUM(PLN_W3) / 1, 0) AS PLN_W3
     , ROUND(SUM(PLN_W4) / 1, 0) AS PLN_W4
     , ROUND(SUM(PLN_W5) / 1, 0) AS PLN_W5
  FROM (
        SELECT MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
             , SUM(NVL(MAT.PLN_W1,0)) AS PLN_W1
             , SUM(NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)) AS SMT_END
             , SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF2
             , SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0) + NVL(MAT.PLN_W3,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) AS SMT_DEF3
             , SUM(NVL(MOV.SMT_OUT_YESTERDAY,0)) AS SMT_OUT_YESTERDAY
             , SUM(NVL(MOV.SMT_OUT_TODAY,0)) AS SMT_OUT_TODAY
             , ROUND(CASE TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'DY') WHEN '월' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0)))
                                                                         WHEN '화' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 7
                                                                         WHEN '수' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 6
                                                                         WHEN '목' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 5
                                                                         WHEN '금' THEN SUM((NVL(MAT.PLN_W1,0) + NVL(MAT.PLN_W2,0)) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 4
                                                                         WHEN '토' THEN SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 3
                                                                         ELSE SUM(NVL(MAT.PLN_W1,0) - (NVL(MAT.AO_QTY,0) + NVL(MAT.AFTER_DA1,0) + NVL(WIP.SMT,0))) / 2
               END, 0) AS SMT_TARGET 
             , SUM(NVL(MAT.DA1_CAPA,0)) AS DA1_CAPA
             , SUM(NVL(MAT.BEFORE_DA1,0)) AS BEFORE_DA1
             , SUM(NVL(WIP.SMT,0) - NVL(MAT.BEFORE_DA1,0)) AS DA_SMT
             , CASE WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 AND SUM(NVL(MAT.BEFORE_DA1,0)) > 0 THEN 72
                    WHEN SUM(NVL(MAT.DA1_CAPA,0)) = 0 THEN 0
                    ELSE ROUND(SUM(NVL(WIP.SMT,0)) / SUM(NVL(MAT.DA1_CAPA,0)) * 24, 2)
               END AS PCB_SCH
             , SUM(NVL(WIP.SMT,0) + NVL(WIP.SMT_WAIT,0) + NVL(WIK.WIK_WIP,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WIP
             , SUM(NVL(WIP.SMT_WAIT,0) + NVL(WMS.INV_L_QTY,0) + NVL(WMS.INV_QTY,0)) AS TTL_WAIT
             , SUM(NVL(WIP.SMT_WAIT,0)) AS SMT_WAIT
             , SUM(NVL(WIK.WIK_WIP,0)) AS WIK_WIP
             , SUM(NVL(WMS.INV_L_QTY,0)) AS INV_L_QTY
             , SUM(NVL(WMS.INV_QTY,0)) AS INV_QTY
             , SUM(NVL(ORD.ORDER_QTY,0)) AS ORDER_QTY
             , SUM(NVL(MAT.PLN_W2,0)) AS PLN_W2
             , SUM(NVL(MAT.PLN_W3,0)) AS PLN_W3
             , SUM(NVL(MAT.PLN_W4,0)) AS PLN_W4
             , SUM(NVL(MAT.PLN_W5,0)) AS PLN_W5
             , SUM(NVL(WIP.SMT,0)) AS SMT
             , SUM(NVL(MAT.AO_QTY,0)) AS AO_QTY
             , SUM(NVL(MAT.AFTER_DA1,0)) AS AFTER_DA1
          FROM (
                SELECT A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
                     , SUM(NVL(B.PLN_W1,0)) AS PLN_W1
                     , SUM(NVL(B.PLN_W2,0)) AS PLN_W2
                     , SUM(NVL(B.PLN_W3,0)) AS PLN_W3
                     , SUM(NVL(B.PLN_W4,0)) AS PLN_W4
                     , SUM(NVL(B.PLN_W5,0)) AS PLN_W5
                     , SUM(NVL(C.AO_QTY,0)) AS AO_QTY
                     , SUM(NVL(D.AFTER_DA1,0)) AS AFTER_DA1
                     , SUM(NVL(D.BEFORE_DA1,0)) AS BEFORE_DA1
                     , SUM(NVL(E.DA1_CAPA,0)) AS DA1_CAPA 
                  FROM (
                        SELECT DISTINCT MAT_CODE, MAT_CODE_DESC, B.VENDOR_ID, B.MAT_CMF_11, B.MAT_ID
                          FROM (
                                SELECT DISTINCT A.MAT_ID AS MAT_CODE, A.MAT_DESC AS MAT_CODE_DESC, B.PARTNUMBER
                                  FROM MWIPMATDEF A
                                     , CWIPBOMDEF B
                                 WHERE 1=1
                                   AND A.MAT_ID = B.MATCODE
                                   AND A.FACTORY = 'HMVA2'
                                   AND A.DELETE_FLAG = ' '
                                   AND A.FIRST_FLOW IN ('HMAI','HMAJ','HMAR','HMBF', 'HMBJ')
                                   AND B.RESV_FLAG_1 = 'Y'
                                   AND B.RESV_FIELD_2 = 'PB'
                                   AND LENGTH(A.MAT_ID) = 10
                               ) A
                             , MWIPMATDEF B
                         WHERE A.PARTNUMBER = B.MAT_ID
                           AND B.FACTORY = 'HMVA2'
                           AND B.DELETE_FLAG = ' '
                           AND REGEXP_LIKE(B.MAT_GRP_5, '-|1st|Merge|Middle*')
                       ) A
                     , (
                        SELECT MAT_ID
                             , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS PLN_W1
                             , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS PLN_W2
                             , SUM(DECODE(PLAN_WEEK, '202034', WW_QTY, 0)) AS PLN_W3
                             , SUM(DECODE(PLAN_WEEK, '202035', WW_QTY, 0)) AS PLN_W4
                             , SUM(DECODE(PLAN_WEEK, '202036', WW_QTY, 0)) AS PLN_W5
                          FROM RWIPPLNWEK
                         WHERE 1=1
                           AND FACTORY = 'HMVA2'
                           AND GUBUN = '3'
                           AND PLAN_WEEK BETWEEN '202032' AND '202036'
                         GROUP BY MAT_ID
                       ) B
                     , (
                        SELECT MAT_ID 
                             , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) AS AO_QTY
                          FROM RSUMFACMOV
                         WHERE 1=1
                           AND CM_KEY_1 = 'HMVA2'
                           AND WORK_DATE BETWEEN '20200801' AND '20200807'
                           AND LOT_TYPE = 'W'
                           AND FACTORY <> 'RETURN'
                         GROUP BY MAT_ID
                       ) C
                     , (
                        SELECT MAT_ID 
                             , SUM(CASE WHEN OPER > 'A0401' THEN QTY_1 ELSE 0 END) AS AFTER_DA1
                             , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1)
                                        WHEN OPER <= 'A0401' THEN QTY_1
                                        ELSE 0 
                                   END) AS BEFORE_DA1 
                          FROM ( 
                                SELECT MAT_ID, OPER, QTY_1 
                                     , (SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMVA2' AND TABLE_NAME IN ('H_SEC_AUTO_LOSS','H_HX_AUTO_LOSS') AND KEY_1 = A.MAT_ID) AS COMP_CNT 
                                  FROM RWIPLOTSTS A
                                 WHERE 1=1   
                                   AND FACTORY = 'HMVA2'
                                   AND LOT_DEL_FLAG = ' '
                                   AND LOT_TYPE = 'W'
                                   AND OPER <> 'A0000'
                               ) 
                         GROUP BY MAT_ID
                       ) D
                     , (
                        SELECT RES.MAT_ID
                             , SUM(TRUNC(NVL(NVL(UPH.UPEH,0) * 24 * 0.68 * RES.RAS_CNT, 0))) AS DA1_CAPA
                          FROM ( 
                                SELECT FACTORY, RES_STS_2 AS MAT_ID, RES_STS_8 AS OPER                      
                                     , RES_GRP_6 AS RES_MODEL, RES_GRP_7 AS UPEH_GRP, COUNT(RES_ID) AS RAS_CNT 
                                  FROM MRASRESDEF 
                                 WHERE 1 = 1  
                                   AND FACTORY  = 'HMVA2' 
                                   AND RES_CMF_9 = 'Y' 
                                   AND RES_CMF_7 = 'Y' 
                                   AND DELETE_FLAG = ' ' 
                                   AND RES_STS_8 IN ('A0333', 'A0400', 'A0401')
                                 GROUP BY FACTORY,RES_STS_2,RES_STS_8,RES_GRP_6,RES_GRP_7 
                               ) RES 
                             , CRASUPHDEF UPH 
                         WHERE 1 = 1 
                           AND RES.FACTORY = UPH.FACTORY(+) 
                           AND RES.OPER = UPH.OPER(+) 
                           AND RES.RES_MODEL = UPH.RES_MODEL(+) 
                           AND RES.UPEH_GRP = UPH.UPEH_GRP(+) 
                           AND RES.MAT_ID = UPH.MAT_ID(+)
                         GROUP BY RES.MAT_ID 
                       ) E
                 WHERE 1=1
                   AND A.MAT_ID = B.MAT_ID(+)
                   AND A.MAT_ID = C.MAT_ID(+)
                   AND A.MAT_ID = D.MAT_ID(+)
                   AND A.MAT_ID = E.MAT_ID(+)
                 GROUP BY A.MAT_CODE, A.MAT_CODE_DESC,  ' ', A.MAT_CMF_11,  ' '
               ) MAT
             , (
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(CASE WHEN GUBUN = 'SMT' THEN QTY_1 ELSE 0 END) SMT
                     , SUM(CASE WHEN GUBUN = 'SMT_WAIT' THEN QTY_1 ELSE 0 END) SMT_WAIT
                  FROM (
                        SELECT MAT_ID, OPER
                             , CASE WHEN OPER <= 'M0330' THEN 'SMT_WAIT' ELSE 'SMT' END AS GUBUN
                             , QTY_1
                          FROM RWIPLOTSTS
                         WHERE 1=1   
                           AND FACTORY = 'HMVA2'
                           AND LOT_TYPE = 'P'
                           AND LOT_DEL_FLAG = ' '
                           AND LOT_CMF_2 = '-'
                           AND LOT_CMF_9 != ' '
                           AND QTY_1 > 0
                           AND OPER <>  'V0000'
                           AND (OPER LIKE 'M%' OR OPER LIKE 'V%')
                       )
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIP
             , (
                SELECT MAT_CODE
                     , SUM(INV_QTY) AS INV_QTY
                     , SUM(INV_L_QTY) AS INV_L_QTY
                  FROM (
                        SELECT MAT_ID AS MAT_CODE
                             , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY
                             , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY
                          FROM CWMSLOTSTS@RPTTOMES
                         WHERE 1=1
                           AND QUANTITY> 0
                           AND STORAGE_LOCATION IN ('1000', '1001', '1003')
                           AND MAT_ID LIKE 'R16%'
                         GROUP BY MAT_ID 
                         UNION ALL 
                        SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY 
                          FROM CWIPMATSLP@RPTTOMES 
                         WHERE 1=1 
                           AND RECV_FLAG = ' ' 
                           AND MAT_ID LIKE 'R16%' 
                           AND IN_TIME BETWEEN '20200801000000' AND '20200803235959' 
                         GROUP BY MAT_ID 
                       )
                 GROUP BY MAT_CODE 
               ) WMS
             , (          
                SELECT REPLACE(MAT_ID, '-O', '') AS MAT_CODE
                     , SUM(LOT_QTY) AS WIK_WIP           
                  FROM ISTMWIKWIP@RPTTOMES
                 WHERE 1=1
                   AND CUTOFF_DT = '20200803' || TO_CHAR(SYSDATE, 'HH24')
                 GROUP BY REPLACE(MAT_ID, '-O', '')
               ) WIK
             , (
                SELECT REPLACE(MATCODE, '-O', '') AS MAT_CODE
                     , SUM(ORDER_QTY) AS ORDER_QTY
                  FROM RSUMWIPMAT
                 WHERE MAT_TYPE = 'PB'
                 GROUP BY REPLACE(MATCODE, '-O', '')  
               ) ORD
             , (
                SELECT MAT_ID AS MAT_CODE
                     , SUM(DECODE(WORK_DATE, '20200802', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_YESTERDAY
                     , SUM(DECODE(WORK_DATE, '20200803', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1, 0)) AS SMT_OUT_TODAY
                  FROM RSUMWIPMOV
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE IN ('20200802','20200803')
                   AND OPER = 'M0330'
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_CODE = WIP.MAT_CODE(+)
           AND MAT.MAT_CODE = WMS.MAT_CODE(+)
           AND MAT.MAT_CODE = WIK.MAT_CODE(+)
           AND MAT.MAT_CODE = ORD.MAT_CODE(+)
           AND MAT.MAT_CODE = MOV.MAT_CODE(+)
         GROUP BY MAT.MAT_CODE, MAT.MAT_CODE_DESC,  ' ', MAT.MAT_CMF_11,  ' '
       )
 GROUP BY MAT_CODE, MAT_CODE_DESC,  ' ', MAT_CMF_11,  ' '

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202008' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR||LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR||LPAD(SYS_MONTH,2,'0') = '202008' 
   AND SYS_DATE <= '20200803' 
 ORDER BY PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010907'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010611'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011006'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010204'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010206'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE)  FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD'   AND SYS_YEAR||LPAD(PLAN_WEEK,2,'0') = '202032'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010227'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010226'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200802','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = PLN.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', PLN.MAT_GRP_2 AS FAMILY, PLN.MAT_GRP_3 AS PACKAGE,  ' ',  ' ',  ' ', PLN.MAT_CMF_10 AS PIN_TYPE, PLN.MAT_GRP_7 AS DENSITY,  ' ', PLN.MAT_ID AS PRODUCT,  ' '
     , ROUND(SUM(NVL(PLN.MON_PLAN,0)) / 1000, 1) AS MON
     , ROUND(SUM(NVL(RCV.MON_RCV,0)) / 1000, 1) AS MON_IN
     , ROUND((SUM(NVL(PLN.MON_PLAN,0)) - SUM(NVL(RCV.MON_RCV,0))) / 1000, 1) AS DEF
     , ROUND(((SUM(NVL(PLN.MON_PLAN,0)) - SUM(NVL(RCV.MON_RCV,0))) / 26) / 1000, 1) AS TARGET
     , ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100), 2) AS JINDO
     , CASE WHEN ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, 7.1 - (SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100)), 2) < 0 THEN 0
            ELSE ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, 7.1 - (SUM(NVL(RCV.MON_RCV,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100)), 2)
       END AS DEF_PER
     , ROUND(SUM(NVL(RCV.RCV0,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV1,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV2,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV3,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.RCV4,0)) / 1000, 0)
     , ROUND(SUM(NVL(RCV.MON_RCV_AVG,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP0,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP1,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP2,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP3,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.SHP4,0)) / 1000, 0)
     , ROUND(SUM(NVL(SHP.MON_SHP,0)) / 1000, 0)
     , ROUND(((SUM(NVL(PLN.MON_PLAN,0)) - (SUM(NVL(RCV_SHP.MON_SHP,0)) + SUM(NVL(WIP_BOH.QTY_1,0))) ) / 26) / 1000, 1) AS SHP_TARGET
     , ROUND(SUM(NVL(SHP.MON_SHP_AVG,0)) / 1000, 0)
     , ROUND(DECODE(SUM(NVL(PLN.MON_PLAN,0)), 0, 0, SUM(NVL(SHP.MON_SHP,0)) / SUM(NVL(PLN.MON_PLAN,0)) * 100), 2) AS SHP_JINDO
     , ROUND(SUM(NVL(WIP.STOCK,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.LN,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.BG,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.LG,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.SAW,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.GATE,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP.TOTAL,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_1,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_2,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.DA_3,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_DA.TOTAL,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_1,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_2,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.WB_3,0)) / 1000, 0)
     , ROUND(SUM(NVL(WIP_WB.TOTAL,0)) / 1000, 0)
     , SUM(NVL(RAS.QTY_1,0))
  FROM (
        SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7 
             , SUM(PLAN.PLAN_QTY_ASSY) AS MON_PLAN
          FROM MWIPMATDEF MAT 
             , ( 
                 SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH 
                   FROM ( 
                          SELECT FACTORY, MAT_ID, PLAN_QTY_ASSY, PLAN_MONTH 
                            FROM CWIPPLNMON 
                           WHERE 1=1 
                             AND FACTORY = 'HMVA2' 
                             AND MAT_ID NOT IN ( 
                                                SELECT MAT_ID 
                                                  FROM MWIPMATDEF 
                                                 WHERE 1=1 
                                                   AND MAT_GRP_1 = 'SE' 
                                                   AND MAT_GRP_9 = 'S-LSI' 
                                               ) 
                          UNION ALL 
                          SELECT A.FACTORY, A.MAT_ID, SUM(A.PLAN_QTY) AS PLAN_QTY_ASSY , '202008' AS PLAN_MONTH 
                            FROM ( 
                                   SELECT FACTORY, MAT_ID, SUM(NVL(PLAN_QTY, 0)) AS PLAN_QTY 
                                     FROM CWIPPLNDAY 
                                    WHERE 1=1 
                                      AND FACTORY = 'HMVA2' 
                                      AND PLAN_DAY BETWEEN '20200801' AND '20200831'
                                      AND IN_OUT_FLAG = 'OUT' 
                                      AND CLASS = 'ASSY' 
                                   GROUP BY FACTORY, MAT_ID 
                                   UNION ALL 
                                   SELECT CM_KEY_1 AS FACTORY, MAT_ID, 
                                          SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1) AS PLAN_QTY 
                                     FROM RSUMFACMOV 
                                    WHERE 1=1 
                                      AND CM_KEY_1 = 'HMVA2' 
                                      AND CM_KEY_2 = 'PROD' 
                                      AND CM_KEY_3 LIKE 'P%' 
                                      AND WORK_DATE BETWEEN '20200801' AND '20200726'
                                   GROUP BY CM_KEY_1, MAT_ID 
                                 ) A,
                                 MWIPMATDEF B 
                           WHERE 1=1  
                             AND A.FACTORY = B.FACTORY 
                             AND A.MAT_ID = B.MAT_ID 
                             AND B.MAT_GRP_1 = 'SE' 
                             AND B.MAT_GRP_9 = 'S-LSI' 
                          GROUP BY A.FACTORY, A.MAT_ID 
                        ) 
               ) PLAN     
         WHERE 1 = 1 
           AND MAT.FACTORY = 'HMVA2' 
           AND PLAN.PLAN_MONTH(+) = '202008' 
           AND MAT.MAT_TYPE= 'FG' 
           AND MAT.DELETE_FLAG <> 'Y' 
           AND MAT.FACTORY =PLAN.FACTORY(+) 
           AND MAT.MAT_ID = PLAN.MAT_ID(+) 
         GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.MAT_CMF_13
       ) PLN
     , (
         SELECT MAT_ID        
              , SUM(DECODE(WORK_DATE, '20200730', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV0
              , SUM(DECODE(WORK_DATE, '20200731', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV1
              , SUM(DECODE(WORK_DATE, '20200801', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV2
              , SUM(DECODE(WORK_DATE, '20200802', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV3
              , SUM(DECODE(WORK_DATE, '20200803', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV4
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) AS MON_RCV
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) / 2, 0) AS MON_RCV_AVG
           FROM RSUMFACMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND CM_KEY_1 = 'HMVA2'
            AND OPER = 'A0000'
            AND MAT_ID NOT LIKE 'HX%'
            AND WORK_DATE BETWEEN '20200730' AND '20200803'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
         UNION ALL
         SELECT MAT_ID        
              , SUM(DECODE(WORK_DATE, '20200730', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV0
              , SUM(DECODE(WORK_DATE, '20200731', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV1
              , SUM(DECODE(WORK_DATE, '20200801', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV2
              , SUM(DECODE(WORK_DATE, '20200802', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV3
              , SUM(DECODE(WORK_DATE, '20200803', S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1, 0)) AS RCV4
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) AS MON_RCV
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_IN_QTY_1+S2_FAC_IN_QTY_1+S3_FAC_IN_QTY_1+S4_FAC_IN_QTY_1), 0)) / 2, 0) AS MON_RCV_AVG
           FROM CSUMFACMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND CM_KEY_1 = 'HMVA2'
            AND OPER = 'A0000'
            AND MAT_ID LIKE 'HX%'
            AND WORK_DATE BETWEEN '20200730' AND '20200803'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) RCV
     , (
         SELECT MAT_ID        
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1+S4_FAC_OUT_QTY_1), 0)) AS MON_SHP
           FROM RSUMFACMOV
          WHERE 1=1
            AND WORK_DATE BETWEEN '20200730' AND '20200803'
            AND LOT_TYPE = 'W'
            AND CM_KEY_1 = 'HMVA2'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) RCV_SHP
     , (
         SELECT MAT_ID
              , SUM(DECODE(WORK_DATE, '20200730', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP0
              , SUM(DECODE(WORK_DATE, '20200731', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP1
              , SUM(DECODE(WORK_DATE, '20200801', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP2
              , SUM(DECODE(WORK_DATE, '20200802', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP3
              , SUM(DECODE(WORK_DATE, '20200803', S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1, 0)) AS SHP4
              , SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1), 0)) AS MON_SHP
              , ROUND(SUM(DECODE(WORK_MONTH, '202008', DECODE(WORK_DATE, '20200803', 0, S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1+S2_END_RWK_QTY_1+S3_END_RWK_QTY_1), 0)) / 2, 0) AS MON_SHP_AVG
           FROM RSUMWIPMOV
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND OPER = 'A0200'
            AND WORK_DATE BETWEEN '20200730' AND '20200803'
            AND CM_KEY_3 LIKE 'P%'
          GROUP BY MAT_ID
       ) SHP
     , (
         SELECT MAT_ID, STOCK, LN, BG, LG, SAW, GATE, STOCK+LN+BG+LG+SAW+GATE AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0000', QTY_1, 0)) AS STOCK
                      , SUM(DECODE(LOT.OPER, 'A0020', QTY_1, 0)) AS LN
                      , SUM(CASE WHEN LOT.OPER BETWEEN 'A0040' AND 'A0100' THEN QTY_1
                                 ELSE 0
                        END) AS BG
                      , SUM(DECODE(LOT.OPER, 'A0170', QTY_1, 0)) AS LG
                      , SUM(DECODE(LOT.OPER, 'A0200', QTY_1, 0)) AS SAW
                      , SUM(DECODE(LOT.OPER, 'A0300', QTY_1, 0)) AS GATE
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE STOCK+LN+BG+LG+SAW+GATE > 0
        ) WIP
     , (
         SELECT MAT_ID, QTY_1 
           FROM (
                 SELECT MAT_ID
                      , SUM(QTY_1) AS QTY_1 
                   FROM RWIPLOTSTS_BOH 
                  WHERE 1=1
                    AND CUTOFF_DT = '2020080222' 
                    AND FACTORY = 'HMVA2'
                    AND LOT_TYPE = 'W'
                    AND LOT_DEL_FLAG = ' '
                    AND OPER > 'A0200'
                    AND LOT_CMF_5 LIKE 'P%'
                  GROUP BY MAT_ID
                )
          WHERE QTY_1 > 0
        ) WIP_BOH
     , (
         SELECT MAT_ID, DA_1, DA_2, DA_3, DA_1+DA_2+DA_3 AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0250', QTY_1, 0)) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0340' AND 'A0401' THEN QTY_1
                                 ELSE 0
                        END) AS DA_1
                      , SUM(DECODE(LOT.OPER, 'A0402', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0501', QTY_1, 0)) AS DA_2
                      , SUM(DECODE(LOT.OPER, 'A0403', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0502', QTY_1, 0)) AS DA_3
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE DA_1+DA_2+DA_3 > 0
        ) WIP_DA
     , (
         SELECT MAT_ID, WB_1, WB_2, WB_3, WB_1+WB_2+WB_3 AS TOTAL
           FROM (
                 SELECT LOT.MAT_ID
                      , SUM(DECODE(LOT.OPER, 'A0550', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0551', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0600', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0601', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0800', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0801', QTY_1, 0)) AS WB_1 
                      , SUM(DECODE(LOT.OPER, 'A0552', QTY_1, 0)) + SUM(DECODE(LOT.OPER, 'A0602', QTY_1, 0)) 
                      + SUM(DECODE(LOT.OPER, 'A0802', QTY_1, 0)) AS WB_2 
                      , SUM(CASE WHEN LOT.OPER BETWEEN 'A0553' AND 'A0559' THEN QTY_1
                                 ELSE 0
                        END) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0603' AND 'A0609' THEN QTY_1
                                 ELSE 0
                        END) 
                      + SUM(CASE WHEN LOT.OPER BETWEEN 'A0803' AND 'A0809' THEN QTY_1
                                 ELSE 0
                        END) AS WB_3
                   FROM RWIPLOTSTS LOT
                      , MWIPOPRDEF OPR
                  WHERE 1=1
                    AND LOT.FACTORY = OPR.FACTORY
                    AND LOT.OPER = OPR.OPER
                    AND LOT.FACTORY = 'HMVA2'
                    AND LOT.LOT_TYPE = 'W'
                    AND LOT.LOT_DEL_FLAG = ' '
                    AND LOT.LOT_CMF_5 LIKE 'P%'
                  GROUP BY LOT.MAT_ID
                )
          WHERE WB_1+WB_2+WB_3 > 0
        ) WIP_WB
      , (
          SELECT RES_STS_2 AS MAT_ID, COUNT(*) AS QTY_1
           FROM MRASRESDEF
          WHERE 1=1
            AND FACTORY = 'HMVA2'
            AND RES_CMF_9 = 'Y' 
            AND DELETE_FLAG = ' ' 
            AND RES_STS_8 IN ('A0170', 'A0180',  'A0200')
          GROUP BY RES_STS_2
        ) RAS
 WHERE 1=1
   AND PLN.MAT_ID = RCV.MAT_ID(+)
   AND PLN.MAT_ID = RCV_SHP.MAT_ID(+)
   AND PLN.MAT_ID = SHP.MAT_ID(+)
   AND PLN.MAT_ID = WIP.MAT_ID(+)
   AND PLN.MAT_ID = WIP_BOH.MAT_ID(+)
   AND PLN.MAT_ID = RAS.MAT_ID(+)
   AND PLN.MAT_ID = WIP_DA.MAT_ID(+)
   AND PLN.MAT_ID = WIP_WB.MAT_ID(+)
 GROUP BY PLN.MAT_GRP_1,  ' ', PLN.MAT_GRP_2, PLN.MAT_GRP_3,  ' ',  ' ',  ' ', PLN.MAT_CMF_10, PLN.MAT_GRP_7,  ' ', PLN.MAT_ID,  ' '
 HAVING NVL(SUM(PLN.MON_PLAN), 0) + NVL(SUM(RCV.MON_RCV), 0) + NVL(SUM(RCV.RCV0+RCV.RCV1+RCV.RCV2+RCV.RCV3+RCV.RCV4), 0)
       + NVL(SUM(SHP.SHP0+SHP.SHP1+SHP.SHP2+SHP.SHP3+SHP.SHP4), 0) + NVL(SUM(SHP.MON_SHP), 0)
       + NVL(SUM(WIP.TOTAL), 0) + NVL(SUM(RAS.QTY_1), 0) > 0
 ORDER BY DECODE(PLN.MAT_GRP_1, 'SE', 1, 'HX', 2, 'AB', 3, 'FC', 4, 'IG', 5, 'IM', 6, 7), PLN.MAT_GRP_1,  ' ', PLN.MAT_GRP_2, PLN.MAT_GRP_3,  ' ',  ' ',  ' ', PLN.MAT_CMF_10, PLN.MAT_GRP_7,  ' ', PLN.MAT_ID,  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'BUM010103'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT 
    *  
FROM MGCMTBLDEF  
WHERE FACTORY = 'HMKB1' 
AND TABLE_NAME = 'H_DACRUX_IF' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT 
    *  
FROM MGCMTBLDAT  
WHERE FACTORY = 'HMKB1' 
AND TABLE_NAME = 'H_DACRUX_IF' 
AND KEY_1 = 'DACRUX_DMS' 

-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMKB1'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010410'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM','HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020205'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010410'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PKG_CODE AS PACK_CODE, SUBSTR(MCP_TO_PART, 3) AS MCP_TO_PART, PIN_TYPE, SUBSTR(MAT_ID, 3) AS MAT_ID, PKG_CODE, TYPE1, TYPE2 
     , BOH_QTY, RECEIVE_QTY, PART_OUT, PART_IN, IN_TTL_QTY, EOH_QTY 
     , PC_IN_QTY, PC_OUT_QTY, SHIP_QTY 
     , LOSS_QTY_REAL AS LOSS_REAL
     , LOSS_QTY_LOGIC AS LOSS_LOGIC 
     , TRANSFER_QTY, RT_WAFER_QTY, RT_IN_QTY 
     , NVL(SHIP_QTY,0) - NVL(RT_IN_QTY,0) AS BILL_QTY
     , YIELD 
     , NVL(BOH_QTY,0) + NVL(IN_TTL_QTY,0) + NVL(PC_IN_QTY,0) + NVL(RT_IN_QTY,0) - NVL(EOH_QTY,0) - NVL(PC_OUT_QTY,0) - NVL(SHIP_QTY,0) - NVL(LOSS_QTY_REAL,0) - NVL(TRANSFER_QTY,0) - NVL(RT_WAFER_QTY,0) AS TTL_DIF 
  FROM RSUMSECMCP
 WHERE 1=1  
   AND WORK_MONTH = '202008' 
   AND LOT_TYPE = 'P%' 
   AND MAT_ID NOT LIKE 'SEKY%' 
 ORDER BY PACK_CODE, MCP_TO_PART, DECODE(TYPE2,'1st', 1, '2nd', 2, 'Middle', 3, '3rd', 4, 'Middle 1', 5, '4th', 6, 'Middle 2', 7, '5th', 8, 'Middle 3', 9, '6th', 10, 'Middle 4', 11, '7th', 12, 'Middle 5', 13, '8th', 14, 'Middle 6', 15, '9th', 16, 'Merge', 17), PIN_TYPE, MAT_ID, TYPE1

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'SE'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'SE'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'SE'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'SE' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT@RPTTOMES WHERE FACTORY = 'HMVA2' AND TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = A.MAT_GRP_1) CUSTOMER, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
     , ROUND(SUM(ORI_PLN) / 1000, 0) AS ORI_PLN
     , ROUND(SUM(REV_PLN) / 1000, 0) AS REV_PLN
     , ROUND(SUM(SHP_TTL) / 1000, 0) AS SHP_TTL
     , ROUND(DECODE(SUM(ORI_PLN), 0, 0, SUM(SHP_TTL) / SUM(ORI_PLN) * 100), 1) AS JINDO_1
     , ROUND(DECODE(SUM(REV_PLN), 0, 0, SUM(SHP_TTL) / SUM(REV_PLN) * 100), 1) AS JINDO_2
     , ROUND(SUM(D1_PLAN) / 1000, 0) AS D1_PLAN
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0)) / 1000, 0) AS D0_PLAN
     , ROUND(SUM(SHP_TODAY) / 1000, 0) AS SHP_TODAY
     , ROUND(SUM(NVL(D0_PLAN,0) - NVL(SHP_WEEK,0) - NVL(SHP_TODAY,0)) / 1000, 0) AS D0_DEF
     , ROUND(SUM(HMK3A) / 1000, 0) AS HMK3A
     , ROUND(SUM(QC_GATE) / 1000, 0) AS QC_GATE
     , ROUND(SUM(PVI) / 1000, 0) AS PVI
     , ROUND(SUM(AVI) / 1000, 0) AS AVI
     , ROUND(SUM(SIG) / 1000, 0) AS SIG
     , ROUND(SUM(SBA) / 1000, 0) AS SBA
     , ROUND(SUM(TIN) / 1000, 0) AS TIN
     , ROUND(SUM(TRIM) / 1000, 0) AS TRIM
     , ROUND(SUM(MK) / 1000, 0) AS MK
     , ROUND(SUM(CURE) / 1000, 0) AS CURE
     , ROUND(SUM(MOLD) / 1000, 0) AS MOLD
     , ROUND(SUM(F_GATE) / 1000, 0) AS F_GATE
     , ROUND(SUM(F_WB9) / 1000, 0) AS F_WB9
     , ROUND(SUM(F_DA9) / 1000, 0) AS F_DA9
     , ROUND(SUM(F_WB8) / 1000, 0) AS F_WB8
     , ROUND(SUM(F_DA8) / 1000, 0) AS F_DA8
     , ROUND(SUM(F_WB7) / 1000, 0) AS F_WB7
     , ROUND(SUM(F_DA7) / 1000, 0) AS F_DA7
     , ROUND(SUM(F_WB6) / 1000, 0) AS F_WB6
     , ROUND(SUM(F_DA6) / 1000, 0) AS F_DA6
     , ROUND(SUM(F_WB5) / 1000, 0) AS F_WB5
     , ROUND(SUM(F_DA5) / 1000, 0) AS F_DA5
     , ROUND(SUM(F_WB4) / 1000, 0) AS F_WB4
     , ROUND(SUM(F_DA4) / 1000, 0) AS F_DA4
     , ROUND(SUM(F_WB3) / 1000, 0) AS F_WB3
     , ROUND(SUM(F_DA3) / 1000, 0) AS F_DA3
     , ROUND(SUM(F_WB2) / 1000, 0) AS F_WB2
     , ROUND(SUM(F_DA2) / 1000, 0) AS F_DA2
     , ROUND(SUM(F_WB1) / 1000, 0) AS F_WB1
     , ROUND(SUM(F_DA1 + SMT) / 1000, 0) AS F_DA1
     , ROUND(SUM(SP) / 1000, 0) AS SP
     , ROUND(SUM(SAW) / 1000, 0) AS SAW
     , ROUND(SUM(BG) / 1000, 0) AS BG
     , ROUND(SUM(STOCK) / 1000, 0) AS STOCK
     , ROUND(SUM(HMK3A + QC_GATE + PVI + AVI + SIG + SBA + TIN + TRIM + MK + CURE + MOLD + F_GATE + F_WB5 + F_DA5 + 
                 F_WB4 + F_DA4 + F_WB3 + F_DA3 + F_WB2 + F_DA2 + F_WB1 + F_DA1 + SP + SAW + BG + STOCK) / 1000, 0) AS WIP_TTL 
     , ROUND(SUM(RCV_QTY) / 1000, 0) AS RCV_QTY
     , ROUND(SUM(OUT_HMKA3) / 1000, 0) AS OUT_HMKA3
     , ROUND(SUM(OUT_CLOSE) / 1000, 0) AS OUT_CLOSE
     , ROUND(SUM(OUT_SIG) / 1000, 0) AS OUT_SIG
     , ROUND(SUM(OUT_MK) / 1000, 0) AS OUT_MK
     , ROUND(SUM(OUT_MOLD) / 1000, 0) AS OUT_MOLD
     , ROUND(SUM(OUT_WB9) / 1000, 0) AS OUT_WB9
     , ROUND(SUM(OUT_DA9) / 1000, 0) AS OUT_DA9
     , ROUND(SUM(OUT_WB8) / 1000, 0) AS OUT_WB8
     , ROUND(SUM(OUT_DA8) / 1000, 0) AS OUT_DA8
     , ROUND(SUM(OUT_WB7) / 1000, 0) AS OUT_WB7
     , ROUND(SUM(OUT_DA7) / 1000, 0) AS OUT_DA7
     , ROUND(SUM(OUT_WB6) / 1000, 0) AS OUT_WB6
     , ROUND(SUM(OUT_DA6) / 1000, 0) AS OUT_DA6
     , ROUND(SUM(OUT_WB5) / 1000, 0) AS OUT_WB5
     , ROUND(SUM(OUT_DA5) / 1000, 0) AS OUT_DA5
     , ROUND(SUM(OUT_WB4) / 1000, 0) AS OUT_WB4
     , ROUND(SUM(OUT_DA4) / 1000, 0) AS OUT_DA4
     , ROUND(SUM(OUT_WB3) / 1000, 0) AS OUT_WB3
     , ROUND(SUM(OUT_DA3) / 1000, 0) AS OUT_DA3
     , ROUND(SUM(OUT_WB2) / 1000, 0) AS OUT_WB2
     , ROUND(SUM(OUT_DA2) / 1000, 0) AS OUT_DA2
     , ROUND(SUM(OUT_WB1) / 1000, 0) AS OUT_WB1
     , ROUND(SUM(OUT_DA1) / 1000, 0) AS OUT_DA1
     , ROUND(SUM(OUT_DDS) / 1000, 0) AS OUT_DDS
     , ROUND(SUM(OUT_SAW) / 1000, 0) AS OUT_SAW
     , ROUND(SUM(OUT_BG) / 1000, 0) AS OUT_BG
     , ROUND(SUM(OUT_STEALTH) / 1000, 0) AS OUT_STEALTH
     , ROUND(SUM(OUT_PRI) / 1000, 0) AS OUT_PRI
     , ROUND(SUM(OUT_LAMI) / 1000, 0) AS OUT_LAMI
     , ROUND(SUM(OUT_STOCK) / 1000, 0) AS OUT_STOCK
  FROM (
        SELECT MAT.*
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.ORI_PLN/MAT.NET_DIE,0) ELSE PLN.ORI_PLN END, 0) * PRICE AS ORI_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.REV_PLN/MAT.NET_DIE,0) ELSE PLN.REV_PLN END, 0) * PRICE AS REV_PLN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TTL/MAT.NET_DIE,0) ELSE SHP.SHP_TTL END, 0) * PRICE AS SHP_TTL
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D0_PLAN/MAT.NET_DIE,0) ELSE PLN.D0_PLAN END, 0) * PRICE AS D0_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(PLN.D1_PLAN/MAT.NET_DIE,0) ELSE PLN.D1_PLAN END, 0) * PRICE AS D1_PLAN
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_TODAY/MAT.NET_DIE,0) ELSE SHP.SHP_TODAY END, 0) * PRICE AS SHP_TODAY 
             , NVL(CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SHP.SHP_WEEK/MAT.NET_DIE,0) ELSE SHP.SHP_WEEK END, 0) * PRICE AS SHP_WEEK 
             , NVL(STOCK,0) * PRICE AS STOCK, NVL(BG,0) * PRICE AS BG, NVL(SAW,0) * PRICE AS SAW, NVL(SP,0) * PRICE AS SP, NVL(SMT,0) * PRICE AS SMT, NVL(DA,0) * PRICE AS DA
             , NVL(S_DA1,0) * PRICE AS S_DA1, NVL(S_DA2,0) * PRICE AS S_DA2, NVL(S_DA3,0) * PRICE AS S_DA3, NVL(S_DA4,0) * PRICE AS S_DA4, NVL(S_DA5,0) * PRICE AS S_DA5
             , NVL(S_DA6,0) * PRICE AS S_DA6, NVL(S_DA7,0) * PRICE AS S_DA7, NVL(S_DA8,0) * PRICE AS S_DA8, NVL(S_DA9,0) * PRICE AS S_DA9
             , NVL(F_DA1,0) * PRICE AS F_DA1, NVL(F_DA2,0) * PRICE AS F_DA2, NVL(F_DA3,0) * PRICE AS F_DA3, NVL(F_DA4,0) * PRICE AS F_DA4, NVL(F_DA5,0) * PRICE AS F_DA5
             , NVL(F_DA6,0) * PRICE AS F_DA6, NVL(F_DA7,0) * PRICE AS F_DA7, NVL(F_DA8,0) * PRICE AS F_DA8, NVL(F_DA9,0) * PRICE AS F_DA9
             , NVL(WB,0) * PRICE AS WB, NVL(S_WB1,0) * PRICE AS S_WB1, NVL(S_WB2,0) * PRICE AS S_WB2, NVL(S_WB3,0) * PRICE AS S_WB3, NVL(S_WB4,0) * PRICE AS S_WB4
             , NVL(S_WB5,0) * PRICE AS S_WB5, NVL(S_WB6,0) * PRICE AS S_WB6, NVL(S_WB7,0) * PRICE AS S_WB7, NVL(S_WB8,0) * PRICE AS S_WB8, NVL(S_WB9,0) * PRICE AS S_WB9
             , NVL(F_WB1,0) * PRICE AS F_WB1, NVL(F_WB2,0) * PRICE AS F_WB2, NVL(F_WB3,0) * PRICE AS F_WB3, NVL(F_WB4,0) * PRICE AS F_WB4
             , NVL(F_WB5,0) * PRICE AS F_WB5, NVL(F_WB6,0) * PRICE AS F_WB6, NVL(F_WB7,0) * PRICE AS F_WB7, NVL(F_WB8,0) * PRICE AS F_WB8, NVL(F_WB9,0) * PRICE AS F_WB9
             , NVL(GATE,0) * PRICE AS GATE, NVL(F_GATE,0) * PRICE  AS F_GATE, NVL(MOLD,0) * PRICE AS MOLD, NVL(CURE,0) * PRICE AS CURE
             , NVL(MK,0) * PRICE AS MK, NVL(TRIM,0) * PRICE AS TRIM, NVL(TIN,0) * PRICE AS TIN, NVL(SBA,0) * PRICE AS SBA, NVL(SIG,0) * PRICE AS SIG
             , NVL(AVI,0) * PRICE AS AVI, NVL(VI,0) * PRICE AS VI, NVL(PVI,0) * PRICE AS PVI, NVL(QC_GATE,0) * PRICE AS QC_GATE, NVL(HMK3A,0) * PRICE AS HMK3A
             , NVL(CASE WHEN MAT.MAT_CMF_11 = 'JZH' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT/2
                        WHEN MAT.MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN DECODE(MAT.MAT_GRP_5, '3rd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN DECODE(MAT.MAT_GRP_5, '2nd', NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT, 0)
                        WHEN MAT.MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT.MAT_GRP_5 <> '-' THEN CASE WHEN MAT.MAT_GRP_5 IN ('1st','Merge') OR MAT.MAT_GRP_5 LIKE 'Middle%' THEN NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT ELSE 0 END
                        WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(RCV.RCV_QTY/NET_DIE,0)
                        ELSE NVL(RCV.RCV_QTY,0)/MAT.COMP_CNT
                   END,0) * PRICE AS RCV_QTY
             , NVL(MOV.OUT_WB,0) * PRICE AS OUT_WB
             , NVL(MOV.OUT_DA,0) * PRICE AS OUT_DA
             , NVL(MOV.OUT_DP,0) * PRICE AS OUT_DP
             , NVL(MOV.OUT_HMKA3,0) * PRICE AS OUT_HMKA3
             , NVL(MOV.OUT_CLOSE,0) * PRICE AS OUT_CLOSE
             , NVL(MOV.OUT_SIG,0) * PRICE AS OUT_SIG
             , NVL(MOV.OUT_MK,0) * PRICE AS OUT_MK
             , NVL(MOV.OUT_MOLD,0) * PRICE AS OUT_MOLD
             , NVL(MOV.OUT_WB9,0) * PRICE AS OUT_WB9
             , NVL(MOV.OUT_DA9,0) * PRICE AS OUT_DA9
             , NVL(MOV.OUT_WB8,0) * PRICE AS OUT_WB8
             , NVL(MOV.OUT_DA8,0) * PRICE AS OUT_DA8
             , NVL(MOV.OUT_WB7,0) * PRICE AS OUT_WB7
             , NVL(MOV.OUT_DA7,0) * PRICE AS OUT_DA7
             , NVL(MOV.OUT_WB6,0) * PRICE AS OUT_WB6
             , NVL(MOV.OUT_DA6,0) * PRICE AS OUT_DA6
             , NVL(MOV.OUT_WB5,0) * PRICE AS OUT_WB5
             , NVL(MOV.OUT_DA5,0) * PRICE AS OUT_DA5
             , NVL(MOV.OUT_WB4,0) * PRICE AS OUT_WB4
             , NVL(MOV.OUT_DA4,0) * PRICE AS OUT_DA4
             , NVL(MOV.OUT_WB3,0) * PRICE AS OUT_WB3
             , NVL(MOV.OUT_DA3,0) * PRICE AS OUT_DA3
             , NVL(MOV.OUT_WB2,0) * PRICE AS OUT_WB2
             , NVL(MOV.OUT_DA2,0) * PRICE AS OUT_DA2
             , NVL(MOV.OUT_WB1,0) * PRICE AS OUT_WB1
             , NVL(MOV.OUT_DA1,0) * PRICE AS OUT_DA1
             , NVL(MOV.OUT_DDS,0) * PRICE AS OUT_DDS
             , NVL(MOV.OUT_SAW,0) * PRICE AS OUT_SAW
             , NVL(MOV.OUT_BG,0) * PRICE AS OUT_BG
             , NVL(MOV.OUT_STEALTH,0) * PRICE AS OUT_STEALTH
             , NVL(MOV.OUT_PRI,0) * PRICE AS OUT_PRI
             , NVL(MOV.OUT_LAMI,0) * PRICE AS OUT_LAMI
             , NVL(MOV.OUT_STOCK,0) * PRICE AS OUT_STOCK
          FROM (
                SELECT A.MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5
                     , MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10, MAT_CMF_11
                     , NET_DIE, COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                     , CASE WHEN MAT_GRP_1 = 'SE' AND MAT_GRP_9 = 'MEMORY' THEN 'SEK_________-___' || SUBSTR(A.MAT_ID, -3) 
                            WHEN MAT_GRP_1 = 'HX' THEN MAT_CMF_10 
                            ELSE A.MAT_ID 
                       END CONV_MAT_ID 
                     , 1 AS PRICE
                  FROM VWIPMATDEF A
                 WHERE 1=1
                   AND A.FACTORY = 'HMVA2'
                   AND A.DELETE_FLAG = ' '
                   AND A.MAT_TYPE = 'FG' 
                   AND A.MAT_GRP_2 <> 'PW' 
               ) MAT
             , (
                SELECT MAT_ID 
                     , SUM(ORI_PLN) AS ORI_PLN 
                     , SUM(REV_PLN) AS REV_PLN 
                     , SUM(D0_PLAN) AS D0_PLAN 
                     , SUM(D1_PLAN) AS D1_PLAN 
                  FROM ( 
                        SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS ORI_PLN, SUM(RESV_FIELD1) AS REV_PLN, 0 AS D0_PLAN, 0 AS D1_PLAN
                          FROM (
                                SELECT MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1
                                  FROM CWIPPLNMON 
                                 WHERE 1=1 
                                   AND FACTORY = 'HMVA2'
                                   AND PLAN_MONTH = '202008'
                                 GROUP BY MAT_ID 
                               ) 
                         GROUP BY MAT_ID
                        HAVING SUM(PLAN_QTY_ASSY + RESV_FIELD1) > 0
                         UNION ALL
                        SELECT MAT_ID, 0, 0
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D0_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D0_QTY + D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D0_QTY + D1_QTY + D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D0_QTY + D1_QTY + D2_QTY + D3_QTY + D4_QTY + D5_QTY + D6_QTY 
                                        ELSE 0 
                                   END) AS D0_PLAN 
                             , SUM(CASE WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 7 THEN D1_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 1 THEN D2_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 2 THEN D3_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 3 THEN D4_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 4 THEN D5_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 5 THEN D6_QTY 
                                        WHEN TO_CHAR(TO_DATE('20200803', 'YYYYMMDD'), 'D') = 6 THEN D7_QTY 
                                        ELSE 0 
                                   END) AS D1_PLAN 
                          FROM (
                                SELECT FACTORY, MAT_ID 
                                     , SUM(DECODE(PLAN_WEEK, '202032', D0_QTY, 0)) AS D0_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D1_QTY, 0)) AS D1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D2_QTY, 0)) AS D2_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D3_QTY, 0)) AS D3_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D4_QTY, 0)) AS D4_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D5_QTY, 0)) AS D5_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', D6_QTY, 0)) AS D6_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D0_QTY, 0)) AS D7_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D1_QTY, 0)) AS D8_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D2_QTY, 0)) AS D9_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D3_QTY, 0)) AS D10_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D4_QTY, 0)) AS D11_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D5_QTY, 0)) AS D12_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', D6_QTY, 0)) AS D13_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202032', WW_QTY, 0)) AS W1_QTY  
                                     , SUM(DECODE(PLAN_WEEK, '202033', WW_QTY, 0)) AS W2_QTY  
                                  FROM RWIPPLNWEK  
                                 WHERE 1=1  
                                   AND FACTORY = 'HMVA2'  
                                   AND GUBUN = '3'  
                                   AND PLAN_WEEK IN ('202032','202033') 
                                 GROUP BY FACTORY, MAT_ID  
                               )  
                         GROUP BY MAT_ID  
                       ) 
                 GROUP BY MAT_ID  
               ) PLN
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200802' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID NOT LIKE 'HX%'
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200803' THEN SHP_QTY_1 END) AS SHP_TTL 
                     , SUM(DECODE(WORK_DATE, '20200803', SHP_QTY_1, 0)) AS SHP_TODAY
                     , SUM(CASE WHEN WORK_DATE BETWEEN '20200801' AND '20200802' THEN SHP_QTY_1 END) AS SHP_WEEK 
                  FROM VSUMWIPOUT_06
                 WHERE 1=1
                   AND WORK_DATE BETWEEN '20200801' AND '20200803' 
                   AND FACTORY = 'HMVA2' 
                   AND LOT_TYPE = 'W' 
                   AND CM_KEY_2 = 'PROD' 
                   AND CM_KEY_3 LIKE 'P%'
                   AND MAT_ID LIKE 'HX%'
                 GROUP BY MAT_ID 
               ) SHP
             , (
                SELECT MAT_ID, SUM(RCV_QTY_1) AS RCV_QTY
                  FROM VSUMWIPRCV
                 WHERE FACTORY = 'HMVA2'
                   AND WORK_DATE = '20200803'
                   AND LOT_TYPE = 'W'
                   AND CM_KEY_3 LIKE 'P%' 
                 GROUP BY MAT_ID
               ) RCV
             , (
                SELECT MAT_ID
                     , SUM(QTY) AS WIP_TTL
                     , SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0)) AS STOCK
                     , SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0)) AS BG
                     , SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0)) AS SAW
                     , SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0)) AS SP 
                     , SUM(DECODE(OPER_GRP_1, 'SMT', QTY, 0)) AS SMT 
                     , SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0)) AS DA
                     , SUM(CASE WHEN OPER IN ('A0250', 'A0305', 'A0306', 'A0310', 'A0333', 'A0340', 'A0400', 'A0401', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS S_DA1
                     , SUM(CASE WHEN OPER IN ('A0402', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS S_DA2
                     , SUM(CASE WHEN OPER IN ('A0403', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS S_DA3
                     , SUM(CASE WHEN OPER IN ('A0404', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS S_DA4
                     , SUM(CASE WHEN OPER IN ('A0405', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS S_DA5
                     , SUM(CASE WHEN OPER IN ('A0406', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS S_DA6
                     , SUM(CASE WHEN OPER IN ('A0407', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS S_DA7
                     , SUM(CASE WHEN OPER IN ('A0408', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS S_DA8
                     , SUM(CASE WHEN OPER IN ('A0409', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS S_DA9
                     , SUM(CASE WHEN OPER IN ('A0250','A0333','A0340','A0400', 'A0401') THEN QTY ELSE 0 END) AS F_DA1
                     , SUM(CASE WHEN OPER IN ('A0402') THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0801' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA2 
                     , SUM(CASE WHEN OPER IN ('A0403') THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0802' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA3 
                     , SUM(CASE WHEN OPER IN ('A0404') THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0803' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA4 
                     , SUM(CASE WHEN OPER IN ('A0405') THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0804' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA5 
                     , SUM(CASE WHEN OPER IN ('A0406') THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0805' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA6 
                     , SUM(CASE WHEN OPER IN ('A0407') THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0806' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA7 
                     , SUM(CASE WHEN OPER IN ('A0408') THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0807' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA8 
                     , SUM(CASE WHEN OPER IN ('A0409') THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 <> 'Merge' THEN QTY 
                                WHEN OPER = 'A0808' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) <> SUBSTR(OPER, -1) THEN QTY 
                                ELSE 0 END) AS F_DA9 
                     , SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0)) AS WB
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0800', 'A0801') THEN QTY ELSE 0 END) AS S_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0802') THEN QTY ELSE 0 END) AS S_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0803') THEN QTY ELSE 0 END) AS S_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0804') THEN QTY ELSE 0 END) AS S_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0805') THEN QTY ELSE 0 END) AS S_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0806') THEN QTY ELSE 0 END) AS S_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0807') THEN QTY ELSE 0 END) AS S_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0808') THEN QTY ELSE 0 END) AS S_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0809') THEN QTY ELSE 0 END) AS S_WB9
                     , SUM(CASE WHEN OPER IN ('A0550', 'A0551', 'A0600','A0601', 'A0500', 'A0501', 'A0530', 'A0531') THEN QTY ELSE 0 END) AS F_WB1
                     , SUM(CASE WHEN OPER IN ('A0552', 'A0602', 'A0502', 'A0532') THEN QTY ELSE 0 END) AS F_WB2
                     , SUM(CASE WHEN OPER IN ('A0553', 'A0603', 'A0503', 'A0533') THEN QTY ELSE 0 END) AS F_WB3
                     , SUM(CASE WHEN OPER IN ('A0554', 'A0604', 'A0504', 'A0534') THEN QTY ELSE 0 END) AS F_WB4
                     , SUM(CASE WHEN OPER IN ('A0555', 'A0605', 'A0505', 'A0535') THEN QTY ELSE 0 END) AS F_WB5
                     , SUM(CASE WHEN OPER IN ('A0556', 'A0606', 'A0506', 'A0536') THEN QTY ELSE 0 END) AS F_WB6
                     , SUM(CASE WHEN OPER IN ('A0557', 'A0607', 'A0507', 'A0537') THEN QTY ELSE 0 END) AS F_WB7
                     , SUM(CASE WHEN OPER IN ('A0558', 'A0608', 'A0508', 'A0538') THEN QTY ELSE 0 END) AS F_WB8
                     , SUM(CASE WHEN OPER IN ('A0559', 'A0609', 'A0509', 'A0539') THEN QTY ELSE 0 END) AS F_WB9
                     , SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0)) AS GATE
                     , SUM(CASE WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_5 = '-' THEN QTY 
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 = 'SE' AND MAT_GRP_5 = 'Merge' THEN QTY
                                WHEN OPER_GRP_1 = 'GATE' AND MAT_GRP_1 <> 'SE' AND SUBSTR(MAT_GRP_4,-1) = SUBSTR(OPER, -1) THEN QTY  
                                ELSE 0 END) AS F_GATE 
                     , SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0)) AS MOLD
                     , SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0)) AS CURE
                     , SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0)) AS MK
                     , SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0)) AS TRIM
                     , SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0)) AS TIN
                     , SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0)) AS SBA
                     , SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0)) AS SIG
                     , SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0)) AS AVI
                     , SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0)) AS VI
                     , SUM(CASE WHEN OPER IN ('A2030', 'A2050') THEN QTY ELSE 0 END) AS PVI
                     , SUM(DECODE(OPER, 'A2100', QTY, 0)) AS QC_GATE
                     , SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0)) AS HMK3A
                  FROM (
                        SELECT MAT_ID, OPER, OPER_GRP_1, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY 
                          FROM (
                                SELECT A.MAT_ID, B.OPER, B.OPER_GRP_1, C.MAT_GRP_1, C.MAT_GRP_4, C.MAT_GRP_5
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN QTY_1
                                                                               WHEN MAT_GRP_5 LIKE 'Middle%' AND MAT_GRP_5 <> 'Middle' THEN QTY_1
                                                                               ELSE 0 END)
                                            WHEN MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%')) THEN CASE WHEN MAT_GRP_5 IN ('2nd','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-376' THEN CASE WHEN MAT_GRP_5 IN ('5th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') IN ('A-445', 'A-525') THEN CASE WHEN MAT_GRP_5 IN ('6th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_1 = 'HX' AND MESMGR.F_GET_ATTR_VALUE@RPTTOMES(A.MAT_ID, 'MAT_ETC', 'HX_VERSION') = 'A-524' THEN CASE WHEN MAT_GRP_5 IN ('7th','Merge') THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' THEN CASE WHEN MAT_GRP_5 IN ('1st','Merge') OR MAT_GRP_5 LIKE 'Middle%' THEN QTY_1 ELSE 0 END
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(QTY_1/C.NET_DIE,0)
                                            ELSE QTY_1
                                       END AS QTY_1
                                     , C.COMP_CNT, C.HX_COMP_MIN, C.HX_COMP_MAX 
                                  FROM RWIPLOTSTS A  
                                     , MWIPOPRDEF B  
                                     , VWIPMATDEF C
                                 WHERE 1 = 1 
                                   AND A.FACTORY = B.FACTORY
                                   AND A.FACTORY = C.FACTORY
                                   AND A.OPER = B.OPER
                                   AND A.MAT_ID = C.MAT_ID
                                   AND A.FACTORY = 'HMVA2'  
                                   AND A.LOT_TYPE = 'W' 
                                   AND A.LOT_CMF_5 LIKE 'P%' 
                                   AND A.LOT_DEL_FLAG = ' ' 
                                   AND C.MAT_GRP_2 <> '-'
                                   AND C.DELETE_FLAG = ' ' 
                                   AND A.HOLD_CODE NOT IN ('H71','H54')
                               )
                       )
                 GROUP BY MAT_ID
               ) WIP
             , (
                SELECT MAT_ID
                     , SUM(CASE WHEN OPER IN ('A0200', 'A0230') THEN QTY ELSE 0 END) AS OUT_DP
                     , SUM(CASE WHEN OPER LIKE 'A04%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                WHEN OPER = 'A0333' THEN QTY
                                ELSE 0
                           END) AS OUT_DA
                     , SUM(CASE WHEN OPER LIKE 'A06%' THEN (CASE WHEN MAT_GRP_1 <> 'SE' AND MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-' 
                                                                      THEN DECODE(SUBSTR(MAT_GRP_4,-1), SUBSTR(OPER, -1), QTY, 0)
                                                                 ELSE QTY END)
                                 ELSE 0
                           END) AS OUT_WB
                     , SUM(CASE WHEN OPER = 'A0000' THEN QTY ELSE 0 END) AS OUT_STOCK
                     , SUM(CASE WHEN OPER = 'A0020' THEN QTY ELSE 0 END) AS OUT_LAMI
                     , SUM(CASE WHEN OPER = 'A0030' THEN QTY ELSE 0 END) AS OUT_PRI
                     , SUM(CASE WHEN OPER = 'A0033' THEN QTY ELSE 0 END) AS OUT_STEALTH
                     , SUM(CASE WHEN OPER = 'A0040' THEN QTY ELSE 0 END) AS OUT_BG
                     , SUM(CASE WHEN OPER = 'A0200' THEN QTY ELSE 0 END) AS OUT_SAW
                     , SUM(CASE WHEN OPER = 'A0230' THEN QTY ELSE 0 END) AS OUT_DDS
                     , SUM(CASE WHEN OPER IN ('A0400', 'A0401', 'A0333') THEN QTY ELSE 0 END) AS OUT_DA1
                     , SUM(CASE WHEN OPER IN ('A0600', 'A0601') THEN QTY ELSE 0 END) AS OUT_WB1
                     , SUM(CASE WHEN OPER = 'A0402' THEN QTY ELSE 0 END) AS OUT_DA2
                     , SUM(CASE WHEN OPER = 'A0602' THEN QTY ELSE 0 END) AS OUT_WB2
                     , SUM(CASE WHEN OPER = 'A0403' THEN QTY ELSE 0 END) AS OUT_DA3
                     , SUM(CASE WHEN OPER = 'A0603' THEN QTY ELSE 0 END) AS OUT_WB3
                     , SUM(CASE WHEN OPER = 'A0404' THEN QTY ELSE 0 END) AS OUT_DA4
                     , SUM(CASE WHEN OPER = 'A0604' THEN QTY ELSE 0 END) AS OUT_WB4
                     , SUM(CASE WHEN OPER = 'A0405' THEN QTY ELSE 0 END) AS OUT_DA5
                     , SUM(CASE WHEN OPER = 'A0605' THEN QTY ELSE 0 END) AS OUT_WB5
                     , SUM(CASE WHEN OPER = 'A0406' THEN QTY ELSE 0 END) AS OUT_DA6
                     , SUM(CASE WHEN OPER = 'A0606' THEN QTY ELSE 0 END) AS OUT_WB6
                     , SUM(CASE WHEN OPER = 'A0407' THEN QTY ELSE 0 END) AS OUT_DA7
                     , SUM(CASE WHEN OPER = 'A0607' THEN QTY ELSE 0 END) AS OUT_WB7
                     , SUM(CASE WHEN OPER = 'A0408' THEN QTY ELSE 0 END) AS OUT_DA8
                     , SUM(CASE WHEN OPER = 'A0608' THEN QTY ELSE 0 END) AS OUT_WB8
                     , SUM(CASE WHEN OPER = 'A0409' THEN QTY ELSE 0 END) AS OUT_DA9
                     , SUM(CASE WHEN OPER = 'A0609' THEN QTY ELSE 0 END) AS OUT_WB9
                     , SUM(CASE WHEN OPER = 'A1000' THEN QTY ELSE 0 END) AS OUT_MOLD 
                     , SUM(CASE WHEN OPER IN ('A1150', 'A1500') THEN QTY ELSE 0 END) AS OUT_MK
                     , SUM(CASE WHEN OPER IN ('A1750', 'A1800', 'A1900') THEN QTY ELSE 0 END) AS OUT_SIG
                     , SUM(CASE WHEN OPER = 'A2100' THEN QTY ELSE 0 END) AS OUT_CLOSE 
                     , SUM(CASE WHEN OPER = 'AZ010' THEN QTY ELSE 0 END) AS OUT_HMKA3 
                  FROM (    
                        SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5
                             , CASE WHEN HX_COMP_MIN IS NOT NULL
                                         THEN (CASE WHEN HX_COMP_MIN <> HX_COMP_MAX AND OPER > HX_COMP_MIN AND OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT / 2,1)
                                                    WHEN OPER <= HX_COMP_MAX THEN QTY_1 / NVL(COMP_CNT,1)
                                                    ELSE QTY_1 END)
                                    WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                    ELSE QTY_1 
                               END QTY
                          FROM (
                                SELECT MAT_ID, OPER, MAT_GRP_1, MAT_GRP_4, MAT_GRP_5, MAT_GRP_9, MAT_CMF_11
                                     , CASE WHEN MAT_CMF_11 IN ('DHL', 'DQZ', 'DRA', 'DQA', 'DND', 'DWG', 'DUT', 'HAU', 'HF8', 'HDM', 'HDR', 'HEN', 'HQA', 'HQC') THEN (CASE WHEN MAT_GRP_5 IN ('3rd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_ID LIKE 'SEK%' AND MAT_CMF_11 IN (SELECT DISTINCT(MAT_CMF_11) FROM MWIPMATDEF WHERE FACTORY = 'HMVA2' AND MAT_GRP_5 = '1st' AND (MAT_ID LIKE 'SEKS%' OR MAT_ID LIKE 'SEKY%'))
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('2nd','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_4 NOT IN ('-','FD','FU') AND MAT_GRP_5 <> '-'
                                                 THEN (CASE WHEN MAT_GRP_5 IN ('1st','Merge') THEN END_QTY ELSE 0 END)
                                            WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(END_QTY/NET_DIE,0)
                                            ELSE END_QTY
                                       END QTY_1 
                                     , COMP_CNT, HX_COMP_MIN, HX_COMP_MAX 
                                  FROM ( 
                                        SELECT A.OPER
                                             , CASE WHEN OPER = 'AZ010' THEN S1_MOVE_QTY_1+S2_MOVE_QTY_1+S3_MOVE_QTY_1
                                                    ELSE S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1
                                               END END_QTY
                                             , B.*
                                          FROM RSUMWIPMOV A
                                             , VWIPMATDEF B
                                         WHERE 1=1
                                           AND A.FACTORY = B.FACTORY
                                           AND A.MAT_ID = B.MAT_ID
                                           AND A.FACTORY = 'HMVA2'
                                           AND A.WORK_DATE = '20200803'
                                           AND A.LOT_TYPE = 'W'
                                           AND A.CM_KEY_3 LIKE 'P%'   
                                           AND B.MAT_GRP_5 NOT LIKE 'Middle%'
                                           AND REGEXP_LIKE(A.OPER, 'A0000|A0200|A0230|A0333|A040*|A060*|A1000|A2100')
                                           AND ((A.OPER >= 'A0400' AND B.MAT_GRP_5 IN ('-', 'Merge')) OR (A.OPER < 'A0400'))
                                       ) 
                               )
                       )
                 GROUP BY MAT_ID
               ) MOV
         WHERE 1=1
           AND MAT.MAT_ID = PLN.MAT_ID(+)
           AND MAT.MAT_ID = SHP.MAT_ID(+)
           AND MAT.MAT_ID = RCV.MAT_ID(+)
           AND MAT.MAT_ID = WIP.MAT_ID(+)
           AND MAT.MAT_ID = MOV.MAT_ID(+)
           AND NVL(ORI_PLN,0)+NVL(REV_PLN,0)+NVL(SHP_TTL,0)+NVL(RCV_QTY,0)+NVL(WIP_TTL,0)+NVL(D0_PLAN,0)+NVL(D1_PLAN,0)+NVL(SHP_WEEK,0) <> 0
       ) A
 GROUP BY A.MAT_GRP_1, A.MAT_GRP_9, A.MAT_GRP_10,  ' ',  ' ',  ' ',  ' '
 ORDER BY DECODE(A.MAT_GRP_1, 'SE', 1, 'HX', 2, 'IM', 3, 'FC', 4, 'IG', 5,6), CUSTOMER, MAT_GRP_9, MAT_GRP_10

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010312'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200801000000' AND '20200803235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200803' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010801'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200630220000' AND '20200831215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKT1' 
   AND OPER <> 'T0540' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, TO_NUMBER(OPER_CMF_4) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMVA2' 
   AND OPER LIKE 'A%'  
   AND OPER NOT IN ('A1120', 'A1130')  
   AND OPER_GRP_1 <> '-'  
   AND OPER_CMF_5 <> 'Y' 
 GROUP BY OPER_GRP_1, OPER_CMF_4 
 ORDER BY TO_NUMBER(OPER_CMF_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKE1' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_DESC 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'FGS' 
   AND OPER <> 'F000N' 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKB1' 
   AND OPER LIKE 'B%' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 
      , WF_QTY 
      , B0
      , B1
      , B2
      , B3
      , B4
      , B5
      , B6
      , B7
      , B8
      , B9
      , B10
      , B11
      , B12
      , B13
      , B14
      , B15
      , B16
      , B17
      , B18
      , B19
      , B20
      , B21
      , B22
      , B23
      , B24
      , B25
      , B26
      , B27
      , B28
      , B29
      , B30
      , B31
      , B32
      , B33
      , S0
      , P0
      , P1
      , P2
      , P3
      , P4
      , P5
      , S1
      , A0
      , A1
      , A2
      , A3
      , A4
      , A5
      , A6
      , A7
      , A8
      , A9
      , A10
      , A11
      , A12
      , A13
      , A14
      , A15
      , A16
      , A17
      , S2
      , S3
      , F0
      , S4
      , TOTAL
   FROM (  
    SELECT B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_2 
                ELSE 0 END) WF_QTY 
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK2B'  
                THEN QTY_1 
                ELSE 0 END) B0
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'IQC'  
                THEN QTY_1 
                ELSE 0 END) B1
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'I-STOCK'  
                THEN QTY_1 
                ELSE 0 END) B2
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RCF_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B3
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B4
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B5
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B6
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B7
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B8
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B9
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B10
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B11
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B12
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B13
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B14
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B15
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B16
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B17
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B18
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B19
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B20
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_CU_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B21
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SNAG_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B22
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B23
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_BALL_MOUNT'  
                THEN QTY_1 
                ELSE 0 END) B24
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_REFLOW'  
                THEN QTY_1 
                ELSE 0 END) B25
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'FINAL_INSP'  
                THEN QTY_1 
                ELSE 0 END) B26
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'SORT'  
                THEN QTY_1 
                ELSE 0 END) B27
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) B28
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MERGE'  
                THEN QTY_1 
                ELSE 0 END) B29
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MAP_MERGE'  
                THEN QTY_1 
                ELSE 0 END) B30
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'OGI'  
                THEN QTY_1 
                ELSE 0 END) B31
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PACKING'  
                THEN QTY_1 
                ELSE 0 END) B32
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK3B'  
                THEN QTY_1 
                ELSE 0 END) B33
         , SUM(CASE WHEN A.FACTORY = 'HMKB1'  
                THEN QTY_1 
                ELSE 0 END) S0 
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) P0
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'TEST'  
                THEN QTY_1 
                ELSE 0 END) P1
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) P2
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'QA'  
                THEN QTY_1 
                ELSE 0 END) P3
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'P/K'  
                THEN QTY_1 
                ELSE 0 END) P4
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE2'  
                THEN QTY_1 
                ELSE 0 END) P5
         , SUM(CASE WHEN A.FACTORY = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) S1 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_1 
                ELSE 0 END) A0
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'B/G'  
                THEN QTY_1 
                ELSE 0 END) A1
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SAW'  
                THEN QTY_1 
                ELSE 0 END) A2
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'D/A'  
                THEN QTY_1 
                ELSE 0 END) A3
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'W/B'  
                THEN QTY_1 
                ELSE 0 END) A4
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'GATE'  
                THEN QTY_1 
                ELSE 0 END) A5
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'MOLD'  
                THEN QTY_1 
                ELSE 0 END) A6
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'CURE'  
                THEN QTY_1 
                ELSE 0 END) A7
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'M/K'  
                THEN QTY_1 
                ELSE 0 END) A8
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TRIM'  
                THEN QTY_1 
                ELSE 0 END) A9
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TIN'  
                THEN QTY_1 
                ELSE 0 END) A10
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'S/B/A'  
                THEN QTY_1 
                ELSE 0 END) A11
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SIG'  
                THEN QTY_1 
                ELSE 0 END) A12
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) A13
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'V/I'  
                THEN QTY_1 
                ELSE 0 END) A14
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) A15
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'QC GATE'  
                THEN QTY_1 
                ELSE 0 END) A16
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK3A'  
                THEN QTY_1 
                ELSE 0 END) A17
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) S2 
         , SUM(CASE WHEN A.FACTORY = 'HMKT1'  
                THEN QTY_1 
                ELSE 0 END) S3 
         , SUM(CASE WHEN A.FACTORY = 'FGS' AND C.OPER = 'WAREHOUSE'  
                THEN QTY_1 
                ELSE 0 END) F0
         , SUM(CASE WHEN A.FACTORY = 'FGS'  
                THEN QTY_1 
                ELSE 0 END) S4 
         , SUM(CASE WHEN A.FACTORY LIKE '%' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) TOTAL 
      FROM RWIPLOTSTS A  
         , MWIPMATDEF B  
         , MWIPOPRDEF C  
     WHERE A.FACTORY LIKE '%'
       AND A.FACTORY = B.FACTORY  
       AND A.FACTORY = C.FACTORY 
       AND A.OPER = C.OPER    
       AND A.MAT_ID = B.MAT_ID  
       AND A.MAT_VER = 1 
       AND A.MAT_VER = B.MAT_VER 
       AND A.LOT_DEL_FLAG = ' '  
       AND A.LOT_TYPE = 'W'  
  GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
   )  
WHERE 1=1
  AND NVL(TOTAL,0) > 0
  AND NVL(TOTAL,0) > 0
  ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020701'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_1), '-') AS TEAM
     , NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_2), '-') AS PART 
     , RES_GRP_3 AS EQP_TYPE
     , RES_GRP_5 AS MAKER
     , RES_GRP_6 AS MODEL
     , RES_ID
     , RES_DESC
     , RES_TYPE
     , AREA_ID
     , SUB_AREA_ID
     , RES_LOCATION
     , RES_GRP_4 AS MOLD_PRODUCT_TYPE
     , RES_GRP_7 AS UPEH_GROUP
     , RES_GRP_8 AS IN_LINE
     , RES_GRP_9 AS TIMER_INTERVAL
     , RES_GRP_10 AS SEND_TIME
     , RES_CMF_1 AS SERIAL
     , RES_CMF_2 AS "자산관리번호"
     , RES_CMF_3 AS CLASS
     , RES_CMF_4 AS "자산구분"
     , RES_CMF_5 AS "입고일자"
     , RES_CMF_6 AS "제작일자"
     , RES_CMF_7 AS DISPATCH
     , RES_CMF_8 AS AUTO_ENABLE
     , RES_CMF_9 AS USE_STATE
     , RES_CMF_10 AS MOMENT
     , RES_CMF_11 AS MOMENT_GRP
     , RES_CMF_12 AS LOT_TRACKING
     , RES_CMF_13 AS "유휴설비"
     , RES_CMF_14 AS MY_MC
     , RES_CMF_15 AS "운휴설비"
     , RES_CMF_16 AS RMS
     , RES_CMF_17 AS IMS
     , RES_CMF_18 AS EDITOR
     , RES_CMF_19 AS MODULE_NUM
     , RES_CMF_20 AS STARTED_TIME
     , RES_UP_DOWN_FLAG
     , RES_STS_1 AS UP_DOWN_CODE
     , RES_STS_2 AS ARRANGE_MAT_ID
     , RES_STS_8 AS ARRANGE_OPER
  FROM MRASRESDEF RES
 WHERE 1=1
   AND FACTORY = 'HMVA2'
   AND DELETE_FLAG = ' '
   AND RES_CMF_9 = 'Y'
 ORDER BY TEAM, PART, EQP_TYPE, MAKER, MODEL, RES_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, TO_NUMBER(OPER_CMF_4) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMVA2' 
   AND OPER LIKE 'A%'  
   AND OPER NOT IN ('A1120', 'A1130')  
   AND OPER_GRP_1 <> '-'  
   AND OPER_CMF_5 <> 'Y' 
 GROUP BY OPER_GRP_1, OPER_CMF_4 
 ORDER BY TO_NUMBER(OPER_CMF_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 
      , WF_QTY 
      , A0
      , A1
      , A2
      , A3
      , A4
      , A5
      , A6
      , A7
      , A8
      , A9
      , A10
      , A11
      , A12
      , A13
      , A14
      , A15
      , A16
      , A17
      , S2
   FROM (  
    SELECT B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_2 
                ELSE 0 END) WF_QTY 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_1 
                ELSE 0 END) A0
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'B/G'  
                THEN QTY_1 
                ELSE 0 END) A1
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SAW'  
                THEN QTY_1 
                ELSE 0 END) A2
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'D/A'  
                THEN QTY_1 
                ELSE 0 END) A3
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'W/B'  
                THEN QTY_1 
                ELSE 0 END) A4
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'GATE'  
                THEN QTY_1 
                ELSE 0 END) A5
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'MOLD'  
                THEN QTY_1 
                ELSE 0 END) A6
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'CURE'  
                THEN QTY_1 
                ELSE 0 END) A7
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'M/K'  
                THEN QTY_1 
                ELSE 0 END) A8
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TRIM'  
                THEN QTY_1 
                ELSE 0 END) A9
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TIN'  
                THEN QTY_1 
                ELSE 0 END) A10
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'S/B/A'  
                THEN QTY_1 
                ELSE 0 END) A11
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SIG'  
                THEN QTY_1 
                ELSE 0 END) A12
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) A13
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'V/I'  
                THEN QTY_1 
                ELSE 0 END) A14
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) A15
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'QC GATE'  
                THEN QTY_1 
                ELSE 0 END) A16
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK3A'  
                THEN QTY_1 
                ELSE 0 END) A17
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) S2 
         , SUM(CASE WHEN A.FACTORY IN ('HMVA2') AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) TOTAL 
      FROM RWIPLOTSTS_BOH A  
         , MWIPMATDEF B  
         , MWIPOPRDEF C  
     WHERE A.FACTORY IN ('HMVA2')
       AND A.FACTORY = B.FACTORY  
       AND A.FACTORY = C.FACTORY 
       AND A.OPER = C.OPER    
       AND A.MAT_ID = B.MAT_ID  
       AND A.MAT_VER = 1 
       AND A.MAT_VER = B.MAT_VER 
       AND A.LOT_DEL_FLAG = ' '  
       AND A.LOT_TYPE = 'W'  
       AND A.CUTOFF_DT = '2020073122'
  GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
   )  
WHERE 1=1
  AND NVL(TOTAL,0) > 0
  AND NVL(S2,0) > 0
  ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '1' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT '2019' || '1231220000' AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT ( 
        SELECT MAX(SYS_DATE) || '220000'  
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '31' 
       ) AS PREV_DATE 
     , ( 
        SELECT MAX(SYS_DATE) || '220000' 
          FROM MWIPCALDEF 
         WHERE 1=1 
           AND CALENDAR_ID = 'HM' 
           AND PLAN_YEAR = '2020' 
           AND PLAN_WEEK = '32' 
       ) AS POST_DATE 
  FROM DUAL 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011016'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT DISTINCT LPAD(PLAN_WEEK,2,'0') AS PLAN_WEEK 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID = 'OTD' 
   AND SYS_YEAR = '2020' 
   AND SYS_MONTH = '08' 
   AND SYS_DAY = '03' 
 ORDER BY PLAN_WEEK 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) 
  FROM MWIPCALDEF 
 WHERE 1=1 
   AND CALENDAR_ID='OTD' 
   AND PLAN_YEAR='2020' 
   AND PLAN_WEEK='32' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT PLAN_YEAR|| LPAD(PLAN_WEEK,2,'0') 
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD' 
   AND SYS_YEAR || LPAD(SYS_MONTH,2,'0') IN ('202008', '202009' ,'202010') 
   AND SYS_DATE >= '20200803' 
 ORDER BY 1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD011017'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', MAT_GRP_10 AS PKG, MAT_GRP_6 AS LD_COUNT, CONV_MAT_ID, MAT_CMF_11 AS PKG_CODE,  ' ',  ' ', MAT_GRP_5 AS TYPE2,  ' ',  ' ',  ' ' 
     , OPER, RES_MODEL
     , ROUND(AVG(UPEH), 1) AS UPEH
     , ROUND(MIN(UPEH), 1) AS MIN_UPEH
     , ROUND(MAX(UPEH), 1) AS MAX_UPEH
     , ROUND(AVG(WPH), 1) AS WPH
  FROM (
        SELECT B.*
             , CASE WHEN B.MAT_GRP_1 = 'HX' THEN B.MAT_CMF_10
                    WHEN B.MAT_ID LIKE 'SEK%' THEN 'SEK_________-___' || SUBSTR(B.MAT_ID, -3)
                    ELSE B.MAT_ID
               END CONV_MAT_ID
             , A.OPER, A.RES_MODEL, A.UPEH
             , A.UPEH / (B.NET_DIE * (NVL(C.DAY_YIELD, 90) / 100)) AS WPH 
          FROM CRASUPHDEF A
             , VWIPMATDEF B
             , (
                SELECT MAT_ID, NET_DIE, DECODE(DAY_YIELD, 0, 90, DAY_YIELD) AS DAY_YIELD
                  FROM RSUMWAFYLD
                 WHERE 1=1
                   AND FACTORY = 'HMVA2'
                   AND WORK_DATE = TO_CHAR(SYSDATE-1, 'YYYYMMDD')
               ) C
         WHERE 1=1
           AND A.FACTORY = B.FACTORY
           AND A.MAT_ID = B.MAT_ID
           AND A.MAT_ID = C.MAT_ID(+)
           AND A.FACTORY = 'HMVA2'
           AND B.DELETE_FLAG = ' '
           AND B.MAT_TYPE = 'FG'
       )
 WHERE 1=1
   AND OPER LIKE '%'
 GROUP BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 
 ORDER BY MAT_GRP_1,  ' ', MAT_GRP_10, MAT_GRP_6, CONV_MAT_ID, MAT_CMF_11,  ' ',  ' ', MAT_GRP_5,  ' ',  ' ',  ' ', OPER, RES_MODEL 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010802'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200801220000' AND '20200803215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKT1' 
   AND OPER <> 'T0540' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, TO_NUMBER(OPER_CMF_4) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMVA2' 
   AND OPER LIKE 'A%'  
   AND OPER NOT IN ('A1120', 'A1130')  
   AND OPER_GRP_1 <> '-'  
   AND OPER_CMF_5 <> 'Y' 
 GROUP BY OPER_GRP_1, OPER_CMF_4 
 ORDER BY TO_NUMBER(OPER_CMF_4) 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER) 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKE1' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_DESC 
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'FGS' 
   AND OPER <> 'F000N' 
 ORDER BY OPER 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT OPER_GRP_1, MIN(OPER)  
  FROM MWIPOPRDEF  
 WHERE FACTORY = 'HMKB1' 
   AND OPER LIKE 'B%' 
   AND OPER_GRP_1 <> '-' 
 GROUP BY OPER_GRP_1  
 ORDER BY MIN(OPER) ASC 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 
      , WF_QTY 
      , B0
      , B1
      , B2
      , B3
      , B4
      , B5
      , B6
      , B7
      , B8
      , B9
      , B10
      , B11
      , B12
      , B13
      , B14
      , B15
      , B16
      , B17
      , B18
      , B19
      , B20
      , B21
      , B22
      , B23
      , B24
      , B25
      , B26
      , B27
      , B28
      , B29
      , B30
      , B31
      , B32
      , B33
      , S0
      , P0
      , P1
      , P2
      , P3
      , P4
      , P5
      , S1
      , A0
      , A1
      , A2
      , A3
      , A4
      , A5
      , A6
      , A7
      , A8
      , A9
      , A10
      , A11
      , A12
      , A13
      , A14
      , A15
      , A16
      , A17
      , S2
      , S3
      , F0
      , S4
      , TOTAL
   FROM (  
    SELECT B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_2 
                ELSE 0 END) WF_QTY 
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK2B'  
                THEN QTY_1 
                ELSE 0 END) B0
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'IQC'  
                THEN QTY_1 
                ELSE 0 END) B1
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'I-STOCK'  
                THEN QTY_1 
                ELSE 0 END) B2
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RCF_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B3
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B4
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B5
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B6
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL1_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B7
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV1_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B8
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B9
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B10
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B11
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL2_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B12
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV2_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B13
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B14
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B15
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B16
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'RDL3_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B17
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PSV3_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B18
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SPUTTER'  
                THEN QTY_1 
                ELSE 0 END) B19
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_PHOTO'  
                THEN QTY_1 
                ELSE 0 END) B20
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_CU_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B21
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_SNAG_PLAT'  
                THEN QTY_1 
                ELSE 0 END) B22
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_ETCH'  
                THEN QTY_1 
                ELSE 0 END) B23
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_BALL_MOUNT'  
                THEN QTY_1 
                ELSE 0 END) B24
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'BUMP_REFLOW'  
                THEN QTY_1 
                ELSE 0 END) B25
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'FINAL_INSP'  
                THEN QTY_1 
                ELSE 0 END) B26
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'SORT'  
                THEN QTY_1 
                ELSE 0 END) B27
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) B28
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MERGE'  
                THEN QTY_1 
                ELSE 0 END) B29
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'MAP_MERGE'  
                THEN QTY_1 
                ELSE 0 END) B30
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'OGI'  
                THEN QTY_1 
                ELSE 0 END) B31
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'PACKING'  
                THEN QTY_1 
                ELSE 0 END) B32
         , SUM(CASE WHEN A.FACTORY = 'HMKB1' AND C.OPER_GRP_1 = 'HMK3B'  
                THEN QTY_1 
                ELSE 0 END) B33
         , SUM(CASE WHEN A.FACTORY = 'HMKB1'  
                THEN QTY_1 
                ELSE 0 END) S0 
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) P0
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'TEST'  
                THEN QTY_1 
                ELSE 0 END) P1
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) P2
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'QA'  
                THEN QTY_1 
                ELSE 0 END) P3
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'P/K'  
                THEN QTY_1 
                ELSE 0 END) P4
         , SUM(CASE WHEN A.FACTORY = 'HMKE1' AND C.OPER = 'HMKE2'  
                THEN QTY_1 
                ELSE 0 END) P5
         , SUM(CASE WHEN A.FACTORY = 'HMKE1'  
                THEN QTY_1 
                ELSE 0 END) S1 
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK2A'  
                THEN QTY_1 
                ELSE 0 END) A0
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'B/G'  
                THEN QTY_1 
                ELSE 0 END) A1
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SAW'  
                THEN QTY_1 
                ELSE 0 END) A2
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'D/A'  
                THEN QTY_1 
                ELSE 0 END) A3
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'W/B'  
                THEN QTY_1 
                ELSE 0 END) A4
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'GATE'  
                THEN QTY_1 
                ELSE 0 END) A5
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'MOLD'  
                THEN QTY_1 
                ELSE 0 END) A6
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'CURE'  
                THEN QTY_1 
                ELSE 0 END) A7
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'M/K'  
                THEN QTY_1 
                ELSE 0 END) A8
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TRIM'  
                THEN QTY_1 
                ELSE 0 END) A9
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'TIN'  
                THEN QTY_1 
                ELSE 0 END) A10
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'S/B/A'  
                THEN QTY_1 
                ELSE 0 END) A11
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'SIG'  
                THEN QTY_1 
                ELSE 0 END) A12
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'AVI'  
                THEN QTY_1 
                ELSE 0 END) A13
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'V/I'  
                THEN QTY_1 
                ELSE 0 END) A14
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'BAKE'  
                THEN QTY_1 
                ELSE 0 END) A15
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'QC GATE'  
                THEN QTY_1 
                ELSE 0 END) A16
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER_GRP_1 = 'HMK3A'  
                THEN QTY_1 
                ELSE 0 END) A17
         , SUM(CASE WHEN A.FACTORY = 'HMVA2' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) S2 
         , SUM(CASE WHEN A.FACTORY = 'HMKT1'  
                THEN QTY_1 
                ELSE 0 END) S3 
         , SUM(CASE WHEN A.FACTORY = 'FGS' AND C.OPER = 'WAREHOUSE'  
                THEN QTY_1 
                ELSE 0 END) F0
         , SUM(CASE WHEN A.FACTORY = 'FGS'  
                THEN QTY_1 
                ELSE 0 END) S4 
         , SUM(CASE WHEN A.FACTORY LIKE '%' AND C.OPER NOT IN ('00001', '00002') 
                THEN QTY_1 
                ELSE 0 END) TOTAL 
      FROM RWIPLOTSTS A  
         , MWIPMATDEF B  
         , MWIPOPRDEF C  
     WHERE A.FACTORY LIKE '%'
       AND A.FACTORY = B.FACTORY  
       AND A.FACTORY = C.FACTORY 
       AND A.OPER = C.OPER    
       AND A.MAT_ID = B.MAT_ID  
       AND A.MAT_VER = 1 
       AND A.MAT_VER = B.MAT_VER 
       AND A.LOT_DEL_FLAG = ' '  
       AND A.LOT_TYPE = 'W'  
  GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_7 
   )  
WHERE 1=1
  AND NVL(TOTAL,0) > 0
  AND NVL(TOTAL,0) > 0
  ORDER BY MAT_GRP_1,  ' ', MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_7 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070202'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY='HMVA2' AND TABLE_NAME='MATERIAL_TYPE' AND KEY_1 IN ('AE','LF','PB','GW','MC','SB','BD')
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 
             , LOT_CMF_3, A.OPER, A.LOT_ID, SUM(A.QTY_1), SUM(A.QTY_2), A.LOT_CMF_5, TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')
             , DECODE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID), ' ','', TO_CHAR(TO_DATE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID),'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')) 
             , A.LOT_CMF_6, A.TRAN_USER_ID 
          FROM (SELECT * 
                  FROM RWIPLOTHIS 
                 WHERE FACTORY  = 'HMVA2' 
                   AND HIST_DEL_FLAG = ' ' 
                   AND MAT_VER = 1 
                   AND OPER IN ('A0000', 'A000N') 
                   AND TRAN_CODE = 'CREATE'          
                   AND TRAN_TIME BETWEEN '20200802220000' AND '20200803215959' 
               ) A  
             , MWIPMATDEF B 
         WHERE A.FACTORY = B.FACTORY  
           AND A.MAT_ID = B.MAT_ID            
           AND B.MAT_VER = 1  
      GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' '
              , LOT_CMF_3, OPER, LOT_ID, LOT_CMF_5, OPER_IN_TIME, LOT_CMF_6, TRAN_USER_ID 
      ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 
             , LOT_CMF_3, A.OPER, A.LOT_ID, SUM(A.QTY_1), SUM(A.QTY_2), A.LOT_CMF_5, TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')
             , DECODE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID), ' ','', TO_CHAR(TO_DATE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID),'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')) 
             , A.LOT_CMF_6, A.TRAN_USER_ID 
          FROM (SELECT * 
                  FROM RWIPLOTHIS 
                 WHERE FACTORY  = 'HMVA2' 
                   AND HIST_DEL_FLAG = ' ' 
                   AND MAT_VER = 1 
                   AND OPER IN ('A0000', 'A000N') 
                   AND TRAN_CODE = 'CREATE'          
                   AND TRAN_TIME BETWEEN '20200801220000' AND '20200803215959' 
               ) A  
             , MWIPMATDEF B 
         WHERE A.FACTORY = B.FACTORY  
           AND A.MAT_ID = B.MAT_ID            
           AND B.MAT_VER = 1  
      GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' '
              , LOT_CMF_3, OPER, LOT_ID, LOT_CMF_5, OPER_IN_TIME, LOT_CMF_6, TRAN_USER_ID 
      ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1 AS Code, DATA_1 AS Data 
  FROM MGCMTBLDAT 
 WHERE FACTORY = 'HMVA2' 
   AND TABLE_NAME = 'MATERIAL_TYPE' 
   AND KEY_1 IN ('TE','PB','LF') 
 ORDER BY KEY_1 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT PLAN_DATE AS Code, '' AS Data
  FROM ( 
        SELECT TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS PLAN_DATE 
             , ROW_NUMBER() OVER(ORDER BY PDATE DESC) AS RK 
          FROM ZHMMT200@SAPREAL 
         WHERE 1=1 
           AND PDATE > TO_CHAR(ADD_MONTHS(SYSDATE,-1), 'YYYYMMDD') 
           AND TO_CHAR(TO_DATE(PDATE, 'YYYYMMDD'), 'DY') IN ('월','목') 
         GROUP BY PDATE 
       ) 
 WHERE RK <= 4 
 ORDER BY PLAN_DATE DESC

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200801000000' AND '20200803235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200803' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 
             , LOT_CMF_3, A.OPER, A.LOT_ID, SUM(A.QTY_1), SUM(A.QTY_2), A.LOT_CMF_5, TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')
             , DECODE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID), ' ','', TO_CHAR(TO_DATE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID),'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')) 
             , A.LOT_CMF_6, A.TRAN_USER_ID 
          FROM (SELECT * 
                  FROM RWIPLOTHIS 
                 WHERE FACTORY  = 'HMVA2' 
                   AND HIST_DEL_FLAG = ' ' 
                   AND MAT_VER = 1 
                   AND OPER IN ('A0000', 'A000N') 
                   AND TRAN_CODE = 'CREATE'          
                   AND TRAN_TIME BETWEEN '20200701220000' AND '20200831215959' 
               ) A  
             , MWIPMATDEF B 
         WHERE A.FACTORY = B.FACTORY  
           AND A.MAT_ID = B.MAT_ID            
           AND B.MAT_VER = 1  
      GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' '
              , LOT_CMF_3, OPER, LOT_ID, LOT_CMF_5, OPER_IN_TIME, LOT_CMF_6, TRAN_USER_ID 
      ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'RAS020701'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_1), '-') AS TEAM
     , NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = RES.FACTORY AND TABLE_NAME = 'H_DEPARTMENT' AND ROWNUM=1 AND KEY_1 = RES.RES_GRP_2), '-') AS PART 
     , RES_GRP_3 AS EQP_TYPE
     , RES_GRP_5 AS MAKER
     , RES_GRP_6 AS MODEL
     , RES_ID
     , RES_DESC
     , RES_TYPE
     , AREA_ID
     , SUB_AREA_ID
     , RES_LOCATION
     , RES_GRP_4 AS MOLD_PRODUCT_TYPE
     , RES_GRP_7 AS UPEH_GROUP
     , RES_GRP_8 AS IN_LINE
     , RES_GRP_9 AS TIMER_INTERVAL
     , RES_GRP_10 AS SEND_TIME
     , RES_CMF_1 AS SERIAL
     , RES_CMF_2 AS "자산관리번호"
     , RES_CMF_3 AS CLASS
     , RES_CMF_4 AS "자산구분"
     , RES_CMF_5 AS "입고일자"
     , RES_CMF_6 AS "제작일자"
     , RES_CMF_7 AS DISPATCH
     , RES_CMF_8 AS AUTO_ENABLE
     , RES_CMF_9 AS USE_STATE
     , RES_CMF_10 AS MOMENT
     , RES_CMF_11 AS MOMENT_GRP
     , RES_CMF_12 AS LOT_TRACKING
     , RES_CMF_13 AS "유휴설비"
     , RES_CMF_14 AS MY_MC
     , RES_CMF_15 AS "운휴설비"
     , RES_CMF_16 AS RMS
     , RES_CMF_17 AS IMS
     , RES_CMF_18 AS EDITOR
     , RES_CMF_19 AS MODULE_NUM
     , RES_CMF_20 AS STARTED_TIME
     , RES_UP_DOWN_FLAG
     , RES_STS_1 AS UP_DOWN_CODE
     , RES_STS_2 AS ARRANGE_MAT_ID
     , RES_STS_8 AS ARRANGE_OPER
  FROM MRASRESDEF RES
 WHERE 1=1
   AND FACTORY = 'HMVA2'
   AND DELETE_FLAG = ' '
   AND RES_CMF_9 = 'Y'
 ORDER BY TEAM, PART, EQP_TYPE, MAKER, MODEL, RES_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010807'
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010608'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 
             , LOT_CMF_3, A.OPER, A.LOT_ID, SUM(A.QTY_1), SUM(A.QTY_2), A.LOT_CMF_5, TO_CHAR(TO_DATE(A.OPER_IN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')
             , DECODE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID), ' ','', TO_CHAR(TO_DATE((SELECT RESV_FIELD_1 FROM RWIPLOTSTS WHERE LOT_ID = A.LOT_ID),'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS')) 
             , A.LOT_CMF_6, A.TRAN_USER_ID 
          FROM (SELECT * 
                  FROM RWIPLOTHIS 
                 WHERE FACTORY  = 'HMVA2' 
                   AND HIST_DEL_FLAG = ' ' 
                   AND MAT_VER = 1 
                   AND OPER IN ('A0000', 'A000N') 
                   AND TRAN_CODE = 'CREATE'          
                   AND TRAN_TIME BETWEEN '20200701220000' AND '20200731215959' 
               ) A  
             , MWIPMATDEF B 
         WHERE A.FACTORY = B.FACTORY  
           AND A.MAT_ID = B.MAT_ID            
           AND B.MAT_VER = 1  
      GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' '
              , LOT_CMF_3, OPER, LOT_ID, LOT_CMF_5, OPER_IN_TIME, LOT_CMF_6, TRAN_USER_ID 
      ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID,  ' ' 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200630220000' AND '20200831215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200131' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200101') - 1, 'YYYYMMDD') || '220000' AND '20200131' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200101' AND '20200131'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010401'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , ROUND(SUM(TOTAL)/2, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200802', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200803', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.CM_KEY_3 LIKE 'P%'
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200802' AND '20200803' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_3 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200630220000' AND '20200731215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200229' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200201') - 1, 'YYYYMMDD') || '220000' AND '20200229' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200201' AND '20200229'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200331' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200331' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200301') - 1, 'YYYYMMDD') || '220000' AND '20200331' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200301' AND '20200331'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200430' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200401') - 1, 'YYYYMMDD') || '220000' AND '20200430' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200401' AND '20200430'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'MAT070501'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1 Code, DATA_1 Data
  FROM MGCMTBLDAT
 WHERE 1=1 
   AND FACTORY = 'HMVA2' 
   AND TABLE_NAME = 'MATERIAL_TYPE' 
   AND DATA_2 = 'Y' 
 ORDER BY KEY_1 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200531' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200501') - 1, 'YYYYMMDD') || '220000' AND '20200531' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200501' AND '20200531'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
     , SUM(B.INV_QTY) AS INV_QTY
     , SUM(B.INV_L_QTY) AS INV_L_QTY
     , SUM(E.WIK_WIP) AS WIK_WIP 
     , SUM(C.SMT_BEFORE) AS SMT_BEFORE 
     , SUM(C.SMT_AFTER) AS SMT_AFTER 
     , SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.QTY_TTL,0)) + SUM(NVL(E.WIK_WIP,0)) AS TTL
     , SUM(B.QTY_1004) AS QTY_1004 
     , SUM(D.ORDER_QTY) AS ORDER_QTY
     , SUM(C.GRADE_A) AS GRADE_A
     , SUM(C.GRADE_B) AS GRADE_B
     , SUM(C.IN_QTY) AS IN_QTY
     , SUM(C.LOT_TTL) AS LOT_TTL
  FROM MWIPMATDEF A 
     , ( 
        SELECT MAT_ID 
             , SUM(INV_QTY) AS INV_QTY 
             , SUM(INV_L_QTY) AS INV_L_QTY 
             , SUM(QTY_1004) AS QTY_1004 
          FROM ( 
                SELECT MAT_ID 
                     , SUM(DECODE(STORAGE_LOCATION, '1000', QUANTITY, '1002', QUANTITY, '1003', QUANTITY, 0)) AS INV_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1001', QUANTITY, 0)) AS INV_L_QTY 
                     , SUM(DECODE(STORAGE_LOCATION, '1004', QUANTITY, 0)) AS QTY_1004 
                  FROM CWMSLOTSTS@RPTTOMES 
                 WHERE 1=1 
                   AND QUANTITY> 0 
                   AND STORAGE_LOCATION IN ('1000', '1001', '1002', '1003', '1004') 
                 GROUP BY MAT_ID 
                 UNION ALL 
                SELECT MAT_ID, 0 AS INV_QTY, SUM(QTY_1) AS INV_L_QTY, 0 AS QTY_1004 
                  FROM CWIPMATSLP@RPTTOMES 
                 WHERE 1=1 
                   AND RECV_FLAG = ' ' 
                   AND IN_TIME BETWEEN '20200801000000' AND '20200803235959' 
                 GROUP BY MAT_ID 
               ) 
         GROUP BY MAT_ID 
       ) B 
     , ( 
        SELECT MAT_ID
             , SUM(CASE WHEN A.LOT_CMF_9 = 'A' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_A
             , SUM(CASE WHEN A.LOT_CMF_9 = 'B' AND B.LOT_ID IS NULL THEN 1 ELSE 0 END) AS GRADE_B
             , SUM(CASE WHEN B.LOT_ID IS NOT NULL THEN 1 ELSE 0 END) AS IN_QTY
             , SUM(CASE WHEN OPER LIKE 'M%' AND OPER <= 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_BEFORE 
             , SUM(CASE WHEN OPER LIKE 'A%' OR OPER > 'M0330' THEN QTY_1 ELSE 0 END) AS SMT_AFTER 
             , COUNT(*) AS LOT_TTL 
             , SUM(QTY_1) AS QTY_TTL 
          FROM RWIPLOTSTS A 
             , CRASRESMAT B 
         WHERE 1=1  
           AND A.FACTORY = B.FACTORY(+) 
           AND A.LOT_ID = B.LOT_ID(+) 
           AND A.FACTORY = 'HMVA2'
           AND A.LOT_TYPE != 'W'
           AND A.LOT_DEL_FLAG = ' '
           AND A.LOT_CMF_2 = '-' 
           AND A.LOT_CMF_9 != ' ' 
           AND A.QTY_1 > 0 
           AND A.OPER NOT IN  ('00001', '00002', 'V0000') 
         GROUP BY A.MAT_ID  
       ) C 
     , ( 
        SELECT MAT_ID, SUM(ORDER_QUAN) AS ORDER_QTY 
          FROM RSAPORDQNT 
         WHERE 1=1 
           AND CREATE_TIME = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         GROUP BY MAT_ID 
       ) D 
     , ( 
        SELECT MAT_ID, SUM(LOT_QTY) AS WIK_WIP 
          FROM ISTMWIKWIP@RPTTOMES 
         WHERE 1=1 
           AND CUTOFF_DT = '20200803' || TO_CHAR(SYSDATE, 'HH24')
         GROUP BY MAT_ID 
       ) E 
 WHERE 1=1
   AND A.MAT_ID = B.MAT_ID(+)
   AND A.MAT_ID = C.MAT_ID(+)
   AND A.MAT_ID = D.MAT_ID(+)
   AND A.MAT_ID = E.MAT_ID(+)
   AND A.FACTORY = 'HMVA2'
   AND A.MAT_TYPE IN ('MC')
 GROUP BY A.MAT_TYPE, A.MAT_ID, A.MAT_DESC, A.UNIT_1
 HAVING SUM(NVL(B.INV_QTY,0)) + SUM(NVL(B.INV_L_QTY,0)) + SUM(NVL(C.LOT_TTL,0)) + SUM(NVL(D.ORDER_QTY,0)) + SUM(NVL(E.WIK_WIP,0)) > 0
 ORDER BY A.MAT_TYPE, A.MAT_ID 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010312'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010503'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200630' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200601') - 1, 'YYYYMMDD') || '220000' AND '20200630' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200601' AND '20200630'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT *
FROM (SELECT A.FACTORY AS FACTORY,
             A.MAT_ID AS MAT_ID,
             A.OPER AS OPER,
             NVL(B.BOH, 0) AS BOH,
             A.OPER_IN AS SUBUL_IN,
             A.END_QTY + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) AS SUBUL_OUT,
             A.LOSS + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) AS SUBUL_LOSS,
             A.CHG AS CHG,
             NVL(C.EOH, 0) AS EOH,
             CASE
               WHEN NVL(A.CHG, 0) < 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + ABS(NVL(A.CHG, 0)) + NVL(C.EOH, 0))
               WHEN NVL(A.CHG, 0) >= 0 THEN (NVL(B.BOH, 0) + NVL(A.OPER_IN, 0) + NVL(A.CHG, 0)) - (NVL(A.END_QTY, 0) + NVL(F.SHIP_HMKA1_CUSTOMER_QTY, 0) + NVL(G.SHIP_HMKA1_HMKT1_QTY, 0) + NVL(A.LOSS, 0) + NVL(D.TERMINATE_NORMAL_QTY, 0) + NVL(E.TERMINATE_COMBINE_QTY, 0) + NVL(C.EOH, 0))
             END AS DIFF
       FROM (
            SELECT FACTORY AS FACTORY,
                   MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(S1_OPER_IN_QTY_1 + S2_OPER_IN_QTY_1 + S3_OPER_IN_QTY_1) AS OPER_IN,
                  SUM(S1_END_QTY_1 + S2_END_QTY_1 + S3_END_QTY_1) AS END_QTY,
                  ABS(SUM(S1_LOSS_QTY_1 + S2_LOSS_QTY_1 + S3_LOSS_QTY_1)) AS LOSS,
                  SUM(S1_BONUS_QTY_1 + S2_BONUS_QTY_1 + S3_BONUS_QTY_1) AS BONUS,
                  SUM(S1_CHG_QTY_1 + S2_CHG_QTY_1 + S3_CHG_QTY_1) AS CHG
             FROM RSUMWIPMOV
            WHERE WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND CM_KEY_3 LIKE '%'
              AND LOT_TYPE = 'W'
              AND OPER NOT IN (' ',
                               'A000N',
                               'T000N',
                               'F000N',
                               'E000N',
                               'S000N',
                               'B000N')
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) A,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS BOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) B,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS EOH
            FROM RWIPLOTSTS_BOH
           WHERE CUTOFF_DT = '20200731' || '22'
             AND LOT_TYPE = 'W'
             AND LOT_CMF_5 LIKE '%'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
           ) C,
           (
           SELECT FACTORY AS FACTORY,
                  MAT_ID AS MAT_ID,
                  OPER AS OPER,
                  SUM(QTY_1) AS TERMINATE_NORMAL_QTY
             FROM RWIPLOTSTS
            WHERE LOT_TYPE = 'W'
              AND LAST_TRAN_CODE = 'TERMINATE'
              AND LOT_DEL_FLAG = 'Y'
              AND RWK_FLAG = ' '
              AND REP_FLAG = ' '
              AND MAT_ID LIKE '%'
              AND LOT_CMF_5 LIKE '%'
              AND LAST_TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) D,
          (
          SELECT FACTORY AS FACTORY,
                 MAT_ID AS MAT_ID,
                 OPER AS OPER,
                 SUM(FROM_TO_QTY_1) AS TERMINATE_COMBINE_QTY
            FROM RWIPLOTCMB
           WHERE FACTORY IN ('HMVA2',
                             'HMKT1',
                             'HMKE1',
                             'HMKS1')
             AND TRAN_TIME BETWEEN TO_CHAR(TO_DATE('20200701') - 1, 'YYYYMMDD') || '220000' AND '20200731' || '215959'
             AND MAT_ID LIKE '%'
             AND FROM_TO_FLAG = 'F'
        GROUP BY FACTORY,
                 MAT_ID,
                 OPER
          ) E,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_CUSTOMER_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'CUSTOMER'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = ' '
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) F,
          (
           SELECT 'HMVA2' AS FACTORY,
                  MAT_ID AS MAT_ID,
                  'AZ010' AS OPER,
                  SUM(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1) AS SHIP_HMKA1_HMKT1_QTY
             FROM RSUMFACMOV
            WHERE FACTORY = 'HMKT1'
              AND CM_KEY_1 = 'HMVA2'
              AND OPER = 'T000N'
              AND WORK_DATE BETWEEN '20200701' AND '20200731'
              AND MAT_ID LIKE '%'
              AND LOT_TYPE = 'W'
              AND CM_KEY_3 LIKE '%'
         GROUP BY FACTORY,
                  MAT_ID,
                  OPER
          ) G
       WHERE A.FACTORY = B.FACTORY(+)
         AND A.MAT_ID = B.MAT_ID(+)
         AND A.OPER = B.OPER(+)
         AND A.FACTORY = C.FACTORY(+)
         AND A.MAT_ID = C.MAT_ID(+)
         AND A.OPER = C.OPER(+)
         AND A.FACTORY = D.FACTORY(+)
         AND A.MAT_ID = D.MAT_ID(+)
         AND A.OPER = D.OPER(+)
         AND A.FACTORY = E.FACTORY(+)
         AND A.MAT_ID = E.MAT_ID(+)
         AND A.OPER = E.OPER(+)
         AND A.FACTORY = F.FACTORY(+)
         AND A.MAT_ID = F.MAT_ID(+)
         AND A.OPER = F.OPER(+)
         AND A.FACTORY = G.FACTORY(+)
         AND A.MAT_ID = G.MAT_ID(+)
         AND A.OPER = G.OPER(+)
 ORDER BY DECODE(A.FACTORY, 'HMVA2', 1, 'HMKT1', 2, 'HMKE1', 3, 'HMKS1', 4, 'FGS', 5, 6) ASC,
       A.MAT_ID ASC,
       A.OPER ASC)

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010312'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060101'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060102'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = B.MAT_GRP_1 AND ROWNUM=1), '-') AS CUSTOMER,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
      , A.LOT_ID
      , SUM(A.SHIP_QTY_1)
      , (SELECT COUNT(A.LOT_ID) FROM CWIPLOTWFR WHERE LOT_ID = A.LOT_ID) AS SHIP_QTY_2
      , A.FROM_FACTORY 
      , A.TO_FACTORY      
      , A.FROM_OPER        
      , A.TRAN_USER_ID
      , TO_CHAR(TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS RECEIVE_TIME
      , TO_CHAR(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD PM HH12:MI:SS') AS TRANS_TIME
      , ROUND(TO_DATE(A.TRAN_TIME, 'YYYYMMDDHH24MISS') - TO_DATE(A.LOT_CMF_14, 'YYYYMMDDHH24MISS'), 2) AS TAT
   FROM (    
        SELECT *
          FROM VWIPSHPLOT
         WHERE 1=1
           AND FROM_FACTORY  = 'HMVA2' 
           AND LOT_TYPE = 'W'
           AND TO_FACTORY = 'CUSTOMER'
           AND OWNER_CODE = 'PROD'
           AND FROM_OPER IN ('AZ010','AZ009','TZ010','EZ010', 'F0000', 'BZ010')
           AND TRAN_TIME BETWEEN '20200630220000' AND '20200731215959' 
        ) A
      , MWIPMATDEF B 
WHERE 1=1
    AND A.MAT_ID = B.MAT_ID
    AND A.FROM_FACTORY = B.FACTORY         
    AND B.MAT_VER = 1
GROUP BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
       , A.LOT_ID, A.FROM_FACTORY, A.TO_FACTORY, A.FROM_OPER, A.TRAN_USER_ID, A.TRAN_TIME, A.LOT_CMF_14
ORDER BY B.MAT_GRP_1,  ' ', B.MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',  ' ', A.INVOICE_NO, B.MAT_CMF_7, A.LOT_CMF_4 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'CUS060108'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT KEY_1, DATA_1 FROM MGCMTBLDAT WHERE FACTORY = 'HMKA1' AND TABLE_NAME = 'H_CUSTOMER' 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'TAT050402'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT DISTINCT OPER
  FROM CWIPSAPTAT@RPTTOMES A 
     , ( 
        SELECT DISTINCT BASE_MAT_ID
          FROM MWIPMATDEF 
         WHERE FACTORY='HMVA2'
           AND MAT_TYPE = 'FG' 
           AND DELETE_FLAG = ' ' 
       ) B 
 WHERE A.SAP_CODE = B.BASE_MAT_ID
   AND A.FACTORY = 'HMVA2'
   AND A.RESV_FIELD_1 = ' '
   AND A.RESV_FIELD_2 = ' '
 ORDER BY OPER

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS MAT_GRP_1, MAT_GRP_9, MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, MAT_GRP_7, MAT_GRP_4, MAT_GRP_5, MAT_GRP_8 
     , SAP_CODE 
     , SUBSTR(SAP_CODE, 5, 4) PKG_CODE
     , MAT_CMF_10 
     , ROUND(SUM(TAT_DAY_WAIT), 2) AS W_TTL 
     , ROUND(SUM(TAT_DAY), 2) AS R_TTL 
  FROM CWIPSAPTAT@RPTTOMES A 
     , ( 
        SELECT DISTINCT BASE_MAT_ID, MAT_GRP_1, MAT_GRP_2, MAT_GRP_3, MAT_GRP_4, MAT_GRP_5, MAT_GRP_6, MAT_GRP_7, MAT_GRP_8, MAT_GRP_9, MAT_GRP_10, MAT_CMF_10
          FROM MWIPMATDEF
         WHERE FACTORY = 'HMVA2' 
           AND DELETE_FLAG = ' ' 
           AND MAT_TYPE = 'FG' 
           AND SUBSTR(BASE_MAT_ID, 5, 4) NOT IN ('0000', '00ER') 
       ) B 
 WHERE 1=1 
   AND A.SAP_CODE = B.BASE_MAT_ID 
   AND A.FACTORY = 'HMVA2' 
   AND A.RESV_FIELD_1 = ' ' 
   AND A.RESV_FIELD_2 = ' ' 
   AND A.RESV_FIELD_2 = ' ' 
 GROUP BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, MAT_GRP_7, MAT_GRP_4, MAT_GRP_5, MAT_GRP_8, SAP_CODE, MAT_CMF_10 
 ORDER BY SAP_CODE, MAT_GRP_1, MAT_GRP_9, MAT_GRP_2, MAT_GRP_3, MAT_GRP_6, MAT_GRP_7, MAT_GRP_4, MAT_GRP_5, MAT_GRP_8, MAT_CMF_10 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010306'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT OPER, OPER_DESC  FROM MWIPOPRDEF
  WHERE FACTORY = 'HMVA2'  AND OPER NOT IN ('00001', '00002') AND OPER NOT LIKE 'V%' ORDER BY DECODE(OPER_CMF_2, ' ', 99999, TO_NUMBER(OPER_CMF_2)), OPER
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT NVL((SELECT DATA_1 FROM MGCMTBLDAT WHERE FACTORY = MAT.FACTORY AND TABLE_NAME = 'H_CUSTOMER' AND ROWNUM=1 AND KEY_1 = MAT.MAT_GRP_1), '-') AS CUSTOMER,  ' ', MAT.MAT_GRP_3 as Package,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , ' ' GUBUN 
     , (TOT_0 + TOT_1 + TOT_2 + TOT_3 + TOT_4 + TOT_5 + TOT_6 + TOT_7 + TOT_8 + TOT_9 + TOT_10 + TOT_11 + TOT_12 + TOT_13 + TOT_14 + TOT_15 + TOT_16 + TOT_17 + TOT_18 + TOT_19 + TOT_20 + TOT_21 + TOT_22 + TOT_23 + TOT_24 + TOT_25 + TOT_26 + TOT_27 + TOT_28 + TOT_29 + TOT_30 + TOT_31 + TOT_32 + TOT_33 + TOT_34 + TOT_35 + TOT_36 + TOT_37 + TOT_38 + TOT_39 + TOT_40 + TOT_41 + TOT_42 + TOT_43 + TOT_44 + TOT_45 + TOT_46 + TOT_47 + TOT_48 + TOT_49 + TOT_50 + TOT_51 + TOT_52 + TOT_53 + TOT_54 + TOT_55 + TOT_56 + TOT_57 + TOT_58 + TOT_59 + TOT_60 + TOT_61 + TOT_62 + TOT_63 + TOT_64 + TOT_65 + TOT_66 + TOT_67 + TOT_68 + TOT_69 + TOT_70 + TOT_71 + TOT_72 + TOT_73 + TOT_74 + TOT_75 + TOT_76 + TOT_77 + TOT_78 + TOT_79 + TOT_80 + TOT_81 + TOT_82 + TOT_83 + TOT_84 + TOT_85 + TOT_86 + TOT_87 + TOT_88 + TOT_89 + TOT_90 + TOT_91 + TOT_92 + TOT_93 + TOT_94 + TOT_95 + TOT_96 + TOT_97 + TOT_98 + TOT_99 + TOT_100 + TOT_101 + TOT_102 + TOT_103 + TOT_104 + TOT_105 + TOT_106 + TOT_107 + TOT_108 + TOT_109 + TOT_110 + TOT_111 + TOT_112 + TOT_113 + TOT_114 + TOT_115 + TOT_116 + TOT_117 + TOT_118 + TOT_119 + TOT_120 + TOT_121 + TOT_122 + TOT_123 + TOT_124 + TOT_125 + TOT_126 + TOT_127 + TOT_128 + TOT_129 + TOT_130 + TOT_131 + TOT_132 + TOT_133 + TOT_134 + TOT_135 + TOT_136 + TOT_137 + TOT_138 + TOT_139 + TOT_140 + TOT_141 + TOT_142 + TOT_143 + TOT_144 + TOT_145 + TOT_146 + TOT_147 + TOT_148 + TOT_149 + TOT_150 + TOT_151 + TOT_152 + TOT_153 + TOT_154 + TOT_155 + TOT_156 + TOT_157 + TOT_158 + TOT_159 + TOT_160 + TOT_161 + TOT_162 + TOT_163 + TOT_164 + TOT_165 + TOT_166 + TOT_167 + TOT_168 + TOT_169 + TOT_170 + TOT_171 + TOT_172 + TOT_173 + TOT_174 + TOT_175 + TOT_176 + TOT_177 + TOT_178 + TOT_179 + TOT_180 + TOT_181 + TOT_182 + TOT_183 + TOT_184 + TOT_185 + TOT_186 + TOT_187 + TOT_188 + TOT_189 + TOT_190 + TOT_191 + TOT_192 + TOT_193 + TOT_194 + TOT_195 + TOT_196 + TOT_197 + TOT_198 + TOT_199 + TOT_200 + TOT_201 + TOT_202 + TOT_203 + TOT_204 + TOT_205 + TOT_206 + TOT_207 + TOT_208 + TOT_209 + TOT_210 + TOT_211 + TOT_212 + TOT_213 + TOT_214 + TOT_215 + TOT_216 + TOT_217 + TOT_218 + TOT_219 + TOT_220 + TOT_221 + TOT_222 + TOT_223 + TOT_224 + TOT_225 + TOT_226 + TOT_227 + TOT_228 + TOT_229 + TOT_230 + TOT_231 + TOT_232 + TOT_233 + TOT_234 + TOT_235 + TOT_236 + TOT_237 + TOT_238 + TOT_239 + TOT_240 + TOT_241 + TOT_242 + TOT_243 + TOT_244 + TOT_245 + TOT_246 + TOT_247 + TOT_248 + TOT_249 + TOT_250 + TOT_251 + TOT_252 + TOT_253 + TOT_254 + TOT_255 + TOT_256 + TOT_257 + TOT_258 + TOT_259 + TOT_260 + TOT_261 + TOT_262 + TOT_263 + TOT_264 + TOT_265 + TOT_266 + TOT_267 + TOT_268 + TOT_269 + TOT_270 + TOT_271 + TOT_272 + TOT_273 + TOT_274 + TOT_275 + TOT_276 + TOT_277 + TOT_278 + TOT_279 + TOT_280 + TOT_281 + TOT_282 + TOT_283 + TOT_284 + TOT_285 + TOT_286 + TOT_287 + TOT_288 + TOT_289 + TOT_290 + TOT_291 + TOT_292 + TOT_293 + TOT_294 + TOT_295 + TOT_296 + TOT_297 + TOT_298 + TOT_299) AS TOTAL1
     , TOT_0, TOT_1, TOT_2, TOT_3, TOT_4, TOT_5, TOT_6, TOT_7, TOT_8, TOT_9, TOT_10, TOT_11, TOT_12, TOT_13, TOT_14, TOT_15, TOT_16, TOT_17, TOT_18, TOT_19, TOT_20, TOT_21, TOT_22, TOT_23, TOT_24, TOT_25, TOT_26, TOT_27, TOT_28, TOT_29, TOT_30, TOT_31, TOT_32, TOT_33, TOT_34, TOT_35, TOT_36, TOT_37, TOT_38, TOT_39, TOT_40, TOT_41, TOT_42, TOT_43, TOT_44, TOT_45, TOT_46, TOT_47, TOT_48, TOT_49, TOT_50, TOT_51, TOT_52, TOT_53, TOT_54, TOT_55, TOT_56, TOT_57, TOT_58, TOT_59, TOT_60, TOT_61, TOT_62, TOT_63, TOT_64, TOT_65, TOT_66, TOT_67, TOT_68, TOT_69, TOT_70, TOT_71, TOT_72, TOT_73, TOT_74, TOT_75, TOT_76, TOT_77, TOT_78, TOT_79, TOT_80, TOT_81, TOT_82, TOT_83, TOT_84, TOT_85, TOT_86, TOT_87, TOT_88, TOT_89, TOT_90, TOT_91, TOT_92, TOT_93, TOT_94, TOT_95, TOT_96, TOT_97, TOT_98, TOT_99, TOT_100, TOT_101, TOT_102, TOT_103, TOT_104, TOT_105, TOT_106, TOT_107, TOT_108, TOT_109, TOT_110, TOT_111, TOT_112, TOT_113, TOT_114, TOT_115, TOT_116, TOT_117, TOT_118, TOT_119, TOT_120, TOT_121, TOT_122, TOT_123, TOT_124, TOT_125, TOT_126, TOT_127, TOT_128, TOT_129, TOT_130, TOT_131, TOT_132, TOT_133, TOT_134, TOT_135, TOT_136, TOT_137, TOT_138, TOT_139, TOT_140, TOT_141, TOT_142, TOT_143, TOT_144, TOT_145, TOT_146, TOT_147, TOT_148, TOT_149, TOT_150, TOT_151, TOT_152, TOT_153, TOT_154, TOT_155, TOT_156, TOT_157, TOT_158, TOT_159, TOT_160, TOT_161, TOT_162, TOT_163, TOT_164, TOT_165, TOT_166, TOT_167, TOT_168, TOT_169, TOT_170, TOT_171, TOT_172, TOT_173, TOT_174, TOT_175, TOT_176, TOT_177, TOT_178, TOT_179, TOT_180, TOT_181, TOT_182, TOT_183, TOT_184, TOT_185, TOT_186, TOT_187, TOT_188, TOT_189, TOT_190, TOT_191, TOT_192, TOT_193, TOT_194, TOT_195, TOT_196, TOT_197, TOT_198, TOT_199, TOT_200, TOT_201, TOT_202, TOT_203, TOT_204, TOT_205, TOT_206, TOT_207, TOT_208, TOT_209, TOT_210, TOT_211, TOT_212, TOT_213, TOT_214, TOT_215, TOT_216, TOT_217, TOT_218, TOT_219, TOT_220, TOT_221, TOT_222, TOT_223, TOT_224, TOT_225, TOT_226, TOT_227, TOT_228, TOT_229, TOT_230, TOT_231, TOT_232, TOT_233, TOT_234, TOT_235, TOT_236, TOT_237, TOT_238, TOT_239, TOT_240, TOT_241, TOT_242, TOT_243, TOT_244, TOT_245, TOT_246, TOT_247, TOT_248, TOT_249, TOT_250, TOT_251, TOT_252, TOT_253, TOT_254, TOT_255, TOT_256, TOT_257, TOT_258, TOT_259, TOT_260, TOT_261, TOT_262, TOT_263, TOT_264, TOT_265, TOT_266, TOT_267, TOT_268, TOT_269, TOT_270, TOT_271, TOT_272, TOT_273, TOT_274, TOT_275, TOT_276, TOT_277, TOT_278, TOT_279, TOT_280, TOT_281, TOT_282, TOT_283, TOT_284, TOT_285, TOT_286, TOT_287, TOT_288, TOT_289, TOT_290, TOT_291, TOT_292, TOT_293, TOT_294, TOT_295, TOT_296, TOT_297, TOT_298, TOT_299
     , (HOLD_0 + HOLD_1 + HOLD_2 + HOLD_3 + HOLD_4 + HOLD_5 + HOLD_6 + HOLD_7 + HOLD_8 + HOLD_9 + HOLD_10 + HOLD_11 + HOLD_12 + HOLD_13 + HOLD_14 + HOLD_15 + HOLD_16 + HOLD_17 + HOLD_18 + HOLD_19 + HOLD_20 + HOLD_21 + HOLD_22 + HOLD_23 + HOLD_24 + HOLD_25 + HOLD_26 + HOLD_27 + HOLD_28 + HOLD_29 + HOLD_30 + HOLD_31 + HOLD_32 + HOLD_33 + HOLD_34 + HOLD_35 + HOLD_36 + HOLD_37 + HOLD_38 + HOLD_39 + HOLD_40 + HOLD_41 + HOLD_42 + HOLD_43 + HOLD_44 + HOLD_45 + HOLD_46 + HOLD_47 + HOLD_48 + HOLD_49 + HOLD_50 + HOLD_51 + HOLD_52 + HOLD_53 + HOLD_54 + HOLD_55 + HOLD_56 + HOLD_57 + HOLD_58 + HOLD_59 + HOLD_60 + HOLD_61 + HOLD_62 + HOLD_63 + HOLD_64 + HOLD_65 + HOLD_66 + HOLD_67 + HOLD_68 + HOLD_69 + HOLD_70 + HOLD_71 + HOLD_72 + HOLD_73 + HOLD_74 + HOLD_75 + HOLD_76 + HOLD_77 + HOLD_78 + HOLD_79 + HOLD_80 + HOLD_81 + HOLD_82 + HOLD_83 + HOLD_84 + HOLD_85 + HOLD_86 + HOLD_87 + HOLD_88 + HOLD_89 + HOLD_90 + HOLD_91 + HOLD_92 + HOLD_93 + HOLD_94 + HOLD_95 + HOLD_96 + HOLD_97 + HOLD_98 + HOLD_99 + HOLD_100 + HOLD_101 + HOLD_102 + HOLD_103 + HOLD_104 + HOLD_105 + HOLD_106 + HOLD_107 + HOLD_108 + HOLD_109 + HOLD_110 + HOLD_111 + HOLD_112 + HOLD_113 + HOLD_114 + HOLD_115 + HOLD_116 + HOLD_117 + HOLD_118 + HOLD_119 + HOLD_120 + HOLD_121 + HOLD_122 + HOLD_123 + HOLD_124 + HOLD_125 + HOLD_126 + HOLD_127 + HOLD_128 + HOLD_129 + HOLD_130 + HOLD_131 + HOLD_132 + HOLD_133 + HOLD_134 + HOLD_135 + HOLD_136 + HOLD_137 + HOLD_138 + HOLD_139 + HOLD_140 + HOLD_141 + HOLD_142 + HOLD_143 + HOLD_144 + HOLD_145 + HOLD_146 + HOLD_147 + HOLD_148 + HOLD_149 + HOLD_150 + HOLD_151 + HOLD_152 + HOLD_153 + HOLD_154 + HOLD_155 + HOLD_156 + HOLD_157 + HOLD_158 + HOLD_159 + HOLD_160 + HOLD_161 + HOLD_162 + HOLD_163 + HOLD_164 + HOLD_165 + HOLD_166 + HOLD_167 + HOLD_168 + HOLD_169 + HOLD_170 + HOLD_171 + HOLD_172 + HOLD_173 + HOLD_174 + HOLD_175 + HOLD_176 + HOLD_177 + HOLD_178 + HOLD_179 + HOLD_180 + HOLD_181 + HOLD_182 + HOLD_183 + HOLD_184 + HOLD_185 + HOLD_186 + HOLD_187 + HOLD_188 + HOLD_189 + HOLD_190 + HOLD_191 + HOLD_192 + HOLD_193 + HOLD_194 + HOLD_195 + HOLD_196 + HOLD_197 + HOLD_198 + HOLD_199 + HOLD_200 + HOLD_201 + HOLD_202 + HOLD_203 + HOLD_204 + HOLD_205 + HOLD_206 + HOLD_207 + HOLD_208 + HOLD_209 + HOLD_210 + HOLD_211 + HOLD_212 + HOLD_213 + HOLD_214 + HOLD_215 + HOLD_216 + HOLD_217 + HOLD_218 + HOLD_219 + HOLD_220 + HOLD_221 + HOLD_222 + HOLD_223 + HOLD_224 + HOLD_225 + HOLD_226 + HOLD_227 + HOLD_228 + HOLD_229 + HOLD_230 + HOLD_231 + HOLD_232 + HOLD_233 + HOLD_234 + HOLD_235 + HOLD_236 + HOLD_237 + HOLD_238 + HOLD_239 + HOLD_240 + HOLD_241 + HOLD_242 + HOLD_243 + HOLD_244 + HOLD_245 + HOLD_246 + HOLD_247 + HOLD_248 + HOLD_249 + HOLD_250 + HOLD_251 + HOLD_252 + HOLD_253 + HOLD_254 + HOLD_255 + HOLD_256 + HOLD_257 + HOLD_258 + HOLD_259 + HOLD_260 + HOLD_261 + HOLD_262 + HOLD_263 + HOLD_264 + HOLD_265 + HOLD_266 + HOLD_267 + HOLD_268 + HOLD_269 + HOLD_270 + HOLD_271 + HOLD_272 + HOLD_273 + HOLD_274 + HOLD_275 + HOLD_276 + HOLD_277 + HOLD_278 + HOLD_279 + HOLD_280 + HOLD_281 + HOLD_282 + HOLD_283 + HOLD_284 + HOLD_285 + HOLD_286 + HOLD_287 + HOLD_288 + HOLD_289 + HOLD_290 + HOLD_291 + HOLD_292 + HOLD_293 + HOLD_294 + HOLD_295 + HOLD_296 + HOLD_297 + HOLD_298 + HOLD_299) AS TOTAL2 
     , HOLD_0, HOLD_1, HOLD_2, HOLD_3, HOLD_4, HOLD_5, HOLD_6, HOLD_7, HOLD_8, HOLD_9, HOLD_10, HOLD_11, HOLD_12, HOLD_13, HOLD_14, HOLD_15, HOLD_16, HOLD_17, HOLD_18, HOLD_19, HOLD_20, HOLD_21, HOLD_22, HOLD_23, HOLD_24, HOLD_25, HOLD_26, HOLD_27, HOLD_28, HOLD_29, HOLD_30, HOLD_31, HOLD_32, HOLD_33, HOLD_34, HOLD_35, HOLD_36, HOLD_37, HOLD_38, HOLD_39, HOLD_40, HOLD_41, HOLD_42, HOLD_43, HOLD_44, HOLD_45, HOLD_46, HOLD_47, HOLD_48, HOLD_49, HOLD_50, HOLD_51, HOLD_52, HOLD_53, HOLD_54, HOLD_55, HOLD_56, HOLD_57, HOLD_58, HOLD_59, HOLD_60, HOLD_61, HOLD_62, HOLD_63, HOLD_64, HOLD_65, HOLD_66, HOLD_67, HOLD_68, HOLD_69, HOLD_70, HOLD_71, HOLD_72, HOLD_73, HOLD_74, HOLD_75, HOLD_76, HOLD_77, HOLD_78, HOLD_79, HOLD_80, HOLD_81, HOLD_82, HOLD_83, HOLD_84, HOLD_85, HOLD_86, HOLD_87, HOLD_88, HOLD_89, HOLD_90, HOLD_91, HOLD_92, HOLD_93, HOLD_94, HOLD_95, HOLD_96, HOLD_97, HOLD_98, HOLD_99, HOLD_100, HOLD_101, HOLD_102, HOLD_103, HOLD_104, HOLD_105, HOLD_106, HOLD_107, HOLD_108, HOLD_109, HOLD_110, HOLD_111, HOLD_112, HOLD_113, HOLD_114, HOLD_115, HOLD_116, HOLD_117, HOLD_118, HOLD_119, HOLD_120, HOLD_121, HOLD_122, HOLD_123, HOLD_124, HOLD_125, HOLD_126, HOLD_127, HOLD_128, HOLD_129, HOLD_130, HOLD_131, HOLD_132, HOLD_133, HOLD_134, HOLD_135, HOLD_136, HOLD_137, HOLD_138, HOLD_139, HOLD_140, HOLD_141, HOLD_142, HOLD_143, HOLD_144, HOLD_145, HOLD_146, HOLD_147, HOLD_148, HOLD_149, HOLD_150, HOLD_151, HOLD_152, HOLD_153, HOLD_154, HOLD_155, HOLD_156, HOLD_157, HOLD_158, HOLD_159, HOLD_160, HOLD_161, HOLD_162, HOLD_163, HOLD_164, HOLD_165, HOLD_166, HOLD_167, HOLD_168, HOLD_169, HOLD_170, HOLD_171, HOLD_172, HOLD_173, HOLD_174, HOLD_175, HOLD_176, HOLD_177, HOLD_178, HOLD_179, HOLD_180, HOLD_181, HOLD_182, HOLD_183, HOLD_184, HOLD_185, HOLD_186, HOLD_187, HOLD_188, HOLD_189, HOLD_190, HOLD_191, HOLD_192, HOLD_193, HOLD_194, HOLD_195, HOLD_196, HOLD_197, HOLD_198, HOLD_199, HOLD_200, HOLD_201, HOLD_202, HOLD_203, HOLD_204, HOLD_205, HOLD_206, HOLD_207, HOLD_208, HOLD_209, HOLD_210, HOLD_211, HOLD_212, HOLD_213, HOLD_214, HOLD_215, HOLD_216, HOLD_217, HOLD_218, HOLD_219, HOLD_220, HOLD_221, HOLD_222, HOLD_223, HOLD_224, HOLD_225, HOLD_226, HOLD_227, HOLD_228, HOLD_229, HOLD_230, HOLD_231, HOLD_232, HOLD_233, HOLD_234, HOLD_235, HOLD_236, HOLD_237, HOLD_238, HOLD_239, HOLD_240, HOLD_241, HOLD_242, HOLD_243, HOLD_244, HOLD_245, HOLD_246, HOLD_247, HOLD_248, HOLD_249, HOLD_250, HOLD_251, HOLD_252, HOLD_253, HOLD_254, HOLD_255, HOLD_256, HOLD_257, HOLD_258, HOLD_259, HOLD_260, HOLD_261, HOLD_262, HOLD_263, HOLD_264, HOLD_265, HOLD_266, HOLD_267, HOLD_268, HOLD_269, HOLD_270, HOLD_271, HOLD_272, HOLD_273, HOLD_274, HOLD_275, HOLD_276, HOLD_277, HOLD_278, HOLD_279, HOLD_280, HOLD_281, HOLD_282, HOLD_283, HOLD_284, HOLD_285, HOLD_286, HOLD_287, HOLD_288, HOLD_289, HOLD_290, HOLD_291, HOLD_292, HOLD_293, HOLD_294, HOLD_295, HOLD_296, HOLD_297, HOLD_298, HOLD_299
     , (BOYU_0 + BOYU_1 + BOYU_2 + BOYU_3 + BOYU_4 + BOYU_5 + BOYU_6 + BOYU_7 + BOYU_8 + BOYU_9 + BOYU_10 + BOYU_11 + BOYU_12 + BOYU_13 + BOYU_14 + BOYU_15 + BOYU_16 + BOYU_17 + BOYU_18 + BOYU_19 + BOYU_20 + BOYU_21 + BOYU_22 + BOYU_23 + BOYU_24 + BOYU_25 + BOYU_26 + BOYU_27 + BOYU_28 + BOYU_29 + BOYU_30 + BOYU_31 + BOYU_32 + BOYU_33 + BOYU_34 + BOYU_35 + BOYU_36 + BOYU_37 + BOYU_38 + BOYU_39 + BOYU_40 + BOYU_41 + BOYU_42 + BOYU_43 + BOYU_44 + BOYU_45 + BOYU_46 + BOYU_47 + BOYU_48 + BOYU_49 + BOYU_50 + BOYU_51 + BOYU_52 + BOYU_53 + BOYU_54 + BOYU_55 + BOYU_56 + BOYU_57 + BOYU_58 + BOYU_59 + BOYU_60 + BOYU_61 + BOYU_62 + BOYU_63 + BOYU_64 + BOYU_65 + BOYU_66 + BOYU_67 + BOYU_68 + BOYU_69 + BOYU_70 + BOYU_71 + BOYU_72 + BOYU_73 + BOYU_74 + BOYU_75 + BOYU_76 + BOYU_77 + BOYU_78 + BOYU_79 + BOYU_80 + BOYU_81 + BOYU_82 + BOYU_83 + BOYU_84 + BOYU_85 + BOYU_86 + BOYU_87 + BOYU_88 + BOYU_89 + BOYU_90 + BOYU_91 + BOYU_92 + BOYU_93 + BOYU_94 + BOYU_95 + BOYU_96 + BOYU_97 + BOYU_98 + BOYU_99 + BOYU_100 + BOYU_101 + BOYU_102 + BOYU_103 + BOYU_104 + BOYU_105 + BOYU_106 + BOYU_107 + BOYU_108 + BOYU_109 + BOYU_110 + BOYU_111 + BOYU_112 + BOYU_113 + BOYU_114 + BOYU_115 + BOYU_116 + BOYU_117 + BOYU_118 + BOYU_119 + BOYU_120 + BOYU_121 + BOYU_122 + BOYU_123 + BOYU_124 + BOYU_125 + BOYU_126 + BOYU_127 + BOYU_128 + BOYU_129 + BOYU_130 + BOYU_131 + BOYU_132 + BOYU_133 + BOYU_134 + BOYU_135 + BOYU_136 + BOYU_137 + BOYU_138 + BOYU_139 + BOYU_140 + BOYU_141 + BOYU_142 + BOYU_143 + BOYU_144 + BOYU_145 + BOYU_146 + BOYU_147 + BOYU_148 + BOYU_149 + BOYU_150 + BOYU_151 + BOYU_152 + BOYU_153 + BOYU_154 + BOYU_155 + BOYU_156 + BOYU_157 + BOYU_158 + BOYU_159 + BOYU_160 + BOYU_161 + BOYU_162 + BOYU_163 + BOYU_164 + BOYU_165 + BOYU_166 + BOYU_167 + BOYU_168 + BOYU_169 + BOYU_170 + BOYU_171 + BOYU_172 + BOYU_173 + BOYU_174 + BOYU_175 + BOYU_176 + BOYU_177 + BOYU_178 + BOYU_179 + BOYU_180 + BOYU_181 + BOYU_182 + BOYU_183 + BOYU_184 + BOYU_185 + BOYU_186 + BOYU_187 + BOYU_188 + BOYU_189 + BOYU_190 + BOYU_191 + BOYU_192 + BOYU_193 + BOYU_194 + BOYU_195 + BOYU_196 + BOYU_197 + BOYU_198 + BOYU_199 + BOYU_200 + BOYU_201 + BOYU_202 + BOYU_203 + BOYU_204 + BOYU_205 + BOYU_206 + BOYU_207 + BOYU_208 + BOYU_209 + BOYU_210 + BOYU_211 + BOYU_212 + BOYU_213 + BOYU_214 + BOYU_215 + BOYU_216 + BOYU_217 + BOYU_218 + BOYU_219 + BOYU_220 + BOYU_221 + BOYU_222 + BOYU_223 + BOYU_224 + BOYU_225 + BOYU_226 + BOYU_227 + BOYU_228 + BOYU_229 + BOYU_230 + BOYU_231 + BOYU_232 + BOYU_233 + BOYU_234 + BOYU_235 + BOYU_236 + BOYU_237 + BOYU_238 + BOYU_239 + BOYU_240 + BOYU_241 + BOYU_242 + BOYU_243 + BOYU_244 + BOYU_245 + BOYU_246 + BOYU_247 + BOYU_248 + BOYU_249 + BOYU_250 + BOYU_251 + BOYU_252 + BOYU_253 + BOYU_254 + BOYU_255 + BOYU_256 + BOYU_257 + BOYU_258 + BOYU_259 + BOYU_260 + BOYU_261 + BOYU_262 + BOYU_263 + BOYU_264 + BOYU_265 + BOYU_266 + BOYU_267 + BOYU_268 + BOYU_269 + BOYU_270 + BOYU_271 + BOYU_272 + BOYU_273 + BOYU_274 + BOYU_275 + BOYU_276 + BOYU_277 + BOYU_278 + BOYU_279 + BOYU_280 + BOYU_281 + BOYU_282 + BOYU_283 + BOYU_284 + BOYU_285 + BOYU_286 + BOYU_287 + BOYU_288 + BOYU_289 + BOYU_290 + BOYU_291 + BOYU_292 + BOYU_293 + BOYU_294 + BOYU_295 + BOYU_296 + BOYU_297 + BOYU_298 + BOYU_299) AS TOTAL3
     , BOYU_0, BOYU_1, BOYU_2, BOYU_3, BOYU_4, BOYU_5, BOYU_6, BOYU_7, BOYU_8, BOYU_9, BOYU_10, BOYU_11, BOYU_12, BOYU_13, BOYU_14, BOYU_15, BOYU_16, BOYU_17, BOYU_18, BOYU_19, BOYU_20, BOYU_21, BOYU_22, BOYU_23, BOYU_24, BOYU_25, BOYU_26, BOYU_27, BOYU_28, BOYU_29, BOYU_30, BOYU_31, BOYU_32, BOYU_33, BOYU_34, BOYU_35, BOYU_36, BOYU_37, BOYU_38, BOYU_39, BOYU_40, BOYU_41, BOYU_42, BOYU_43, BOYU_44, BOYU_45, BOYU_46, BOYU_47, BOYU_48, BOYU_49, BOYU_50, BOYU_51, BOYU_52, BOYU_53, BOYU_54, BOYU_55, BOYU_56, BOYU_57, BOYU_58, BOYU_59, BOYU_60, BOYU_61, BOYU_62, BOYU_63, BOYU_64, BOYU_65, BOYU_66, BOYU_67, BOYU_68, BOYU_69, BOYU_70, BOYU_71, BOYU_72, BOYU_73, BOYU_74, BOYU_75, BOYU_76, BOYU_77, BOYU_78, BOYU_79, BOYU_80, BOYU_81, BOYU_82, BOYU_83, BOYU_84, BOYU_85, BOYU_86, BOYU_87, BOYU_88, BOYU_89, BOYU_90, BOYU_91, BOYU_92, BOYU_93, BOYU_94, BOYU_95, BOYU_96, BOYU_97, BOYU_98, BOYU_99, BOYU_100, BOYU_101, BOYU_102, BOYU_103, BOYU_104, BOYU_105, BOYU_106, BOYU_107, BOYU_108, BOYU_109, BOYU_110, BOYU_111, BOYU_112, BOYU_113, BOYU_114, BOYU_115, BOYU_116, BOYU_117, BOYU_118, BOYU_119, BOYU_120, BOYU_121, BOYU_122, BOYU_123, BOYU_124, BOYU_125, BOYU_126, BOYU_127, BOYU_128, BOYU_129, BOYU_130, BOYU_131, BOYU_132, BOYU_133, BOYU_134, BOYU_135, BOYU_136, BOYU_137, BOYU_138, BOYU_139, BOYU_140, BOYU_141, BOYU_142, BOYU_143, BOYU_144, BOYU_145, BOYU_146, BOYU_147, BOYU_148, BOYU_149, BOYU_150, BOYU_151, BOYU_152, BOYU_153, BOYU_154, BOYU_155, BOYU_156, BOYU_157, BOYU_158, BOYU_159, BOYU_160, BOYU_161, BOYU_162, BOYU_163, BOYU_164, BOYU_165, BOYU_166, BOYU_167, BOYU_168, BOYU_169, BOYU_170, BOYU_171, BOYU_172, BOYU_173, BOYU_174, BOYU_175, BOYU_176, BOYU_177, BOYU_178, BOYU_179, BOYU_180, BOYU_181, BOYU_182, BOYU_183, BOYU_184, BOYU_185, BOYU_186, BOYU_187, BOYU_188, BOYU_189, BOYU_190, BOYU_191, BOYU_192, BOYU_193, BOYU_194, BOYU_195, BOYU_196, BOYU_197, BOYU_198, BOYU_199, BOYU_200, BOYU_201, BOYU_202, BOYU_203, BOYU_204, BOYU_205, BOYU_206, BOYU_207, BOYU_208, BOYU_209, BOYU_210, BOYU_211, BOYU_212, BOYU_213, BOYU_214, BOYU_215, BOYU_216, BOYU_217, BOYU_218, BOYU_219, BOYU_220, BOYU_221, BOYU_222, BOYU_223, BOYU_224, BOYU_225, BOYU_226, BOYU_227, BOYU_228, BOYU_229, BOYU_230, BOYU_231, BOYU_232, BOYU_233, BOYU_234, BOYU_235, BOYU_236, BOYU_237, BOYU_238, BOYU_239, BOYU_240, BOYU_241, BOYU_242, BOYU_243, BOYU_244, BOYU_245, BOYU_246, BOYU_247, BOYU_248, BOYU_249, BOYU_250, BOYU_251, BOYU_252, BOYU_253, BOYU_254, BOYU_255, BOYU_256, BOYU_257, BOYU_258, BOYU_259, BOYU_260, BOYU_261, BOYU_262, BOYU_263, BOYU_264, BOYU_265, BOYU_266, BOYU_267, BOYU_268, BOYU_269, BOYU_270, BOYU_271, BOYU_272, BOYU_273, BOYU_274, BOYU_275, BOYU_276, BOYU_277, BOYU_278, BOYU_279, BOYU_280, BOYU_281, BOYU_282, BOYU_283, BOYU_284, BOYU_285, BOYU_286, BOYU_287, BOYU_288, BOYU_289, BOYU_290, BOYU_291, BOYU_292, BOYU_293, BOYU_294, BOYU_295, BOYU_296, BOYU_297, BOYU_298, BOYU_299
         FROM (     
                SELECT MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
     , SUM(DECODE(LOT.OPER, 'A0000', LOT.QTY, 0)) TOT_0
     , SUM(DECODE(LOT.OPER, 'A0005', LOT.QTY, 0)) TOT_1
     , SUM(DECODE(LOT.OPER, 'A000N', LOT.QTY, 0)) TOT_2
     , SUM(DECODE(LOT.OPER, 'A0010', LOT.QTY, 0)) TOT_3
     , SUM(DECODE(LOT.OPER, 'A0012', LOT.QTY, 0)) TOT_4
     , SUM(DECODE(LOT.OPER, 'A0013', LOT.QTY, 0)) TOT_5
     , SUM(DECODE(LOT.OPER, 'A0015', LOT.QTY, 0)) TOT_6
     , SUM(DECODE(LOT.OPER, 'A0020', LOT.QTY, 0)) TOT_7
     , SUM(DECODE(LOT.OPER, 'A0055', LOT.QTY, 0)) TOT_8
     , SUM(DECODE(LOT.OPER, 'A0023', LOT.QTY, 0)) TOT_9
     , SUM(DECODE(LOT.OPER, 'A0025', LOT.QTY, 0)) TOT_10
     , SUM(DECODE(LOT.OPER, 'A0030', LOT.QTY, 0)) TOT_11
     , SUM(DECODE(LOT.OPER, 'A0190', LOT.QTY, 0)) TOT_12
     , SUM(DECODE(LOT.OPER, 'A0033', LOT.QTY, 0)) TOT_13
     , SUM(DECODE(LOT.OPER, 'A0040', LOT.QTY, 0)) TOT_14
     , SUM(DECODE(LOT.OPER, 'A0041', LOT.QTY, 0)) TOT_15
     , SUM(DECODE(LOT.OPER, 'A0042', LOT.QTY, 0)) TOT_16
     , SUM(DECODE(LOT.OPER, 'A0045', LOT.QTY, 0)) TOT_17
     , SUM(DECODE(LOT.OPER, 'A0050', LOT.QTY, 0)) TOT_18
     , SUM(DECODE(LOT.OPER, 'A0060', LOT.QTY, 0)) TOT_19
     , SUM(DECODE(LOT.OPER, 'A0070', LOT.QTY, 0)) TOT_20
     , SUM(DECODE(LOT.OPER, 'A0080', LOT.QTY, 0)) TOT_21
     , SUM(DECODE(LOT.OPER, 'A0090', LOT.QTY, 0)) TOT_22
     , SUM(DECODE(LOT.OPER, 'A0095', LOT.QTY, 0)) TOT_23
     , SUM(DECODE(LOT.OPER, 'A0110', LOT.QTY, 0)) TOT_24
     , SUM(DECODE(LOT.OPER, 'A0120', LOT.QTY, 0)) TOT_25
     , SUM(DECODE(LOT.OPER, 'A0130', LOT.QTY, 0)) TOT_26
     , SUM(DECODE(LOT.OPER, 'A0140', LOT.QTY, 0)) TOT_27
     , SUM(DECODE(LOT.OPER, 'A0160', LOT.QTY, 0)) TOT_28
     , SUM(DECODE(LOT.OPER, 'A0161', LOT.QTY, 0)) TOT_29
     , SUM(DECODE(LOT.OPER, 'A0165', LOT.QTY, 0)) TOT_30
     , SUM(DECODE(LOT.OPER, 'A0065', LOT.QTY, 0)) TOT_31
     , SUM(DECODE(LOT.OPER, 'A0100', LOT.QTY, 0)) TOT_32
     , SUM(DECODE(LOT.OPER, 'A0150', LOT.QTY, 0)) TOT_33
     , SUM(DECODE(LOT.OPER, 'A0175', LOT.QTY, 0)) TOT_34
     , SUM(DECODE(LOT.OPER, 'A0176', LOT.QTY, 0)) TOT_35
     , SUM(DECODE(LOT.OPER, 'A0170', LOT.QTY, 0)) TOT_36
     , SUM(DECODE(LOT.OPER, 'A0180', LOT.QTY, 0)) TOT_37
     , SUM(DECODE(LOT.OPER, 'A0200', LOT.QTY, 0)) TOT_38
     , SUM(DECODE(LOT.OPER, 'A0201', LOT.QTY, 0)) TOT_39
     , SUM(DECODE(LOT.OPER, 'A0202', LOT.QTY, 0)) TOT_40
     , SUM(DECODE(LOT.OPER, 'A0210', LOT.QTY, 0)) TOT_41
     , SUM(DECODE(LOT.OPER, 'A0215', LOT.QTY, 0)) TOT_42
     , SUM(DECODE(LOT.OPER, 'A0220', LOT.QTY, 0)) TOT_43
     , SUM(DECODE(LOT.OPER, 'A0230', LOT.QTY, 0)) TOT_44
     , SUM(DECODE(LOT.OPER, 'A0300', LOT.QTY, 0)) TOT_45
     , SUM(DECODE(LOT.OPER, 'A0250', LOT.QTY, 0)) TOT_46
     , SUM(DECODE(LOT.OPER, 'A0305', LOT.QTY, 0)) TOT_47
     , SUM(DECODE(LOT.OPER, 'A0240', LOT.QTY, 0)) TOT_48
     , SUM(DECODE(LOT.OPER, 'A0260', LOT.QTY, 0)) TOT_49
     , SUM(DECODE(LOT.OPER, 'A0270', LOT.QTY, 0)) TOT_50
     , SUM(DECODE(LOT.OPER, 'A0290', LOT.QTY, 0)) TOT_51
     , SUM(DECODE(LOT.OPER, 'A0295', LOT.QTY, 0)) TOT_52
     , SUM(DECODE(LOT.OPER, 'A0280', LOT.QTY, 0)) TOT_53
     , SUM(DECODE(LOT.OPER, 'A0306', LOT.QTY, 0)) TOT_54
     , SUM(DECODE(LOT.OPER, 'A0307', LOT.QTY, 0)) TOT_55
     , SUM(DECODE(LOT.OPER, 'A0308', LOT.QTY, 0)) TOT_56
     , SUM(DECODE(LOT.OPER, 'A0310', LOT.QTY, 0)) TOT_57
     , SUM(DECODE(LOT.OPER, 'A0320', LOT.QTY, 0)) TOT_58
     , SUM(DECODE(LOT.OPER, 'A0330', LOT.QTY, 0)) TOT_59
     , SUM(DECODE(LOT.OPER, 'A1280', LOT.QTY, 0)) TOT_60
     , SUM(DECODE(LOT.OPER, 'A0333', LOT.QTY, 0)) TOT_61
     , SUM(DECODE(LOT.OPER, 'A0335', LOT.QTY, 0)) TOT_62
     , SUM(DECODE(LOT.OPER, 'A0337', LOT.QTY, 0)) TOT_63
     , SUM(DECODE(LOT.OPER, 'A0372', LOT.QTY, 0)) TOT_64
     , SUM(DECODE(LOT.OPER, 'A0395', LOT.QTY, 0)) TOT_65
     , SUM(DECODE(LOT.OPER, 'A0397', LOT.QTY, 0)) TOT_66
     , SUM(DECODE(LOT.OPER, 'A0340', LOT.QTY, 0)) TOT_67
     , SUM(DECODE(LOT.OPER, 'A0345', LOT.QTY, 0)) TOT_68
     , SUM(DECODE(LOT.OPER, 'A0350', LOT.QTY, 0)) TOT_69
     , SUM(DECODE(LOT.OPER, 'A0360', LOT.QTY, 0)) TOT_70
     , SUM(DECODE(LOT.OPER, 'A0370', LOT.QTY, 0)) TOT_71
     , SUM(DECODE(LOT.OPER, 'A0375', LOT.QTY, 0)) TOT_72
     , SUM(DECODE(LOT.OPER, 'A0380', LOT.QTY, 0)) TOT_73
     , SUM(DECODE(LOT.OPER, 'A0381', LOT.QTY, 0)) TOT_74
     , SUM(DECODE(LOT.OPER, 'A0382', LOT.QTY, 0)) TOT_75
     , SUM(DECODE(LOT.OPER, 'A0383', LOT.QTY, 0)) TOT_76
     , SUM(DECODE(LOT.OPER, 'A0385', LOT.QTY, 0)) TOT_77
     , SUM(DECODE(LOT.OPER, 'A0391', LOT.QTY, 0)) TOT_78
     , SUM(DECODE(LOT.OPER, 'A0399', LOT.QTY, 0)) TOT_79
     , SUM(DECODE(LOT.OPER, 'A0390', LOT.QTY, 0)) TOT_80
     , SUM(DECODE(LOT.OPER, 'A0400', LOT.QTY, 0)) TOT_81
     , SUM(DECODE(LOT.OPER, 'A0401', LOT.QTY, 0)) TOT_82
     , SUM(DECODE(LOT.OPER, 'A0500', LOT.QTY, 0)) TOT_83
     , SUM(DECODE(LOT.OPER, 'A0530', LOT.QTY, 0)) TOT_84
     , SUM(DECODE(LOT.OPER, 'A0531', LOT.QTY, 0)) TOT_85
     , SUM(DECODE(LOT.OPER, 'A0501', LOT.QTY, 0)) TOT_86
     , SUM(DECODE(LOT.OPER, 'A0540', LOT.QTY, 0)) TOT_87
     , SUM(DECODE(LOT.OPER, 'A0550', LOT.QTY, 0)) TOT_88
     , SUM(DECODE(LOT.OPER, 'A0600', LOT.QTY, 0)) TOT_89
     , SUM(DECODE(LOT.OPER, 'A0620', LOT.QTY, 0)) TOT_90
     , SUM(DECODE(LOT.OPER, 'A0660', LOT.QTY, 0)) TOT_91
     , SUM(DECODE(LOT.OPER, 'A0630', LOT.QTY, 0)) TOT_92
     , SUM(DECODE(LOT.OPER, 'A0650', LOT.QTY, 0)) TOT_93
     , SUM(DECODE(LOT.OPER, 'A0670', LOT.QTY, 0)) TOT_94
     , SUM(DECODE(LOT.OPER, 'A0720', LOT.QTY, 0)) TOT_95
     , SUM(DECODE(LOT.OPER, 'A0700', LOT.QTY, 0)) TOT_96
     , SUM(DECODE(LOT.OPER, 'A0339', LOT.QTY, 0)) TOT_97
     , SUM(DECODE(LOT.OPER, 'A0541', LOT.QTY, 0)) TOT_98
     , SUM(DECODE(LOT.OPER, 'A0551', LOT.QTY, 0)) TOT_99
     , SUM(DECODE(LOT.OPER, 'A0561', LOT.QTY, 0)) TOT_100
     , SUM(DECODE(LOT.OPER, 'A0601', LOT.QTY, 0)) TOT_101
     , SUM(DECODE(LOT.OPER, 'A0710', LOT.QTY, 0)) TOT_102
     , SUM(DECODE(LOT.OPER, 'A0800', LOT.QTY, 0)) TOT_103
     , SUM(DECODE(LOT.OPER, 'A0402', LOT.QTY, 0)) TOT_104
     , SUM(DECODE(LOT.OPER, 'A0502', LOT.QTY, 0)) TOT_105
     , SUM(DECODE(LOT.OPER, 'A0532', LOT.QTY, 0)) TOT_106
     , SUM(DECODE(LOT.OPER, 'A0801', LOT.QTY, 0)) TOT_107
     , SUM(DECODE(LOT.OPER, 'A0542', LOT.QTY, 0)) TOT_108
     , SUM(DECODE(LOT.OPER, 'A0552', LOT.QTY, 0)) TOT_109
     , SUM(DECODE(LOT.OPER, 'A0562', LOT.QTY, 0)) TOT_110
     , SUM(DECODE(LOT.OPER, 'A0602', LOT.QTY, 0)) TOT_111
     , SUM(DECODE(LOT.OPER, 'A0711', LOT.QTY, 0)) TOT_112
     , SUM(DECODE(LOT.OPER, 'A0802', LOT.QTY, 0)) TOT_113
     , SUM(DECODE(LOT.OPER, 'A0403', LOT.QTY, 0)) TOT_114
     , SUM(DECODE(LOT.OPER, 'A0503', LOT.QTY, 0)) TOT_115
     , SUM(DECODE(LOT.OPER, 'A0533', LOT.QTY, 0)) TOT_116
     , SUM(DECODE(LOT.OPER, 'A0543', LOT.QTY, 0)) TOT_117
     , SUM(DECODE(LOT.OPER, 'A0553', LOT.QTY, 0)) TOT_118
     , SUM(DECODE(LOT.OPER, 'A0563', LOT.QTY, 0)) TOT_119
     , SUM(DECODE(LOT.OPER, 'A0603', LOT.QTY, 0)) TOT_120
     , SUM(DECODE(LOT.OPER, 'A0712', LOT.QTY, 0)) TOT_121
     , SUM(DECODE(LOT.OPER, 'A0713', LOT.QTY, 0)) TOT_122
     , SUM(DECODE(LOT.OPER, 'A0803', LOT.QTY, 0)) TOT_123
     , SUM(DECODE(LOT.OPER, 'A0404', LOT.QTY, 0)) TOT_124
     , SUM(DECODE(LOT.OPER, 'A0504', LOT.QTY, 0)) TOT_125
     , SUM(DECODE(LOT.OPER, 'A0534', LOT.QTY, 0)) TOT_126
     , SUM(DECODE(LOT.OPER, 'A0544', LOT.QTY, 0)) TOT_127
     , SUM(DECODE(LOT.OPER, 'A0554', LOT.QTY, 0)) TOT_128
     , SUM(DECODE(LOT.OPER, 'A0564', LOT.QTY, 0)) TOT_129
     , SUM(DECODE(LOT.OPER, 'A0604', LOT.QTY, 0)) TOT_130
     , SUM(DECODE(LOT.OPER, 'A0714', LOT.QTY, 0)) TOT_131
     , SUM(DECODE(LOT.OPER, 'A0804', LOT.QTY, 0)) TOT_132
     , SUM(DECODE(LOT.OPER, 'A0405', LOT.QTY, 0)) TOT_133
     , SUM(DECODE(LOT.OPER, 'A0505', LOT.QTY, 0)) TOT_134
     , SUM(DECODE(LOT.OPER, 'A0535', LOT.QTY, 0)) TOT_135
     , SUM(DECODE(LOT.OPER, 'A0545', LOT.QTY, 0)) TOT_136
     , SUM(DECODE(LOT.OPER, 'A0555', LOT.QTY, 0)) TOT_137
     , SUM(DECODE(LOT.OPER, 'A0565', LOT.QTY, 0)) TOT_138
     , SUM(DECODE(LOT.OPER, 'A0605', LOT.QTY, 0)) TOT_139
     , SUM(DECODE(LOT.OPER, 'A0715', LOT.QTY, 0)) TOT_140
     , SUM(DECODE(LOT.OPER, 'A0805', LOT.QTY, 0)) TOT_141
     , SUM(DECODE(LOT.OPER, 'A0406', LOT.QTY, 0)) TOT_142
     , SUM(DECODE(LOT.OPER, 'A0506', LOT.QTY, 0)) TOT_143
     , SUM(DECODE(LOT.OPER, 'A0536', LOT.QTY, 0)) TOT_144
     , SUM(DECODE(LOT.OPER, 'A0546', LOT.QTY, 0)) TOT_145
     , SUM(DECODE(LOT.OPER, 'A0556', LOT.QTY, 0)) TOT_146
     , SUM(DECODE(LOT.OPER, 'A0566', LOT.QTY, 0)) TOT_147
     , SUM(DECODE(LOT.OPER, 'A0606', LOT.QTY, 0)) TOT_148
     , SUM(DECODE(LOT.OPER, 'A0716', LOT.QTY, 0)) TOT_149
     , SUM(DECODE(LOT.OPER, 'A0806', LOT.QTY, 0)) TOT_150
     , SUM(DECODE(LOT.OPER, 'A0407', LOT.QTY, 0)) TOT_151
     , SUM(DECODE(LOT.OPER, 'A0507', LOT.QTY, 0)) TOT_152
     , SUM(DECODE(LOT.OPER, 'A0537', LOT.QTY, 0)) TOT_153
     , SUM(DECODE(LOT.OPER, 'A0547', LOT.QTY, 0)) TOT_154
     , SUM(DECODE(LOT.OPER, 'A0557', LOT.QTY, 0)) TOT_155
     , SUM(DECODE(LOT.OPER, 'A0567', LOT.QTY, 0)) TOT_156
     , SUM(DECODE(LOT.OPER, 'A0607', LOT.QTY, 0)) TOT_157
     , SUM(DECODE(LOT.OPER, 'A0717', LOT.QTY, 0)) TOT_158
     , SUM(DECODE(LOT.OPER, 'A0807', LOT.QTY, 0)) TOT_159
     , SUM(DECODE(LOT.OPER, 'A0408', LOT.QTY, 0)) TOT_160
     , SUM(DECODE(LOT.OPER, 'A0508', LOT.QTY, 0)) TOT_161
     , SUM(DECODE(LOT.OPER, 'A0538', LOT.QTY, 0)) TOT_162
     , SUM(DECODE(LOT.OPER, 'A0558', LOT.QTY, 0)) TOT_163
     , SUM(DECODE(LOT.OPER, 'A0568', LOT.QTY, 0)) TOT_164
     , SUM(DECODE(LOT.OPER, 'A0608', LOT.QTY, 0)) TOT_165
     , SUM(DECODE(LOT.OPER, 'A0808', LOT.QTY, 0)) TOT_166
     , SUM(DECODE(LOT.OPER, 'A0409', LOT.QTY, 0)) TOT_167
     , SUM(DECODE(LOT.OPER, 'A0509', LOT.QTY, 0)) TOT_168
     , SUM(DECODE(LOT.OPER, 'A0539', LOT.QTY, 0)) TOT_169
     , SUM(DECODE(LOT.OPER, 'A0559', LOT.QTY, 0)) TOT_170
     , SUM(DECODE(LOT.OPER, 'A0569', LOT.QTY, 0)) TOT_171
     , SUM(DECODE(LOT.OPER, 'A0609', LOT.QTY, 0)) TOT_172
     , SUM(DECODE(LOT.OPER, 'A0809', LOT.QTY, 0)) TOT_173
     , SUM(DECODE(LOT.OPER, 'A080A', LOT.QTY, 0)) TOT_174
     , SUM(DECODE(LOT.OPER, 'A0890', LOT.QTY, 0)) TOT_175
     , SUM(DECODE(LOT.OPER, 'A0900', LOT.QTY, 0)) TOT_176
     , SUM(DECODE(LOT.OPER, 'A0910', LOT.QTY, 0)) TOT_177
     , SUM(DECODE(LOT.OPER, 'A0920', LOT.QTY, 0)) TOT_178
     , SUM(DECODE(LOT.OPER, 'A0930', LOT.QTY, 0)) TOT_179
     , SUM(DECODE(LOT.OPER, 'A0935', LOT.QTY, 0)) TOT_180
     , SUM(DECODE(LOT.OPER, 'A040A', LOT.QTY, 0)) TOT_181
     , SUM(DECODE(LOT.OPER, 'A0950', LOT.QTY, 0)) TOT_182
     , SUM(DECODE(LOT.OPER, 'A053A', LOT.QTY, 0)) TOT_183
     , SUM(DECODE(LOT.OPER, 'A0970', LOT.QTY, 0)) TOT_184
     , SUM(DECODE(LOT.OPER, 'A0940', LOT.QTY, 0)) TOT_185
     , SUM(DECODE(LOT.OPER, 'A0980', LOT.QTY, 0)) TOT_186
     , SUM(DECODE(LOT.OPER, 'A1000', LOT.QTY, 0)) TOT_187
     , SUM(DECODE(LOT.OPER, 'A055A', LOT.QTY, 0)) TOT_188
     , SUM(DECODE(LOT.OPER, 'A060A', LOT.QTY, 0)) TOT_189
     , SUM(DECODE(LOT.OPER, 'A1040', LOT.QTY, 0)) TOT_190
     , SUM(DECODE(LOT.OPER, 'A1070', LOT.QTY, 0)) TOT_191
     , SUM(DECODE(LOT.OPER, 'A1020', LOT.QTY, 0)) TOT_192
     , SUM(DECODE(LOT.OPER, 'A1100', LOT.QTY, 0)) TOT_193
     , SUM(DECODE(LOT.OPER, 'A1110', LOT.QTY, 0)) TOT_194
     , SUM(DECODE(LOT.OPER, 'A1120', LOT.QTY, 0)) TOT_195
     , SUM(DECODE(LOT.OPER, 'A1130', LOT.QTY, 0)) TOT_196
     , SUM(DECODE(LOT.OPER, 'A1140', LOT.QTY, 0)) TOT_197
     , SUM(DECODE(LOT.OPER, 'A1150', LOT.QTY, 0)) TOT_198
     , SUM(DECODE(LOT.OPER, 'A1600', LOT.QTY, 0)) TOT_199
     , SUM(DECODE(LOT.OPER, 'A1650', LOT.QTY, 0)) TOT_200
     , SUM(DECODE(LOT.OPER, 'A1170', LOT.QTY, 0)) TOT_201
     , SUM(DECODE(LOT.OPER, 'A1180', LOT.QTY, 0)) TOT_202
     , SUM(DECODE(LOT.OPER, 'A1200', LOT.QTY, 0)) TOT_203
     , SUM(DECODE(LOT.OPER, 'A1230', LOT.QTY, 0)) TOT_204
     , SUM(DECODE(LOT.OPER, 'A1240', LOT.QTY, 0)) TOT_205
     , SUM(DECODE(LOT.OPER, 'A1250', LOT.QTY, 0)) TOT_206
     , SUM(DECODE(LOT.OPER, 'A1260', LOT.QTY, 0)) TOT_207
     , SUM(DECODE(LOT.OPER, 'A1270', LOT.QTY, 0)) TOT_208
     , SUM(DECODE(LOT.OPER, 'A1300', LOT.QTY, 0)) TOT_209
     , SUM(DECODE(LOT.OPER, 'A1350', LOT.QTY, 0)) TOT_210
     , SUM(DECODE(LOT.OPER, 'A1370', LOT.QTY, 0)) TOT_211
     , SUM(DECODE(LOT.OPER, 'A1380', LOT.QTY, 0)) TOT_212
     , SUM(DECODE(LOT.OPER, 'A1050', LOT.QTY, 0)) TOT_213
     , SUM(DECODE(LOT.OPER, 'A1420', LOT.QTY, 0)) TOT_214
     , SUM(DECODE(LOT.OPER, 'A1440', LOT.QTY, 0)) TOT_215
     , SUM(DECODE(LOT.OPER, 'A1450', LOT.QTY, 0)) TOT_216
     , SUM(DECODE(LOT.OPER, 'A1821', LOT.QTY, 0)) TOT_217
     , SUM(DECODE(LOT.OPER, 'A1460', LOT.QTY, 0)) TOT_218
     , SUM(DECODE(LOT.OPER, 'A1470', LOT.QTY, 0)) TOT_219
     , SUM(DECODE(LOT.OPER, 'A1500', LOT.QTY, 0)) TOT_220
     , SUM(DECODE(LOT.OPER, 'A1550', LOT.QTY, 0)) TOT_221
     , SUM(DECODE(LOT.OPER, 'A1610', LOT.QTY, 0)) TOT_222
     , SUM(DECODE(LOT.OPER, 'A1560', LOT.QTY, 0)) TOT_223
     , SUM(DECODE(LOT.OPER, 'A1720', LOT.QTY, 0)) TOT_224
     , SUM(DECODE(LOT.OPER, 'A1730', LOT.QTY, 0)) TOT_225
     , SUM(DECODE(LOT.OPER, 'A1740', LOT.QTY, 0)) TOT_226
     , SUM(DECODE(LOT.OPER, 'A1750', LOT.QTY, 0)) TOT_227
     , SUM(DECODE(LOT.OPER, 'A1755', LOT.QTY, 0)) TOT_228
     , SUM(DECODE(LOT.OPER, 'A1760', LOT.QTY, 0)) TOT_229
     , SUM(DECODE(LOT.OPER, 'A1765', LOT.QTY, 0)) TOT_230
     , SUM(DECODE(LOT.OPER, 'A1766', LOT.QTY, 0)) TOT_231
     , SUM(DECODE(LOT.OPER, 'A1763', LOT.QTY, 0)) TOT_232
     , SUM(DECODE(LOT.OPER, 'A1770', LOT.QTY, 0)) TOT_233
     , SUM(DECODE(LOT.OPER, 'A1780', LOT.QTY, 0)) TOT_234
     , SUM(DECODE(LOT.OPER, 'A1790', LOT.QTY, 0)) TOT_235
     , SUM(DECODE(LOT.OPER, 'A1795', LOT.QTY, 0)) TOT_236
     , SUM(DECODE(LOT.OPER, 'A1860', LOT.QTY, 0)) TOT_237
     , SUM(DECODE(LOT.OPER, 'A1850', LOT.QTY, 0)) TOT_238
     , SUM(DECODE(LOT.OPER, 'A1390', LOT.QTY, 0)) TOT_239
     , SUM(DECODE(LOT.OPER, 'A1800', LOT.QTY, 0)) TOT_240
     , SUM(DECODE(LOT.OPER, 'A1805', LOT.QTY, 0)) TOT_241
     , SUM(DECODE(LOT.OPER, 'A1810', LOT.QTY, 0)) TOT_242
     , SUM(DECODE(LOT.OPER, 'A1811', LOT.QTY, 0)) TOT_243
     , SUM(DECODE(LOT.OPER, 'A1812', LOT.QTY, 0)) TOT_244
     , SUM(DECODE(LOT.OPER, 'A1816', LOT.QTY, 0)) TOT_245
     , SUM(DECODE(LOT.OPER, 'A1820', LOT.QTY, 0)) TOT_246
     , SUM(DECODE(LOT.OPER, 'A1825', LOT.QTY, 0)) TOT_247
     , SUM(DECODE(LOT.OPER, 'A1826', LOT.QTY, 0)) TOT_248
     , SUM(DECODE(LOT.OPER, 'A1920', LOT.QTY, 0)) TOT_249
     , SUM(DECODE(LOT.OPER, 'A1960', LOT.QTY, 0)) TOT_250
     , SUM(DECODE(LOT.OPER, 'A1815', LOT.QTY, 0)) TOT_251
     , SUM(DECODE(LOT.OPER, 'A1830', LOT.QTY, 0)) TOT_252
     , SUM(DECODE(LOT.OPER, 'A1710', LOT.QTY, 0)) TOT_253
     , SUM(DECODE(LOT.OPER, 'A1840', LOT.QTY, 0)) TOT_254
     , SUM(DECODE(LOT.OPER, 'A1900', LOT.QTY, 0)) TOT_255
     , SUM(DECODE(LOT.OPER, 'A1910', LOT.QTY, 0)) TOT_256
     , SUM(DECODE(LOT.OPER, 'A1950', LOT.QTY, 0)) TOT_257
     , SUM(DECODE(LOT.OPER, 'A2000', LOT.QTY, 0)) TOT_258
     , SUM(DECODE(LOT.OPER, 'A2010', LOT.QTY, 0)) TOT_259
     , SUM(DECODE(LOT.OPER, 'A2020', LOT.QTY, 0)) TOT_260
     , SUM(DECODE(LOT.OPER, 'A2025', LOT.QTY, 0)) TOT_261
     , SUM(DECODE(LOT.OPER, 'A1819', LOT.QTY, 0)) TOT_262
     , SUM(DECODE(LOT.OPER, 'A2030', LOT.QTY, 0)) TOT_263
     , SUM(DECODE(LOT.OPER, 'A2040', LOT.QTY, 0)) TOT_264
     , SUM(DECODE(LOT.OPER, 'A2041', LOT.QTY, 0)) TOT_265
     , SUM(DECODE(LOT.OPER, 'A2042', LOT.QTY, 0)) TOT_266
     , SUM(DECODE(LOT.OPER, 'A2070', LOT.QTY, 0)) TOT_267
     , SUM(DECODE(LOT.OPER, 'A2050', LOT.QTY, 0)) TOT_268
     , SUM(DECODE(LOT.OPER, 'A2150', LOT.QTY, 0)) TOT_269
     , SUM(DECODE(LOT.OPER, 'A2200', LOT.QTY, 0)) TOT_270
     , SUM(DECODE(LOT.OPER, 'A2100', LOT.QTY, 0)) TOT_271
     , SUM(DECODE(LOT.OPER, 'A2300', LOT.QTY, 0)) TOT_272
     , SUM(DECODE(LOT.OPER, 'A2350', LOT.QTY, 0)) TOT_273
     , SUM(DECODE(LOT.OPER, 'AZ009', LOT.QTY, 0)) TOT_274
     , SUM(DECODE(LOT.OPER, 'AZ010', LOT.QTY, 0)) TOT_275
     , SUM(DECODE(LOT.OPER, 'M0300', LOT.QTY, 0)) TOT_276
     , SUM(DECODE(LOT.OPER, 'M0315', LOT.QTY, 0)) TOT_277
     , SUM(DECODE(LOT.OPER, 'M0320', LOT.QTY, 0)) TOT_278
     , SUM(DECODE(LOT.OPER, 'M0339', LOT.QTY, 0)) TOT_279
     , SUM(DECODE(LOT.OPER, 'M0345', LOT.QTY, 0)) TOT_280
     , SUM(DECODE(LOT.OPER, 'M0323', LOT.QTY, 0)) TOT_281
     , SUM(DECODE(LOT.OPER, 'M0329', LOT.QTY, 0)) TOT_282
     , SUM(DECODE(LOT.OPER, 'Q0001', LOT.QTY, 0)) TOT_283
     , SUM(DECODE(LOT.OPER, 'Q0002', LOT.QTY, 0)) TOT_284
     , SUM(DECODE(LOT.OPER, 'M0325', LOT.QTY, 0)) TOT_285
     , SUM(DECODE(LOT.OPER, 'M0330', LOT.QTY, 0)) TOT_286
     , SUM(DECODE(LOT.OPER, 'M0337', LOT.QTY, 0)) TOT_287
     , SUM(DECODE(LOT.OPER, 'M0391', LOT.QTY, 0)) TOT_288
     , SUM(DECODE(LOT.OPER, 'M0336', LOT.QTY, 0)) TOT_289
     , SUM(DECODE(LOT.OPER, 'M0340', LOT.QTY, 0)) TOT_290
     , SUM(DECODE(LOT.OPER, 'M0400', LOT.QTY, 0)) TOT_291
     , SUM(DECODE(LOT.OPER, 'M0500', LOT.QTY, 0)) TOT_292
     , SUM(DECODE(LOT.OPER, 'M0550', LOT.QTY, 0)) TOT_293
     , SUM(DECODE(LOT.OPER, 'M0110', LOT.QTY, 0)) TOT_294
     , SUM(DECODE(LOT.OPER, 'M0120', LOT.QTY, 0)) TOT_295
     , SUM(DECODE(LOT.OPER, 'M0160', LOT.QTY, 0)) TOT_296
     , SUM(DECODE(LOT.OPER, 'M0161', LOT.QTY, 0)) TOT_297
     , SUM(DECODE(LOT.OPER, 'M0401', LOT.QTY, 0)) TOT_298
     , SUM(DECODE(LOT.OPER, 'M1750', LOT.QTY, 0)) TOT_299
     , SUM(CASE WHEN LOT.OPER = 'A0000' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_0
     , SUM(CASE WHEN LOT.OPER = 'A0005' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_1
     , SUM(CASE WHEN LOT.OPER = 'A000N' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_2
     , SUM(CASE WHEN LOT.OPER = 'A0010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_3
     , SUM(CASE WHEN LOT.OPER = 'A0012' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_4
     , SUM(CASE WHEN LOT.OPER = 'A0013' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_5
     , SUM(CASE WHEN LOT.OPER = 'A0015' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_6
     , SUM(CASE WHEN LOT.OPER = 'A0020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_7
     , SUM(CASE WHEN LOT.OPER = 'A0055' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_8
     , SUM(CASE WHEN LOT.OPER = 'A0023' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_9
     , SUM(CASE WHEN LOT.OPER = 'A0025' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_10
     , SUM(CASE WHEN LOT.OPER = 'A0030' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_11
     , SUM(CASE WHEN LOT.OPER = 'A0190' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_12
     , SUM(CASE WHEN LOT.OPER = 'A0033' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_13
     , SUM(CASE WHEN LOT.OPER = 'A0040' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_14
     , SUM(CASE WHEN LOT.OPER = 'A0041' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_15
     , SUM(CASE WHEN LOT.OPER = 'A0042' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_16
     , SUM(CASE WHEN LOT.OPER = 'A0045' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_17
     , SUM(CASE WHEN LOT.OPER = 'A0050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_18
     , SUM(CASE WHEN LOT.OPER = 'A0060' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_19
     , SUM(CASE WHEN LOT.OPER = 'A0070' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_20
     , SUM(CASE WHEN LOT.OPER = 'A0080' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_21
     , SUM(CASE WHEN LOT.OPER = 'A0090' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_22
     , SUM(CASE WHEN LOT.OPER = 'A0095' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_23
     , SUM(CASE WHEN LOT.OPER = 'A0110' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_24
     , SUM(CASE WHEN LOT.OPER = 'A0120' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_25
     , SUM(CASE WHEN LOT.OPER = 'A0130' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_26
     , SUM(CASE WHEN LOT.OPER = 'A0140' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_27
     , SUM(CASE WHEN LOT.OPER = 'A0160' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_28
     , SUM(CASE WHEN LOT.OPER = 'A0161' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_29
     , SUM(CASE WHEN LOT.OPER = 'A0165' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_30
     , SUM(CASE WHEN LOT.OPER = 'A0065' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_31
     , SUM(CASE WHEN LOT.OPER = 'A0100' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_32
     , SUM(CASE WHEN LOT.OPER = 'A0150' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_33
     , SUM(CASE WHEN LOT.OPER = 'A0175' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_34
     , SUM(CASE WHEN LOT.OPER = 'A0176' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_35
     , SUM(CASE WHEN LOT.OPER = 'A0170' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_36
     , SUM(CASE WHEN LOT.OPER = 'A0180' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_37
     , SUM(CASE WHEN LOT.OPER = 'A0200' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_38
     , SUM(CASE WHEN LOT.OPER = 'A0201' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_39
     , SUM(CASE WHEN LOT.OPER = 'A0202' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_40
     , SUM(CASE WHEN LOT.OPER = 'A0210' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_41
     , SUM(CASE WHEN LOT.OPER = 'A0215' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_42
     , SUM(CASE WHEN LOT.OPER = 'A0220' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_43
     , SUM(CASE WHEN LOT.OPER = 'A0230' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_44
     , SUM(CASE WHEN LOT.OPER = 'A0300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_45
     , SUM(CASE WHEN LOT.OPER = 'A0250' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_46
     , SUM(CASE WHEN LOT.OPER = 'A0305' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_47
     , SUM(CASE WHEN LOT.OPER = 'A0240' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_48
     , SUM(CASE WHEN LOT.OPER = 'A0260' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_49
     , SUM(CASE WHEN LOT.OPER = 'A0270' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_50
     , SUM(CASE WHEN LOT.OPER = 'A0290' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_51
     , SUM(CASE WHEN LOT.OPER = 'A0295' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_52
     , SUM(CASE WHEN LOT.OPER = 'A0280' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_53
     , SUM(CASE WHEN LOT.OPER = 'A0306' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_54
     , SUM(CASE WHEN LOT.OPER = 'A0307' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_55
     , SUM(CASE WHEN LOT.OPER = 'A0308' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_56
     , SUM(CASE WHEN LOT.OPER = 'A0310' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_57
     , SUM(CASE WHEN LOT.OPER = 'A0320' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_58
     , SUM(CASE WHEN LOT.OPER = 'A0330' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_59
     , SUM(CASE WHEN LOT.OPER = 'A1280' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_60
     , SUM(CASE WHEN LOT.OPER = 'A0333' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_61
     , SUM(CASE WHEN LOT.OPER = 'A0335' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_62
     , SUM(CASE WHEN LOT.OPER = 'A0337' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_63
     , SUM(CASE WHEN LOT.OPER = 'A0372' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_64
     , SUM(CASE WHEN LOT.OPER = 'A0395' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_65
     , SUM(CASE WHEN LOT.OPER = 'A0397' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_66
     , SUM(CASE WHEN LOT.OPER = 'A0340' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_67
     , SUM(CASE WHEN LOT.OPER = 'A0345' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_68
     , SUM(CASE WHEN LOT.OPER = 'A0350' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_69
     , SUM(CASE WHEN LOT.OPER = 'A0360' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_70
     , SUM(CASE WHEN LOT.OPER = 'A0370' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_71
     , SUM(CASE WHEN LOT.OPER = 'A0375' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_72
     , SUM(CASE WHEN LOT.OPER = 'A0380' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_73
     , SUM(CASE WHEN LOT.OPER = 'A0381' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_74
     , SUM(CASE WHEN LOT.OPER = 'A0382' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_75
     , SUM(CASE WHEN LOT.OPER = 'A0383' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_76
     , SUM(CASE WHEN LOT.OPER = 'A0385' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_77
     , SUM(CASE WHEN LOT.OPER = 'A0391' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_78
     , SUM(CASE WHEN LOT.OPER = 'A0399' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_79
     , SUM(CASE WHEN LOT.OPER = 'A0390' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_80
     , SUM(CASE WHEN LOT.OPER = 'A0400' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_81
     , SUM(CASE WHEN LOT.OPER = 'A0401' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_82
     , SUM(CASE WHEN LOT.OPER = 'A0500' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_83
     , SUM(CASE WHEN LOT.OPER = 'A0530' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_84
     , SUM(CASE WHEN LOT.OPER = 'A0531' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_85
     , SUM(CASE WHEN LOT.OPER = 'A0501' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_86
     , SUM(CASE WHEN LOT.OPER = 'A0540' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_87
     , SUM(CASE WHEN LOT.OPER = 'A0550' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_88
     , SUM(CASE WHEN LOT.OPER = 'A0600' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_89
     , SUM(CASE WHEN LOT.OPER = 'A0620' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_90
     , SUM(CASE WHEN LOT.OPER = 'A0660' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_91
     , SUM(CASE WHEN LOT.OPER = 'A0630' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_92
     , SUM(CASE WHEN LOT.OPER = 'A0650' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_93
     , SUM(CASE WHEN LOT.OPER = 'A0670' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_94
     , SUM(CASE WHEN LOT.OPER = 'A0720' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_95
     , SUM(CASE WHEN LOT.OPER = 'A0700' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_96
     , SUM(CASE WHEN LOT.OPER = 'A0339' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_97
     , SUM(CASE WHEN LOT.OPER = 'A0541' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_98
     , SUM(CASE WHEN LOT.OPER = 'A0551' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_99
     , SUM(CASE WHEN LOT.OPER = 'A0561' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_100
     , SUM(CASE WHEN LOT.OPER = 'A0601' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_101
     , SUM(CASE WHEN LOT.OPER = 'A0710' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_102
     , SUM(CASE WHEN LOT.OPER = 'A0800' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_103
     , SUM(CASE WHEN LOT.OPER = 'A0402' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_104
     , SUM(CASE WHEN LOT.OPER = 'A0502' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_105
     , SUM(CASE WHEN LOT.OPER = 'A0532' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_106
     , SUM(CASE WHEN LOT.OPER = 'A0801' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_107
     , SUM(CASE WHEN LOT.OPER = 'A0542' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_108
     , SUM(CASE WHEN LOT.OPER = 'A0552' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_109
     , SUM(CASE WHEN LOT.OPER = 'A0562' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_110
     , SUM(CASE WHEN LOT.OPER = 'A0602' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_111
     , SUM(CASE WHEN LOT.OPER = 'A0711' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_112
     , SUM(CASE WHEN LOT.OPER = 'A0802' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_113
     , SUM(CASE WHEN LOT.OPER = 'A0403' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_114
     , SUM(CASE WHEN LOT.OPER = 'A0503' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_115
     , SUM(CASE WHEN LOT.OPER = 'A0533' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_116
     , SUM(CASE WHEN LOT.OPER = 'A0543' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_117
     , SUM(CASE WHEN LOT.OPER = 'A0553' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_118
     , SUM(CASE WHEN LOT.OPER = 'A0563' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_119
     , SUM(CASE WHEN LOT.OPER = 'A0603' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_120
     , SUM(CASE WHEN LOT.OPER = 'A0712' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_121
     , SUM(CASE WHEN LOT.OPER = 'A0713' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_122
     , SUM(CASE WHEN LOT.OPER = 'A0803' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_123
     , SUM(CASE WHEN LOT.OPER = 'A0404' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_124
     , SUM(CASE WHEN LOT.OPER = 'A0504' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_125
     , SUM(CASE WHEN LOT.OPER = 'A0534' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_126
     , SUM(CASE WHEN LOT.OPER = 'A0544' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_127
     , SUM(CASE WHEN LOT.OPER = 'A0554' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_128
     , SUM(CASE WHEN LOT.OPER = 'A0564' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_129
     , SUM(CASE WHEN LOT.OPER = 'A0604' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_130
     , SUM(CASE WHEN LOT.OPER = 'A0714' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_131
     , SUM(CASE WHEN LOT.OPER = 'A0804' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_132
     , SUM(CASE WHEN LOT.OPER = 'A0405' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_133
     , SUM(CASE WHEN LOT.OPER = 'A0505' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_134
     , SUM(CASE WHEN LOT.OPER = 'A0535' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_135
     , SUM(CASE WHEN LOT.OPER = 'A0545' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_136
     , SUM(CASE WHEN LOT.OPER = 'A0555' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_137
     , SUM(CASE WHEN LOT.OPER = 'A0565' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_138
     , SUM(CASE WHEN LOT.OPER = 'A0605' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_139
     , SUM(CASE WHEN LOT.OPER = 'A0715' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_140
     , SUM(CASE WHEN LOT.OPER = 'A0805' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_141
     , SUM(CASE WHEN LOT.OPER = 'A0406' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_142
     , SUM(CASE WHEN LOT.OPER = 'A0506' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_143
     , SUM(CASE WHEN LOT.OPER = 'A0536' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_144
     , SUM(CASE WHEN LOT.OPER = 'A0546' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_145
     , SUM(CASE WHEN LOT.OPER = 'A0556' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_146
     , SUM(CASE WHEN LOT.OPER = 'A0566' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_147
     , SUM(CASE WHEN LOT.OPER = 'A0606' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_148
     , SUM(CASE WHEN LOT.OPER = 'A0716' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_149
     , SUM(CASE WHEN LOT.OPER = 'A0806' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_150
     , SUM(CASE WHEN LOT.OPER = 'A0407' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_151
     , SUM(CASE WHEN LOT.OPER = 'A0507' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_152
     , SUM(CASE WHEN LOT.OPER = 'A0537' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_153
     , SUM(CASE WHEN LOT.OPER = 'A0547' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_154
     , SUM(CASE WHEN LOT.OPER = 'A0557' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_155
     , SUM(CASE WHEN LOT.OPER = 'A0567' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_156
     , SUM(CASE WHEN LOT.OPER = 'A0607' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_157
     , SUM(CASE WHEN LOT.OPER = 'A0717' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_158
     , SUM(CASE WHEN LOT.OPER = 'A0807' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_159
     , SUM(CASE WHEN LOT.OPER = 'A0408' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_160
     , SUM(CASE WHEN LOT.OPER = 'A0508' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_161
     , SUM(CASE WHEN LOT.OPER = 'A0538' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_162
     , SUM(CASE WHEN LOT.OPER = 'A0558' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_163
     , SUM(CASE WHEN LOT.OPER = 'A0568' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_164
     , SUM(CASE WHEN LOT.OPER = 'A0608' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_165
     , SUM(CASE WHEN LOT.OPER = 'A0808' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_166
     , SUM(CASE WHEN LOT.OPER = 'A0409' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_167
     , SUM(CASE WHEN LOT.OPER = 'A0509' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_168
     , SUM(CASE WHEN LOT.OPER = 'A0539' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_169
     , SUM(CASE WHEN LOT.OPER = 'A0559' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_170
     , SUM(CASE WHEN LOT.OPER = 'A0569' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_171
     , SUM(CASE WHEN LOT.OPER = 'A0609' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_172
     , SUM(CASE WHEN LOT.OPER = 'A0809' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_173
     , SUM(CASE WHEN LOT.OPER = 'A080A' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_174
     , SUM(CASE WHEN LOT.OPER = 'A0890' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_175
     , SUM(CASE WHEN LOT.OPER = 'A0900' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_176
     , SUM(CASE WHEN LOT.OPER = 'A0910' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_177
     , SUM(CASE WHEN LOT.OPER = 'A0920' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_178
     , SUM(CASE WHEN LOT.OPER = 'A0930' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_179
     , SUM(CASE WHEN LOT.OPER = 'A0935' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_180
     , SUM(CASE WHEN LOT.OPER = 'A040A' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_181
     , SUM(CASE WHEN LOT.OPER = 'A0950' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_182
     , SUM(CASE WHEN LOT.OPER = 'A053A' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_183
     , SUM(CASE WHEN LOT.OPER = 'A0970' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_184
     , SUM(CASE WHEN LOT.OPER = 'A0940' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_185
     , SUM(CASE WHEN LOT.OPER = 'A0980' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_186
     , SUM(CASE WHEN LOT.OPER = 'A1000' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_187
     , SUM(CASE WHEN LOT.OPER = 'A055A' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_188
     , SUM(CASE WHEN LOT.OPER = 'A060A' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_189
     , SUM(CASE WHEN LOT.OPER = 'A1040' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_190
     , SUM(CASE WHEN LOT.OPER = 'A1070' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_191
     , SUM(CASE WHEN LOT.OPER = 'A1020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_192
     , SUM(CASE WHEN LOT.OPER = 'A1100' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_193
     , SUM(CASE WHEN LOT.OPER = 'A1110' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_194
     , SUM(CASE WHEN LOT.OPER = 'A1120' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_195
     , SUM(CASE WHEN LOT.OPER = 'A1130' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_196
     , SUM(CASE WHEN LOT.OPER = 'A1140' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_197
     , SUM(CASE WHEN LOT.OPER = 'A1150' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_198
     , SUM(CASE WHEN LOT.OPER = 'A1600' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_199
     , SUM(CASE WHEN LOT.OPER = 'A1650' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_200
     , SUM(CASE WHEN LOT.OPER = 'A1170' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_201
     , SUM(CASE WHEN LOT.OPER = 'A1180' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_202
     , SUM(CASE WHEN LOT.OPER = 'A1200' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_203
     , SUM(CASE WHEN LOT.OPER = 'A1230' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_204
     , SUM(CASE WHEN LOT.OPER = 'A1240' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_205
     , SUM(CASE WHEN LOT.OPER = 'A1250' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_206
     , SUM(CASE WHEN LOT.OPER = 'A1260' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_207
     , SUM(CASE WHEN LOT.OPER = 'A1270' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_208
     , SUM(CASE WHEN LOT.OPER = 'A1300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_209
     , SUM(CASE WHEN LOT.OPER = 'A1350' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_210
     , SUM(CASE WHEN LOT.OPER = 'A1370' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_211
     , SUM(CASE WHEN LOT.OPER = 'A1380' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_212
     , SUM(CASE WHEN LOT.OPER = 'A1050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_213
     , SUM(CASE WHEN LOT.OPER = 'A1420' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_214
     , SUM(CASE WHEN LOT.OPER = 'A1440' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_215
     , SUM(CASE WHEN LOT.OPER = 'A1450' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_216
     , SUM(CASE WHEN LOT.OPER = 'A1821' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_217
     , SUM(CASE WHEN LOT.OPER = 'A1460' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_218
     , SUM(CASE WHEN LOT.OPER = 'A1470' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_219
     , SUM(CASE WHEN LOT.OPER = 'A1500' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_220
     , SUM(CASE WHEN LOT.OPER = 'A1550' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_221
     , SUM(CASE WHEN LOT.OPER = 'A1610' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_222
     , SUM(CASE WHEN LOT.OPER = 'A1560' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_223
     , SUM(CASE WHEN LOT.OPER = 'A1720' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_224
     , SUM(CASE WHEN LOT.OPER = 'A1730' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_225
     , SUM(CASE WHEN LOT.OPER = 'A1740' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_226
     , SUM(CASE WHEN LOT.OPER = 'A1750' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_227
     , SUM(CASE WHEN LOT.OPER = 'A1755' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_228
     , SUM(CASE WHEN LOT.OPER = 'A1760' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_229
     , SUM(CASE WHEN LOT.OPER = 'A1765' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_230
     , SUM(CASE WHEN LOT.OPER = 'A1766' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_231
     , SUM(CASE WHEN LOT.OPER = 'A1763' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_232
     , SUM(CASE WHEN LOT.OPER = 'A1770' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_233
     , SUM(CASE WHEN LOT.OPER = 'A1780' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_234
     , SUM(CASE WHEN LOT.OPER = 'A1790' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_235
     , SUM(CASE WHEN LOT.OPER = 'A1795' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_236
     , SUM(CASE WHEN LOT.OPER = 'A1860' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_237
     , SUM(CASE WHEN LOT.OPER = 'A1850' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_238
     , SUM(CASE WHEN LOT.OPER = 'A1390' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_239
     , SUM(CASE WHEN LOT.OPER = 'A1800' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_240
     , SUM(CASE WHEN LOT.OPER = 'A1805' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_241
     , SUM(CASE WHEN LOT.OPER = 'A1810' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_242
     , SUM(CASE WHEN LOT.OPER = 'A1811' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_243
     , SUM(CASE WHEN LOT.OPER = 'A1812' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_244
     , SUM(CASE WHEN LOT.OPER = 'A1816' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_245
     , SUM(CASE WHEN LOT.OPER = 'A1820' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_246
     , SUM(CASE WHEN LOT.OPER = 'A1825' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_247
     , SUM(CASE WHEN LOT.OPER = 'A1826' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_248
     , SUM(CASE WHEN LOT.OPER = 'A1920' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_249
     , SUM(CASE WHEN LOT.OPER = 'A1960' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_250
     , SUM(CASE WHEN LOT.OPER = 'A1815' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_251
     , SUM(CASE WHEN LOT.OPER = 'A1830' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_252
     , SUM(CASE WHEN LOT.OPER = 'A1710' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_253
     , SUM(CASE WHEN LOT.OPER = 'A1840' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_254
     , SUM(CASE WHEN LOT.OPER = 'A1900' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_255
     , SUM(CASE WHEN LOT.OPER = 'A1910' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_256
     , SUM(CASE WHEN LOT.OPER = 'A1950' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_257
     , SUM(CASE WHEN LOT.OPER = 'A2000' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_258
     , SUM(CASE WHEN LOT.OPER = 'A2010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_259
     , SUM(CASE WHEN LOT.OPER = 'A2020' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_260
     , SUM(CASE WHEN LOT.OPER = 'A2025' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_261
     , SUM(CASE WHEN LOT.OPER = 'A1819' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_262
     , SUM(CASE WHEN LOT.OPER = 'A2030' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_263
     , SUM(CASE WHEN LOT.OPER = 'A2040' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_264
     , SUM(CASE WHEN LOT.OPER = 'A2041' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_265
     , SUM(CASE WHEN LOT.OPER = 'A2042' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_266
     , SUM(CASE WHEN LOT.OPER = 'A2070' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_267
     , SUM(CASE WHEN LOT.OPER = 'A2050' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_268
     , SUM(CASE WHEN LOT.OPER = 'A2150' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_269
     , SUM(CASE WHEN LOT.OPER = 'A2200' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_270
     , SUM(CASE WHEN LOT.OPER = 'A2100' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_271
     , SUM(CASE WHEN LOT.OPER = 'A2300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_272
     , SUM(CASE WHEN LOT.OPER = 'A2350' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_273
     , SUM(CASE WHEN LOT.OPER = 'AZ009' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_274
     , SUM(CASE WHEN LOT.OPER = 'AZ010' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_275
     , SUM(CASE WHEN LOT.OPER = 'M0300' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_276
     , SUM(CASE WHEN LOT.OPER = 'M0315' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_277
     , SUM(CASE WHEN LOT.OPER = 'M0320' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_278
     , SUM(CASE WHEN LOT.OPER = 'M0339' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_279
     , SUM(CASE WHEN LOT.OPER = 'M0345' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_280
     , SUM(CASE WHEN LOT.OPER = 'M0323' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_281
     , SUM(CASE WHEN LOT.OPER = 'M0329' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_282
     , SUM(CASE WHEN LOT.OPER = 'Q0001' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_283
     , SUM(CASE WHEN LOT.OPER = 'Q0002' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_284
     , SUM(CASE WHEN LOT.OPER = 'M0325' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_285
     , SUM(CASE WHEN LOT.OPER = 'M0330' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_286
     , SUM(CASE WHEN LOT.OPER = 'M0337' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_287
     , SUM(CASE WHEN LOT.OPER = 'M0391' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_288
     , SUM(CASE WHEN LOT.OPER = 'M0336' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_289
     , SUM(CASE WHEN LOT.OPER = 'M0340' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_290
     , SUM(CASE WHEN LOT.OPER = 'M0400' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_291
     , SUM(CASE WHEN LOT.OPER = 'M0500' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_292
     , SUM(CASE WHEN LOT.OPER = 'M0550' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_293
     , SUM(CASE WHEN LOT.OPER = 'M0110' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_294
     , SUM(CASE WHEN LOT.OPER = 'M0120' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_295
     , SUM(CASE WHEN LOT.OPER = 'M0160' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_296
     , SUM(CASE WHEN LOT.OPER = 'M0161' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_297
     , SUM(CASE WHEN LOT.OPER = 'M0401' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_298
     , SUM(CASE WHEN LOT.OPER = 'M1750' AND LOT.HOLD_DATE > 2 THEN LOT.QTY ELSE 0 END) HOLD_299
     , 0 BOYU_0
     , 0 BOYU_1
     , 0 BOYU_2
     , 0 BOYU_3
     , 0 BOYU_4
     , 0 BOYU_5
     , 0 BOYU_6
     , 0 BOYU_7
     , 0 BOYU_8
     , 0 BOYU_9
     , 0 BOYU_10
     , 0 BOYU_11
     , 0 BOYU_12
     , 0 BOYU_13
     , 0 BOYU_14
     , 0 BOYU_15
     , 0 BOYU_16
     , 0 BOYU_17
     , 0 BOYU_18
     , 0 BOYU_19
     , 0 BOYU_20
     , 0 BOYU_21
     , 0 BOYU_22
     , 0 BOYU_23
     , 0 BOYU_24
     , 0 BOYU_25
     , 0 BOYU_26
     , 0 BOYU_27
     , 0 BOYU_28
     , 0 BOYU_29
     , 0 BOYU_30
     , 0 BOYU_31
     , 0 BOYU_32
     , 0 BOYU_33
     , 0 BOYU_34
     , 0 BOYU_35
     , 0 BOYU_36
     , 0 BOYU_37
     , 0 BOYU_38
     , 0 BOYU_39
     , 0 BOYU_40
     , 0 BOYU_41
     , 0 BOYU_42
     , 0 BOYU_43
     , 0 BOYU_44
     , 0 BOYU_45
     , 0 BOYU_46
     , 0 BOYU_47
     , 0 BOYU_48
     , 0 BOYU_49
     , 0 BOYU_50
     , 0 BOYU_51
     , 0 BOYU_52
     , 0 BOYU_53
     , 0 BOYU_54
     , 0 BOYU_55
     , 0 BOYU_56
     , 0 BOYU_57
     , 0 BOYU_58
     , 0 BOYU_59
     , 0 BOYU_60
     , 0 BOYU_61
     , 0 BOYU_62
     , 0 BOYU_63
     , 0 BOYU_64
     , 0 BOYU_65
     , 0 BOYU_66
     , 0 BOYU_67
     , 0 BOYU_68
     , 0 BOYU_69
     , 0 BOYU_70
     , 0 BOYU_71
     , 0 BOYU_72
     , 0 BOYU_73
     , 0 BOYU_74
     , 0 BOYU_75
     , 0 BOYU_76
     , 0 BOYU_77
     , 0 BOYU_78
     , 0 BOYU_79
     , 0 BOYU_80
     , 0 BOYU_81
     , 0 BOYU_82
     , 0 BOYU_83
     , 0 BOYU_84
     , 0 BOYU_85
     , 0 BOYU_86
     , 0 BOYU_87
     , 0 BOYU_88
     , 0 BOYU_89
     , 0 BOYU_90
     , 0 BOYU_91
     , 0 BOYU_92
     , 0 BOYU_93
     , 0 BOYU_94
     , 0 BOYU_95
     , 0 BOYU_96
     , 0 BOYU_97
     , 0 BOYU_98
     , 0 BOYU_99
     , 0 BOYU_100
     , 0 BOYU_101
     , 0 BOYU_102
     , 0 BOYU_103
     , 0 BOYU_104
     , 0 BOYU_105
     , 0 BOYU_106
     , 0 BOYU_107
     , 0 BOYU_108
     , 0 BOYU_109
     , 0 BOYU_110
     , 0 BOYU_111
     , 0 BOYU_112
     , 0 BOYU_113
     , 0 BOYU_114
     , 0 BOYU_115
     , 0 BOYU_116
     , 0 BOYU_117
     , 0 BOYU_118
     , 0 BOYU_119
     , 0 BOYU_120
     , 0 BOYU_121
     , 0 BOYU_122
     , 0 BOYU_123
     , 0 BOYU_124
     , 0 BOYU_125
     , 0 BOYU_126
     , 0 BOYU_127
     , 0 BOYU_128
     , 0 BOYU_129
     , 0 BOYU_130
     , 0 BOYU_131
     , 0 BOYU_132
     , 0 BOYU_133
     , 0 BOYU_134
     , 0 BOYU_135
     , 0 BOYU_136
     , 0 BOYU_137
     , 0 BOYU_138
     , 0 BOYU_139
     , 0 BOYU_140
     , 0 BOYU_141
     , 0 BOYU_142
     , 0 BOYU_143
     , 0 BOYU_144
     , 0 BOYU_145
     , 0 BOYU_146
     , 0 BOYU_147
     , 0 BOYU_148
     , 0 BOYU_149
     , 0 BOYU_150
     , 0 BOYU_151
     , 0 BOYU_152
     , 0 BOYU_153
     , 0 BOYU_154
     , 0 BOYU_155
     , 0 BOYU_156
     , 0 BOYU_157
     , 0 BOYU_158
     , 0 BOYU_159
     , 0 BOYU_160
     , 0 BOYU_161
     , 0 BOYU_162
     , 0 BOYU_163
     , 0 BOYU_164
     , 0 BOYU_165
     , 0 BOYU_166
     , 0 BOYU_167
     , 0 BOYU_168
     , 0 BOYU_169
     , 0 BOYU_170
     , 0 BOYU_171
     , 0 BOYU_172
     , 0 BOYU_173
     , 0 BOYU_174
     , 0 BOYU_175
     , 0 BOYU_176
     , 0 BOYU_177
     , 0 BOYU_178
     , 0 BOYU_179
     , 0 BOYU_180
     , 0 BOYU_181
     , 0 BOYU_182
     , 0 BOYU_183
     , 0 BOYU_184
     , 0 BOYU_185
     , 0 BOYU_186
     , 0 BOYU_187
     , 0 BOYU_188
     , 0 BOYU_189
     , 0 BOYU_190
     , 0 BOYU_191
     , 0 BOYU_192
     , 0 BOYU_193
     , 0 BOYU_194
     , 0 BOYU_195
     , 0 BOYU_196
     , 0 BOYU_197
     , 0 BOYU_198
     , 0 BOYU_199
     , 0 BOYU_200
     , 0 BOYU_201
     , 0 BOYU_202
     , 0 BOYU_203
     , 0 BOYU_204
     , 0 BOYU_205
     , 0 BOYU_206
     , 0 BOYU_207
     , 0 BOYU_208
     , 0 BOYU_209
     , 0 BOYU_210
     , 0 BOYU_211
     , 0 BOYU_212
     , 0 BOYU_213
     , 0 BOYU_214
     , 0 BOYU_215
     , 0 BOYU_216
     , 0 BOYU_217
     , 0 BOYU_218
     , 0 BOYU_219
     , 0 BOYU_220
     , 0 BOYU_221
     , 0 BOYU_222
     , 0 BOYU_223
     , 0 BOYU_224
     , 0 BOYU_225
     , 0 BOYU_226
     , 0 BOYU_227
     , 0 BOYU_228
     , 0 BOYU_229
     , 0 BOYU_230
     , 0 BOYU_231
     , 0 BOYU_232
     , 0 BOYU_233
     , 0 BOYU_234
     , 0 BOYU_235
     , 0 BOYU_236
     , 0 BOYU_237
     , 0 BOYU_238
     , 0 BOYU_239
     , 0 BOYU_240
     , 0 BOYU_241
     , 0 BOYU_242
     , 0 BOYU_243
     , 0 BOYU_244
     , 0 BOYU_245
     , 0 BOYU_246
     , 0 BOYU_247
     , 0 BOYU_248
     , 0 BOYU_249
     , 0 BOYU_250
     , 0 BOYU_251
     , 0 BOYU_252
     , 0 BOYU_253
     , 0 BOYU_254
     , 0 BOYU_255
     , 0 BOYU_256
     , 0 BOYU_257
     , 0 BOYU_258
     , 0 BOYU_259
     , 0 BOYU_260
     , 0 BOYU_261
     , 0 BOYU_262
     , 0 BOYU_263
     , 0 BOYU_264
     , 0 BOYU_265
     , 0 BOYU_266
     , 0 BOYU_267
     , 0 BOYU_268
     , 0 BOYU_269
     , 0 BOYU_270
     , 0 BOYU_271
     , 0 BOYU_272
     , 0 BOYU_273
     , 0 BOYU_274
     , 0 BOYU_275
     , 0 BOYU_276
     , 0 BOYU_277
     , 0 BOYU_278
     , 0 BOYU_279
     , 0 BOYU_280
     , 0 BOYU_281
     , 0 BOYU_282
     , 0 BOYU_283
     , 0 BOYU_284
     , 0 BOYU_285
     , 0 BOYU_286
     , 0 BOYU_287
     , 0 BOYU_288
     , 0 BOYU_289
     , 0 BOYU_290
     , 0 BOYU_291
     , 0 BOYU_292
     , 0 BOYU_293
     , 0 BOYU_294
     , 0 BOYU_295
     , 0 BOYU_296
     , 0 BOYU_297
     , 0 BOYU_298
     , 0 BOYU_299
  FROM (  
        SELECT LOT.FACTORY 
             , LOT.MAT_ID 
             , OPR.OPER_GRP_1 OPER  
             , LOT.LOT_ID 
             , LOT.QTY_1 QTY 
             , TO_DATE('20200803164911', 'YYYYMMDDHH24MISS') - TO_DATE(LOT.LOT_CMF_14, 'YYYYMMDDHH24MISS') HOLD_DATE 
          FROM RWIPLOTSTS LOT,  
               MWIPOPRDEF OPR  
         WHERE 1=1  
           AND OPR.OPER_GRP_1 IN ('A0000', 'A0005', 'A000N', 'A0010', 'A0012', 'A0013', 'A0015', 'A0020', 'A0055', 'A0023', 'A0025', 'A0030', 'A0190', 'A0033', 'A0040', 'A0041', 'A0042', 'A0045', 'A0050', 'A0060', 'A0070', 'A0080', 'A0090', 'A0095', 'A0110', 'A0120', 'A0130', 'A0140', 'A0160', 'A0161', 'A0165', 'A0065', 'A0100', 'A0150', 'A0175', 'A0176', 'A0170', 'A0180', 'A0200', 'A0201', 'A0202', 'A0210', 'A0215', 'A0220', 'A0230', 'A0300', 'A0250', 'A0305', 'A0240', 'A0260', 'A0270', 'A0290', 'A0295', 'A0280', 'A0306', 'A0307', 'A0308', 'A0310', 'A0320', 'A0330', 'A1280', 'A0333', 'A0335', 'A0337', 'A0372', 'A0395', 'A0397', 'A0340', 'A0345', 'A0350', 'A0360', 'A0370', 'A0375', 'A0380', 'A0381', 'A0382', 'A0383', 'A0385', 'A0391', 'A0399', 'A0390', 'A0400', 'A0401', 'A0500', 'A0530', 'A0531', 'A0501', 'A0540', 'A0550', 'A0600', 'A0620', 'A0660', 'A0630', 'A0650', 'A0670', 'A0720', 'A0700', 'A0339', 'A0541', 'A0551', 'A0561', 'A0601', 'A0710', 'A0800', 'A0402', 'A0502', 'A0532', 'A0801', 'A0542', 'A0552', 'A0562', 'A0602', 'A0711', 'A0802', 'A0403', 'A0503', 'A0533', 'A0543', 'A0553', 'A0563', 'A0603', 'A0712', 'A0713', 'A0803', 'A0404', 'A0504', 'A0534', 'A0544', 'A0554', 'A0564', 'A0604', 'A0714', 'A0804', 'A0405', 'A0505', 'A0535', 'A0545', 'A0555', 'A0565', 'A0605', 'A0715', 'A0805', 'A0406', 'A0506', 'A0536', 'A0546', 'A0556', 'A0566', 'A0606', 'A0716', 'A0806', 'A0407', 'A0507', 'A0537', 'A0547', 'A0557', 'A0567', 'A0607', 'A0717', 'A0807', 'A0408', 'A0508', 'A0538', 'A0558', 'A0568', 'A0608', 'A0808', 'A0409', 'A0509', 'A0539', 'A0559', 'A0569', 'A0609', 'A0809', 'A080A', 'A0890', 'A0900', 'A0910', 'A0920', 'A0930', 'A0935', 'A040A', 'A0950', 'A053A', 'A0970', 'A0940', 'A0980', 'A1000', 'A055A', 'A060A', 'A1040', 'A1070', 'A1020', 'A1100', 'A1110', 'A1120', 'A1130', 'A1140', 'A1150', 'A1600', 'A1650', 'A1170', 'A1180', 'A1200', 'A1230', 'A1240', 'A1250', 'A1260', 'A1270', 'A1300', 'A1350', 'A1370', 'A1380', 'A1050', 'A1420', 'A1440', 'A1450', 'A1821', 'A1460', 'A1470', 'A1500', 'A1550', 'A1610', 'A1560', 'A1720', 'A1730', 'A1740', 'A1750', 'A1755', 'A1760', 'A1765', 'A1766', 'A1763', 'A1770', 'A1780', 'A1790', 'A1795', 'A1860', 'A1850', 'A1390', 'A1800', 'A1805', 'A1810', 'A1811', 'A1812', 'A1816', 'A1820', 'A1825', 'A1826', 'A1920', 'A1960', 'A1815', 'A1830', 'A1710', 'A1840', 'A1900', 'A1910', 'A1950', 'A2000', 'A2010', 'A2020', 'A2025', 'A1819', 'A2030', 'A2040', 'A2041', 'A2042', 'A2070', 'A2050', 'A2150', 'A2200', 'A2100', 'A2300', 'A2350', 'AZ009', 'AZ010', 'M0300', 'M0315', 'M0320', 'M0339', 'M0345', 'M0323', 'M0329', 'Q0001', 'Q0002', 'M0325', 'M0330', 'M0337', 'M0391', 'M0336', 'M0340', 'M0400', 'M0500', 'M0550', 'M0110', 'M0120', 'M0160', 'M0161', 'M0401', 'M1750')
           AND LOT.FACTORY = OPR.FACTORY  
           AND LOT.OPER = OPR.OPER  
           AND LOT.FACTORY  = 'HMVA2' 
           AND LOT.OPER NOT IN ('00001','00002')  
           AND LOT.LOT_DEL_FLAG = ' '  
           AND LOT.MAT_VER = 1  
           AND LOT.LOT_TYPE = 'W'  
       ) LOT 
     , MWIPMATDEF MAT 
 WHERE 1=1 
   AND MAT.FACTORY = LOT.FACTORY 
   AND MAT.MAT_ID = LOT.MAT_ID 
   AND MAT.MAT_VER = 1 
 GROUP BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
 ORDER BY MAT.FACTORY, MAT.MAT_GRP_1, MAT.MAT_GRP_3
              ) MAT 

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_2 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PRD010420'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
SELECT MIN(SYS_DATE) AS START_DAY 
     , MAX(SYS_DATE) AS END_DAY 
     , PLAN_YEAR||DECODE(LENGTH(PLAN_WEEK), 1, '0'||PLAN_WEEK, PLAN_WEEK) AS WEEK
  FROM MWIPCALDEF 
 WHERE CALENDAR_ID = 'OTD'
   AND (PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) IN ( 
                                                SELECT WW
                                                  FROM (
                                                        SELECT WW
                                                             , ROW_NUMBER() OVER(ORDER BY WW) AS RNK
                                                          FROM (
                                                                SELECT DISTINCT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW
                                                                  FROM MWIPCALDEF
                                                                 WHERE CALENDAR_ID = 'OTD'
                                                                   AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') >= (
                                                                                                              SELECT MAX(PLAN_YEAR || LPAD(PLAN_WEEK,2,'0')) AS WW
                                                                                                                FROM MWIPCALDEF
                                                                                                               WHERE CALENDAR_ID = 'OTD'
                                                                                                                 AND PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') < (SELECT PLAN_YEAR || LPAD(PLAN_WEEK,2,'0') AS WW FROM MWIPCALDEF WHERE CALENDAR_ID = 'OTD' AND SYS_DATE = '20200803')
                                                                                                                 AND SYS_DATE >= TO_CHAR(TO_DATE('20200803', 'YYYYMMDD')-14, 'YYYYMMDD')
                                                                                                             )
                                                               ) 
                                                       )
                                                 WHERE RNK <= 7
                                               ) 
 GROUP BY PLAN_YEAR, PLAN_WEEK 
 ORDER BY PLAN_YEAR, PLAN_WEEK

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202007', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
(SELECT TO_CHAR(LAST_DAY(TO_DATE('202008', 'YYYYMM')),'YYYYMMDD') FROM DUAL)
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MIN(SYS_DATE-1) 
  FROM MWIPCALDEF 
 WHERE 1=1
   AND CALENDAR_ID='SE'
   AND PLAN_YEAR='2020'
   AND PLAN_WEEK=(
                  SELECT PLAN_WEEK 
                    FROM MWIPCALDEF 
                   WHERE 1=1 
                     AND CALENDAR_ID='SE' 
                     AND SYS_DATE=TO_CHAR(TO_DATE('20200803','YYYYMMDD'),'YYYYMMDD')
                 )

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' '
     , ROUND(MAX(ORI_PLAN)/1000,0) AS "월계획"  
     , ROUND(MAX(MON_PLAN)/1000,0) AS "월계획Rev"  
     , ROUND((MAX(MON_PLAN) - MAX(ORI_PLAN))/1000,0) AS "월계획 차이"  
     , ROUND(MAX(TARGET_MON)/1000,0), ROUND(MAX(ASSY_MON)/1000,0)  
     , DECODE(MAX(MON_PLAN), 0, 0, ROUND((MAX(ASSY_MON)/MAX(MON_PLAN))*100, 1)) JINDO 
     , ROUND((MAX(MON_PLAN)-MAX(ASSY_MON))/1000,0) AS "잔량"  
     , ROUND(SUM(NVL(OPT_WIP,0))/1000,0) AS OPT_WIP 
     , ROUND(SUM(NVL(DAY01,0))/1000,0) AS DAY01, ROUND(SUM(NVL(DAY02,0))/1000,0) AS DAY02, ROUND(SUM(NVL(DAY03,0))/1000,0) AS DAY03, ROUND(SUM(NVL(DAY04,0))/1000,0) AS DAY04, ROUND(SUM(NVL(DAY05,0))/1000,0) AS DAY05, ROUND(SUM(NVL(DAY06,0))/1000,0) AS DAY06, ROUND(SUM(NVL(DAY07,0))/1000,0) AS DAY07, ROUND(SUM(NVL(DAY08,0))/1000,0) AS DAY08, ROUND(SUM(NVL(DAY09,0))/1000,0) AS DAY09, ROUND(SUM(NVL(DAY10,0))/1000,0) AS DAY10   
     , ROUND(SUM(NVL(DAY11,0))/1000,0) AS DAY11, ROUND(SUM(NVL(DAY12,0))/1000,0) AS DAY12, ROUND(SUM(NVL(DAY13,0))/1000,0) AS DAY13, ROUND(SUM(NVL(DAY14,0))/1000,0) AS DAY14, ROUND(SUM(NVL(DAY15,0))/1000,0) AS DAY15, ROUND(SUM(NVL(DAY16,0))/1000,0) AS DAY16, ROUND(SUM(NVL(DAY17,0))/1000,0) AS DAY17, ROUND(SUM(NVL(DAY18,0))/1000,0) AS DAY18, ROUND(SUM(NVL(DAY19,0))/1000,0) AS DAY19, ROUND(SUM(NVL(DAY20,0))/1000,0) AS DAY20   
     , ROUND(SUM(NVL(DAY21,0))/1000,0) AS DAY21, ROUND(SUM(NVL(DAY22,0))/1000,0) AS DAY22, ROUND(SUM(NVL(DAY23,0))/1000,0) AS DAY23, ROUND(SUM(NVL(DAY24,0))/1000,0) AS DAY24, ROUND(SUM(NVL(DAY25,0))/1000,0) AS DAY25, ROUND(SUM(NVL(DAY26,0))/1000,0) AS DAY26, ROUND(SUM(NVL(DAY27,0))/1000,0) AS DAY27, ROUND(SUM(NVL(DAY28,0))/1000,0) AS DAY28, ROUND(SUM(NVL(DAY29,0))/1000,0) AS DAY29, ROUND(SUM(NVL(DAY30,0))/1000,0) AS DAY30, ROUND(SUM(NVL(DAY31,0))/1000,0) AS DAY31 
     , ROUND(MAX(WIP_DAY),1) AS WIP_DAY 
     , ROUND(SUM(NVL(TAT,0)),2) AS TAT 

  FROM ( 
        SELECT (CASE WHEN MAT.MAT_GRP_1 = 'SE' THEN 'SAMSUNG' WHEN MAT.MAT_GRP_1 = 'HX' THEN 'SK Hynix' ELSE 'Fabless' END) AS CUSTOMER, MAT.MAT_GRP_9 AS MAJOR, MAT.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.OPER_GRP AS OPER_GRP
             , SUM(NVL(M.ORI_PLAN,0)) AS ORI_PLAN 
             , SUM(NVL(M.MON_PLAN,0)) AS MON_PLAN 
             , SUM(NVL(M.TARGET_MON,0)) AS TARGET_MON 
             , SUM(NVL(M.ASSY_MON,0)) AS ASSY_MON 
             , SUM(NVL(M.ASSY_MON_SHIP,0)) AS ASSY_MON_SHIP 
             , CASE WHEN SUM(NVL(M.MON_PLAN,0))=0 THEN 0 
                    ELSE CASE WHEN MAT.OPER_GRP='STOCK' THEN DECODE(MIN(T.STOCK_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.STOCK_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='SAW' THEN DECODE(MIN(T.SAW_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.SAW_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='DA' THEN DECODE(MIN(T.DA_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.DA_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='WB' THEN DECODE(MIN(T.WB_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.WB_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='MOLD' THEN DECODE(MIN(T.MOLD_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.MOLD_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='FINISH' THEN DECODE(MIN(T.FINISH_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.FINISH_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='HMK3A' THEN DECODE(MIN(T.HMK3A_TAT),0, 0, ((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.HMK3A_TAT)*1.1)) 
                              ELSE 0 
                          END 
                END OPT_WIP 
             , SUM(NVL(A.DAY01,0)) AS DAY01, SUM(NVL(A.DAY02,0)) AS DAY02, SUM(NVL(A.DAY03,0)) AS DAY03, SUM(NVL(A.DAY04,0)) AS DAY04, SUM(NVL(A.DAY05,0)) AS DAY05, SUM(NVL(A.DAY06,0)) AS DAY06, SUM(NVL(A.DAY07,0)) AS DAY07, SUM(NVL(A.DAY08,0)) AS DAY08, SUM(NVL(A.DAY09,0)) AS DAY09, SUM(NVL(A.DAY10,0)) AS DAY10 
             , SUM(NVL(A.DAY11,0)) AS DAY11, SUM(NVL(A.DAY12,0)) AS DAY12, SUM(NVL(A.DAY13,0)) AS DAY13, SUM(NVL(A.DAY14,0)) AS DAY14, SUM(NVL(A.DAY15,0)) AS DAY15, SUM(NVL(A.DAY16,0)) AS DAY16, SUM(NVL(A.DAY17,0)) AS DAY17, SUM(NVL(A.DAY18,0)) AS DAY18, SUM(NVL(A.DAY19,0)) AS DAY19, SUM(NVL(A.DAY20,0)) AS DAY20 
             , SUM(NVL(A.DAY21,0)) AS DAY21, SUM(NVL(A.DAY22,0)) AS DAY22, SUM(NVL(A.DAY23,0)) AS DAY23, SUM(NVL(A.DAY24,0)) AS DAY24, SUM(NVL(A.DAY25,0)) AS DAY25, SUM(NVL(A.DAY26,0)) AS DAY26, SUM(NVL(A.DAY27,0)) AS DAY27, SUM(NVL(A.DAY28,0)) AS DAY28, SUM(NVL(A.DAY29,0)) AS DAY29, SUM(NVL(A.DAY30,0)) AS DAY30, SUM(NVL(A.DAY31,0)) AS DAY31 
             , CASE WHEN SUM(NVL(M.MON_PLAN,0))=0 THEN 0 
                    ELSE CASE WHEN MAT.OPER_GRP='STOCK' THEN DECODE(MIN(T.STOCK_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.STOCK_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='SAW' THEN DECODE(MIN(T.SAW_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.SAW_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='DA' THEN DECODE(MIN(T.DA_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.DA_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='WB' THEN DECODE(MIN(T.WB_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.WB_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='MOLD' THEN DECODE(MIN(T.MOLD_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.MOLD_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='FINISH' THEN DECODE(MIN(T.FINISH_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.FINISH_TAT)*1.1)) 
                              WHEN MAT.OPER_GRP='HMK3A' THEN DECODE(MIN(T.HMK3A_TAT),0, 0, SUM(NVL(A.DAY03,0))/((SUM(NVL(M.MON_PLAN,0))/31)*MIN(T.HMK3A_TAT)*1.1)) 
                              ELSE 0 
                          END 
                END WIP_DAY 
             , MIN(CASE WHEN MAT.OPER_GRP='STOCK' THEN T.STOCK_TAT 
                        WHEN MAT.OPER_GRP='SAW' THEN T.SAW_TAT 
                        WHEN MAT.OPER_GRP='DA' THEN T.DA_TAT 
                        WHEN MAT.OPER_GRP='WB' THEN T.WB_TAT 
                        WHEN MAT.OPER_GRP='MOLD' THEN T.MOLD_TAT 
                        WHEN MAT.OPER_GRP='FINISH' THEN T.FINISH_TAT 
                        WHEN MAT.OPER_GRP='HMK3A' THEN T.HMK3A_TAT 
                        ELSE 0 
                    END) TAT 
      FROM ( 
            SELECT MAT.*, OPER.OPER_GRP 
              FROM MWIPMATDEF MAT 
                 , ( 
                    SELECT DISTINCT A.FACTORY, DECODE(A.OPER_GRP_1, 'HMK3A', 'HMK3A', 'M/K', 'FINISH', 'V/I', 'FINISH', 'TRIM', 'FINISH', 'S/B/A', 'FINISH', 'TIN', 'FINISH', 'SIG', 'FINISH', 'AVI', 'FINISH', 'MOLD', 'MOLD', 'CURE', 'MOLD', 'W/B', 'WB', 'GATE', 'WB', 'D/A', 'DA', 'SMT', 'DA', 'S/P', 'DA', 'B/G', 'SAW', 'SAW', 'SAW', 'HMK2A', 'STOCK') OPER_GRP 
                      FROM  MWIPOPRDEF A 
                     WHERE 1 = 1 
                       AND FACTORY = 'HMVA2' 
                       AND OPER_GRP_1 IN ('HMK3A', 'M/K', 'V/I', 'TRIM', 'S/B/A', 'TIN', 'SIG', 'AVI', 'MOLD', 'CURE', 'W/B', 'GATE', 'D/A', 'SMT', 'S/P', 'B/G', 'SAW', 'HMK2A') 
                     GROUP BY A.FACTORY, A.OPER_GRP_1 
                    ) OPER 
             WHERE 1 = 1 
               AND OPER_GRP <> ' ' 
               AND MAT.VENDOR_ID <> ' ' 
               AND MAT.FACTORY = 'HMVA2' 
               AND MAT.DELETE_FLAG = ' ' 
           ) MAT 
         , (  
            SELECT MAT_ID, OPER_GRP 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200801', QTY),0)) AS DAY01 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200802', QTY),0)) AS DAY02 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200803', QTY),0)) AS DAY03 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200804', QTY),0)) AS DAY04 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200805', QTY),0)) AS DAY05 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200806', QTY),0)) AS DAY06 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200807', QTY),0)) AS DAY07 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200808', QTY),0)) AS DAY08 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200809', QTY),0)) AS DAY09 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200810', QTY),0)) AS DAY10 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200811', QTY),0)) AS DAY11 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200812', QTY),0)) AS DAY12 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200813', QTY),0)) AS DAY13 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200814', QTY),0)) AS DAY14 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200815', QTY),0)) AS DAY15 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200816', QTY),0)) AS DAY16 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200817', QTY),0)) AS DAY17 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200818', QTY),0)) AS DAY18 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200819', QTY),0)) AS DAY19 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200820', QTY),0)) AS DAY20 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200821', QTY),0)) AS DAY21 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200822', QTY),0)) AS DAY22 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200823', QTY),0)) AS DAY23 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200824', QTY),0)) AS DAY24 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200825', QTY),0)) AS DAY25 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200826', QTY),0)) AS DAY26 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200827', QTY),0)) AS DAY27 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200828', QTY),0)) AS DAY28 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200829', QTY),0)) AS DAY29 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200830', QTY),0)) AS DAY30 
                     , SUM(NVL(DECODE(CUTOFF_DAY,'20200831', QTY),0)) AS DAY31 
                  FROM ( 
                        SELECT MAT_ID, CUTOFF_DAY, OPER_GRP 
                             , SUM(NVL(DECODE(OPER_GRP, 'STOCK', STOCK, 'SAW', SAW, 'DA', DA, 'WB', WB, 'MOLD', MOLD, 'FINISH', FINISH, 'HMK3A', HMK3A),0)) AS QTY 
                          FROM ( 
                                SELECT A.MAT_ID 
                                     , F.CUTOFF_DAY AS CUTOFF_DAY, DECODE(OPER_GRP_1, 'HMK3A', 'HMK3A', 'M/K', 'FINISH', 'V/I', 'FINISH', 'TRIM', 'FINISH', 'S/B/A', 'FINISH', 'TIN', 'FINISH', 'SIG', 'FINISH', 'AVI', 'FINISH', 'MOLD', 'MOLD', 'CURE', 'MOLD', 'W/B', 'WB', 'GATE', 'WB', 'D/A', 'DA', 'SMT', 'DA', 'S/P', 'DA', 'B/G', 'SAW', 'SAW', 'SAW', 'HMK2A', 'STOCK') AS OPER_GRP 
                                     , SUM(NVL(F.V0,0)) AS STOCK  
                                     , SUM(NVL(F.V1,0)+NVL(F.V2,0)) AS SAW
                                     , SUM(NVL(F.V3,0)+NVL(F.V4,0)) AS DA
                                     , SUM(NVL(F.V5,0)+NVL(F.V16,0)) AS WB
                                     , SUM(NVL(F.V6,0)+NVL(F.V7,0)) AS MOLD
                                     , SUM(NVL(F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14,0)) AS FINISH
                                     , SUM(NVL(F.V15,0)) AS HMK3A  
                                  FROM ( 
                                        SELECT MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8 
                                             , DECODE(MAT.MAT_GRP_1,'SE',MAT.MAT_GRP_9,' ') AS MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.MAT_CMF_13, MAT.MAT_CMF_11  
                                          FROM MWIPMATDEF MAT 
                                             , ( 
                                                SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                                                  FROM ( 
                                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                                          FROM ( 
                                                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                                                  FROM CWIPPLNMON 
                                                                 WHERE 1=1 
                                                                   AND FACTORY = 'HMVA2' 
                                                                 GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                                               ) 
                                                         GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                                                       ) 
                                               ) PLAN 
                                         WHERE 1 = 1 
                                           AND MAT.FACTORY =PLAN.FACTORY(+) 
                                           AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                                           AND MAT.FACTORY = 'HMVA2' 
                                           AND PLAN.PLAN_MONTH(+) = '202008' 
                                           AND MAT.MAT_TYPE= 'FG' 
                                           AND MAT.DELETE_FLAG <> 'Y' 
                                         GROUP BY MAT.MAT_GRP_1, MAT.MAT_GRP_2, MAT.MAT_GRP_3, MAT.MAT_GRP_4, MAT.MAT_GRP_5, MAT.MAT_GRP_6, MAT.MAT_GRP_7, MAT.MAT_GRP_8, MAT.MAT_GRP_9, MAT.MAT_GRP_10, MAT.MAT_CMF_10, MAT.MAT_ID, MAT.MAT_CMF_7, MAT.MAT_CMF_13, MAT.MAT_CMF_11
                                       ) A  
                                       
                                     , ( 
                                        SELECT MAT_ID, OPER_GRP_1, CUTOFF_DAY 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK2A', QTY, 0))) AS V0 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'B/G', QTY, 0))) AS V1 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'SAW', QTY, 0))) AS V2 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'S/P', QTY, 0))) AS V3 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'D/A', QTY, 0))) AS V4 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'W/B', QTY, 0))) AS V5 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'MOLD', QTY, 0))) AS V6 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'CURE', QTY, 0))) AS V7 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'M/K', QTY, 0))) AS V8 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'TRIM', QTY, 0))) AS V9 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'TIN', QTY, 0))) AS V10
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'S/B/A', QTY, 0))) AS V11 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'SIG', QTY, 0))) AS V12 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'AVI', QTY, 0))) AS V13 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'V/I', QTY, 0))) AS V14 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'HMK3A', QTY, 0))) AS V15 
                                             , ROUND(SUM(DECODE(OPER_GRP_1, 'GATE', QTY, 0))) AS V16 
                                          FROM (  
                                                SELECT MAT_ID, OPER_GRP_1, SUBSTR(CUTOFF_DT, 1, 8) AS CUTOFF_DAY 
                                                     , SUM(CASE WHEN OPER <= 'A0395' THEN QTY_1 / NVL(COMP_CNT,1) 
                                                                ELSE QTY_1 
                                                           END) QTY 
                                                  FROM (
                                                        SELECT A.CUTOFF_DT, A.FACTORY, A.MAT_ID, B.OPER_GRP_1, B.OPER 
                                                             , CASE WHEN MAT_GRP_3 IN ('COB', 'BGN') THEN A.QTY_1 / C.NET_DIE ELSE A.QTY_1 END AS QTY_1 
                                                             , C.COMP_CNT 
                                                          FROM (
                                                                SELECT '2020080322' AS CUTOFF_DT, A.*, 0 AS REJECT_QTY, 0 AS CV_QTY 
                                                                  FROM RWIPLOTSTS A 
                                                                 UNION ALL 
                                                                SELECT * 
                                                                  FROM RWIPLOTSTS_BOH B 
                                                                 WHERE CUTOFF_DT IN ('2020080122','2020080222') 
                                                               ) A 
                                                               , MWIPOPRDEF B 
                                                               , VWIPMATDEF C 
                                                           WHERE 1 = 1 
                                                             AND A.FACTORY = B.FACTORY 
                                                             AND A.FACTORY = C.FACTORY 
                                                             AND A.OPER = B.OPER 
                                                             AND A.MAT_ID = C.MAT_ID 
                                                             AND A.FACTORY = 'HMVA2' 
                                                             AND A.MAT_VER = 1 
                                                             AND A.LOT_DEL_FLAG = ' ' 
                                                             AND A.LOT_TYPE = 'W' 
                                                             AND A.LOT_CMF_5 LIKE 'P%'
                                                             AND C.DELETE_FLAG <> 'Y' 
                                                             AND C.MAT_GRP_2 <> '-'  
                                                             AND REGEXP_LIKE(C.MAT_GRP_5, 'Middle*|Merge|1st|-') 
                                                       ) 
                                                 GROUP BY MAT_ID, OPER_GRP_1, SUBSTR(CUTOFF_DT, 1, 8)   
                                               )  
                                         GROUP BY MAT_ID ,OPER_GRP_1, CUTOFF_DAY  
                                       ) F 
                                 WHERE 1 = 1 
                                   AND A.MAT_ID = F.MAT_ID(+)
                                   AND A.MAT_ID LIKE '%' 
                                 GROUP BY A.MAT_ID ,F.CUTOFF_DAY, DECODE(OPER_GRP_1, 'HMK3A', 'HMK3A', 'M/K', 'FINISH', 'V/I', 'FINISH', 'TRIM', 'FINISH', 'S/B/A', 'FINISH', 'TIN', 'FINISH', 'SIG', 'FINISH', 'AVI', 'FINISH', 'MOLD', 'MOLD', 'CURE', 'MOLD', 'W/B', 'WB', 'GATE', 'WB', 'D/A', 'DA', 'SMT', 'DA', 'S/P', 'DA', 'B/G', 'SAW', 'SAW', 'SAW', 'HMK2A', 'STOCK')
                                HAVING (
                                        NVL(SUM(F.V0+F.V1+F.V2+F.V3+F.V4+F.V5+F.V6+F.V7+F.V8+F.V9+F.V10+F.V11+F.V12+F.V13+F.V14+F.V15+F.V16), 0)  
                                       ) <> 0
                               ) 
                         GROUP BY MAT_ID, CUTOFF_DAY, OPER_GRP 
                       ) 
                 GROUP BY MAT_ID, OPER_GRP 
               ) A 
             , ( 
                SELECT A.MAT_ID 
                     , SUM(NVL(A.MON_PLAN,0)) AS MON_PLAN 
                     , SUM(NVL(A.ORI_PLAN,0)) AS ORI_PLAN 
                     , ROUND(((SUM(NVL(A.MON_PLAN,0)) * 9.7) / 100),0) AS TARGET_MON 
                     , SUM(NVL(A.ASSY_MON,0)) AS ASSY_MON 
                     , SUM(NVL(A.ASSY_MON_SHIP,0)) AS ASSY_MON_SHIP 
                     , SUM(NVL(A.ASSY_MON,0)) - ROUND(((SUM(NVL(A.MON_PLAN,0)) * 9.7) / 100),1) AS DEF   
                     , ROUND(((SUM(NVL(A.MON_PLAN,0)) - SUM(NVL(A.ASSY_MON,0))) /29), 1) AS TARGET_DAY 
                  FROM ( 
                        SELECT MAT.MAT_ID 
                             , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.RESV_FIELD1)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)
                                    ELSE SUM(PLAN.RESV_FIELD1)
                                END MON_PLAN
                             , CASE WHEN MAT.MAT_GRP_3 IN ('COB') THEN ROUND(SUM(PLAN.PLAN_QTY_ASSY)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)
                                    ELSE SUM(PLAN.PLAN_QTY_ASSY)
                                END ORI_PLAN
                             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO.ASSY_MON)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)
                                    ELSE SUM(MON_AO.ASSY_MON)
                                END ASSY_MON
                             , CASE WHEN MAT.MAT_GRP_3 IN ('COB', 'BGN') THEN ROUND(SUM(MON_AO_SHIP.ASSY_MON)/TO_NUMBER(DECODE(MAT.MAT_CMF_13,' ',1,MAT.MAT_CMF_13)),0)
                                    ELSE SUM(MON_AO_SHIP.ASSY_MON)
                                END ASSY_MON_SHIP
                          FROM MWIPMATDEF MAT 
                             , ( 
                                SELECT FACTORY,MAT_ID,PLAN_QTY_ASSY,PLAN_MONTH, RESV_FIELD1 
                                  FROM ( 
                                        SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(RESV_FIELD1) AS RESV_FIELD1  
                                          FROM ( 
                                                SELECT FACTORY, MAT_ID, SUM(PLAN_QTY_ASSY) AS PLAN_QTY_ASSY, PLAN_MONTH, SUM(TO_NUMBER(DECODE(RESV_FIELD1,' ',0,RESV_FIELD1))) AS RESV_FIELD1 
                                                  FROM CWIPPLNMON 
                                                 WHERE 1=1 
                                                   AND FACTORY = 'HMVA2' 
                                                 GROUP BY FACTORY, MAT_ID, PLAN_MONTH 
                                               ) 
                                         GROUP BY FACTORY, MAT_ID,PLAN_MONTH 
                                       ) 
                               ) PLAN 
                             , ( 
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200731', 0, NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0))) AS ASSY_MON 
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200731' AND '20200803'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                               ) MON_AO 
                             , ( 
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200731', 0, NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0))) AS ASSY_MON 
                                  FROM CSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200731' AND '20200803'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                               ) MON_AO_HX 
                             , ( 
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200731', 0, NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0))) AS ASSY_MON 
                                  FROM RSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200731' AND '20200802'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                               ) MON_AO_SHIP 
                             , ( 
                                SELECT MAT_ID 
                                     , SUM(DECODE(WORK_DATE,'20200731', 0, NVL(S1_FAC_OUT_QTY_1 + S2_FAC_OUT_QTY_1 + S3_FAC_OUT_QTY_1 + S4_FAC_OUT_QTY_1, 0))) AS ASSY_MON 
                                  FROM CSUMFACMOV 
                                 WHERE 1=1 
                                   AND WORK_DATE BETWEEN '20200731' AND '20200802'
                                   AND LOT_TYPE = 'W' 
                                   AND CM_KEY_1 = 'HMVA2' 
                                   AND CM_KEY_2 = 'PROD' 
                                   AND CM_KEY_3 LIKE 'P%'
                                   AND FACTORY NOT IN ('RETURN') 
                                 GROUP BY MAT_ID 
                               ) MON_AO_HX_SHIP 
                         WHERE 1 = 1 
                           AND MAT.FACTORY =PLAN.FACTORY(+) 
                           AND MAT.MAT_ID = PLAN.MAT_ID(+) 
                           AND MAT.MAT_ID = MON_AO.MAT_ID(+)  
                           AND MAT.MAT_ID = MON_AO_HX.MAT_ID(+) 
                           AND MAT.MAT_ID = MON_AO_SHIP.MAT_ID(+)  
                           AND MAT.MAT_ID = MON_AO_HX_SHIP.MAT_ID(+) 
                           AND MAT.FACTORY = 'HMVA2' 
                           AND PLAN.PLAN_MONTH(+) = '202008' 
                           AND MAT.MAT_TYPE= 'FG' 
                           AND MAT.DELETE_FLAG <> 'Y' 
                         GROUP BY MAT.MAT_ID, MAT.MAT_GRP_3, MAT.MAT_CMF_13 
                       ) A  
                 GROUP BY A.MAT_ID 
               ) M 
             , (  
                SELECT SAP_CODE, MIN(STOCK_TAT) AS STOCK_TAT, MIN(HMK3A_TAT) AS HMK3A_TAT, MIN(SAW_TAT) AS SAW_TAT, MIN(DA_TAT) AS DA_TAT, MIN(WB_TAT) AS WB_TAT, MIN(MOLD_TAT) AS MOLD_TAT, MIN(FINISH_TAT) AS FINISH_TAT, MIN(TOTAL_TAT) AS TAT  
                  FROM (  
                        SELECT CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SAP_CODE  
                             , MAX(STOCK_TAT) STOCK_TAT, MAX(HMK3A_TAT) HMK3A_TAT, MAX(SAW_TAT) SAW_TAT, MAX(DA_TAT) DA_TAT, MAX(WB_TAT) WB_TAT, MAX(MOLD_TAT) MOLD_TAT, MAX(FINISH_TAT) FINISH_TAT, MAX(SAW_TAT)+MAX(DA_TAT)+MAX(WB_TAT)+MAX(MOLD_TAT)+MAX(FINISH_TAT) AS TOTAL_TAT  
                             , RANK() OVER (PARTITION BY CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SAP_CODE ORDER BY MAX(SAW_TAT)+MAX(DA_TAT)+MAX(WB_TAT)+MAX(MOLD_TAT)+MAX(FINISH_TAT), SAP_CODE) AS RANK  
                          FROM (  
                                SELECT MAT.MAT_ID 
                                     , (CASE WHEN MAT.MAT_GRP_1 = 'SE' THEN 'SAMSUNG' WHEN MAT.MAT_GRP_1 = 'HX' THEN 'SK Hynix' ELSE 'Fabless' END) AS CUSTOMER, MAT.MAT_GRP_9 AS MAJOR, MAT.MAT_GRP_10 AS PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', OPER_GRP 
                                     , MAT.VENDOR_ID  
                                     , OPER.SAP_CODE  
                                     , NVL(DECODE(OPER_GRP, 'STOCK',SUM(OPER.TAT)),0) STOCK_TAT 
                                     , NVL(DECODE(OPER_GRP, 'SAW',SUM(OPER.TAT)),0) SAW_TAT  
                                     , NVL(DECODE(OPER_GRP, 'DA',SUM(OPER.TAT)),0) DA_TAT  
                                     , NVL(DECODE(OPER_GRP, 'WB',SUM(OPER.TAT)),0) WB_TAT  
                                     , NVL(DECODE(OPER_GRP, 'MOLD',SUM(OPER.TAT)),0) MOLD_TAT  
                                     , NVL(DECODE(OPER_GRP, 'FINISH',SUM(OPER.TAT)),0) FINISH_TAT   
                                     , NVL(DECODE(OPER_GRP, 'HMK3A',SUM(OPER.TAT)),0) HMK3A_TAT 
                                  FROM MWIPMATDEF MAT   
                                     , (   
                                        SELECT A.FACTORY, A.OPER, A.SAP_CODE, DECODE(B.OPER_GRP_1, 'HMK3A', 'HMK3A', 'M/K', 'FINISH', 'V/I', 'FINISH', 'TRIM', 'FINISH', 'S/B/A', 'FINISH', 'TIN', 'FINISH', 'SIG', 'FINISH', 'AVI', 'FINISH', 'MOLD', 'MOLD', 'CURE', 'MOLD', 'W/B', 'WB', 'GATE', 'WB', 'D/A', 'DA', 'SMT', 'DA', 'S/P', 'DA', 'B/G', 'SAW', 'SAW', 'SAW', 'HMK2A', 'STOCK') OPER_GRP, SUM(A.TAT_DAY+A.TAT_DAY_WAIT) AS TAT   
                                          FROM CWIPSAPTAT@RPTTOMES A   
                                             , MWIPOPRDEF B   
                                         WHERE 1 = 1   
                                           AND A.RESV_FIELD_2 = ' '   
                                           AND A.FACTORY = B.FACTORY   
                                           AND A.OPER = B.OPER   
                                           AND OPER_GRP_1 IN ('HMK3A', 'M/K', 'V/I', 'TRIM', 'S/B/A', 'TIN', 'SIG', 'AVI', 'MOLD', 'CURE', 'W/B', 'GATE', 'D/A', 'SMT', 'S/P', 'B/G', 'SAW', 'HMK2A')   
                                         GROUP BY A.FACTORY, A.OPER, A.SAP_CODE, B.OPER_GRP_1   
                                       ) OPER  
                                 WHERE 1 = 1   
                                   AND MAT.VENDOR_ID = OPER.SAP_CODE(+)  
                                   AND OPER_GRP <> ' '   
                                 GROUP BY  MAT.MAT_ID, (CASE WHEN MAT.MAT_GRP_1 = 'SE' THEN 'SAMSUNG' WHEN MAT.MAT_GRP_1 = 'HX' THEN 'SK Hynix' ELSE 'Fabless'  END), MAT.MAT_GRP_9, MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.VENDOR_ID, OPER.SAP_CODE, OPER_GRP  
                               )   
                         GROUP BY CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', SAP_CODE 
                       )  
                 WHERE RANK = 1  
                 GROUP BY SAP_CODE 
               ) T 
         WHERE 1=1 
           AND MAT.MAT_ID = A.MAT_ID(+) 
           AND MAT.OPER_GRP = A.OPER_GRP(+) 
           AND MAT.MAT_ID = M.MAT_ID(+) 
           AND MAT.VENDOR_ID = T.SAP_CODE(+) 
         GROUP BY (CASE WHEN MAT.MAT_GRP_1 = 'SE' THEN 'SAMSUNG' WHEN MAT.MAT_GRP_1 = 'HX' THEN 'SK Hynix' ELSE 'Fabless'  END), MAT.MAT_GRP_9, MAT.MAT_GRP_10,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT.OPER_GRP 
   )  
 GROUP BY CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 
HAVING ( 
        SUM(NVL(ORI_PLAN,0) + NVL(MON_PLAN,0) + NVL(TARGET_MON,0) + NVL(ASSY_MON,0))  +  
        SUM(NVL(DAY01,0) + NVL(DAY02,0) + NVL(DAY03,0) + NVL(DAY04,0) + NVL(DAY05,0) + NVL(DAY06,0) + NVL(DAY07,0) + NVL(DAY08,0) + NVL(DAY09,0) + NVL(DAY10,0) +  
            NVL(DAY11,0) + NVL(DAY12,0) + NVL(DAY13,0) + NVL(DAY14,0) + NVL(DAY15,0) + NVL(DAY16,0) + NVL(DAY17,0) + NVL(DAY18,0) + NVL(DAY19,0) + NVL(DAY20,0) +  
            NVL(DAY21,0) + NVL(DAY22,0) + NVL(DAY23,0) + NVL(DAY24,0) + NVL(DAY25,0) + NVL(DAY26,0) + NVL(DAY27,0) + NVL(DAY28,0) + NVL(DAY29,0) + NVL(DAY30,0) + NVL(DAY31,0)) 
       ) <> 0 
 ORDER BY DECODE(CUSTOMER, '', 1, 'SAMSUNG', 2, 'SK Hynix', 3, 'Fabless', 4, 5), CUSTOMER, MAJOR, PKG,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ' 

-------------------------------------------------------------
SELECT * FROM RWEBUSRDEF WHERE FACTORY = :FACTORY AND USER_ID= :USER_ID
-------------------------------------------------------------
SELECT A.FUNC_GRP_SEQ,A.SEC_GRP_ID,A.FUNC_GRP_ID,NVL(A.FUNC_NAME, ' ') FUNC_NAME, NVL(B.FUNC_DESC, ' ') FUNC_DESC, LANGUAGE_1, LANGUAGE_2, LANGUAGE_3
  FROM RWEBGRPFUN A, RWEBFUNDEF B
 WHERE A.FACTORY = :p_FACTORY
   AND A.SEC_GRP_ID = :p_SEC_GRP_ID
   AND A.FUNC_NAME=B.FUNC_NAME(+)
 ORDER BY A.FUNC_GRP_SEQ, A.FUNC_SEQ
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'PQC030202'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'YLD040602'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT FACTORY Code, FAC_DESC Data
  FROM MWIPFACDEF
 WHERE FAC_GRP_5 = 'Y' 
 ORDER BY FAC_GRP_4 ASC
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
        SELECT MAT_GRP_1,  ' ', MAT_GRP_6, MAT_GRP_3,  ' ',  ' ',  ' ',  ' ',''
                    , SUM(DECODE(WORK_DATE, '20200802', IN_QTY,0)) AS A1
                    , SUM(DECODE(WORK_DATE, '20200802', OUT_QTY,0)) AS A2
                    , ROUND((SUM(DECODE(WORK_DATE, '20200802', OUT_QTY))/SUM(DECODE(WORK_DATE, '20200802', IN_QTY)))*100,3) AS A3
          FROM RSUMMATYLD 
          WHERE 1=1 
            AND WORK_DATE BETWEEN '20200802' AND '20200802'
          AND MAT_ID NOT IN ( 
                      SELECT MAT_ID 
                        FROM MWIPMATDEF 
                       WHERE FACTORY = 'HMVA2' 
                         AND MAT_GRP_1 = 'HX' 
                         AND MAT_GRP_2 = 'BOC' 
                         AND MAT_GRP_3 = 'BOC' 
                         AND MAT_GRP_6 = '60' 
                         AND MAT_GRP_7 IN ('256M','512M') 
                        AND MAT_GRP_8 = 'Orion' 
                        )  
        GROUP BY MAT_GRP_1,  ' ', MAT_GRP_6, MAT_GRP_3,  ' ',  ' ',  ' ',  ' '
        ORDER BY MAT_GRP_1,  ' ', MAT_GRP_6, MAT_GRP_3,  ' ',  ' ',  ' ',  ' '

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT PLAN_WEEK V1    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_DATE = TO_CHAR(SYSDATE,'yyyymmdd')      AND ROWNUM = 1  
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
 SELECT UNIQUE PLAN_WEEK V1, (PLAN_YEAR || LPAD(PLAN_WEEK, 2,'0')) V2    FROM MWIPCALDEF   WHERE CALENDAR_ID IN ('SYSTEM', 'HM', 'SYSTEM')     AND SYS_YEAR = NVL('2020', TO_CHAR(SYSDATE,'yyyy'))    ORDER BY 1 
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT LANGUAGE_1 FROM RWEBFUNDEF WHERE FUNC_NAME = 'YLD040603'
-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
INSERT INTO RWEBFUNLOG(FACTORY,USER_ID,FUNC_NAME,FUNC_GROUP,VIEW_TIME, UPDATE_TIME)
VALUES (:p_FACTORY, :p_USER_ID, :p_FUNC_NAME, :p_FUNC_GROUP,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

-------------------------------------------------------------
        SELECT (SELECT DATA_1 FROM MGCMTBLDAT WHERE TABLE_NAME = 'H_CUSTOMER' AND KEY_1 = MAT_GRP_1 AND ROWNUM=1) AS CUSTOMER,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', CASE WHEN OPER <= 'A0200' THEN VENDOR_MAT_ID ELSE BASE_MAT_ID END SAP_CODE
             , SUM(TOTAL) AS TOTAL
             , SUM(ASSY_END_QTY0 ) VAL0
             , SUM(ASSY_END_QTY1 ) VAL1
             , SUM(ASSY_END_QTY2 ) VAL2
             , SUM(ASSY_END_QTY3 ) VAL3
             , SUM(ASSY_END_QTY4 ) VAL4
             , SUM(ASSY_END_QTY5 ) VAL5
             , SUM(ASSY_END_QTY6 ) VAL6
             , SUM(ASSY_END_QTY7 ) VAL7
             , SUM(ASSY_END_QTY8 ) VAL8
             , SUM(ASSY_END_QTY9 ) VAL9
             , SUM(ASSY_END_QTY10 ) VAL10
             , SUM(ASSY_END_QTY11 ) VAL11
             , SUM(ASSY_END_QTY12 ) VAL12
             , SUM(ASSY_END_QTY13 ) VAL13
             , SUM(ASSY_END_QTY14 ) VAL14
             , SUM(ASSY_END_QTY15 ) VAL15
             , SUM(ASSY_END_QTY16 ) VAL16
             , SUM(ASSY_END_QTY17 ) VAL17
             , SUM(ASSY_END_QTY18 ) VAL18
             , SUM(ASSY_END_QTY19 ) VAL19
             , SUM(ASSY_END_QTY20 ) VAL20
             , SUM(ASSY_END_QTY21 ) VAL21
             , SUM(ASSY_END_QTY22 ) VAL22
             , SUM(ASSY_END_QTY23 ) VAL23
             , SUM(ASSY_END_QTY24 ) VAL24
             , SUM(ASSY_END_QTY25 ) VAL25
             , SUM(ASSY_END_QTY26 ) VAL26
             , SUM(ASSY_END_QTY27 ) VAL27
             , SUM(ASSY_END_QTY28 ) VAL28
             , SUM(ASSY_END_QTY29 ) VAL29
             , SUM(ASSY_END_QTY30 ) VAL30
             , SUM(ASSY_END_QTY31 ) VAL31
             , SUM(ASSY_END_QTY32 ) VAL32
             , SUM(ASSY_END_QTY33 ) VAL33
             , SUM(ASSY_END_QTY34 ) VAL34
             , SUM(ASSY_END_QTY35 ) VAL35
             , SUM(ASSY_END_QTY36 ) VAL36
             , SUM(ASSY_END_QTY37 ) VAL37
             , SUM(ASSY_END_QTY38 ) VAL38
             , SUM(ASSY_END_QTY39 ) VAL39
             , SUM(ASSY_END_QTY40 ) VAL40
             , SUM(ASSY_END_QTY41 ) VAL41
             , SUM(ASSY_END_QTY42 ) VAL42
             , SUM(ASSY_END_QTY43 ) VAL43
             , SUM(ASSY_END_QTY44 ) VAL44
             , SUM(ASSY_END_QTY45 ) VAL45
             , SUM(ASSY_END_QTY46 ) VAL46
             , SUM(ASSY_END_QTY47 ) VAL47
             , SUM(ASSY_END_QTY48 ) VAL48
             , SUM(ASSY_END_QTY49 ) VAL49
             , SUM(ASSY_END_QTY50 ) VAL50
             , SUM(ASSY_END_QTY51 ) VAL51
             , SUM(ASSY_END_QTY52 ) VAL52
             , SUM(ASSY_END_QTY53 ) VAL53
             , SUM(ASSY_END_QTY54 ) VAL54
             , SUM(ASSY_END_QTY55 ) VAL55
             , SUM(ASSY_END_QTY56 ) VAL56
             , SUM(ASSY_END_QTY57 ) VAL57
             , SUM(ASSY_END_QTY58 ) VAL58
             , SUM(ASSY_END_QTY59 ) VAL59
             , SUM(ASSY_END_QTY60 ) VAL60
             , SUM(ASSY_END_QTY61 ) VAL61
             , SUM(ASSY_END_QTY62 ) VAL62
             , SUM(ASSY_END_QTY63 ) VAL63
             , SUM(ASSY_END_QTY64 ) VAL64
             , SUM(ASSY_END_QTY65 ) VAL65
             , SUM(ASSY_END_QTY66 ) VAL66
             , SUM(ASSY_END_QTY67 ) VAL67
             , SUM(ASSY_END_QTY68 ) VAL68
             , SUM(ASSY_END_QTY69 ) VAL69
             , SUM(ASSY_END_QTY70 ) VAL70
             , SUM(ASSY_END_QTY71 ) VAL71
             , SUM(ASSY_END_QTY72 ) VAL72
             , SUM(ASSY_END_QTY73 ) VAL73
             , SUM(ASSY_END_QTY74 ) VAL74
             , SUM(ASSY_END_QTY75 ) VAL75
             , SUM(ASSY_END_QTY76 ) VAL76
             , SUM(ASSY_END_QTY77 ) VAL77
             , SUM(ASSY_END_QTY78 ) VAL78
             , SUM(ASSY_END_QTY79 ) VAL79
             , SUM(ASSY_END_QTY80 ) VAL80
             , SUM(ASSY_END_QTY81 ) VAL81
             , ROUND(SUM(TOTAL)/82, 1) AVG
          FROM (
               SELECT B.MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', B.MAT_CMF_10, B.MAT_ID, A.OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID 
                    , DECODE(WORK_DATE, '20200714', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY0
                    , DECODE(WORK_DATE, '20200715', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY1
                    , DECODE(WORK_DATE, '20200716', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY2
                    , DECODE(WORK_DATE, '20200717', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY3
                    , DECODE(WORK_DATE, '20200718', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY4
                    , DECODE(WORK_DATE, '20200719', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY5
                    , DECODE(WORK_DATE, '20200720', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY6
                    , DECODE(WORK_DATE, '20200721', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY7
                    , DECODE(WORK_DATE, '20200722', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY8
                    , DECODE(WORK_DATE, '20200723', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY9
                    , DECODE(WORK_DATE, '20200724', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY10
                    , DECODE(WORK_DATE, '20200725', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY11
                    , DECODE(WORK_DATE, '20200726', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY12
                    , DECODE(WORK_DATE, '20200727', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY13
                    , DECODE(WORK_DATE, '20200728', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY14
                    , DECODE(WORK_DATE, '20200729', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY15
                    , DECODE(WORK_DATE, '20200730', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY16
                    , DECODE(WORK_DATE, '20200731', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY17
                    , DECODE(WORK_DATE, '20200801', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY18
                    , DECODE(WORK_DATE, '20200802', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY19
                    , DECODE(WORK_DATE, '20200803', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY20
                    , DECODE(WORK_DATE, '20200804', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY21
                    , DECODE(WORK_DATE, '20200805', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY22
                    , DECODE(WORK_DATE, '20200806', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY23
                    , DECODE(WORK_DATE, '20200807', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY24
                    , DECODE(WORK_DATE, '20200808', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY25
                    , DECODE(WORK_DATE, '20200809', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY26
                    , DECODE(WORK_DATE, '20200810', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY27
                    , DECODE(WORK_DATE, '20200811', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY28
                    , DECODE(WORK_DATE, '20200812', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY29
                    , DECODE(WORK_DATE, '20200813', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY30
                    , DECODE(WORK_DATE, '20200814', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY31
                    , DECODE(WORK_DATE, '20200815', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY32
                    , DECODE(WORK_DATE, '20200816', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY33
                    , DECODE(WORK_DATE, '20200817', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY34
                    , DECODE(WORK_DATE, '20200818', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY35
                    , DECODE(WORK_DATE, '20200819', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY36
                    , DECODE(WORK_DATE, '20200820', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY37
                    , DECODE(WORK_DATE, '20200821', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY38
                    , DECODE(WORK_DATE, '20200822', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY39
                    , DECODE(WORK_DATE, '20200823', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY40
                    , DECODE(WORK_DATE, '20200824', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY41
                    , DECODE(WORK_DATE, '20200825', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY42
                    , DECODE(WORK_DATE, '20200826', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY43
                    , DECODE(WORK_DATE, '20200827', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY44
                    , DECODE(WORK_DATE, '20200828', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY45
                    , DECODE(WORK_DATE, '20200829', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY46
                    , DECODE(WORK_DATE, '20200830', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY47
                    , DECODE(WORK_DATE, '20200831', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY48
                    , DECODE(WORK_DATE, '20200901', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY49
                    , DECODE(WORK_DATE, '20200902', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY50
                    , DECODE(WORK_DATE, '20200903', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY51
                    , DECODE(WORK_DATE, '20200904', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY52
                    , DECODE(WORK_DATE, '20200905', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY53
                    , DECODE(WORK_DATE, '20200906', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY54
                    , DECODE(WORK_DATE, '20200907', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY55
                    , DECODE(WORK_DATE, '20200908', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY56
                    , DECODE(WORK_DATE, '20200909', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY57
                    , DECODE(WORK_DATE, '20200910', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY58
                    , DECODE(WORK_DATE, '20200911', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY59
                    , DECODE(WORK_DATE, '20200912', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY60
                    , DECODE(WORK_DATE, '20200913', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY61
                    , DECODE(WORK_DATE, '20200914', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY62
                    , DECODE(WORK_DATE, '20200915', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY63
                    , DECODE(WORK_DATE, '20200916', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY64
                    , DECODE(WORK_DATE, '20200917', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY65
                    , DECODE(WORK_DATE, '20200918', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY66
                    , DECODE(WORK_DATE, '20200919', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY67
                    , DECODE(WORK_DATE, '20200920', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY68
                    , DECODE(WORK_DATE, '20200921', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY69
                    , DECODE(WORK_DATE, '20200922', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY70
                    , DECODE(WORK_DATE, '20200923', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY71
                    , DECODE(WORK_DATE, '20200924', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY72
                    , DECODE(WORK_DATE, '20200925', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY73
                    , DECODE(WORK_DATE, '20200926', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY74
                    , DECODE(WORK_DATE, '20200927', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY75
                    , DECODE(WORK_DATE, '20200928', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY76
                    , DECODE(WORK_DATE, '20200929', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY77
                    , DECODE(WORK_DATE, '20200930', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY78
                    , DECODE(WORK_DATE, '20201001', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY79
                    , DECODE(WORK_DATE, '20201002', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY80
                    , DECODE(WORK_DATE, '20201003', (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END),0) ASSY_END_QTY81
                    , (CASE WHEN OPER IN ('AZ010','SHIP','TZ010','F0000','EZ010', 'SZ010', 'BZ010') THEN SHIP_QTY_1 ELSE END_QTY_1 END) TOTAL
                 FROM (
                      SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , SUM(END_LOT) AS END_LOT
                           , SUM(END_QTY_1) AS END_QTY_1
                           , SUM(END_QTY_2) AS END_QTY_2
                           , SUM(SHIP_QTY_1) AS SHIP_QTY_1
                           , SUM(SHIP_QTY_2) AS SHIP_QTY_2
                        FROM (
                             SELECT FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_LOT+S2_OPER_IN_LOT+S3_OPER_IN_LOT),SUM(S1_END_LOT+S2_END_LOT+S3_END_LOT)) END_LOT
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_1+S2_OPER_IN_QTY_1+S3_OPER_IN_QTY_1),SUM(S1_END_QTY_1+S2_END_QTY_1+S3_END_QTY_1+S1_END_RWK_QTY_1 + S2_END_RWK_QTY_1 + S3_END_RWK_QTY_1)) END_QTY_1
                           , DECODE(SUBSTR(OPER,2,4),'0000',SUM(S1_OPER_IN_QTY_2+S2_OPER_IN_QTY_2+S3_OPER_IN_QTY_2),SUM(S1_END_QTY_2+S2_END_QTY_2+S3_END_QTY_2+S1_END_RWK_QTY_2 + S2_END_RWK_QTY_2 + S3_END_RWK_QTY_2)) END_QTY_2
                           , 0 SHIP_QTY_1
                           , 0 SHIP_QTY_2
                        FROM RSUMWIPMOV 
                       WHERE OPER NOT IN ('AZ010','TZ010','F0000','EZ010', 'SZ010', 'BZ010')
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                   UNION ALL
                      SELECT CM_KEY_1 AS FACTORY, MAT_ID
                           , DECODE(CM_KEY_1,'HMVA2','AZ010','HMKT1','TZ010','FGS','F0000','HMKE1','EZ010','HMKS1','SZ010', 'BZ010') OPER
                           , LOT_TYPE, MAT_VER,  WORK_DATE,CM_KEY_3
                           , 0 END_LOT
                           , 0 END_QTY_1
                           , 0 END_QTY_2
                           , SUM(S1_FAC_OUT_QTY_1+S2_FAC_OUT_QTY_1+S3_FAC_OUT_QTY_1) SHIP_QTY_1
                           , SUM(S1_FAC_OUT_QTY_2+S2_FAC_OUT_QTY_2+S3_FAC_OUT_QTY_2) SHIP_QTY_2
                        FROM RSUMFACMOV 
                       WHERE FACTORY NOT IN ('RETURN')
                    GROUP BY CM_KEY_1, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                             )
                    GROUP BY FACTORY, MAT_ID, OPER, LOT_TYPE, MAT_VER, WORK_DATE, CM_KEY_3
                    )A
                  , MWIPMATDEF B 
              WHERE 1=1 
                AND A.FACTORY  = 'HMVA2' 
                AND A.FACTORY = B.FACTORY 
                AND A.MAT_ID = B.MAT_ID                
                AND A.MAT_VER = 1 
                AND B.MAT_VER = 1 
                AND B.MAT_TYPE = 'FG' 
                AND A.OPER LIKE '%'
                AND A.MAT_ID LIKE '%'  
                AND A.OPER NOT IN ('00001','00002') 
                AND A.WORK_DATE BETWEEN '20200714' AND '20201003' 
         )   
   WHERE TOTAL > 0           
GROUP BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, OPER,  ' ', BASE_MAT_ID,VENDOR_MAT_ID
ORDER BY MAT_GRP_1,  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', MAT_CMF_10, MAT_ID, DECODE(OPER,'AISSUE','A0001','TISSUE','T0001','EISSUE','E0001',OPER),  ' ', BASE_MAT_ID,VENDOR_MAT_ID

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' '
     , OPER_GROUP 
     , TTL_IN_QTY 
     , TTL_OUT_QTY 
     , ROUND(TTL_OUT_QTY / TTL_IN_QTY * 100, 4) AS TTL_YIELD 
     , ROUND((TTL_IN_QTY - TTL_OUT_QTY) / TTL_IN_QTY * 1000000, 2) AS PPM 
     , DECODE(IN_QTY_D0, 0, 0, ROUND(OUT_QTY_D0 / IN_QTY_D0 * 100, 4)) AS D0_YIELD
     , DECODE(IN_QTY_D1, 0, 0, ROUND(OUT_QTY_D1 / IN_QTY_D1 * 100, 4)) AS D1_YIELD
  FROM ( 
        SELECT B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' '
             , OPER_GROUP 
             , SUM(IN_QTY) AS TTL_IN_QTY 
             , SUM(OUT_QTY) AS TTL_OUT_QTY  
             , SUM(DECODE(WORK_DATE, '20200801', IN_QTY, 0)) AS IN_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200801', OUT_QTY, 0)) AS OUT_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200802', IN_QTY, 0)) AS IN_QTY_D1
             , SUM(DECODE(WORK_DATE, '20200802', OUT_QTY, 0)) AS OUT_QTY_D1
             , OPER_SEQ 
          FROM RSUMOPRYLD A 
             , MWIPMATDEF B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.MAT_ID = B.MAT_ID 
           AND A.FACTORY = 'HMVA2'  
           AND WORK_DATE BETWEEN '20200801' AND '20200802'
           AND B.DELETE_FLAG = ' ' 
           AND A.MAT_ID LIKE '%A20'
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' ', OPER_GROUP, OPER_SEQ
       ) 
 ORDER BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' ', OPER_SEQ

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' '
     , OPER_GROUP 
     , TTL_IN_QTY 
     , TTL_OUT_QTY 
     , ROUND(TTL_OUT_QTY / TTL_IN_QTY * 100, 4) AS TTL_YIELD 
     , ROUND((TTL_IN_QTY - TTL_OUT_QTY) / TTL_IN_QTY * 1000000, 2) AS PPM 
     , DECODE(IN_QTY_D0, 0, 0, ROUND(OUT_QTY_D0 / IN_QTY_D0 * 100, 4)) AS D0_YIELD
     , DECODE(IN_QTY_D1, 0, 0, ROUND(OUT_QTY_D1 / IN_QTY_D1 * 100, 4)) AS D1_YIELD
  FROM ( 
        SELECT B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' '
             , OPER_GROUP 
             , SUM(IN_QTY) AS TTL_IN_QTY 
             , SUM(OUT_QTY) AS TTL_OUT_QTY  
             , SUM(DECODE(WORK_DATE, '20200801', IN_QTY, 0)) AS IN_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200801', OUT_QTY, 0)) AS OUT_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200802', IN_QTY, 0)) AS IN_QTY_D1
             , SUM(DECODE(WORK_DATE, '20200802', OUT_QTY, 0)) AS OUT_QTY_D1
             , OPER_SEQ 
          FROM RSUMOPRYLD A 
             , MWIPMATDEF B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.MAT_ID = B.MAT_ID 
           AND A.FACTORY = 'HMVA2'  
           AND WORK_DATE BETWEEN '20200801' AND '20200802'
           AND B.DELETE_FLAG = ' ' 
           AND A.MAT_ID LIKE '%A20%'
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' ', OPER_GROUP, OPER_SEQ
       ) 
 ORDER BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' ', OPER_SEQ

-------------------------------------------------------------
SELECT COUNT(*)
FROM RWEBFUNLOG
WHERE FACTORY = :FACTORY  
AND USER_ID = :USER_ID 
AND FUNC_NAME = :FUNC_NAME 
AND FUNC_GROUP = :FUNC_GROUP
AND VIEW_TIME BETWEEN TO_CHAR(SYSDATE - 10/1440, 'YYYYMMDDHH24MISS') AND TO_CHAR(SYSDATE + 10/1440, 'YYYYMMDDHH24MISS')
-------------------------------------------------------------
SELECT MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' '
     , OPER_GROUP 
     , TTL_IN_QTY 
     , TTL_OUT_QTY 
     , ROUND(TTL_OUT_QTY / TTL_IN_QTY * 100, 4) AS TTL_YIELD 
     , ROUND((TTL_IN_QTY - TTL_OUT_QTY) / TTL_IN_QTY * 1000000, 2) AS PPM 
     , DECODE(IN_QTY_D0, 0, 0, ROUND(OUT_QTY_D0 / IN_QTY_D0 * 100, 4)) AS D0_YIELD
     , DECODE(IN_QTY_D1, 0, 0, ROUND(OUT_QTY_D1 / IN_QTY_D1 * 100, 4)) AS D1_YIELD
     , DECODE(IN_QTY_D2, 0, 0, ROUND(OUT_QTY_D2 / IN_QTY_D2 * 100, 4)) AS D2_YIELD
     , DECODE(IN_QTY_D3, 0, 0, ROUND(OUT_QTY_D3 / IN_QTY_D3 * 100, 4)) AS D3_YIELD
     , DECODE(IN_QTY_D4, 0, 0, ROUND(OUT_QTY_D4 / IN_QTY_D4 * 100, 4)) AS D4_YIELD
     , DECODE(IN_QTY_D5, 0, 0, ROUND(OUT_QTY_D5 / IN_QTY_D5 * 100, 4)) AS D5_YIELD
     , DECODE(IN_QTY_D6, 0, 0, ROUND(OUT_QTY_D6 / IN_QTY_D6 * 100, 4)) AS D6_YIELD
     , DECODE(IN_QTY_D7, 0, 0, ROUND(OUT_QTY_D7 / IN_QTY_D7 * 100, 4)) AS D7_YIELD
     , DECODE(IN_QTY_D8, 0, 0, ROUND(OUT_QTY_D8 / IN_QTY_D8 * 100, 4)) AS D8_YIELD
     , DECODE(IN_QTY_D9, 0, 0, ROUND(OUT_QTY_D9 / IN_QTY_D9 * 100, 4)) AS D9_YIELD
     , DECODE(IN_QTY_D10, 0, 0, ROUND(OUT_QTY_D10 / IN_QTY_D10 * 100, 4)) AS D10_YIELD
     , DECODE(IN_QTY_D11, 0, 0, ROUND(OUT_QTY_D11 / IN_QTY_D11 * 100, 4)) AS D11_YIELD
     , DECODE(IN_QTY_D12, 0, 0, ROUND(OUT_QTY_D12 / IN_QTY_D12 * 100, 4)) AS D12_YIELD
     , DECODE(IN_QTY_D13, 0, 0, ROUND(OUT_QTY_D13 / IN_QTY_D13 * 100, 4)) AS D13_YIELD
     , DECODE(IN_QTY_D14, 0, 0, ROUND(OUT_QTY_D14 / IN_QTY_D14 * 100, 4)) AS D14_YIELD
     , DECODE(IN_QTY_D15, 0, 0, ROUND(OUT_QTY_D15 / IN_QTY_D15 * 100, 4)) AS D15_YIELD
     , DECODE(IN_QTY_D16, 0, 0, ROUND(OUT_QTY_D16 / IN_QTY_D16 * 100, 4)) AS D16_YIELD
     , DECODE(IN_QTY_D17, 0, 0, ROUND(OUT_QTY_D17 / IN_QTY_D17 * 100, 4)) AS D17_YIELD
     , DECODE(IN_QTY_D18, 0, 0, ROUND(OUT_QTY_D18 / IN_QTY_D18 * 100, 4)) AS D18_YIELD
     , DECODE(IN_QTY_D19, 0, 0, ROUND(OUT_QTY_D19 / IN_QTY_D19 * 100, 4)) AS D19_YIELD
     , DECODE(IN_QTY_D20, 0, 0, ROUND(OUT_QTY_D20 / IN_QTY_D20 * 100, 4)) AS D20_YIELD
     , DECODE(IN_QTY_D21, 0, 0, ROUND(OUT_QTY_D21 / IN_QTY_D21 * 100, 4)) AS D21_YIELD
     , DECODE(IN_QTY_D22, 0, 0, ROUND(OUT_QTY_D22 / IN_QTY_D22 * 100, 4)) AS D22_YIELD
     , DECODE(IN_QTY_D23, 0, 0, ROUND(OUT_QTY_D23 / IN_QTY_D23 * 100, 4)) AS D23_YIELD
     , DECODE(IN_QTY_D24, 0, 0, ROUND(OUT_QTY_D24 / IN_QTY_D24 * 100, 4)) AS D24_YIELD
     , DECODE(IN_QTY_D25, 0, 0, ROUND(OUT_QTY_D25 / IN_QTY_D25 * 100, 4)) AS D25_YIELD
     , DECODE(IN_QTY_D26, 0, 0, ROUND(OUT_QTY_D26 / IN_QTY_D26 * 100, 4)) AS D26_YIELD
     , DECODE(IN_QTY_D27, 0, 0, ROUND(OUT_QTY_D27 / IN_QTY_D27 * 100, 4)) AS D27_YIELD
     , DECODE(IN_QTY_D28, 0, 0, ROUND(OUT_QTY_D28 / IN_QTY_D28 * 100, 4)) AS D28_YIELD
     , DECODE(IN_QTY_D29, 0, 0, ROUND(OUT_QTY_D29 / IN_QTY_D29 * 100, 4)) AS D29_YIELD
     , DECODE(IN_QTY_D30, 0, 0, ROUND(OUT_QTY_D30 / IN_QTY_D30 * 100, 4)) AS D30_YIELD
     , DECODE(IN_QTY_D31, 0, 0, ROUND(OUT_QTY_D31 / IN_QTY_D31 * 100, 4)) AS D31_YIELD
     , DECODE(IN_QTY_D32, 0, 0, ROUND(OUT_QTY_D32 / IN_QTY_D32 * 100, 4)) AS D32_YIELD
  FROM ( 
        SELECT B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' '
             , OPER_GROUP 
             , SUM(IN_QTY) AS TTL_IN_QTY 
             , SUM(OUT_QTY) AS TTL_OUT_QTY  
             , SUM(DECODE(WORK_DATE, '20200701', IN_QTY, 0)) AS IN_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200701', OUT_QTY, 0)) AS OUT_QTY_D0
             , SUM(DECODE(WORK_DATE, '20200702', IN_QTY, 0)) AS IN_QTY_D1
             , SUM(DECODE(WORK_DATE, '20200702', OUT_QTY, 0)) AS OUT_QTY_D1
             , SUM(DECODE(WORK_DATE, '20200703', IN_QTY, 0)) AS IN_QTY_D2
             , SUM(DECODE(WORK_DATE, '20200703', OUT_QTY, 0)) AS OUT_QTY_D2
             , SUM(DECODE(WORK_DATE, '20200704', IN_QTY, 0)) AS IN_QTY_D3
             , SUM(DECODE(WORK_DATE, '20200704', OUT_QTY, 0)) AS OUT_QTY_D3
             , SUM(DECODE(WORK_DATE, '20200705', IN_QTY, 0)) AS IN_QTY_D4
             , SUM(DECODE(WORK_DATE, '20200705', OUT_QTY, 0)) AS OUT_QTY_D4
             , SUM(DECODE(WORK_DATE, '20200706', IN_QTY, 0)) AS IN_QTY_D5
             , SUM(DECODE(WORK_DATE, '20200706', OUT_QTY, 0)) AS OUT_QTY_D5
             , SUM(DECODE(WORK_DATE, '20200707', IN_QTY, 0)) AS IN_QTY_D6
             , SUM(DECODE(WORK_DATE, '20200707', OUT_QTY, 0)) AS OUT_QTY_D6
             , SUM(DECODE(WORK_DATE, '20200708', IN_QTY, 0)) AS IN_QTY_D7
             , SUM(DECODE(WORK_DATE, '20200708', OUT_QTY, 0)) AS OUT_QTY_D7
             , SUM(DECODE(WORK_DATE, '20200709', IN_QTY, 0)) AS IN_QTY_D8
             , SUM(DECODE(WORK_DATE, '20200709', OUT_QTY, 0)) AS OUT_QTY_D8
             , SUM(DECODE(WORK_DATE, '20200710', IN_QTY, 0)) AS IN_QTY_D9
             , SUM(DECODE(WORK_DATE, '20200710', OUT_QTY, 0)) AS OUT_QTY_D9
             , SUM(DECODE(WORK_DATE, '20200711', IN_QTY, 0)) AS IN_QTY_D10
             , SUM(DECODE(WORK_DATE, '20200711', OUT_QTY, 0)) AS OUT_QTY_D10
             , SUM(DECODE(WORK_DATE, '20200712', IN_QTY, 0)) AS IN_QTY_D11
             , SUM(DECODE(WORK_DATE, '20200712', OUT_QTY, 0)) AS OUT_QTY_D11
             , SUM(DECODE(WORK_DATE, '20200713', IN_QTY, 0)) AS IN_QTY_D12
             , SUM(DECODE(WORK_DATE, '20200713', OUT_QTY, 0)) AS OUT_QTY_D12
             , SUM(DECODE(WORK_DATE, '20200714', IN_QTY, 0)) AS IN_QTY_D13
             , SUM(DECODE(WORK_DATE, '20200714', OUT_QTY, 0)) AS OUT_QTY_D13
             , SUM(DECODE(WORK_DATE, '20200715', IN_QTY, 0)) AS IN_QTY_D14
             , SUM(DECODE(WORK_DATE, '20200715', OUT_QTY, 0)) AS OUT_QTY_D14
             , SUM(DECODE(WORK_DATE, '20200716', IN_QTY, 0)) AS IN_QTY_D15
             , SUM(DECODE(WORK_DATE, '20200716', OUT_QTY, 0)) AS OUT_QTY_D15
             , SUM(DECODE(WORK_DATE, '20200717', IN_QTY, 0)) AS IN_QTY_D16
             , SUM(DECODE(WORK_DATE, '20200717', OUT_QTY, 0)) AS OUT_QTY_D16
             , SUM(DECODE(WORK_DATE, '20200718', IN_QTY, 0)) AS IN_QTY_D17
             , SUM(DECODE(WORK_DATE, '20200718', OUT_QTY, 0)) AS OUT_QTY_D17
             , SUM(DECODE(WORK_DATE, '20200719', IN_QTY, 0)) AS IN_QTY_D18
             , SUM(DECODE(WORK_DATE, '20200719', OUT_QTY, 0)) AS OUT_QTY_D18
             , SUM(DECODE(WORK_DATE, '20200720', IN_QTY, 0)) AS IN_QTY_D19
             , SUM(DECODE(WORK_DATE, '20200720', OUT_QTY, 0)) AS OUT_QTY_D19
             , SUM(DECODE(WORK_DATE, '20200721', IN_QTY, 0)) AS IN_QTY_D20
             , SUM(DECODE(WORK_DATE, '20200721', OUT_QTY, 0)) AS OUT_QTY_D20
             , SUM(DECODE(WORK_DATE, '20200722', IN_QTY, 0)) AS IN_QTY_D21
             , SUM(DECODE(WORK_DATE, '20200722', OUT_QTY, 0)) AS OUT_QTY_D21
             , SUM(DECODE(WORK_DATE, '20200723', IN_QTY, 0)) AS IN_QTY_D22
             , SUM(DECODE(WORK_DATE, '20200723', OUT_QTY, 0)) AS OUT_QTY_D22
             , SUM(DECODE(WORK_DATE, '20200724', IN_QTY, 0)) AS IN_QTY_D23
             , SUM(DECODE(WORK_DATE, '20200724', OUT_QTY, 0)) AS OUT_QTY_D23
             , SUM(DECODE(WORK_DATE, '20200725', IN_QTY, 0)) AS IN_QTY_D24
             , SUM(DECODE(WORK_DATE, '20200725', OUT_QTY, 0)) AS OUT_QTY_D24
             , SUM(DECODE(WORK_DATE, '20200726', IN_QTY, 0)) AS IN_QTY_D25
             , SUM(DECODE(WORK_DATE, '20200726', OUT_QTY, 0)) AS OUT_QTY_D25
             , SUM(DECODE(WORK_DATE, '20200727', IN_QTY, 0)) AS IN_QTY_D26
             , SUM(DECODE(WORK_DATE, '20200727', OUT_QTY, 0)) AS OUT_QTY_D26
             , SUM(DECODE(WORK_DATE, '20200728', IN_QTY, 0)) AS IN_QTY_D27
             , SUM(DECODE(WORK_DATE, '20200728', OUT_QTY, 0)) AS OUT_QTY_D27
             , SUM(DECODE(WORK_DATE, '20200729', IN_QTY, 0)) AS IN_QTY_D28
             , SUM(DECODE(WORK_DATE, '20200729', OUT_QTY, 0)) AS OUT_QTY_D28
             , SUM(DECODE(WORK_DATE, '20200730', IN_QTY, 0)) AS IN_QTY_D29
             , SUM(DECODE(WORK_DATE, '20200730', OUT_QTY, 0)) AS OUT_QTY_D29
             , SUM(DECODE(WORK_DATE, '20200731', IN_QTY, 0)) AS IN_QTY_D30
             , SUM(DECODE(WORK_DATE, '20200731', OUT_QTY, 0)) AS OUT_QTY_D30
             , SUM(DECODE(WORK_DATE, '20200801', IN_QTY, 0)) AS IN_QTY_D31
             , SUM(DECODE(WORK_DATE, '20200801', OUT_QTY, 0)) AS OUT_QTY_D31
             , SUM(DECODE(WORK_DATE, '20200802', IN_QTY, 0)) AS IN_QTY_D32
             , SUM(DECODE(WORK_DATE, '20200802', OUT_QTY, 0)) AS OUT_QTY_D32
             , OPER_SEQ 
          FROM RSUMOPRYLD A 
             , MWIPMATDEF B 
         WHERE 1=1 
           AND A.FACTORY = B.FACTORY 
           AND A.MAT_ID = B.MAT_ID 
           AND A.FACTORY = 'HMVA2'  
           AND WORK_DATE BETWEEN '20200701' AND '20200802'
           AND B.DELETE_FLAG = ' ' 
           AND A.MAT_ID LIKE '%A20%'
         GROUP BY B.MAT_GRP_1, B.MAT_GRP_9, B.MAT_GRP_10, B.MAT_GRP_6,  ' ',  ' ',  ' ', B.MAT_CMF_11, B.MAT_ID,  ' ',  ' ', OPER_GROUP, OPER_SEQ
       ) 
 ORDER BY MAT_GRP_1, MAT_GRP_9, MAT_GRP_10, MAT_GRP_6,  ' ',  ' ',  ' ', MAT_CMF_11, MAT_ID,  ' ',  ' ', OPER_SEQ

-------------------------------------------------------------
